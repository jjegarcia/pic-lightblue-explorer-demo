

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Mon Dec 23 21:46:30 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16LF18456
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK3,global,class=CODE,delta=2,noexec
     6                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    13                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    14                           	psect	stringtext9,global,class=STRCODE,delta=2,noexec
    15                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
    16                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1,noexec
    17                           	psect	stringtext10,global,class=STRCODE,delta=2,noexec
    18                           	psect	stringtext11,global,class=STRCODE,delta=2,noexec
    19                           	psect	stringtext12,global,class=STRCODE,delta=2,noexec
    20                           	psect	stringtext13,global,class=STRCODE,delta=2,noexec
    21                           	psect	cinit,global,class=CODE,merge=1,delta=2
    22                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    23                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    24                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    25                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    26                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    27                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,noexec
    28                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,noexec
    29                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,noexec
    30                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,noexec
    31                           	psect	bssBANK7,global,class=BANK7,space=1,delta=1,noexec
    32                           	psect	inittext,global,class=CODE,delta=2
    33                           	psect	clrtext,global,class=CODE,delta=2
    34                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    35                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    36                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    37                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    38                           	psect	text1,local,class=CODE,merge=1,delta=2
    39                           	psect	text2,local,class=CODE,merge=1,delta=2
    40                           	psect	text3,local,class=CODE,merge=1,delta=2
    41                           	psect	text4,local,class=CODE,merge=1,delta=2
    42                           	psect	text5,local,class=CODE,merge=1,delta=2
    43                           	psect	text6,local,class=CODE,merge=1,delta=2
    44                           	psect	text7,local,class=CODE,merge=1,delta=2
    45                           	psect	text8,local,class=CODE,merge=1,delta=2
    46                           	psect	text9,local,class=CODE,merge=1,delta=2
    47                           	psect	text10,local,class=CODE,merge=1,delta=2
    48                           	psect	text11,local,class=CODE,merge=1,delta=2
    49                           	psect	text12,local,class=CODE,merge=1,delta=2
    50                           	psect	text13,local,class=CODE,merge=1,delta=2
    51                           	psect	text14,local,class=CODE,merge=1,delta=2
    52                           	psect	text15,local,class=CODE,merge=1,delta=2
    53                           	psect	text16,local,class=CODE,merge=1,delta=2
    54                           	psect	text17,local,class=CODE,merge=1,delta=2
    55                           	psect	text18,local,class=CODE,merge=1,delta=2
    56                           	psect	text19,local,class=CODE,merge=1,delta=2
    57                           	psect	text20,local,class=CODE,merge=1,delta=2
    58                           	psect	text21,local,class=CODE,merge=1,delta=2
    59                           	psect	text22,local,class=CODE,merge=1,delta=2
    60                           	psect	text23,local,class=CODE,merge=1,delta=2
    61                           	psect	text24,local,class=CODE,merge=1,delta=2
    62                           	psect	text25,local,class=CODE,merge=1,delta=2
    63                           	psect	text26,local,class=CODE,merge=1,delta=2
    64                           	psect	text27,local,class=CODE,merge=1,delta=2
    65                           	psect	text28,local,class=CODE,merge=1,delta=2
    66                           	psect	text29,local,class=CODE,merge=1,delta=2
    67                           	psect	text30,local,class=CODE,merge=1,delta=2
    68                           	psect	text31,local,class=CODE,merge=1,delta=2
    69                           	psect	text32,local,class=CODE,merge=1,delta=2
    70                           	psect	text33,local,class=CODE,merge=1,delta=2
    71                           	psect	text34,local,class=CODE,merge=1,delta=2
    72                           	psect	text35,local,class=CODE,merge=1,delta=2
    73                           	psect	text36,local,class=CODE,merge=1,delta=2
    74                           	psect	text37,local,class=CODE,merge=1,delta=2
    75                           	psect	text38,local,class=CODE,merge=1,delta=2
    76                           	psect	text39,local,class=CODE,merge=1,delta=2
    77                           	psect	text40,local,class=CODE,merge=1,delta=2
    78                           	psect	text41,local,class=CODE,merge=1,delta=2
    79                           	psect	text42,local,class=CODE,merge=1,delta=2
    80                           	psect	text43,local,class=CODE,merge=1,delta=2
    81                           	psect	text44,local,class=CODE,merge=1,delta=2
    82                           	psect	text45,local,class=CODE,merge=1,delta=2
    83                           	psect	text46,local,class=CODE,merge=1,delta=2
    84                           	psect	text47,local,class=CODE,merge=1,delta=2,group=2
    85                           	psect	text48,local,class=CODE,merge=1,delta=2,group=2
    86                           	psect	text49,local,class=CODE,merge=1,delta=2,group=2
    87                           	psect	text50,local,class=CODE,merge=1,inline,delta=2
    88                           	psect	text51,local,class=CODE,merge=1,inline,delta=2
    89                           	psect	text52,local,class=CODE,merge=1,inline,delta=2
    90                           	psect	text53,local,class=CODE,merge=1,delta=2,group=2
    91                           	psect	text54,local,class=CODE,merge=1,inline,delta=2
    92                           	psect	text55,local,class=CODE,merge=1,delta=2
    93                           	psect	text56,local,class=CODE,merge=1,delta=2
    94                           	psect	text57,local,class=CODE,merge=1,inline,delta=2
    95                           	psect	text58,local,class=CODE,merge=1,delta=2
    96                           	psect	text59,local,class=CODE,merge=1,delta=2
    97                           	psect	text60,local,class=CODE,merge=1,delta=2
    98                           	psect	text61,local,class=CODE,merge=1,delta=2
    99                           	psect	text62,local,class=CODE,merge=1,delta=2
   100                           	psect	text63,local,class=CODE,merge=1,delta=2
   101                           	psect	text64,local,class=CODE,merge=1,delta=2
   102                           	psect	text65,local,class=CODE,merge=1,delta=2
   103                           	psect	text66,local,class=CODE,merge=1,delta=2
   104                           	psect	text67,local,class=CODE,merge=1,delta=2
   105                           	psect	text68,local,class=CODE,merge=1,delta=2
   106                           	psect	text69,local,class=CODE,merge=1,delta=2
   107                           	psect	text70,local,class=CODE,merge=1,delta=2
   108                           	psect	text71,local,class=CODE,merge=1,delta=2
   109                           	psect	text72,local,class=CODE,merge=1,delta=2
   110                           	psect	text73,local,class=CODE,merge=1,delta=2
   111                           	psect	text74,local,class=CODE,merge=1,delta=2
   112                           	psect	text75,local,class=CODE,merge=1,delta=2
   113                           	psect	text76,local,class=CODE,merge=1,delta=2
   114                           	psect	text77,local,class=CODE,merge=1,delta=2
   115                           	psect	text78,local,class=CODE,merge=1,inline,delta=2
   116                           	psect	text79,local,class=CODE,merge=1,delta=2
   117                           	psect	text80,local,class=CODE,merge=1,delta=2
   118                           	psect	text81,local,class=CODE,merge=1,delta=2
   119                           	psect	text82,local,class=CODE,merge=1,inline,delta=2
   120                           	psect	text83,local,class=CODE,merge=1,delta=2
   121                           	psect	text84,local,class=CODE,merge=1,delta=2
   122                           	psect	text85,local,class=CODE,merge=1,inline,delta=2
   123                           	psect	text86,local,class=CODE,merge=1,delta=2
   124                           	psect	text87,local,class=CODE,merge=1,delta=2
   125                           	psect	text88,local,class=CODE,merge=1,delta=2
   126                           	psect	text89,local,class=CODE,merge=1,delta=2
   127                           	psect	text90,local,class=CODE,merge=1,delta=2
   128                           	psect	text91,local,class=CODE,merge=1,delta=2
   129                           	psect	text92,local,class=CODE,merge=1,delta=2
   130                           	psect	text93,local,class=CODE,merge=1,delta=2
   131                           	psect	text94,local,class=CODE,merge=1,delta=2
   132                           	psect	text95,local,class=CODE,merge=1,delta=2,group=2
   133                           	psect	text96,local,class=CODE,merge=1,inline,delta=2
   134                           	psect	text97,local,class=CODE,merge=1,delta=2
   135                           	psect	text98,local,class=CODE,merge=1,delta=2
   136                           	psect	text99,local,class=CODE,merge=1,delta=2
   137                           	psect	text100,local,class=CODE,merge=1,delta=2
   138                           	psect	text101,local,class=CODE,merge=1,delta=2
   139                           	psect	text102,local,class=CODE,merge=1,delta=2
   140                           	psect	text103,local,class=CODE,merge=1,delta=2
   141                           	psect	text104,local,class=CODE,merge=1,delta=2
   142                           	psect	text105,local,class=CODE,merge=1,delta=2
   143                           	psect	text106,local,class=CODE,merge=1,delta=2
   144                           	psect	text107,local,class=CODE,merge=1,delta=2
   145                           	psect	text108,local,class=CODE,merge=1,delta=2
   146                           	psect	text109,local,class=CODE,merge=1,delta=2
   147                           	psect	text110,local,class=CODE,merge=1,inline,delta=2
   148                           	psect	text111,local,class=CODE,merge=1,delta=2
   149                           	psect	text112,local,class=CODE,merge=1,delta=2
   150                           	psect	text113,local,class=CODE,merge=1,delta=2
   151                           	psect	text114,local,class=CODE,merge=1,inline,delta=2
   152                           	psect	text115,local,class=CODE,merge=1,inline,delta=2
   153                           	psect	text116,local,class=CODE,merge=1,delta=2
   154                           	psect	text117,local,class=CODE,merge=1,delta=2
   155                           	psect	text118,local,class=CODE,merge=1,delta=2
   156                           	psect	text119,local,class=CODE,merge=1,delta=2
   157                           	psect	text120,local,class=CODE,merge=1,delta=2
   158                           	psect	text121,local,class=CODE,merge=1,delta=2
   159                           	psect	text122,local,class=CODE,merge=1,delta=2
   160                           	psect	text123,local,class=CODE,merge=1,delta=2
   161                           	psect	text124,local,class=CODE,merge=1,delta=2
   162                           	psect	text125,local,class=CODE,merge=1,delta=2
   163                           	psect	text126,local,class=CODE,merge=1,delta=2
   164                           	psect	text127,local,class=CODE,merge=1,delta=2
   165                           	psect	text128,local,class=CODE,merge=1,delta=2
   166                           	psect	text129,local,class=CODE,merge=1,delta=2
   167                           	psect	text130,local,class=CODE,merge=1,delta=2
   168                           	psect	text131,local,class=CODE,merge=1,delta=2
   169                           	psect	text132,local,class=CODE,merge=1,inline,delta=2
   170                           	psect	text133,local,class=CODE,merge=1,inline,delta=2
   171                           	psect	text134,local,class=CODE,merge=1,inline,delta=2
   172                           	psect	text135,local,class=CODE,merge=1,inline,delta=2
   173                           	psect	text136,local,class=CODE,merge=1,inline,delta=2
   174                           	psect	text137,local,class=CODE,merge=1,inline,delta=2
   175                           	psect	text138,local,class=CODE,merge=1,inline,delta=2
   176                           	psect	text139,local,class=CODE,merge=1,delta=2
   177                           	psect	text140,local,class=CODE,merge=1,delta=2
   178                           	psect	text141,local,class=CODE,merge=1,delta=2
   179                           	psect	text142,local,class=CODE,merge=1,delta=2
   180                           	psect	text143,local,class=CODE,merge=1,delta=2
   181                           	psect	text144,local,class=CODE,merge=1,delta=2
   182                           	psect	text145,local,class=CODE,merge=1,delta=2
   183                           	psect	text146,local,class=CODE,merge=1,delta=2
   184                           	psect	text147,local,class=CODE,merge=1,delta=2
   185                           	psect	text148,local,class=CODE,merge=1,delta=2
   186                           	psect	text149,local,class=CODE,merge=1,delta=2
   187                           	psect	text150,local,class=CODE,merge=1,delta=2
   188                           	psect	text151,local,class=CODE,merge=1,delta=2
   189                           	psect	text152,local,class=CODE,merge=1,delta=2
   190                           	psect	text153,local,class=CODE,merge=1,delta=2
   191                           	psect	text154,local,class=CODE,merge=1,inline,delta=2
   192                           	psect	text155,local,class=CODE,merge=1,inline,delta=2
   193                           	psect	text156,local,class=CODE,merge=1,inline,delta=2
   194                           	psect	text157,local,class=CODE,merge=1,delta=2
   195                           	psect	text158,local,class=CODE,merge=1,inline,delta=2
   196                           	psect	text159,local,class=CODE,merge=1,inline,delta=2
   197                           	psect	text160,local,class=CODE,merge=1,inline,delta=2
   198                           	psect	intentry,global,class=CODE,delta=2
   199                           	psect	text162,local,class=CODE,merge=1,delta=2
   200                           	psect	text163,local,class=CODE,merge=1,delta=2
   201                           	psect	text164,local,class=CODE,merge=1,delta=2
   202                           	psect	text165,local,class=CODE,merge=1,delta=2
   203                           	psect	text166,local,class=CODE,merge=1,delta=2
   204                           	psect	text167,local,class=CODE,merge=1,delta=2
   205                           	psect	text168,local,class=CODE,merge=1,delta=2
   206                           	psect	text169,local,class=CODE,merge=1,delta=2
   207                           	psect	text170,local,class=CODE,merge=1,delta=2
   208                           	psect	text171,local,class=CODE,merge=1,delta=2
   209                           	psect	text172,local,class=CODE,merge=1,delta=2
   210                           	psect	text173,local,class=CODE,merge=1,delta=2
   211                           	psect	text174,local,class=CODE,merge=1,delta=2
   212                           	psect	text175,local,class=CODE,merge=1,delta=2
   213                           	psect	text176,local,class=CODE,merge=1,delta=2
   214                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
   215                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
   216                           	dabs	1,0x7E,2
   217     0000                     
   218                           ; Version 2.35
   219                           ; Generated 01/06/2021 GMT
   220                           ; 
   221                           ; Copyright © 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
   222                           ; All rights reserved.
   223                           ; 
   224                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   225                           ; 
   226                           ; Redistribution and use in source and binary forms, with or without modification, are
   227                           ; permitted provided that the following conditions are met:
   228                           ; 
   229                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   230                           ;        conditions and the following disclaimer.
   231                           ; 
   232                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   233                           ;        of conditions and the following disclaimer in the documentation and/or other
   234                           ;        materials provided with the distribution. Publication is not required when
   235                           ;        this file is used in an embedded application.
   236                           ; 
   237                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   238                           ;        software without specific prior written permission.
   239                           ; 
   240                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   241                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   242                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   243                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   244                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   245                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   246                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   247                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   248                           ; 
   249                           ; 
   250                           ; Code-generator required, PIC16LF18456 Definitions
   251                           ; 
   252                           ; SFR Addresses
   253     0000                     	;# 
   254     0001                     	;# 
   255     0002                     	;# 
   256     0003                     	;# 
   257     0004                     	;# 
   258     0005                     	;# 
   259     0006                     	;# 
   260     0007                     	;# 
   261     0008                     	;# 
   262     0009                     	;# 
   263     000A                     	;# 
   264     000B                     	;# 
   265     000C                     	;# 
   266     000D                     	;# 
   267     000E                     	;# 
   268     0010                     	;# 
   269     0012                     	;# 
   270     0013                     	;# 
   271     0014                     	;# 
   272     0016                     	;# 
   273     0018                     	;# 
   274     0019                     	;# 
   275     001A                     	;# 
   276     001C                     	;# 
   277     008C                     	;# 
   278     008C                     	;# 
   279     008D                     	;# 
   280     008E                     	;# 
   281     008E                     	;# 
   282     008F                     	;# 
   283     0090                     	;# 
   284     0090                     	;# 
   285     0091                     	;# 
   286     0092                     	;# 
   287     0092                     	;# 
   288     0093                     	;# 
   289     0094                     	;# 
   290     0094                     	;# 
   291     0095                     	;# 
   292     0096                     	;# 
   293     0096                     	;# 
   294     0097                     	;# 
   295     0098                     	;# 
   296     0099                     	;# 
   297     009A                     	;# 
   298     009B                     	;# 
   299     009B                     	;# 
   300     009C                     	;# 
   301     009D                     	;# 
   302     009D                     	;# 
   303     009E                     	;# 
   304     009F                     	;# 
   305     010C                     	;# 
   306     010C                     	;# 
   307     010D                     	;# 
   308     010E                     	;# 
   309     010F                     	;# 
   310     010F                     	;# 
   311     0110                     	;# 
   312     0111                     	;# 
   313     0112                     	;# 
   314     0113                     	;# 
   315     0114                     	;# 
   316     0115                     	;# 
   317     0116                     	;# 
   318     0117                     	;# 
   319     0118                     	;# 
   320     0119                     	;# 
   321     0119                     	;# 
   322     0119                     	;# 
   323     011A                     	;# 
   324     011A                     	;# 
   325     011A                     	;# 
   326     011B                     	;# 
   327     011B                     	;# 
   328     011B                     	;# 
   329     011B                     	;# 
   330     011B                     	;# 
   331     011C                     	;# 
   332     011C                     	;# 
   333     011C                     	;# 
   334     011D                     	;# 
   335     011D                     	;# 
   336     011D                     	;# 
   337     011E                     	;# 
   338     011E                     	;# 
   339     011E                     	;# 
   340     011F                     	;# 
   341     011F                     	;# 
   342     011F                     	;# 
   343     011F                     	;# 
   344     011F                     	;# 
   345     018C                     	;# 
   346     018D                     	;# 
   347     018E                     	;# 
   348     018F                     	;# 
   349     0190                     	;# 
   350     0191                     	;# 
   351     0192                     	;# 
   352     0196                     	;# 
   353     0197                     	;# 
   354     0198                     	;# 
   355     0199                     	;# 
   356     019A                     	;# 
   357     019B                     	;# 
   358     019C                     	;# 
   359     020C                     	;# 
   360     020D                     	;# 
   361     020E                     	;# 
   362     020E                     	;# 
   363     020F                     	;# 
   364     020F                     	;# 
   365     0210                     	;# 
   366     0210                     	;# 
   367     0211                     	;# 
   368     0211                     	;# 
   369     0212                     	;# 
   370     0213                     	;# 
   371     0214                     	;# 
   372     0214                     	;# 
   373     0215                     	;# 
   374     0215                     	;# 
   375     0216                     	;# 
   376     0216                     	;# 
   377     0217                     	;# 
   378     0217                     	;# 
   379     0218                     	;# 
   380     0219                     	;# 
   381     021A                     	;# 
   382     021A                     	;# 
   383     021B                     	;# 
   384     021B                     	;# 
   385     021C                     	;# 
   386     021C                     	;# 
   387     021D                     	;# 
   388     021D                     	;# 
   389     021E                     	;# 
   390     021F                     	;# 
   391     028C                     	;# 
   392     028C                     	;# 
   393     028D                     	;# 
   394     028D                     	;# 
   395     028E                     	;# 
   396     028F                     	;# 
   397     0290                     	;# 
   398     0291                     	;# 
   399     0292                     	;# 
   400     0292                     	;# 
   401     0293                     	;# 
   402     0293                     	;# 
   403     0294                     	;# 
   404     0295                     	;# 
   405     0296                     	;# 
   406     0297                     	;# 
   407     0298                     	;# 
   408     0298                     	;# 
   409     0299                     	;# 
   410     0299                     	;# 
   411     029A                     	;# 
   412     029B                     	;# 
   413     029C                     	;# 
   414     029D                     	;# 
   415     029F                     	;# 
   416     030C                     	;# 
   417     030C                     	;# 
   418     030D                     	;# 
   419     030E                     	;# 
   420     030F                     	;# 
   421     0310                     	;# 
   422     0310                     	;# 
   423     0311                     	;# 
   424     0312                     	;# 
   425     0313                     	;# 
   426     0314                     	;# 
   427     0314                     	;# 
   428     0315                     	;# 
   429     0316                     	;# 
   430     0317                     	;# 
   431     0318                     	;# 
   432     0318                     	;# 
   433     0319                     	;# 
   434     031A                     	;# 
   435     031B                     	;# 
   436     031C                     	;# 
   437     031C                     	;# 
   438     031D                     	;# 
   439     031E                     	;# 
   440     031F                     	;# 
   441     038C                     	;# 
   442     038C                     	;# 
   443     038D                     	;# 
   444     038E                     	;# 
   445     0390                     	;# 
   446     0390                     	;# 
   447     0391                     	;# 
   448     0392                     	;# 
   449     048C                     	;# 
   450     048C                     	;# 
   451     048D                     	;# 
   452     048E                     	;# 
   453     048F                     	;# 
   454     048F                     	;# 
   455     0490                     	;# 
   456     0491                     	;# 
   457     0492                     	;# 
   458     0492                     	;# 
   459     0493                     	;# 
   460     0494                     	;# 
   461     0495                     	;# 
   462     0495                     	;# 
   463     0496                     	;# 
   464     0497                     	;# 
   465     0498                     	;# 
   466     0499                     	;# 
   467     049A                     	;# 
   468     049B                     	;# 
   469     049C                     	;# 
   470     049D                     	;# 
   471     050C                     	;# 
   472     050C                     	;# 
   473     050D                     	;# 
   474     050E                     	;# 
   475     050F                     	;# 
   476     050F                     	;# 
   477     0510                     	;# 
   478     0511                     	;# 
   479     0512                     	;# 
   480     0512                     	;# 
   481     0513                     	;# 
   482     0514                     	;# 
   483     0515                     	;# 
   484     0515                     	;# 
   485     0516                     	;# 
   486     0517                     	;# 
   487     0518                     	;# 
   488     0519                     	;# 
   489     051A                     	;# 
   490     051B                     	;# 
   491     051C                     	;# 
   492     051D                     	;# 
   493     058C                     	;# 
   494     058C                     	;# 
   495     058D                     	;# 
   496     058E                     	;# 
   497     058F                     	;# 
   498     058F                     	;# 
   499     0590                     	;# 
   500     0591                     	;# 
   501     0592                     	;# 
   502     0593                     	;# 
   503     059C                     	;# 
   504     059C                     	;# 
   505     059D                     	;# 
   506     059D                     	;# 
   507     059E                     	;# 
   508     059F                     	;# 
   509     060C                     	;# 
   510     060C                     	;# 
   511     060D                     	;# 
   512     060D                     	;# 
   513     060E                     	;# 
   514     060F                     	;# 
   515     0610                     	;# 
   516     0611                     	;# 
   517     0612                     	;# 
   518     0613                     	;# 
   519     0614                     	;# 
   520     0616                     	;# 
   521     0616                     	;# 
   522     0617                     	;# 
   523     0617                     	;# 
   524     0618                     	;# 
   525     0619                     	;# 
   526     061A                     	;# 
   527     061B                     	;# 
   528     061C                     	;# 
   529     061D                     	;# 
   530     061E                     	;# 
   531     068C                     	;# 
   532     068D                     	;# 
   533     068E                     	;# 
   534     068F                     	;# 
   535     0690                     	;# 
   536     0691                     	;# 
   537     0692                     	;# 
   538     0693                     	;# 
   539     0694                     	;# 
   540     070C                     	;# 
   541     070D                     	;# 
   542     070E                     	;# 
   543     070F                     	;# 
   544     0710                     	;# 
   545     0711                     	;# 
   546     0712                     	;# 
   547     0713                     	;# 
   548     0714                     	;# 
   549     0716                     	;# 
   550     0717                     	;# 
   551     0718                     	;# 
   552     0719                     	;# 
   553     071A                     	;# 
   554     071B                     	;# 
   555     071C                     	;# 
   556     071D                     	;# 
   557     071E                     	;# 
   558     0796                     	;# 
   559     0797                     	;# 
   560     0798                     	;# 
   561     0799                     	;# 
   562     079A                     	;# 
   563     079B                     	;# 
   564     079C                     	;# 
   565     079D                     	;# 
   566     080C                     	;# 
   567     080D                     	;# 
   568     080E                     	;# 
   569     080F                     	;# 
   570     0810                     	;# 
   571     0811                     	;# 
   572     0813                     	;# 
   573     0814                     	;# 
   574     081A                     	;# 
   575     081A                     	;# 
   576     081B                     	;# 
   577     081C                     	;# 
   578     081C                     	;# 
   579     081D                     	;# 
   580     081E                     	;# 
   581     081F                     	;# 
   582     088C                     	;# 
   583     088D                     	;# 
   584     088E                     	;# 
   585     088F                     	;# 
   586     0890                     	;# 
   587     0891                     	;# 
   588     0892                     	;# 
   589     0893                     	;# 
   590     0895                     	;# 
   591     0896                     	;# 
   592     0897                     	;# 
   593     0898                     	;# 
   594     0899                     	;# 
   595     089A                     	;# 
   596     089B                     	;# 
   597     090C                     	;# 
   598     090E                     	;# 
   599     090F                     	;# 
   600     091F                     	;# 
   601     098F                     	;# 
   602     098F                     	;# 
   603     0990                     	;# 
   604     0991                     	;# 
   605     0992                     	;# 
   606     0993                     	;# 
   607     0994                     	;# 
   608     0995                     	;# 
   609     0996                     	;# 
   610     0997                     	;# 
   611     0A19                     	;# 
   612     0A19                     	;# 
   613     0A1A                     	;# 
   614     0A1A                     	;# 
   615     0A1B                     	;# 
   616     0A1B                     	;# 
   617     0A1B                     	;# 
   618     0A1C                     	;# 
   619     0A1C                     	;# 
   620     0A1D                     	;# 
   621     0A1D                     	;# 
   622     0A1E                     	;# 
   623     0A1E                     	;# 
   624     0A1F                     	;# 
   625     0A1F                     	;# 
   626     0A1F                     	;# 
   627     1E0F                     	;# 
   628     1E10                     	;# 
   629     1E11                     	;# 
   630     1E12                     	;# 
   631     1E13                     	;# 
   632     1E14                     	;# 
   633     1E15                     	;# 
   634     1E16                     	;# 
   635     1E17                     	;# 
   636     1E18                     	;# 
   637     1E19                     	;# 
   638     1E1A                     	;# 
   639     1E1B                     	;# 
   640     1E1C                     	;# 
   641     1E1D                     	;# 
   642     1E1E                     	;# 
   643     1E1F                     	;# 
   644     1E20                     	;# 
   645     1E21                     	;# 
   646     1E22                     	;# 
   647     1E23                     	;# 
   648     1E24                     	;# 
   649     1E25                     	;# 
   650     1E26                     	;# 
   651     1E27                     	;# 
   652     1E28                     	;# 
   653     1E29                     	;# 
   654     1E2A                     	;# 
   655     1E2B                     	;# 
   656     1E2C                     	;# 
   657     1E2D                     	;# 
   658     1E2E                     	;# 
   659     1E2F                     	;# 
   660     1E30                     	;# 
   661     1E31                     	;# 
   662     1E32                     	;# 
   663     1E33                     	;# 
   664     1E34                     	;# 
   665     1E35                     	;# 
   666     1E36                     	;# 
   667     1E37                     	;# 
   668     1E8F                     	;# 
   669     1E90                     	;# 
   670     1E91                     	;# 
   671     1E92                     	;# 
   672     1E93                     	;# 
   673     1E94                     	;# 
   674     1E95                     	;# 
   675     1E96                     	;# 
   676     1E97                     	;# 
   677     1E9C                     	;# 
   678     1E9D                     	;# 
   679     1E9E                     	;# 
   680     1EA1                     	;# 
   681     1EA2                     	;# 
   682     1EA3                     	;# 
   683     1EA4                     	;# 
   684     1EA5                     	;# 
   685     1EA9                     	;# 
   686     1EAA                     	;# 
   687     1EAB                     	;# 
   688     1EAC                     	;# 
   689     1EB1                     	;# 
   690     1EB2                     	;# 
   691     1EB3                     	;# 
   692     1EB8                     	;# 
   693     1EB9                     	;# 
   694     1EBA                     	;# 
   695     1EBB                     	;# 
   696     1EBC                     	;# 
   697     1EBD                     	;# 
   698     1EBE                     	;# 
   699     1EC3                     	;# 
   700     1EC5                     	;# 
   701     1EC6                     	;# 
   702     1EC7                     	;# 
   703     1EC8                     	;# 
   704     1EC9                     	;# 
   705     1ECA                     	;# 
   706     1ECB                     	;# 
   707     1ECC                     	;# 
   708     1ECD                     	;# 
   709     1ECE                     	;# 
   710     1F10                     	;# 
   711     1F11                     	;# 
   712     1F12                     	;# 
   713     1F13                     	;# 
   714     1F14                     	;# 
   715     1F15                     	;# 
   716     1F16                     	;# 
   717     1F17                     	;# 
   718     1F18                     	;# 
   719     1F19                     	;# 
   720     1F1A                     	;# 
   721     1F1B                     	;# 
   722     1F1C                     	;# 
   723     1F1D                     	;# 
   724     1F1E                     	;# 
   725     1F1F                     	;# 
   726     1F20                     	;# 
   727     1F21                     	;# 
   728     1F22                     	;# 
   729     1F23                     	;# 
   730     1F24                     	;# 
   731     1F25                     	;# 
   732     1F26                     	;# 
   733     1F27                     	;# 
   734     1F38                     	;# 
   735     1F39                     	;# 
   736     1F3A                     	;# 
   737     1F3B                     	;# 
   738     1F3C                     	;# 
   739     1F3D                     	;# 
   740     1F3E                     	;# 
   741     1F3F                     	;# 
   742     1F43                     	;# 
   743     1F44                     	;# 
   744     1F45                     	;# 
   745     1F46                     	;# 
   746     1F47                     	;# 
   747     1F48                     	;# 
   748     1F49                     	;# 
   749     1F4A                     	;# 
   750     1F4E                     	;# 
   751     1F4F                     	;# 
   752     1F50                     	;# 
   753     1F51                     	;# 
   754     1F52                     	;# 
   755     1F53                     	;# 
   756     1F54                     	;# 
   757     1F55                     	;# 
   758     1F65                     	;# 
   759     1F66                     	;# 
   760     1F67                     	;# 
   761     1F68                     	;# 
   762     1F69                     	;# 
   763     1F6A                     	;# 
   764     1F6B                     	;# 
   765     1FE4                     	;# 
   766     1FE5                     	;# 
   767     1FE6                     	;# 
   768     1FE7                     	;# 
   769     1FE8                     	;# 
   770     1FE8                     	;# 
   771     1FE9                     	;# 
   772     1FEA                     	;# 
   773     1FEB                     	;# 
   774     1FED                     	;# 
   775     1FEE                     	;# 
   776     1FEF                     	;# 
   777     0000                     	;# 
   778     0001                     	;# 
   779     0002                     	;# 
   780     0003                     	;# 
   781     0004                     	;# 
   782     0005                     	;# 
   783     0006                     	;# 
   784     0007                     	;# 
   785     0008                     	;# 
   786     0009                     	;# 
   787     000A                     	;# 
   788     000B                     	;# 
   789     000C                     	;# 
   790     000D                     	;# 
   791     000E                     	;# 
   792     0010                     	;# 
   793     0012                     	;# 
   794     0013                     	;# 
   795     0014                     	;# 
   796     0016                     	;# 
   797     0018                     	;# 
   798     0019                     	;# 
   799     001A                     	;# 
   800     001C                     	;# 
   801     008C                     	;# 
   802     008C                     	;# 
   803     008D                     	;# 
   804     008E                     	;# 
   805     008E                     	;# 
   806     008F                     	;# 
   807     0090                     	;# 
   808     0090                     	;# 
   809     0091                     	;# 
   810     0092                     	;# 
   811     0092                     	;# 
   812     0093                     	;# 
   813     0094                     	;# 
   814     0094                     	;# 
   815     0095                     	;# 
   816     0096                     	;# 
   817     0096                     	;# 
   818     0097                     	;# 
   819     0098                     	;# 
   820     0099                     	;# 
   821     009A                     	;# 
   822     009B                     	;# 
   823     009B                     	;# 
   824     009C                     	;# 
   825     009D                     	;# 
   826     009D                     	;# 
   827     009E                     	;# 
   828     009F                     	;# 
   829     010C                     	;# 
   830     010C                     	;# 
   831     010D                     	;# 
   832     010E                     	;# 
   833     010F                     	;# 
   834     010F                     	;# 
   835     0110                     	;# 
   836     0111                     	;# 
   837     0112                     	;# 
   838     0113                     	;# 
   839     0114                     	;# 
   840     0115                     	;# 
   841     0116                     	;# 
   842     0117                     	;# 
   843     0118                     	;# 
   844     0119                     	;# 
   845     0119                     	;# 
   846     0119                     	;# 
   847     011A                     	;# 
   848     011A                     	;# 
   849     011A                     	;# 
   850     011B                     	;# 
   851     011B                     	;# 
   852     011B                     	;# 
   853     011B                     	;# 
   854     011B                     	;# 
   855     011C                     	;# 
   856     011C                     	;# 
   857     011C                     	;# 
   858     011D                     	;# 
   859     011D                     	;# 
   860     011D                     	;# 
   861     011E                     	;# 
   862     011E                     	;# 
   863     011E                     	;# 
   864     011F                     	;# 
   865     011F                     	;# 
   866     011F                     	;# 
   867     011F                     	;# 
   868     011F                     	;# 
   869     018C                     	;# 
   870     018D                     	;# 
   871     018E                     	;# 
   872     018F                     	;# 
   873     0190                     	;# 
   874     0191                     	;# 
   875     0192                     	;# 
   876     0196                     	;# 
   877     0197                     	;# 
   878     0198                     	;# 
   879     0199                     	;# 
   880     019A                     	;# 
   881     019B                     	;# 
   882     019C                     	;# 
   883     020C                     	;# 
   884     020D                     	;# 
   885     020E                     	;# 
   886     020E                     	;# 
   887     020F                     	;# 
   888     020F                     	;# 
   889     0210                     	;# 
   890     0210                     	;# 
   891     0211                     	;# 
   892     0211                     	;# 
   893     0212                     	;# 
   894     0213                     	;# 
   895     0214                     	;# 
   896     0214                     	;# 
   897     0215                     	;# 
   898     0215                     	;# 
   899     0216                     	;# 
   900     0216                     	;# 
   901     0217                     	;# 
   902     0217                     	;# 
   903     0218                     	;# 
   904     0219                     	;# 
   905     021A                     	;# 
   906     021A                     	;# 
   907     021B                     	;# 
   908     021B                     	;# 
   909     021C                     	;# 
   910     021C                     	;# 
   911     021D                     	;# 
   912     021D                     	;# 
   913     021E                     	;# 
   914     021F                     	;# 
   915     028C                     	;# 
   916     028C                     	;# 
   917     028D                     	;# 
   918     028D                     	;# 
   919     028E                     	;# 
   920     028F                     	;# 
   921     0290                     	;# 
   922     0291                     	;# 
   923     0292                     	;# 
   924     0292                     	;# 
   925     0293                     	;# 
   926     0293                     	;# 
   927     0294                     	;# 
   928     0295                     	;# 
   929     0296                     	;# 
   930     0297                     	;# 
   931     0298                     	;# 
   932     0298                     	;# 
   933     0299                     	;# 
   934     0299                     	;# 
   935     029A                     	;# 
   936     029B                     	;# 
   937     029C                     	;# 
   938     029D                     	;# 
   939     029F                     	;# 
   940     030C                     	;# 
   941     030C                     	;# 
   942     030D                     	;# 
   943     030E                     	;# 
   944     030F                     	;# 
   945     0310                     	;# 
   946     0310                     	;# 
   947     0311                     	;# 
   948     0312                     	;# 
   949     0313                     	;# 
   950     0314                     	;# 
   951     0314                     	;# 
   952     0315                     	;# 
   953     0316                     	;# 
   954     0317                     	;# 
   955     0318                     	;# 
   956     0318                     	;# 
   957     0319                     	;# 
   958     031A                     	;# 
   959     031B                     	;# 
   960     031C                     	;# 
   961     031C                     	;# 
   962     031D                     	;# 
   963     031E                     	;# 
   964     031F                     	;# 
   965     038C                     	;# 
   966     038C                     	;# 
   967     038D                     	;# 
   968     038E                     	;# 
   969     0390                     	;# 
   970     0390                     	;# 
   971     0391                     	;# 
   972     0392                     	;# 
   973     048C                     	;# 
   974     048C                     	;# 
   975     048D                     	;# 
   976     048E                     	;# 
   977     048F                     	;# 
   978     048F                     	;# 
   979     0490                     	;# 
   980     0491                     	;# 
   981     0492                     	;# 
   982     0492                     	;# 
   983     0493                     	;# 
   984     0494                     	;# 
   985     0495                     	;# 
   986     0495                     	;# 
   987     0496                     	;# 
   988     0497                     	;# 
   989     0498                     	;# 
   990     0499                     	;# 
   991     049A                     	;# 
   992     049B                     	;# 
   993     049C                     	;# 
   994     049D                     	;# 
   995     050C                     	;# 
   996     050C                     	;# 
   997     050D                     	;# 
   998     050E                     	;# 
   999     050F                     	;# 
  1000     050F                     	;# 
  1001     0510                     	;# 
  1002     0511                     	;# 
  1003     0512                     	;# 
  1004     0512                     	;# 
  1005     0513                     	;# 
  1006     0514                     	;# 
  1007     0515                     	;# 
  1008     0515                     	;# 
  1009     0516                     	;# 
  1010     0517                     	;# 
  1011     0518                     	;# 
  1012     0519                     	;# 
  1013     051A                     	;# 
  1014     051B                     	;# 
  1015     051C                     	;# 
  1016     051D                     	;# 
  1017     058C                     	;# 
  1018     058C                     	;# 
  1019     058D                     	;# 
  1020     058E                     	;# 
  1021     058F                     	;# 
  1022     058F                     	;# 
  1023     0590                     	;# 
  1024     0591                     	;# 
  1025     0592                     	;# 
  1026     0593                     	;# 
  1027     059C                     	;# 
  1028     059C                     	;# 
  1029     059D                     	;# 
  1030     059D                     	;# 
  1031     059E                     	;# 
  1032     059F                     	;# 
  1033     060C                     	;# 
  1034     060C                     	;# 
  1035     060D                     	;# 
  1036     060D                     	;# 
  1037     060E                     	;# 
  1038     060F                     	;# 
  1039     0610                     	;# 
  1040     0611                     	;# 
  1041     0612                     	;# 
  1042     0613                     	;# 
  1043     0614                     	;# 
  1044     0616                     	;# 
  1045     0616                     	;# 
  1046     0617                     	;# 
  1047     0617                     	;# 
  1048     0618                     	;# 
  1049     0619                     	;# 
  1050     061A                     	;# 
  1051     061B                     	;# 
  1052     061C                     	;# 
  1053     061D                     	;# 
  1054     061E                     	;# 
  1055     068C                     	;# 
  1056     068D                     	;# 
  1057     068E                     	;# 
  1058     068F                     	;# 
  1059     0690                     	;# 
  1060     0691                     	;# 
  1061     0692                     	;# 
  1062     0693                     	;# 
  1063     0694                     	;# 
  1064     070C                     	;# 
  1065     070D                     	;# 
  1066     070E                     	;# 
  1067     070F                     	;# 
  1068     0710                     	;# 
  1069     0711                     	;# 
  1070     0712                     	;# 
  1071     0713                     	;# 
  1072     0714                     	;# 
  1073     0716                     	;# 
  1074     0717                     	;# 
  1075     0718                     	;# 
  1076     0719                     	;# 
  1077     071A                     	;# 
  1078     071B                     	;# 
  1079     071C                     	;# 
  1080     071D                     	;# 
  1081     071E                     	;# 
  1082     0796                     	;# 
  1083     0797                     	;# 
  1084     0798                     	;# 
  1085     0799                     	;# 
  1086     079A                     	;# 
  1087     079B                     	;# 
  1088     079C                     	;# 
  1089     079D                     	;# 
  1090     080C                     	;# 
  1091     080D                     	;# 
  1092     080E                     	;# 
  1093     080F                     	;# 
  1094     0810                     	;# 
  1095     0811                     	;# 
  1096     0813                     	;# 
  1097     0814                     	;# 
  1098     081A                     	;# 
  1099     081A                     	;# 
  1100     081B                     	;# 
  1101     081C                     	;# 
  1102     081C                     	;# 
  1103     081D                     	;# 
  1104     081E                     	;# 
  1105     081F                     	;# 
  1106     088C                     	;# 
  1107     088D                     	;# 
  1108     088E                     	;# 
  1109     088F                     	;# 
  1110     0890                     	;# 
  1111     0891                     	;# 
  1112     0892                     	;# 
  1113     0893                     	;# 
  1114     0895                     	;# 
  1115     0896                     	;# 
  1116     0897                     	;# 
  1117     0898                     	;# 
  1118     0899                     	;# 
  1119     089A                     	;# 
  1120     089B                     	;# 
  1121     090C                     	;# 
  1122     090E                     	;# 
  1123     090F                     	;# 
  1124     091F                     	;# 
  1125     098F                     	;# 
  1126     098F                     	;# 
  1127     0990                     	;# 
  1128     0991                     	;# 
  1129     0992                     	;# 
  1130     0993                     	;# 
  1131     0994                     	;# 
  1132     0995                     	;# 
  1133     0996                     	;# 
  1134     0997                     	;# 
  1135     0A19                     	;# 
  1136     0A19                     	;# 
  1137     0A1A                     	;# 
  1138     0A1A                     	;# 
  1139     0A1B                     	;# 
  1140     0A1B                     	;# 
  1141     0A1B                     	;# 
  1142     0A1C                     	;# 
  1143     0A1C                     	;# 
  1144     0A1D                     	;# 
  1145     0A1D                     	;# 
  1146     0A1E                     	;# 
  1147     0A1E                     	;# 
  1148     0A1F                     	;# 
  1149     0A1F                     	;# 
  1150     0A1F                     	;# 
  1151     1E0F                     	;# 
  1152     1E10                     	;# 
  1153     1E11                     	;# 
  1154     1E12                     	;# 
  1155     1E13                     	;# 
  1156     1E14                     	;# 
  1157     1E15                     	;# 
  1158     1E16                     	;# 
  1159     1E17                     	;# 
  1160     1E18                     	;# 
  1161     1E19                     	;# 
  1162     1E1A                     	;# 
  1163     1E1B                     	;# 
  1164     1E1C                     	;# 
  1165     1E1D                     	;# 
  1166     1E1E                     	;# 
  1167     1E1F                     	;# 
  1168     1E20                     	;# 
  1169     1E21                     	;# 
  1170     1E22                     	;# 
  1171     1E23                     	;# 
  1172     1E24                     	;# 
  1173     1E25                     	;# 
  1174     1E26                     	;# 
  1175     1E27                     	;# 
  1176     1E28                     	;# 
  1177     1E29                     	;# 
  1178     1E2A                     	;# 
  1179     1E2B                     	;# 
  1180     1E2C                     	;# 
  1181     1E2D                     	;# 
  1182     1E2E                     	;# 
  1183     1E2F                     	;# 
  1184     1E30                     	;# 
  1185     1E31                     	;# 
  1186     1E32                     	;# 
  1187     1E33                     	;# 
  1188     1E34                     	;# 
  1189     1E35                     	;# 
  1190     1E36                     	;# 
  1191     1E37                     	;# 
  1192     1E8F                     	;# 
  1193     1E90                     	;# 
  1194     1E91                     	;# 
  1195     1E92                     	;# 
  1196     1E93                     	;# 
  1197     1E94                     	;# 
  1198     1E95                     	;# 
  1199     1E96                     	;# 
  1200     1E97                     	;# 
  1201     1E9C                     	;# 
  1202     1E9D                     	;# 
  1203     1E9E                     	;# 
  1204     1EA1                     	;# 
  1205     1EA2                     	;# 
  1206     1EA3                     	;# 
  1207     1EA4                     	;# 
  1208     1EA5                     	;# 
  1209     1EA9                     	;# 
  1210     1EAA                     	;# 
  1211     1EAB                     	;# 
  1212     1EAC                     	;# 
  1213     1EB1                     	;# 
  1214     1EB2                     	;# 
  1215     1EB3                     	;# 
  1216     1EB8                     	;# 
  1217     1EB9                     	;# 
  1218     1EBA                     	;# 
  1219     1EBB                     	;# 
  1220     1EBC                     	;# 
  1221     1EBD                     	;# 
  1222     1EBE                     	;# 
  1223     1EC3                     	;# 
  1224     1EC5                     	;# 
  1225     1EC6                     	;# 
  1226     1EC7                     	;# 
  1227     1EC8                     	;# 
  1228     1EC9                     	;# 
  1229     1ECA                     	;# 
  1230     1ECB                     	;# 
  1231     1ECC                     	;# 
  1232     1ECD                     	;# 
  1233     1ECE                     	;# 
  1234     1F10                     	;# 
  1235     1F11                     	;# 
  1236     1F12                     	;# 
  1237     1F13                     	;# 
  1238     1F14                     	;# 
  1239     1F15                     	;# 
  1240     1F16                     	;# 
  1241     1F17                     	;# 
  1242     1F18                     	;# 
  1243     1F19                     	;# 
  1244     1F1A                     	;# 
  1245     1F1B                     	;# 
  1246     1F1C                     	;# 
  1247     1F1D                     	;# 
  1248     1F1E                     	;# 
  1249     1F1F                     	;# 
  1250     1F20                     	;# 
  1251     1F21                     	;# 
  1252     1F22                     	;# 
  1253     1F23                     	;# 
  1254     1F24                     	;# 
  1255     1F25                     	;# 
  1256     1F26                     	;# 
  1257     1F27                     	;# 
  1258     1F38                     	;# 
  1259     1F39                     	;# 
  1260     1F3A                     	;# 
  1261     1F3B                     	;# 
  1262     1F3C                     	;# 
  1263     1F3D                     	;# 
  1264     1F3E                     	;# 
  1265     1F3F                     	;# 
  1266     1F43                     	;# 
  1267     1F44                     	;# 
  1268     1F45                     	;# 
  1269     1F46                     	;# 
  1270     1F47                     	;# 
  1271     1F48                     	;# 
  1272     1F49                     	;# 
  1273     1F4A                     	;# 
  1274     1F4E                     	;# 
  1275     1F4F                     	;# 
  1276     1F50                     	;# 
  1277     1F51                     	;# 
  1278     1F52                     	;# 
  1279     1F53                     	;# 
  1280     1F54                     	;# 
  1281     1F55                     	;# 
  1282     1F65                     	;# 
  1283     1F66                     	;# 
  1284     1F67                     	;# 
  1285     1F68                     	;# 
  1286     1F69                     	;# 
  1287     1F6A                     	;# 
  1288     1F6B                     	;# 
  1289     1FE4                     	;# 
  1290     1FE5                     	;# 
  1291     1FE6                     	;# 
  1292     1FE7                     	;# 
  1293     1FE8                     	;# 
  1294     1FE8                     	;# 
  1295     1FE9                     	;# 
  1296     1FEA                     	;# 
  1297     1FEB                     	;# 
  1298     1FED                     	;# 
  1299     1FEE                     	;# 
  1300     1FEF                     	;# 
  1301     0000                     	;# 
  1302     0001                     	;# 
  1303     0002                     	;# 
  1304     0003                     	;# 
  1305     0004                     	;# 
  1306     0005                     	;# 
  1307     0006                     	;# 
  1308     0007                     	;# 
  1309     0008                     	;# 
  1310     0009                     	;# 
  1311     000A                     	;# 
  1312     000B                     	;# 
  1313     000C                     	;# 
  1314     000D                     	;# 
  1315     000E                     	;# 
  1316     0010                     	;# 
  1317     0012                     	;# 
  1318     0013                     	;# 
  1319     0014                     	;# 
  1320     0016                     	;# 
  1321     0018                     	;# 
  1322     0019                     	;# 
  1323     001A                     	;# 
  1324     001C                     	;# 
  1325     008C                     	;# 
  1326     008C                     	;# 
  1327     008D                     	;# 
  1328     008E                     	;# 
  1329     008E                     	;# 
  1330     008F                     	;# 
  1331     0090                     	;# 
  1332     0090                     	;# 
  1333     0091                     	;# 
  1334     0092                     	;# 
  1335     0092                     	;# 
  1336     0093                     	;# 
  1337     0094                     	;# 
  1338     0094                     	;# 
  1339     0095                     	;# 
  1340     0096                     	;# 
  1341     0096                     	;# 
  1342     0097                     	;# 
  1343     0098                     	;# 
  1344     0099                     	;# 
  1345     009A                     	;# 
  1346     009B                     	;# 
  1347     009B                     	;# 
  1348     009C                     	;# 
  1349     009D                     	;# 
  1350     009D                     	;# 
  1351     009E                     	;# 
  1352     009F                     	;# 
  1353     010C                     	;# 
  1354     010C                     	;# 
  1355     010D                     	;# 
  1356     010E                     	;# 
  1357     010F                     	;# 
  1358     010F                     	;# 
  1359     0110                     	;# 
  1360     0111                     	;# 
  1361     0112                     	;# 
  1362     0113                     	;# 
  1363     0114                     	;# 
  1364     0115                     	;# 
  1365     0116                     	;# 
  1366     0117                     	;# 
  1367     0118                     	;# 
  1368     0119                     	;# 
  1369     0119                     	;# 
  1370     0119                     	;# 
  1371     011A                     	;# 
  1372     011A                     	;# 
  1373     011A                     	;# 
  1374     011B                     	;# 
  1375     011B                     	;# 
  1376     011B                     	;# 
  1377     011B                     	;# 
  1378     011B                     	;# 
  1379     011C                     	;# 
  1380     011C                     	;# 
  1381     011C                     	;# 
  1382     011D                     	;# 
  1383     011D                     	;# 
  1384     011D                     	;# 
  1385     011E                     	;# 
  1386     011E                     	;# 
  1387     011E                     	;# 
  1388     011F                     	;# 
  1389     011F                     	;# 
  1390     011F                     	;# 
  1391     011F                     	;# 
  1392     011F                     	;# 
  1393     018C                     	;# 
  1394     018D                     	;# 
  1395     018E                     	;# 
  1396     018F                     	;# 
  1397     0190                     	;# 
  1398     0191                     	;# 
  1399     0192                     	;# 
  1400     0196                     	;# 
  1401     0197                     	;# 
  1402     0198                     	;# 
  1403     0199                     	;# 
  1404     019A                     	;# 
  1405     019B                     	;# 
  1406     019C                     	;# 
  1407     020C                     	;# 
  1408     020D                     	;# 
  1409     020E                     	;# 
  1410     020E                     	;# 
  1411     020F                     	;# 
  1412     020F                     	;# 
  1413     0210                     	;# 
  1414     0210                     	;# 
  1415     0211                     	;# 
  1416     0211                     	;# 
  1417     0212                     	;# 
  1418     0213                     	;# 
  1419     0214                     	;# 
  1420     0214                     	;# 
  1421     0215                     	;# 
  1422     0215                     	;# 
  1423     0216                     	;# 
  1424     0216                     	;# 
  1425     0217                     	;# 
  1426     0217                     	;# 
  1427     0218                     	;# 
  1428     0219                     	;# 
  1429     021A                     	;# 
  1430     021A                     	;# 
  1431     021B                     	;# 
  1432     021B                     	;# 
  1433     021C                     	;# 
  1434     021C                     	;# 
  1435     021D                     	;# 
  1436     021D                     	;# 
  1437     021E                     	;# 
  1438     021F                     	;# 
  1439     028C                     	;# 
  1440     028C                     	;# 
  1441     028D                     	;# 
  1442     028D                     	;# 
  1443     028E                     	;# 
  1444     028F                     	;# 
  1445     0290                     	;# 
  1446     0291                     	;# 
  1447     0292                     	;# 
  1448     0292                     	;# 
  1449     0293                     	;# 
  1450     0293                     	;# 
  1451     0294                     	;# 
  1452     0295                     	;# 
  1453     0296                     	;# 
  1454     0297                     	;# 
  1455     0298                     	;# 
  1456     0298                     	;# 
  1457     0299                     	;# 
  1458     0299                     	;# 
  1459     029A                     	;# 
  1460     029B                     	;# 
  1461     029C                     	;# 
  1462     029D                     	;# 
  1463     029F                     	;# 
  1464     030C                     	;# 
  1465     030C                     	;# 
  1466     030D                     	;# 
  1467     030E                     	;# 
  1468     030F                     	;# 
  1469     0310                     	;# 
  1470     0310                     	;# 
  1471     0311                     	;# 
  1472     0312                     	;# 
  1473     0313                     	;# 
  1474     0314                     	;# 
  1475     0314                     	;# 
  1476     0315                     	;# 
  1477     0316                     	;# 
  1478     0317                     	;# 
  1479     0318                     	;# 
  1480     0318                     	;# 
  1481     0319                     	;# 
  1482     031A                     	;# 
  1483     031B                     	;# 
  1484     031C                     	;# 
  1485     031C                     	;# 
  1486     031D                     	;# 
  1487     031E                     	;# 
  1488     031F                     	;# 
  1489     038C                     	;# 
  1490     038C                     	;# 
  1491     038D                     	;# 
  1492     038E                     	;# 
  1493     0390                     	;# 
  1494     0390                     	;# 
  1495     0391                     	;# 
  1496     0392                     	;# 
  1497     048C                     	;# 
  1498     048C                     	;# 
  1499     048D                     	;# 
  1500     048E                     	;# 
  1501     048F                     	;# 
  1502     048F                     	;# 
  1503     0490                     	;# 
  1504     0491                     	;# 
  1505     0492                     	;# 
  1506     0492                     	;# 
  1507     0493                     	;# 
  1508     0494                     	;# 
  1509     0495                     	;# 
  1510     0495                     	;# 
  1511     0496                     	;# 
  1512     0497                     	;# 
  1513     0498                     	;# 
  1514     0499                     	;# 
  1515     049A                     	;# 
  1516     049B                     	;# 
  1517     049C                     	;# 
  1518     049D                     	;# 
  1519     050C                     	;# 
  1520     050C                     	;# 
  1521     050D                     	;# 
  1522     050E                     	;# 
  1523     050F                     	;# 
  1524     050F                     	;# 
  1525     0510                     	;# 
  1526     0511                     	;# 
  1527     0512                     	;# 
  1528     0512                     	;# 
  1529     0513                     	;# 
  1530     0514                     	;# 
  1531     0515                     	;# 
  1532     0515                     	;# 
  1533     0516                     	;# 
  1534     0517                     	;# 
  1535     0518                     	;# 
  1536     0519                     	;# 
  1537     051A                     	;# 
  1538     051B                     	;# 
  1539     051C                     	;# 
  1540     051D                     	;# 
  1541     058C                     	;# 
  1542     058C                     	;# 
  1543     058D                     	;# 
  1544     058E                     	;# 
  1545     058F                     	;# 
  1546     058F                     	;# 
  1547     0590                     	;# 
  1548     0591                     	;# 
  1549     0592                     	;# 
  1550     0593                     	;# 
  1551     059C                     	;# 
  1552     059C                     	;# 
  1553     059D                     	;# 
  1554     059D                     	;# 
  1555     059E                     	;# 
  1556     059F                     	;# 
  1557     060C                     	;# 
  1558     060C                     	;# 
  1559     060D                     	;# 
  1560     060D                     	;# 
  1561     060E                     	;# 
  1562     060F                     	;# 
  1563     0610                     	;# 
  1564     0611                     	;# 
  1565     0612                     	;# 
  1566     0613                     	;# 
  1567     0614                     	;# 
  1568     0616                     	;# 
  1569     0616                     	;# 
  1570     0617                     	;# 
  1571     0617                     	;# 
  1572     0618                     	;# 
  1573     0619                     	;# 
  1574     061A                     	;# 
  1575     061B                     	;# 
  1576     061C                     	;# 
  1577     061D                     	;# 
  1578     061E                     	;# 
  1579     068C                     	;# 
  1580     068D                     	;# 
  1581     068E                     	;# 
  1582     068F                     	;# 
  1583     0690                     	;# 
  1584     0691                     	;# 
  1585     0692                     	;# 
  1586     0693                     	;# 
  1587     0694                     	;# 
  1588     070C                     	;# 
  1589     070D                     	;# 
  1590     070E                     	;# 
  1591     070F                     	;# 
  1592     0710                     	;# 
  1593     0711                     	;# 
  1594     0712                     	;# 
  1595     0713                     	;# 
  1596     0714                     	;# 
  1597     0716                     	;# 
  1598     0717                     	;# 
  1599     0718                     	;# 
  1600     0719                     	;# 
  1601     071A                     	;# 
  1602     071B                     	;# 
  1603     071C                     	;# 
  1604     071D                     	;# 
  1605     071E                     	;# 
  1606     0796                     	;# 
  1607     0797                     	;# 
  1608     0798                     	;# 
  1609     0799                     	;# 
  1610     079A                     	;# 
  1611     079B                     	;# 
  1612     079C                     	;# 
  1613     079D                     	;# 
  1614     080C                     	;# 
  1615     080D                     	;# 
  1616     080E                     	;# 
  1617     080F                     	;# 
  1618     0810                     	;# 
  1619     0811                     	;# 
  1620     0813                     	;# 
  1621     0814                     	;# 
  1622     081A                     	;# 
  1623     081A                     	;# 
  1624     081B                     	;# 
  1625     081C                     	;# 
  1626     081C                     	;# 
  1627     081D                     	;# 
  1628     081E                     	;# 
  1629     081F                     	;# 
  1630     088C                     	;# 
  1631     088D                     	;# 
  1632     088E                     	;# 
  1633     088F                     	;# 
  1634     0890                     	;# 
  1635     0891                     	;# 
  1636     0892                     	;# 
  1637     0893                     	;# 
  1638     0895                     	;# 
  1639     0896                     	;# 
  1640     0897                     	;# 
  1641     0898                     	;# 
  1642     0899                     	;# 
  1643     089A                     	;# 
  1644     089B                     	;# 
  1645     090C                     	;# 
  1646     090E                     	;# 
  1647     090F                     	;# 
  1648     091F                     	;# 
  1649     098F                     	;# 
  1650     098F                     	;# 
  1651     0990                     	;# 
  1652     0991                     	;# 
  1653     0992                     	;# 
  1654     0993                     	;# 
  1655     0994                     	;# 
  1656     0995                     	;# 
  1657     0996                     	;# 
  1658     0997                     	;# 
  1659     0A19                     	;# 
  1660     0A19                     	;# 
  1661     0A1A                     	;# 
  1662     0A1A                     	;# 
  1663     0A1B                     	;# 
  1664     0A1B                     	;# 
  1665     0A1B                     	;# 
  1666     0A1C                     	;# 
  1667     0A1C                     	;# 
  1668     0A1D                     	;# 
  1669     0A1D                     	;# 
  1670     0A1E                     	;# 
  1671     0A1E                     	;# 
  1672     0A1F                     	;# 
  1673     0A1F                     	;# 
  1674     0A1F                     	;# 
  1675     1E0F                     	;# 
  1676     1E10                     	;# 
  1677     1E11                     	;# 
  1678     1E12                     	;# 
  1679     1E13                     	;# 
  1680     1E14                     	;# 
  1681     1E15                     	;# 
  1682     1E16                     	;# 
  1683     1E17                     	;# 
  1684     1E18                     	;# 
  1685     1E19                     	;# 
  1686     1E1A                     	;# 
  1687     1E1B                     	;# 
  1688     1E1C                     	;# 
  1689     1E1D                     	;# 
  1690     1E1E                     	;# 
  1691     1E1F                     	;# 
  1692     1E20                     	;# 
  1693     1E21                     	;# 
  1694     1E22                     	;# 
  1695     1E23                     	;# 
  1696     1E24                     	;# 
  1697     1E25                     	;# 
  1698     1E26                     	;# 
  1699     1E27                     	;# 
  1700     1E28                     	;# 
  1701     1E29                     	;# 
  1702     1E2A                     	;# 
  1703     1E2B                     	;# 
  1704     1E2C                     	;# 
  1705     1E2D                     	;# 
  1706     1E2E                     	;# 
  1707     1E2F                     	;# 
  1708     1E30                     	;# 
  1709     1E31                     	;# 
  1710     1E32                     	;# 
  1711     1E33                     	;# 
  1712     1E34                     	;# 
  1713     1E35                     	;# 
  1714     1E36                     	;# 
  1715     1E37                     	;# 
  1716     1E8F                     	;# 
  1717     1E90                     	;# 
  1718     1E91                     	;# 
  1719     1E92                     	;# 
  1720     1E93                     	;# 
  1721     1E94                     	;# 
  1722     1E95                     	;# 
  1723     1E96                     	;# 
  1724     1E97                     	;# 
  1725     1E9C                     	;# 
  1726     1E9D                     	;# 
  1727     1E9E                     	;# 
  1728     1EA1                     	;# 
  1729     1EA2                     	;# 
  1730     1EA3                     	;# 
  1731     1EA4                     	;# 
  1732     1EA5                     	;# 
  1733     1EA9                     	;# 
  1734     1EAA                     	;# 
  1735     1EAB                     	;# 
  1736     1EAC                     	;# 
  1737     1EB1                     	;# 
  1738     1EB2                     	;# 
  1739     1EB3                     	;# 
  1740     1EB8                     	;# 
  1741     1EB9                     	;# 
  1742     1EBA                     	;# 
  1743     1EBB                     	;# 
  1744     1EBC                     	;# 
  1745     1EBD                     	;# 
  1746     1EBE                     	;# 
  1747     1EC3                     	;# 
  1748     1EC5                     	;# 
  1749     1EC6                     	;# 
  1750     1EC7                     	;# 
  1751     1EC8                     	;# 
  1752     1EC9                     	;# 
  1753     1ECA                     	;# 
  1754     1ECB                     	;# 
  1755     1ECC                     	;# 
  1756     1ECD                     	;# 
  1757     1ECE                     	;# 
  1758     1F10                     	;# 
  1759     1F11                     	;# 
  1760     1F12                     	;# 
  1761     1F13                     	;# 
  1762     1F14                     	;# 
  1763     1F15                     	;# 
  1764     1F16                     	;# 
  1765     1F17                     	;# 
  1766     1F18                     	;# 
  1767     1F19                     	;# 
  1768     1F1A                     	;# 
  1769     1F1B                     	;# 
  1770     1F1C                     	;# 
  1771     1F1D                     	;# 
  1772     1F1E                     	;# 
  1773     1F1F                     	;# 
  1774     1F20                     	;# 
  1775     1F21                     	;# 
  1776     1F22                     	;# 
  1777     1F23                     	;# 
  1778     1F24                     	;# 
  1779     1F25                     	;# 
  1780     1F26                     	;# 
  1781     1F27                     	;# 
  1782     1F38                     	;# 
  1783     1F39                     	;# 
  1784     1F3A                     	;# 
  1785     1F3B                     	;# 
  1786     1F3C                     	;# 
  1787     1F3D                     	;# 
  1788     1F3E                     	;# 
  1789     1F3F                     	;# 
  1790     1F43                     	;# 
  1791     1F44                     	;# 
  1792     1F45                     	;# 
  1793     1F46                     	;# 
  1794     1F47                     	;# 
  1795     1F48                     	;# 
  1796     1F49                     	;# 
  1797     1F4A                     	;# 
  1798     1F4E                     	;# 
  1799     1F4F                     	;# 
  1800     1F50                     	;# 
  1801     1F51                     	;# 
  1802     1F52                     	;# 
  1803     1F53                     	;# 
  1804     1F54                     	;# 
  1805     1F55                     	;# 
  1806     1F65                     	;# 
  1807     1F66                     	;# 
  1808     1F67                     	;# 
  1809     1F68                     	;# 
  1810     1F69                     	;# 
  1811     1F6A                     	;# 
  1812     1F6B                     	;# 
  1813     1FE4                     	;# 
  1814     1FE5                     	;# 
  1815     1FE6                     	;# 
  1816     1FE7                     	;# 
  1817     1FE8                     	;# 
  1818     1FE8                     	;# 
  1819     1FE9                     	;# 
  1820     1FEA                     	;# 
  1821     1FEB                     	;# 
  1822     1FED                     	;# 
  1823     1FEE                     	;# 
  1824     1FEF                     	;# 
  1825     0000                     	;# 
  1826     0001                     	;# 
  1827     0002                     	;# 
  1828     0003                     	;# 
  1829     0004                     	;# 
  1830     0005                     	;# 
  1831     0006                     	;# 
  1832     0007                     	;# 
  1833     0008                     	;# 
  1834     0009                     	;# 
  1835     000A                     	;# 
  1836     000B                     	;# 
  1837     000C                     	;# 
  1838     000D                     	;# 
  1839     000E                     	;# 
  1840     0010                     	;# 
  1841     0012                     	;# 
  1842     0013                     	;# 
  1843     0014                     	;# 
  1844     0016                     	;# 
  1845     0018                     	;# 
  1846     0019                     	;# 
  1847     001A                     	;# 
  1848     001C                     	;# 
  1849     008C                     	;# 
  1850     008C                     	;# 
  1851     008D                     	;# 
  1852     008E                     	;# 
  1853     008E                     	;# 
  1854     008F                     	;# 
  1855     0090                     	;# 
  1856     0090                     	;# 
  1857     0091                     	;# 
  1858     0092                     	;# 
  1859     0092                     	;# 
  1860     0093                     	;# 
  1861     0094                     	;# 
  1862     0094                     	;# 
  1863     0095                     	;# 
  1864     0096                     	;# 
  1865     0096                     	;# 
  1866     0097                     	;# 
  1867     0098                     	;# 
  1868     0099                     	;# 
  1869     009A                     	;# 
  1870     009B                     	;# 
  1871     009B                     	;# 
  1872     009C                     	;# 
  1873     009D                     	;# 
  1874     009D                     	;# 
  1875     009E                     	;# 
  1876     009F                     	;# 
  1877     010C                     	;# 
  1878     010C                     	;# 
  1879     010D                     	;# 
  1880     010E                     	;# 
  1881     010F                     	;# 
  1882     010F                     	;# 
  1883     0110                     	;# 
  1884     0111                     	;# 
  1885     0112                     	;# 
  1886     0113                     	;# 
  1887     0114                     	;# 
  1888     0115                     	;# 
  1889     0116                     	;# 
  1890     0117                     	;# 
  1891     0118                     	;# 
  1892     0119                     	;# 
  1893     0119                     	;# 
  1894     0119                     	;# 
  1895     011A                     	;# 
  1896     011A                     	;# 
  1897     011A                     	;# 
  1898     011B                     	;# 
  1899     011B                     	;# 
  1900     011B                     	;# 
  1901     011B                     	;# 
  1902     011B                     	;# 
  1903     011C                     	;# 
  1904     011C                     	;# 
  1905     011C                     	;# 
  1906     011D                     	;# 
  1907     011D                     	;# 
  1908     011D                     	;# 
  1909     011E                     	;# 
  1910     011E                     	;# 
  1911     011E                     	;# 
  1912     011F                     	;# 
  1913     011F                     	;# 
  1914     011F                     	;# 
  1915     011F                     	;# 
  1916     011F                     	;# 
  1917     018C                     	;# 
  1918     018D                     	;# 
  1919     018E                     	;# 
  1920     018F                     	;# 
  1921     0190                     	;# 
  1922     0191                     	;# 
  1923     0192                     	;# 
  1924     0196                     	;# 
  1925     0197                     	;# 
  1926     0198                     	;# 
  1927     0199                     	;# 
  1928     019A                     	;# 
  1929     019B                     	;# 
  1930     019C                     	;# 
  1931     020C                     	;# 
  1932     020D                     	;# 
  1933     020E                     	;# 
  1934     020E                     	;# 
  1935     020F                     	;# 
  1936     020F                     	;# 
  1937     0210                     	;# 
  1938     0210                     	;# 
  1939     0211                     	;# 
  1940     0211                     	;# 
  1941     0212                     	;# 
  1942     0213                     	;# 
  1943     0214                     	;# 
  1944     0214                     	;# 
  1945     0215                     	;# 
  1946     0215                     	;# 
  1947     0216                     	;# 
  1948     0216                     	;# 
  1949     0217                     	;# 
  1950     0217                     	;# 
  1951     0218                     	;# 
  1952     0219                     	;# 
  1953     021A                     	;# 
  1954     021A                     	;# 
  1955     021B                     	;# 
  1956     021B                     	;# 
  1957     021C                     	;# 
  1958     021C                     	;# 
  1959     021D                     	;# 
  1960     021D                     	;# 
  1961     021E                     	;# 
  1962     021F                     	;# 
  1963     028C                     	;# 
  1964     028C                     	;# 
  1965     028D                     	;# 
  1966     028D                     	;# 
  1967     028E                     	;# 
  1968     028F                     	;# 
  1969     0290                     	;# 
  1970     0291                     	;# 
  1971     0292                     	;# 
  1972     0292                     	;# 
  1973     0293                     	;# 
  1974     0293                     	;# 
  1975     0294                     	;# 
  1976     0295                     	;# 
  1977     0296                     	;# 
  1978     0297                     	;# 
  1979     0298                     	;# 
  1980     0298                     	;# 
  1981     0299                     	;# 
  1982     0299                     	;# 
  1983     029A                     	;# 
  1984     029B                     	;# 
  1985     029C                     	;# 
  1986     029D                     	;# 
  1987     029F                     	;# 
  1988     030C                     	;# 
  1989     030C                     	;# 
  1990     030D                     	;# 
  1991     030E                     	;# 
  1992     030F                     	;# 
  1993     0310                     	;# 
  1994     0310                     	;# 
  1995     0311                     	;# 
  1996     0312                     	;# 
  1997     0313                     	;# 
  1998     0314                     	;# 
  1999     0314                     	;# 
  2000     0315                     	;# 
  2001     0316                     	;# 
  2002     0317                     	;# 
  2003     0318                     	;# 
  2004     0318                     	;# 
  2005     0319                     	;# 
  2006     031A                     	;# 
  2007     031B                     	;# 
  2008     031C                     	;# 
  2009     031C                     	;# 
  2010     031D                     	;# 
  2011     031E                     	;# 
  2012     031F                     	;# 
  2013     038C                     	;# 
  2014     038C                     	;# 
  2015     038D                     	;# 
  2016     038E                     	;# 
  2017     0390                     	;# 
  2018     0390                     	;# 
  2019     0391                     	;# 
  2020     0392                     	;# 
  2021     048C                     	;# 
  2022     048C                     	;# 
  2023     048D                     	;# 
  2024     048E                     	;# 
  2025     048F                     	;# 
  2026     048F                     	;# 
  2027     0490                     	;# 
  2028     0491                     	;# 
  2029     0492                     	;# 
  2030     0492                     	;# 
  2031     0493                     	;# 
  2032     0494                     	;# 
  2033     0495                     	;# 
  2034     0495                     	;# 
  2035     0496                     	;# 
  2036     0497                     	;# 
  2037     0498                     	;# 
  2038     0499                     	;# 
  2039     049A                     	;# 
  2040     049B                     	;# 
  2041     049C                     	;# 
  2042     049D                     	;# 
  2043     050C                     	;# 
  2044     050C                     	;# 
  2045     050D                     	;# 
  2046     050E                     	;# 
  2047     050F                     	;# 
  2048     050F                     	;# 
  2049     0510                     	;# 
  2050     0511                     	;# 
  2051     0512                     	;# 
  2052     0512                     	;# 
  2053     0513                     	;# 
  2054     0514                     	;# 
  2055     0515                     	;# 
  2056     0515                     	;# 
  2057     0516                     	;# 
  2058     0517                     	;# 
  2059     0518                     	;# 
  2060     0519                     	;# 
  2061     051A                     	;# 
  2062     051B                     	;# 
  2063     051C                     	;# 
  2064     051D                     	;# 
  2065     058C                     	;# 
  2066     058C                     	;# 
  2067     058D                     	;# 
  2068     058E                     	;# 
  2069     058F                     	;# 
  2070     058F                     	;# 
  2071     0590                     	;# 
  2072     0591                     	;# 
  2073     0592                     	;# 
  2074     0593                     	;# 
  2075     059C                     	;# 
  2076     059C                     	;# 
  2077     059D                     	;# 
  2078     059D                     	;# 
  2079     059E                     	;# 
  2080     059F                     	;# 
  2081     060C                     	;# 
  2082     060C                     	;# 
  2083     060D                     	;# 
  2084     060D                     	;# 
  2085     060E                     	;# 
  2086     060F                     	;# 
  2087     0610                     	;# 
  2088     0611                     	;# 
  2089     0612                     	;# 
  2090     0613                     	;# 
  2091     0614                     	;# 
  2092     0616                     	;# 
  2093     0616                     	;# 
  2094     0617                     	;# 
  2095     0617                     	;# 
  2096     0618                     	;# 
  2097     0619                     	;# 
  2098     061A                     	;# 
  2099     061B                     	;# 
  2100     061C                     	;# 
  2101     061D                     	;# 
  2102     061E                     	;# 
  2103     068C                     	;# 
  2104     068D                     	;# 
  2105     068E                     	;# 
  2106     068F                     	;# 
  2107     0690                     	;# 
  2108     0691                     	;# 
  2109     0692                     	;# 
  2110     0693                     	;# 
  2111     0694                     	;# 
  2112     070C                     	;# 
  2113     070D                     	;# 
  2114     070E                     	;# 
  2115     070F                     	;# 
  2116     0710                     	;# 
  2117     0711                     	;# 
  2118     0712                     	;# 
  2119     0713                     	;# 
  2120     0714                     	;# 
  2121     0716                     	;# 
  2122     0717                     	;# 
  2123     0718                     	;# 
  2124     0719                     	;# 
  2125     071A                     	;# 
  2126     071B                     	;# 
  2127     071C                     	;# 
  2128     071D                     	;# 
  2129     071E                     	;# 
  2130     0796                     	;# 
  2131     0797                     	;# 
  2132     0798                     	;# 
  2133     0799                     	;# 
  2134     079A                     	;# 
  2135     079B                     	;# 
  2136     079C                     	;# 
  2137     079D                     	;# 
  2138     080C                     	;# 
  2139     080D                     	;# 
  2140     080E                     	;# 
  2141     080F                     	;# 
  2142     0810                     	;# 
  2143     0811                     	;# 
  2144     0813                     	;# 
  2145     0814                     	;# 
  2146     081A                     	;# 
  2147     081A                     	;# 
  2148     081B                     	;# 
  2149     081C                     	;# 
  2150     081C                     	;# 
  2151     081D                     	;# 
  2152     081E                     	;# 
  2153     081F                     	;# 
  2154     088C                     	;# 
  2155     088D                     	;# 
  2156     088E                     	;# 
  2157     088F                     	;# 
  2158     0890                     	;# 
  2159     0891                     	;# 
  2160     0892                     	;# 
  2161     0893                     	;# 
  2162     0895                     	;# 
  2163     0896                     	;# 
  2164     0897                     	;# 
  2165     0898                     	;# 
  2166     0899                     	;# 
  2167     089A                     	;# 
  2168     089B                     	;# 
  2169     090C                     	;# 
  2170     090E                     	;# 
  2171     090F                     	;# 
  2172     091F                     	;# 
  2173     098F                     	;# 
  2174     098F                     	;# 
  2175     0990                     	;# 
  2176     0991                     	;# 
  2177     0992                     	;# 
  2178     0993                     	;# 
  2179     0994                     	;# 
  2180     0995                     	;# 
  2181     0996                     	;# 
  2182     0997                     	;# 
  2183     0A19                     	;# 
  2184     0A19                     	;# 
  2185     0A1A                     	;# 
  2186     0A1A                     	;# 
  2187     0A1B                     	;# 
  2188     0A1B                     	;# 
  2189     0A1B                     	;# 
  2190     0A1C                     	;# 
  2191     0A1C                     	;# 
  2192     0A1D                     	;# 
  2193     0A1D                     	;# 
  2194     0A1E                     	;# 
  2195     0A1E                     	;# 
  2196     0A1F                     	;# 
  2197     0A1F                     	;# 
  2198     0A1F                     	;# 
  2199     1E0F                     	;# 
  2200     1E10                     	;# 
  2201     1E11                     	;# 
  2202     1E12                     	;# 
  2203     1E13                     	;# 
  2204     1E14                     	;# 
  2205     1E15                     	;# 
  2206     1E16                     	;# 
  2207     1E17                     	;# 
  2208     1E18                     	;# 
  2209     1E19                     	;# 
  2210     1E1A                     	;# 
  2211     1E1B                     	;# 
  2212     1E1C                     	;# 
  2213     1E1D                     	;# 
  2214     1E1E                     	;# 
  2215     1E1F                     	;# 
  2216     1E20                     	;# 
  2217     1E21                     	;# 
  2218     1E22                     	;# 
  2219     1E23                     	;# 
  2220     1E24                     	;# 
  2221     1E25                     	;# 
  2222     1E26                     	;# 
  2223     1E27                     	;# 
  2224     1E28                     	;# 
  2225     1E29                     	;# 
  2226     1E2A                     	;# 
  2227     1E2B                     	;# 
  2228     1E2C                     	;# 
  2229     1E2D                     	;# 
  2230     1E2E                     	;# 
  2231     1E2F                     	;# 
  2232     1E30                     	;# 
  2233     1E31                     	;# 
  2234     1E32                     	;# 
  2235     1E33                     	;# 
  2236     1E34                     	;# 
  2237     1E35                     	;# 
  2238     1E36                     	;# 
  2239     1E37                     	;# 
  2240     1E8F                     	;# 
  2241     1E90                     	;# 
  2242     1E91                     	;# 
  2243     1E92                     	;# 
  2244     1E93                     	;# 
  2245     1E94                     	;# 
  2246     1E95                     	;# 
  2247     1E96                     	;# 
  2248     1E97                     	;# 
  2249     1E9C                     	;# 
  2250     1E9D                     	;# 
  2251     1E9E                     	;# 
  2252     1EA1                     	;# 
  2253     1EA2                     	;# 
  2254     1EA3                     	;# 
  2255     1EA4                     	;# 
  2256     1EA5                     	;# 
  2257     1EA9                     	;# 
  2258     1EAA                     	;# 
  2259     1EAB                     	;# 
  2260     1EAC                     	;# 
  2261     1EB1                     	;# 
  2262     1EB2                     	;# 
  2263     1EB3                     	;# 
  2264     1EB8                     	;# 
  2265     1EB9                     	;# 
  2266     1EBA                     	;# 
  2267     1EBB                     	;# 
  2268     1EBC                     	;# 
  2269     1EBD                     	;# 
  2270     1EBE                     	;# 
  2271     1EC3                     	;# 
  2272     1EC5                     	;# 
  2273     1EC6                     	;# 
  2274     1EC7                     	;# 
  2275     1EC8                     	;# 
  2276     1EC9                     	;# 
  2277     1ECA                     	;# 
  2278     1ECB                     	;# 
  2279     1ECC                     	;# 
  2280     1ECD                     	;# 
  2281     1ECE                     	;# 
  2282     1F10                     	;# 
  2283     1F11                     	;# 
  2284     1F12                     	;# 
  2285     1F13                     	;# 
  2286     1F14                     	;# 
  2287     1F15                     	;# 
  2288     1F16                     	;# 
  2289     1F17                     	;# 
  2290     1F18                     	;# 
  2291     1F19                     	;# 
  2292     1F1A                     	;# 
  2293     1F1B                     	;# 
  2294     1F1C                     	;# 
  2295     1F1D                     	;# 
  2296     1F1E                     	;# 
  2297     1F1F                     	;# 
  2298     1F20                     	;# 
  2299     1F21                     	;# 
  2300     1F22                     	;# 
  2301     1F23                     	;# 
  2302     1F24                     	;# 
  2303     1F25                     	;# 
  2304     1F26                     	;# 
  2305     1F27                     	;# 
  2306     1F38                     	;# 
  2307     1F39                     	;# 
  2308     1F3A                     	;# 
  2309     1F3B                     	;# 
  2310     1F3C                     	;# 
  2311     1F3D                     	;# 
  2312     1F3E                     	;# 
  2313     1F3F                     	;# 
  2314     1F43                     	;# 
  2315     1F44                     	;# 
  2316     1F45                     	;# 
  2317     1F46                     	;# 
  2318     1F47                     	;# 
  2319     1F48                     	;# 
  2320     1F49                     	;# 
  2321     1F4A                     	;# 
  2322     1F4E                     	;# 
  2323     1F4F                     	;# 
  2324     1F50                     	;# 
  2325     1F51                     	;# 
  2326     1F52                     	;# 
  2327     1F53                     	;# 
  2328     1F54                     	;# 
  2329     1F55                     	;# 
  2330     1F65                     	;# 
  2331     1F66                     	;# 
  2332     1F67                     	;# 
  2333     1F68                     	;# 
  2334     1F69                     	;# 
  2335     1F6A                     	;# 
  2336     1F6B                     	;# 
  2337     1FE4                     	;# 
  2338     1FE5                     	;# 
  2339     1FE6                     	;# 
  2340     1FE7                     	;# 
  2341     1FE8                     	;# 
  2342     1FE8                     	;# 
  2343     1FE9                     	;# 
  2344     1FEA                     	;# 
  2345     1FEB                     	;# 
  2346     1FED                     	;# 
  2347     1FEE                     	;# 
  2348     1FEF                     	;# 
  2349     0000                     	;# 
  2350     0001                     	;# 
  2351     0002                     	;# 
  2352     0003                     	;# 
  2353     0004                     	;# 
  2354     0005                     	;# 
  2355     0006                     	;# 
  2356     0007                     	;# 
  2357     0008                     	;# 
  2358     0009                     	;# 
  2359     000A                     	;# 
  2360     000B                     	;# 
  2361     000C                     	;# 
  2362     000D                     	;# 
  2363     000E                     	;# 
  2364     0010                     	;# 
  2365     0012                     	;# 
  2366     0013                     	;# 
  2367     0014                     	;# 
  2368     0016                     	;# 
  2369     0018                     	;# 
  2370     0019                     	;# 
  2371     001A                     	;# 
  2372     001C                     	;# 
  2373     008C                     	;# 
  2374     008C                     	;# 
  2375     008D                     	;# 
  2376     008E                     	;# 
  2377     008E                     	;# 
  2378     008F                     	;# 
  2379     0090                     	;# 
  2380     0090                     	;# 
  2381     0091                     	;# 
  2382     0092                     	;# 
  2383     0092                     	;# 
  2384     0093                     	;# 
  2385     0094                     	;# 
  2386     0094                     	;# 
  2387     0095                     	;# 
  2388     0096                     	;# 
  2389     0096                     	;# 
  2390     0097                     	;# 
  2391     0098                     	;# 
  2392     0099                     	;# 
  2393     009A                     	;# 
  2394     009B                     	;# 
  2395     009B                     	;# 
  2396     009C                     	;# 
  2397     009D                     	;# 
  2398     009D                     	;# 
  2399     009E                     	;# 
  2400     009F                     	;# 
  2401     010C                     	;# 
  2402     010C                     	;# 
  2403     010D                     	;# 
  2404     010E                     	;# 
  2405     010F                     	;# 
  2406     010F                     	;# 
  2407     0110                     	;# 
  2408     0111                     	;# 
  2409     0112                     	;# 
  2410     0113                     	;# 
  2411     0114                     	;# 
  2412     0115                     	;# 
  2413     0116                     	;# 
  2414     0117                     	;# 
  2415     0118                     	;# 
  2416     0119                     	;# 
  2417     0119                     	;# 
  2418     0119                     	;# 
  2419     011A                     	;# 
  2420     011A                     	;# 
  2421     011A                     	;# 
  2422     011B                     	;# 
  2423     011B                     	;# 
  2424     011B                     	;# 
  2425     011B                     	;# 
  2426     011B                     	;# 
  2427     011C                     	;# 
  2428     011C                     	;# 
  2429     011C                     	;# 
  2430     011D                     	;# 
  2431     011D                     	;# 
  2432     011D                     	;# 
  2433     011E                     	;# 
  2434     011E                     	;# 
  2435     011E                     	;# 
  2436     011F                     	;# 
  2437     011F                     	;# 
  2438     011F                     	;# 
  2439     011F                     	;# 
  2440     011F                     	;# 
  2441     018C                     	;# 
  2442     018D                     	;# 
  2443     018E                     	;# 
  2444     018F                     	;# 
  2445     0190                     	;# 
  2446     0191                     	;# 
  2447     0192                     	;# 
  2448     0196                     	;# 
  2449     0197                     	;# 
  2450     0198                     	;# 
  2451     0199                     	;# 
  2452     019A                     	;# 
  2453     019B                     	;# 
  2454     019C                     	;# 
  2455     020C                     	;# 
  2456     020D                     	;# 
  2457     020E                     	;# 
  2458     020E                     	;# 
  2459     020F                     	;# 
  2460     020F                     	;# 
  2461     0210                     	;# 
  2462     0210                     	;# 
  2463     0211                     	;# 
  2464     0211                     	;# 
  2465     0212                     	;# 
  2466     0213                     	;# 
  2467     0214                     	;# 
  2468     0214                     	;# 
  2469     0215                     	;# 
  2470     0215                     	;# 
  2471     0216                     	;# 
  2472     0216                     	;# 
  2473     0217                     	;# 
  2474     0217                     	;# 
  2475     0218                     	;# 
  2476     0219                     	;# 
  2477     021A                     	;# 
  2478     021A                     	;# 
  2479     021B                     	;# 
  2480     021B                     	;# 
  2481     021C                     	;# 
  2482     021C                     	;# 
  2483     021D                     	;# 
  2484     021D                     	;# 
  2485     021E                     	;# 
  2486     021F                     	;# 
  2487     028C                     	;# 
  2488     028C                     	;# 
  2489     028D                     	;# 
  2490     028D                     	;# 
  2491     028E                     	;# 
  2492     028F                     	;# 
  2493     0290                     	;# 
  2494     0291                     	;# 
  2495     0292                     	;# 
  2496     0292                     	;# 
  2497     0293                     	;# 
  2498     0293                     	;# 
  2499     0294                     	;# 
  2500     0295                     	;# 
  2501     0296                     	;# 
  2502     0297                     	;# 
  2503     0298                     	;# 
  2504     0298                     	;# 
  2505     0299                     	;# 
  2506     0299                     	;# 
  2507     029A                     	;# 
  2508     029B                     	;# 
  2509     029C                     	;# 
  2510     029D                     	;# 
  2511     029F                     	;# 
  2512     030C                     	;# 
  2513     030C                     	;# 
  2514     030D                     	;# 
  2515     030E                     	;# 
  2516     030F                     	;# 
  2517     0310                     	;# 
  2518     0310                     	;# 
  2519     0311                     	;# 
  2520     0312                     	;# 
  2521     0313                     	;# 
  2522     0314                     	;# 
  2523     0314                     	;# 
  2524     0315                     	;# 
  2525     0316                     	;# 
  2526     0317                     	;# 
  2527     0318                     	;# 
  2528     0318                     	;# 
  2529     0319                     	;# 
  2530     031A                     	;# 
  2531     031B                     	;# 
  2532     031C                     	;# 
  2533     031C                     	;# 
  2534     031D                     	;# 
  2535     031E                     	;# 
  2536     031F                     	;# 
  2537     038C                     	;# 
  2538     038C                     	;# 
  2539     038D                     	;# 
  2540     038E                     	;# 
  2541     0390                     	;# 
  2542     0390                     	;# 
  2543     0391                     	;# 
  2544     0392                     	;# 
  2545     048C                     	;# 
  2546     048C                     	;# 
  2547     048D                     	;# 
  2548     048E                     	;# 
  2549     048F                     	;# 
  2550     048F                     	;# 
  2551     0490                     	;# 
  2552     0491                     	;# 
  2553     0492                     	;# 
  2554     0492                     	;# 
  2555     0493                     	;# 
  2556     0494                     	;# 
  2557     0495                     	;# 
  2558     0495                     	;# 
  2559     0496                     	;# 
  2560     0497                     	;# 
  2561     0498                     	;# 
  2562     0499                     	;# 
  2563     049A                     	;# 
  2564     049B                     	;# 
  2565     049C                     	;# 
  2566     049D                     	;# 
  2567     050C                     	;# 
  2568     050C                     	;# 
  2569     050D                     	;# 
  2570     050E                     	;# 
  2571     050F                     	;# 
  2572     050F                     	;# 
  2573     0510                     	;# 
  2574     0511                     	;# 
  2575     0512                     	;# 
  2576     0512                     	;# 
  2577     0513                     	;# 
  2578     0514                     	;# 
  2579     0515                     	;# 
  2580     0515                     	;# 
  2581     0516                     	;# 
  2582     0517                     	;# 
  2583     0518                     	;# 
  2584     0519                     	;# 
  2585     051A                     	;# 
  2586     051B                     	;# 
  2587     051C                     	;# 
  2588     051D                     	;# 
  2589     058C                     	;# 
  2590     058C                     	;# 
  2591     058D                     	;# 
  2592     058E                     	;# 
  2593     058F                     	;# 
  2594     058F                     	;# 
  2595     0590                     	;# 
  2596     0591                     	;# 
  2597     0592                     	;# 
  2598     0593                     	;# 
  2599     059C                     	;# 
  2600     059C                     	;# 
  2601     059D                     	;# 
  2602     059D                     	;# 
  2603     059E                     	;# 
  2604     059F                     	;# 
  2605     060C                     	;# 
  2606     060C                     	;# 
  2607     060D                     	;# 
  2608     060D                     	;# 
  2609     060E                     	;# 
  2610     060F                     	;# 
  2611     0610                     	;# 
  2612     0611                     	;# 
  2613     0612                     	;# 
  2614     0613                     	;# 
  2615     0614                     	;# 
  2616     0616                     	;# 
  2617     0616                     	;# 
  2618     0617                     	;# 
  2619     0617                     	;# 
  2620     0618                     	;# 
  2621     0619                     	;# 
  2622     061A                     	;# 
  2623     061B                     	;# 
  2624     061C                     	;# 
  2625     061D                     	;# 
  2626     061E                     	;# 
  2627     068C                     	;# 
  2628     068D                     	;# 
  2629     068E                     	;# 
  2630     068F                     	;# 
  2631     0690                     	;# 
  2632     0691                     	;# 
  2633     0692                     	;# 
  2634     0693                     	;# 
  2635     0694                     	;# 
  2636     070C                     	;# 
  2637     070D                     	;# 
  2638     070E                     	;# 
  2639     070F                     	;# 
  2640     0710                     	;# 
  2641     0711                     	;# 
  2642     0712                     	;# 
  2643     0713                     	;# 
  2644     0714                     	;# 
  2645     0716                     	;# 
  2646     0717                     	;# 
  2647     0718                     	;# 
  2648     0719                     	;# 
  2649     071A                     	;# 
  2650     071B                     	;# 
  2651     071C                     	;# 
  2652     071D                     	;# 
  2653     071E                     	;# 
  2654     0796                     	;# 
  2655     0797                     	;# 
  2656     0798                     	;# 
  2657     0799                     	;# 
  2658     079A                     	;# 
  2659     079B                     	;# 
  2660     079C                     	;# 
  2661     079D                     	;# 
  2662     080C                     	;# 
  2663     080D                     	;# 
  2664     080E                     	;# 
  2665     080F                     	;# 
  2666     0810                     	;# 
  2667     0811                     	;# 
  2668     0813                     	;# 
  2669     0814                     	;# 
  2670     081A                     	;# 
  2671     081A                     	;# 
  2672     081B                     	;# 
  2673     081C                     	;# 
  2674     081C                     	;# 
  2675     081D                     	;# 
  2676     081E                     	;# 
  2677     081F                     	;# 
  2678     088C                     	;# 
  2679     088D                     	;# 
  2680     088E                     	;# 
  2681     088F                     	;# 
  2682     0890                     	;# 
  2683     0891                     	;# 
  2684     0892                     	;# 
  2685     0893                     	;# 
  2686     0895                     	;# 
  2687     0896                     	;# 
  2688     0897                     	;# 
  2689     0898                     	;# 
  2690     0899                     	;# 
  2691     089A                     	;# 
  2692     089B                     	;# 
  2693     090C                     	;# 
  2694     090E                     	;# 
  2695     090F                     	;# 
  2696     091F                     	;# 
  2697     098F                     	;# 
  2698     098F                     	;# 
  2699     0990                     	;# 
  2700     0991                     	;# 
  2701     0992                     	;# 
  2702     0993                     	;# 
  2703     0994                     	;# 
  2704     0995                     	;# 
  2705     0996                     	;# 
  2706     0997                     	;# 
  2707     0A19                     	;# 
  2708     0A19                     	;# 
  2709     0A1A                     	;# 
  2710     0A1A                     	;# 
  2711     0A1B                     	;# 
  2712     0A1B                     	;# 
  2713     0A1B                     	;# 
  2714     0A1C                     	;# 
  2715     0A1C                     	;# 
  2716     0A1D                     	;# 
  2717     0A1D                     	;# 
  2718     0A1E                     	;# 
  2719     0A1E                     	;# 
  2720     0A1F                     	;# 
  2721     0A1F                     	;# 
  2722     0A1F                     	;# 
  2723     1E0F                     	;# 
  2724     1E10                     	;# 
  2725     1E11                     	;# 
  2726     1E12                     	;# 
  2727     1E13                     	;# 
  2728     1E14                     	;# 
  2729     1E15                     	;# 
  2730     1E16                     	;# 
  2731     1E17                     	;# 
  2732     1E18                     	;# 
  2733     1E19                     	;# 
  2734     1E1A                     	;# 
  2735     1E1B                     	;# 
  2736     1E1C                     	;# 
  2737     1E1D                     	;# 
  2738     1E1E                     	;# 
  2739     1E1F                     	;# 
  2740     1E20                     	;# 
  2741     1E21                     	;# 
  2742     1E22                     	;# 
  2743     1E23                     	;# 
  2744     1E24                     	;# 
  2745     1E25                     	;# 
  2746     1E26                     	;# 
  2747     1E27                     	;# 
  2748     1E28                     	;# 
  2749     1E29                     	;# 
  2750     1E2A                     	;# 
  2751     1E2B                     	;# 
  2752     1E2C                     	;# 
  2753     1E2D                     	;# 
  2754     1E2E                     	;# 
  2755     1E2F                     	;# 
  2756     1E30                     	;# 
  2757     1E31                     	;# 
  2758     1E32                     	;# 
  2759     1E33                     	;# 
  2760     1E34                     	;# 
  2761     1E35                     	;# 
  2762     1E36                     	;# 
  2763     1E37                     	;# 
  2764     1E8F                     	;# 
  2765     1E90                     	;# 
  2766     1E91                     	;# 
  2767     1E92                     	;# 
  2768     1E93                     	;# 
  2769     1E94                     	;# 
  2770     1E95                     	;# 
  2771     1E96                     	;# 
  2772     1E97                     	;# 
  2773     1E9C                     	;# 
  2774     1E9D                     	;# 
  2775     1E9E                     	;# 
  2776     1EA1                     	;# 
  2777     1EA2                     	;# 
  2778     1EA3                     	;# 
  2779     1EA4                     	;# 
  2780     1EA5                     	;# 
  2781     1EA9                     	;# 
  2782     1EAA                     	;# 
  2783     1EAB                     	;# 
  2784     1EAC                     	;# 
  2785     1EB1                     	;# 
  2786     1EB2                     	;# 
  2787     1EB3                     	;# 
  2788     1EB8                     	;# 
  2789     1EB9                     	;# 
  2790     1EBA                     	;# 
  2791     1EBB                     	;# 
  2792     1EBC                     	;# 
  2793     1EBD                     	;# 
  2794     1EBE                     	;# 
  2795     1EC3                     	;# 
  2796     1EC5                     	;# 
  2797     1EC6                     	;# 
  2798     1EC7                     	;# 
  2799     1EC8                     	;# 
  2800     1EC9                     	;# 
  2801     1ECA                     	;# 
  2802     1ECB                     	;# 
  2803     1ECC                     	;# 
  2804     1ECD                     	;# 
  2805     1ECE                     	;# 
  2806     1F10                     	;# 
  2807     1F11                     	;# 
  2808     1F12                     	;# 
  2809     1F13                     	;# 
  2810     1F14                     	;# 
  2811     1F15                     	;# 
  2812     1F16                     	;# 
  2813     1F17                     	;# 
  2814     1F18                     	;# 
  2815     1F19                     	;# 
  2816     1F1A                     	;# 
  2817     1F1B                     	;# 
  2818     1F1C                     	;# 
  2819     1F1D                     	;# 
  2820     1F1E                     	;# 
  2821     1F1F                     	;# 
  2822     1F20                     	;# 
  2823     1F21                     	;# 
  2824     1F22                     	;# 
  2825     1F23                     	;# 
  2826     1F24                     	;# 
  2827     1F25                     	;# 
  2828     1F26                     	;# 
  2829     1F27                     	;# 
  2830     1F38                     	;# 
  2831     1F39                     	;# 
  2832     1F3A                     	;# 
  2833     1F3B                     	;# 
  2834     1F3C                     	;# 
  2835     1F3D                     	;# 
  2836     1F3E                     	;# 
  2837     1F3F                     	;# 
  2838     1F43                     	;# 
  2839     1F44                     	;# 
  2840     1F45                     	;# 
  2841     1F46                     	;# 
  2842     1F47                     	;# 
  2843     1F48                     	;# 
  2844     1F49                     	;# 
  2845     1F4A                     	;# 
  2846     1F4E                     	;# 
  2847     1F4F                     	;# 
  2848     1F50                     	;# 
  2849     1F51                     	;# 
  2850     1F52                     	;# 
  2851     1F53                     	;# 
  2852     1F54                     	;# 
  2853     1F55                     	;# 
  2854     1F65                     	;# 
  2855     1F66                     	;# 
  2856     1F67                     	;# 
  2857     1F68                     	;# 
  2858     1F69                     	;# 
  2859     1F6A                     	;# 
  2860     1F6B                     	;# 
  2861     1FE4                     	;# 
  2862     1FE5                     	;# 
  2863     1FE6                     	;# 
  2864     1FE7                     	;# 
  2865     1FE8                     	;# 
  2866     1FE8                     	;# 
  2867     1FE9                     	;# 
  2868     1FEA                     	;# 
  2869     1FEB                     	;# 
  2870     1FED                     	;# 
  2871     1FEE                     	;# 
  2872     1FEF                     	;# 
  2873     0000                     	;# 
  2874     0001                     	;# 
  2875     0002                     	;# 
  2876     0003                     	;# 
  2877     0004                     	;# 
  2878     0005                     	;# 
  2879     0006                     	;# 
  2880     0007                     	;# 
  2881     0008                     	;# 
  2882     0009                     	;# 
  2883     000A                     	;# 
  2884     000B                     	;# 
  2885     000C                     	;# 
  2886     000D                     	;# 
  2887     000E                     	;# 
  2888     0010                     	;# 
  2889     0012                     	;# 
  2890     0013                     	;# 
  2891     0014                     	;# 
  2892     0016                     	;# 
  2893     0018                     	;# 
  2894     0019                     	;# 
  2895     001A                     	;# 
  2896     001C                     	;# 
  2897     008C                     	;# 
  2898     008C                     	;# 
  2899     008D                     	;# 
  2900     008E                     	;# 
  2901     008E                     	;# 
  2902     008F                     	;# 
  2903     0090                     	;# 
  2904     0090                     	;# 
  2905     0091                     	;# 
  2906     0092                     	;# 
  2907     0092                     	;# 
  2908     0093                     	;# 
  2909     0094                     	;# 
  2910     0094                     	;# 
  2911     0095                     	;# 
  2912     0096                     	;# 
  2913     0096                     	;# 
  2914     0097                     	;# 
  2915     0098                     	;# 
  2916     0099                     	;# 
  2917     009A                     	;# 
  2918     009B                     	;# 
  2919     009B                     	;# 
  2920     009C                     	;# 
  2921     009D                     	;# 
  2922     009D                     	;# 
  2923     009E                     	;# 
  2924     009F                     	;# 
  2925     010C                     	;# 
  2926     010C                     	;# 
  2927     010D                     	;# 
  2928     010E                     	;# 
  2929     010F                     	;# 
  2930     010F                     	;# 
  2931     0110                     	;# 
  2932     0111                     	;# 
  2933     0112                     	;# 
  2934     0113                     	;# 
  2935     0114                     	;# 
  2936     0115                     	;# 
  2937     0116                     	;# 
  2938     0117                     	;# 
  2939     0118                     	;# 
  2940     0119                     	;# 
  2941     0119                     	;# 
  2942     0119                     	;# 
  2943     011A                     	;# 
  2944     011A                     	;# 
  2945     011A                     	;# 
  2946     011B                     	;# 
  2947     011B                     	;# 
  2948     011B                     	;# 
  2949     011B                     	;# 
  2950     011B                     	;# 
  2951     011C                     	;# 
  2952     011C                     	;# 
  2953     011C                     	;# 
  2954     011D                     	;# 
  2955     011D                     	;# 
  2956     011D                     	;# 
  2957     011E                     	;# 
  2958     011E                     	;# 
  2959     011E                     	;# 
  2960     011F                     	;# 
  2961     011F                     	;# 
  2962     011F                     	;# 
  2963     011F                     	;# 
  2964     011F                     	;# 
  2965     018C                     	;# 
  2966     018D                     	;# 
  2967     018E                     	;# 
  2968     018F                     	;# 
  2969     0190                     	;# 
  2970     0191                     	;# 
  2971     0192                     	;# 
  2972     0196                     	;# 
  2973     0197                     	;# 
  2974     0198                     	;# 
  2975     0199                     	;# 
  2976     019A                     	;# 
  2977     019B                     	;# 
  2978     019C                     	;# 
  2979     020C                     	;# 
  2980     020D                     	;# 
  2981     020E                     	;# 
  2982     020E                     	;# 
  2983     020F                     	;# 
  2984     020F                     	;# 
  2985     0210                     	;# 
  2986     0210                     	;# 
  2987     0211                     	;# 
  2988     0211                     	;# 
  2989     0212                     	;# 
  2990     0213                     	;# 
  2991     0214                     	;# 
  2992     0214                     	;# 
  2993     0215                     	;# 
  2994     0215                     	;# 
  2995     0216                     	;# 
  2996     0216                     	;# 
  2997     0217                     	;# 
  2998     0217                     	;# 
  2999     0218                     	;# 
  3000     0219                     	;# 
  3001     021A                     	;# 
  3002     021A                     	;# 
  3003     021B                     	;# 
  3004     021B                     	;# 
  3005     021C                     	;# 
  3006     021C                     	;# 
  3007     021D                     	;# 
  3008     021D                     	;# 
  3009     021E                     	;# 
  3010     021F                     	;# 
  3011     028C                     	;# 
  3012     028C                     	;# 
  3013     028D                     	;# 
  3014     028D                     	;# 
  3015     028E                     	;# 
  3016     028F                     	;# 
  3017     0290                     	;# 
  3018     0291                     	;# 
  3019     0292                     	;# 
  3020     0292                     	;# 
  3021     0293                     	;# 
  3022     0293                     	;# 
  3023     0294                     	;# 
  3024     0295                     	;# 
  3025     0296                     	;# 
  3026     0297                     	;# 
  3027     0298                     	;# 
  3028     0298                     	;# 
  3029     0299                     	;# 
  3030     0299                     	;# 
  3031     029A                     	;# 
  3032     029B                     	;# 
  3033     029C                     	;# 
  3034     029D                     	;# 
  3035     029F                     	;# 
  3036     030C                     	;# 
  3037     030C                     	;# 
  3038     030D                     	;# 
  3039     030E                     	;# 
  3040     030F                     	;# 
  3041     0310                     	;# 
  3042     0310                     	;# 
  3043     0311                     	;# 
  3044     0312                     	;# 
  3045     0313                     	;# 
  3046     0314                     	;# 
  3047     0314                     	;# 
  3048     0315                     	;# 
  3049     0316                     	;# 
  3050     0317                     	;# 
  3051     0318                     	;# 
  3052     0318                     	;# 
  3053     0319                     	;# 
  3054     031A                     	;# 
  3055     031B                     	;# 
  3056     031C                     	;# 
  3057     031C                     	;# 
  3058     031D                     	;# 
  3059     031E                     	;# 
  3060     031F                     	;# 
  3061     038C                     	;# 
  3062     038C                     	;# 
  3063     038D                     	;# 
  3064     038E                     	;# 
  3065     0390                     	;# 
  3066     0390                     	;# 
  3067     0391                     	;# 
  3068     0392                     	;# 
  3069     048C                     	;# 
  3070     048C                     	;# 
  3071     048D                     	;# 
  3072     048E                     	;# 
  3073     048F                     	;# 
  3074     048F                     	;# 
  3075     0490                     	;# 
  3076     0491                     	;# 
  3077     0492                     	;# 
  3078     0492                     	;# 
  3079     0493                     	;# 
  3080     0494                     	;# 
  3081     0495                     	;# 
  3082     0495                     	;# 
  3083     0496                     	;# 
  3084     0497                     	;# 
  3085     0498                     	;# 
  3086     0499                     	;# 
  3087     049A                     	;# 
  3088     049B                     	;# 
  3089     049C                     	;# 
  3090     049D                     	;# 
  3091     050C                     	;# 
  3092     050C                     	;# 
  3093     050D                     	;# 
  3094     050E                     	;# 
  3095     050F                     	;# 
  3096     050F                     	;# 
  3097     0510                     	;# 
  3098     0511                     	;# 
  3099     0512                     	;# 
  3100     0512                     	;# 
  3101     0513                     	;# 
  3102     0514                     	;# 
  3103     0515                     	;# 
  3104     0515                     	;# 
  3105     0516                     	;# 
  3106     0517                     	;# 
  3107     0518                     	;# 
  3108     0519                     	;# 
  3109     051A                     	;# 
  3110     051B                     	;# 
  3111     051C                     	;# 
  3112     051D                     	;# 
  3113     058C                     	;# 
  3114     058C                     	;# 
  3115     058D                     	;# 
  3116     058E                     	;# 
  3117     058F                     	;# 
  3118     058F                     	;# 
  3119     0590                     	;# 
  3120     0591                     	;# 
  3121     0592                     	;# 
  3122     0593                     	;# 
  3123     059C                     	;# 
  3124     059C                     	;# 
  3125     059D                     	;# 
  3126     059D                     	;# 
  3127     059E                     	;# 
  3128     059F                     	;# 
  3129     060C                     	;# 
  3130     060C                     	;# 
  3131     060D                     	;# 
  3132     060D                     	;# 
  3133     060E                     	;# 
  3134     060F                     	;# 
  3135     0610                     	;# 
  3136     0611                     	;# 
  3137     0612                     	;# 
  3138     0613                     	;# 
  3139     0614                     	;# 
  3140     0616                     	;# 
  3141     0616                     	;# 
  3142     0617                     	;# 
  3143     0617                     	;# 
  3144     0618                     	;# 
  3145     0619                     	;# 
  3146     061A                     	;# 
  3147     061B                     	;# 
  3148     061C                     	;# 
  3149     061D                     	;# 
  3150     061E                     	;# 
  3151     068C                     	;# 
  3152     068D                     	;# 
  3153     068E                     	;# 
  3154     068F                     	;# 
  3155     0690                     	;# 
  3156     0691                     	;# 
  3157     0692                     	;# 
  3158     0693                     	;# 
  3159     0694                     	;# 
  3160     070C                     	;# 
  3161     070D                     	;# 
  3162     070E                     	;# 
  3163     070F                     	;# 
  3164     0710                     	;# 
  3165     0711                     	;# 
  3166     0712                     	;# 
  3167     0713                     	;# 
  3168     0714                     	;# 
  3169     0716                     	;# 
  3170     0717                     	;# 
  3171     0718                     	;# 
  3172     0719                     	;# 
  3173     071A                     	;# 
  3174     071B                     	;# 
  3175     071C                     	;# 
  3176     071D                     	;# 
  3177     071E                     	;# 
  3178     0796                     	;# 
  3179     0797                     	;# 
  3180     0798                     	;# 
  3181     0799                     	;# 
  3182     079A                     	;# 
  3183     079B                     	;# 
  3184     079C                     	;# 
  3185     079D                     	;# 
  3186     080C                     	;# 
  3187     080D                     	;# 
  3188     080E                     	;# 
  3189     080F                     	;# 
  3190     0810                     	;# 
  3191     0811                     	;# 
  3192     0813                     	;# 
  3193     0814                     	;# 
  3194     081A                     	;# 
  3195     081A                     	;# 
  3196     081B                     	;# 
  3197     081C                     	;# 
  3198     081C                     	;# 
  3199     081D                     	;# 
  3200     081E                     	;# 
  3201     081F                     	;# 
  3202     088C                     	;# 
  3203     088D                     	;# 
  3204     088E                     	;# 
  3205     088F                     	;# 
  3206     0890                     	;# 
  3207     0891                     	;# 
  3208     0892                     	;# 
  3209     0893                     	;# 
  3210     0895                     	;# 
  3211     0896                     	;# 
  3212     0897                     	;# 
  3213     0898                     	;# 
  3214     0899                     	;# 
  3215     089A                     	;# 
  3216     089B                     	;# 
  3217     090C                     	;# 
  3218     090E                     	;# 
  3219     090F                     	;# 
  3220     091F                     	;# 
  3221     098F                     	;# 
  3222     098F                     	;# 
  3223     0990                     	;# 
  3224     0991                     	;# 
  3225     0992                     	;# 
  3226     0993                     	;# 
  3227     0994                     	;# 
  3228     0995                     	;# 
  3229     0996                     	;# 
  3230     0997                     	;# 
  3231     0A19                     	;# 
  3232     0A19                     	;# 
  3233     0A1A                     	;# 
  3234     0A1A                     	;# 
  3235     0A1B                     	;# 
  3236     0A1B                     	;# 
  3237     0A1B                     	;# 
  3238     0A1C                     	;# 
  3239     0A1C                     	;# 
  3240     0A1D                     	;# 
  3241     0A1D                     	;# 
  3242     0A1E                     	;# 
  3243     0A1E                     	;# 
  3244     0A1F                     	;# 
  3245     0A1F                     	;# 
  3246     0A1F                     	;# 
  3247     1E0F                     	;# 
  3248     1E10                     	;# 
  3249     1E11                     	;# 
  3250     1E12                     	;# 
  3251     1E13                     	;# 
  3252     1E14                     	;# 
  3253     1E15                     	;# 
  3254     1E16                     	;# 
  3255     1E17                     	;# 
  3256     1E18                     	;# 
  3257     1E19                     	;# 
  3258     1E1A                     	;# 
  3259     1E1B                     	;# 
  3260     1E1C                     	;# 
  3261     1E1D                     	;# 
  3262     1E1E                     	;# 
  3263     1E1F                     	;# 
  3264     1E20                     	;# 
  3265     1E21                     	;# 
  3266     1E22                     	;# 
  3267     1E23                     	;# 
  3268     1E24                     	;# 
  3269     1E25                     	;# 
  3270     1E26                     	;# 
  3271     1E27                     	;# 
  3272     1E28                     	;# 
  3273     1E29                     	;# 
  3274     1E2A                     	;# 
  3275     1E2B                     	;# 
  3276     1E2C                     	;# 
  3277     1E2D                     	;# 
  3278     1E2E                     	;# 
  3279     1E2F                     	;# 
  3280     1E30                     	;# 
  3281     1E31                     	;# 
  3282     1E32                     	;# 
  3283     1E33                     	;# 
  3284     1E34                     	;# 
  3285     1E35                     	;# 
  3286     1E36                     	;# 
  3287     1E37                     	;# 
  3288     1E8F                     	;# 
  3289     1E90                     	;# 
  3290     1E91                     	;# 
  3291     1E92                     	;# 
  3292     1E93                     	;# 
  3293     1E94                     	;# 
  3294     1E95                     	;# 
  3295     1E96                     	;# 
  3296     1E97                     	;# 
  3297     1E9C                     	;# 
  3298     1E9D                     	;# 
  3299     1E9E                     	;# 
  3300     1EA1                     	;# 
  3301     1EA2                     	;# 
  3302     1EA3                     	;# 
  3303     1EA4                     	;# 
  3304     1EA5                     	;# 
  3305     1EA9                     	;# 
  3306     1EAA                     	;# 
  3307     1EAB                     	;# 
  3308     1EAC                     	;# 
  3309     1EB1                     	;# 
  3310     1EB2                     	;# 
  3311     1EB3                     	;# 
  3312     1EB8                     	;# 
  3313     1EB9                     	;# 
  3314     1EBA                     	;# 
  3315     1EBB                     	;# 
  3316     1EBC                     	;# 
  3317     1EBD                     	;# 
  3318     1EBE                     	;# 
  3319     1EC3                     	;# 
  3320     1EC5                     	;# 
  3321     1EC6                     	;# 
  3322     1EC7                     	;# 
  3323     1EC8                     	;# 
  3324     1EC9                     	;# 
  3325     1ECA                     	;# 
  3326     1ECB                     	;# 
  3327     1ECC                     	;# 
  3328     1ECD                     	;# 
  3329     1ECE                     	;# 
  3330     1F10                     	;# 
  3331     1F11                     	;# 
  3332     1F12                     	;# 
  3333     1F13                     	;# 
  3334     1F14                     	;# 
  3335     1F15                     	;# 
  3336     1F16                     	;# 
  3337     1F17                     	;# 
  3338     1F18                     	;# 
  3339     1F19                     	;# 
  3340     1F1A                     	;# 
  3341     1F1B                     	;# 
  3342     1F1C                     	;# 
  3343     1F1D                     	;# 
  3344     1F1E                     	;# 
  3345     1F1F                     	;# 
  3346     1F20                     	;# 
  3347     1F21                     	;# 
  3348     1F22                     	;# 
  3349     1F23                     	;# 
  3350     1F24                     	;# 
  3351     1F25                     	;# 
  3352     1F26                     	;# 
  3353     1F27                     	;# 
  3354     1F38                     	;# 
  3355     1F39                     	;# 
  3356     1F3A                     	;# 
  3357     1F3B                     	;# 
  3358     1F3C                     	;# 
  3359     1F3D                     	;# 
  3360     1F3E                     	;# 
  3361     1F3F                     	;# 
  3362     1F43                     	;# 
  3363     1F44                     	;# 
  3364     1F45                     	;# 
  3365     1F46                     	;# 
  3366     1F47                     	;# 
  3367     1F48                     	;# 
  3368     1F49                     	;# 
  3369     1F4A                     	;# 
  3370     1F4E                     	;# 
  3371     1F4F                     	;# 
  3372     1F50                     	;# 
  3373     1F51                     	;# 
  3374     1F52                     	;# 
  3375     1F53                     	;# 
  3376     1F54                     	;# 
  3377     1F55                     	;# 
  3378     1F65                     	;# 
  3379     1F66                     	;# 
  3380     1F67                     	;# 
  3381     1F68                     	;# 
  3382     1F69                     	;# 
  3383     1F6A                     	;# 
  3384     1F6B                     	;# 
  3385     1FE4                     	;# 
  3386     1FE5                     	;# 
  3387     1FE6                     	;# 
  3388     1FE7                     	;# 
  3389     1FE8                     	;# 
  3390     1FE8                     	;# 
  3391     1FE9                     	;# 
  3392     1FEA                     	;# 
  3393     1FEB                     	;# 
  3394     1FED                     	;# 
  3395     1FEE                     	;# 
  3396     1FEF                     	;# 
  3397     0000                     	;# 
  3398     0001                     	;# 
  3399     0002                     	;# 
  3400     0003                     	;# 
  3401     0004                     	;# 
  3402     0005                     	;# 
  3403     0006                     	;# 
  3404     0007                     	;# 
  3405     0008                     	;# 
  3406     0009                     	;# 
  3407     000A                     	;# 
  3408     000B                     	;# 
  3409     000C                     	;# 
  3410     000D                     	;# 
  3411     000E                     	;# 
  3412     0010                     	;# 
  3413     0012                     	;# 
  3414     0013                     	;# 
  3415     0014                     	;# 
  3416     0016                     	;# 
  3417     0018                     	;# 
  3418     0019                     	;# 
  3419     001A                     	;# 
  3420     001C                     	;# 
  3421     008C                     	;# 
  3422     008C                     	;# 
  3423     008D                     	;# 
  3424     008E                     	;# 
  3425     008E                     	;# 
  3426     008F                     	;# 
  3427     0090                     	;# 
  3428     0090                     	;# 
  3429     0091                     	;# 
  3430     0092                     	;# 
  3431     0092                     	;# 
  3432     0093                     	;# 
  3433     0094                     	;# 
  3434     0094                     	;# 
  3435     0095                     	;# 
  3436     0096                     	;# 
  3437     0096                     	;# 
  3438     0097                     	;# 
  3439     0098                     	;# 
  3440     0099                     	;# 
  3441     009A                     	;# 
  3442     009B                     	;# 
  3443     009B                     	;# 
  3444     009C                     	;# 
  3445     009D                     	;# 
  3446     009D                     	;# 
  3447     009E                     	;# 
  3448     009F                     	;# 
  3449     010C                     	;# 
  3450     010C                     	;# 
  3451     010D                     	;# 
  3452     010E                     	;# 
  3453     010F                     	;# 
  3454     010F                     	;# 
  3455     0110                     	;# 
  3456     0111                     	;# 
  3457     0112                     	;# 
  3458     0113                     	;# 
  3459     0114                     	;# 
  3460     0115                     	;# 
  3461     0116                     	;# 
  3462     0117                     	;# 
  3463     0118                     	;# 
  3464     0119                     	;# 
  3465     0119                     	;# 
  3466     0119                     	;# 
  3467     011A                     	;# 
  3468     011A                     	;# 
  3469     011A                     	;# 
  3470     011B                     	;# 
  3471     011B                     	;# 
  3472     011B                     	;# 
  3473     011B                     	;# 
  3474     011B                     	;# 
  3475     011C                     	;# 
  3476     011C                     	;# 
  3477     011C                     	;# 
  3478     011D                     	;# 
  3479     011D                     	;# 
  3480     011D                     	;# 
  3481     011E                     	;# 
  3482     011E                     	;# 
  3483     011E                     	;# 
  3484     011F                     	;# 
  3485     011F                     	;# 
  3486     011F                     	;# 
  3487     011F                     	;# 
  3488     011F                     	;# 
  3489     018C                     	;# 
  3490     018D                     	;# 
  3491     018E                     	;# 
  3492     018F                     	;# 
  3493     0190                     	;# 
  3494     0191                     	;# 
  3495     0192                     	;# 
  3496     0196                     	;# 
  3497     0197                     	;# 
  3498     0198                     	;# 
  3499     0199                     	;# 
  3500     019A                     	;# 
  3501     019B                     	;# 
  3502     019C                     	;# 
  3503     020C                     	;# 
  3504     020D                     	;# 
  3505     020E                     	;# 
  3506     020E                     	;# 
  3507     020F                     	;# 
  3508     020F                     	;# 
  3509     0210                     	;# 
  3510     0210                     	;# 
  3511     0211                     	;# 
  3512     0211                     	;# 
  3513     0212                     	;# 
  3514     0213                     	;# 
  3515     0214                     	;# 
  3516     0214                     	;# 
  3517     0215                     	;# 
  3518     0215                     	;# 
  3519     0216                     	;# 
  3520     0216                     	;# 
  3521     0217                     	;# 
  3522     0217                     	;# 
  3523     0218                     	;# 
  3524     0219                     	;# 
  3525     021A                     	;# 
  3526     021A                     	;# 
  3527     021B                     	;# 
  3528     021B                     	;# 
  3529     021C                     	;# 
  3530     021C                     	;# 
  3531     021D                     	;# 
  3532     021D                     	;# 
  3533     021E                     	;# 
  3534     021F                     	;# 
  3535     028C                     	;# 
  3536     028C                     	;# 
  3537     028D                     	;# 
  3538     028D                     	;# 
  3539     028E                     	;# 
  3540     028F                     	;# 
  3541     0290                     	;# 
  3542     0291                     	;# 
  3543     0292                     	;# 
  3544     0292                     	;# 
  3545     0293                     	;# 
  3546     0293                     	;# 
  3547     0294                     	;# 
  3548     0295                     	;# 
  3549     0296                     	;# 
  3550     0297                     	;# 
  3551     0298                     	;# 
  3552     0298                     	;# 
  3553     0299                     	;# 
  3554     0299                     	;# 
  3555     029A                     	;# 
  3556     029B                     	;# 
  3557     029C                     	;# 
  3558     029D                     	;# 
  3559     029F                     	;# 
  3560     030C                     	;# 
  3561     030C                     	;# 
  3562     030D                     	;# 
  3563     030E                     	;# 
  3564     030F                     	;# 
  3565     0310                     	;# 
  3566     0310                     	;# 
  3567     0311                     	;# 
  3568     0312                     	;# 
  3569     0313                     	;# 
  3570     0314                     	;# 
  3571     0314                     	;# 
  3572     0315                     	;# 
  3573     0316                     	;# 
  3574     0317                     	;# 
  3575     0318                     	;# 
  3576     0318                     	;# 
  3577     0319                     	;# 
  3578     031A                     	;# 
  3579     031B                     	;# 
  3580     031C                     	;# 
  3581     031C                     	;# 
  3582     031D                     	;# 
  3583     031E                     	;# 
  3584     031F                     	;# 
  3585     038C                     	;# 
  3586     038C                     	;# 
  3587     038D                     	;# 
  3588     038E                     	;# 
  3589     0390                     	;# 
  3590     0390                     	;# 
  3591     0391                     	;# 
  3592     0392                     	;# 
  3593     048C                     	;# 
  3594     048C                     	;# 
  3595     048D                     	;# 
  3596     048E                     	;# 
  3597     048F                     	;# 
  3598     048F                     	;# 
  3599     0490                     	;# 
  3600     0491                     	;# 
  3601     0492                     	;# 
  3602     0492                     	;# 
  3603     0493                     	;# 
  3604     0494                     	;# 
  3605     0495                     	;# 
  3606     0495                     	;# 
  3607     0496                     	;# 
  3608     0497                     	;# 
  3609     0498                     	;# 
  3610     0499                     	;# 
  3611     049A                     	;# 
  3612     049B                     	;# 
  3613     049C                     	;# 
  3614     049D                     	;# 
  3615     050C                     	;# 
  3616     050C                     	;# 
  3617     050D                     	;# 
  3618     050E                     	;# 
  3619     050F                     	;# 
  3620     050F                     	;# 
  3621     0510                     	;# 
  3622     0511                     	;# 
  3623     0512                     	;# 
  3624     0512                     	;# 
  3625     0513                     	;# 
  3626     0514                     	;# 
  3627     0515                     	;# 
  3628     0515                     	;# 
  3629     0516                     	;# 
  3630     0517                     	;# 
  3631     0518                     	;# 
  3632     0519                     	;# 
  3633     051A                     	;# 
  3634     051B                     	;# 
  3635     051C                     	;# 
  3636     051D                     	;# 
  3637     058C                     	;# 
  3638     058C                     	;# 
  3639     058D                     	;# 
  3640     058E                     	;# 
  3641     058F                     	;# 
  3642     058F                     	;# 
  3643     0590                     	;# 
  3644     0591                     	;# 
  3645     0592                     	;# 
  3646     0593                     	;# 
  3647     059C                     	;# 
  3648     059C                     	;# 
  3649     059D                     	;# 
  3650     059D                     	;# 
  3651     059E                     	;# 
  3652     059F                     	;# 
  3653     060C                     	;# 
  3654     060C                     	;# 
  3655     060D                     	;# 
  3656     060D                     	;# 
  3657     060E                     	;# 
  3658     060F                     	;# 
  3659     0610                     	;# 
  3660     0611                     	;# 
  3661     0612                     	;# 
  3662     0613                     	;# 
  3663     0614                     	;# 
  3664     0616                     	;# 
  3665     0616                     	;# 
  3666     0617                     	;# 
  3667     0617                     	;# 
  3668     0618                     	;# 
  3669     0619                     	;# 
  3670     061A                     	;# 
  3671     061B                     	;# 
  3672     061C                     	;# 
  3673     061D                     	;# 
  3674     061E                     	;# 
  3675     068C                     	;# 
  3676     068D                     	;# 
  3677     068E                     	;# 
  3678     068F                     	;# 
  3679     0690                     	;# 
  3680     0691                     	;# 
  3681     0692                     	;# 
  3682     0693                     	;# 
  3683     0694                     	;# 
  3684     070C                     	;# 
  3685     070D                     	;# 
  3686     070E                     	;# 
  3687     070F                     	;# 
  3688     0710                     	;# 
  3689     0711                     	;# 
  3690     0712                     	;# 
  3691     0713                     	;# 
  3692     0714                     	;# 
  3693     0716                     	;# 
  3694     0717                     	;# 
  3695     0718                     	;# 
  3696     0719                     	;# 
  3697     071A                     	;# 
  3698     071B                     	;# 
  3699     071C                     	;# 
  3700     071D                     	;# 
  3701     071E                     	;# 
  3702     0796                     	;# 
  3703     0797                     	;# 
  3704     0798                     	;# 
  3705     0799                     	;# 
  3706     079A                     	;# 
  3707     079B                     	;# 
  3708     079C                     	;# 
  3709     079D                     	;# 
  3710     080C                     	;# 
  3711     080D                     	;# 
  3712     080E                     	;# 
  3713     080F                     	;# 
  3714     0810                     	;# 
  3715     0811                     	;# 
  3716     0813                     	;# 
  3717     0814                     	;# 
  3718     081A                     	;# 
  3719     081A                     	;# 
  3720     081B                     	;# 
  3721     081C                     	;# 
  3722     081C                     	;# 
  3723     081D                     	;# 
  3724     081E                     	;# 
  3725     081F                     	;# 
  3726     088C                     	;# 
  3727     088D                     	;# 
  3728     088E                     	;# 
  3729     088F                     	;# 
  3730     0890                     	;# 
  3731     0891                     	;# 
  3732     0892                     	;# 
  3733     0893                     	;# 
  3734     0895                     	;# 
  3735     0896                     	;# 
  3736     0897                     	;# 
  3737     0898                     	;# 
  3738     0899                     	;# 
  3739     089A                     	;# 
  3740     089B                     	;# 
  3741     090C                     	;# 
  3742     090E                     	;# 
  3743     090F                     	;# 
  3744     091F                     	;# 
  3745     098F                     	;# 
  3746     098F                     	;# 
  3747     0990                     	;# 
  3748     0991                     	;# 
  3749     0992                     	;# 
  3750     0993                     	;# 
  3751     0994                     	;# 
  3752     0995                     	;# 
  3753     0996                     	;# 
  3754     0997                     	;# 
  3755     0A19                     	;# 
  3756     0A19                     	;# 
  3757     0A1A                     	;# 
  3758     0A1A                     	;# 
  3759     0A1B                     	;# 
  3760     0A1B                     	;# 
  3761     0A1B                     	;# 
  3762     0A1C                     	;# 
  3763     0A1C                     	;# 
  3764     0A1D                     	;# 
  3765     0A1D                     	;# 
  3766     0A1E                     	;# 
  3767     0A1E                     	;# 
  3768     0A1F                     	;# 
  3769     0A1F                     	;# 
  3770     0A1F                     	;# 
  3771     1E0F                     	;# 
  3772     1E10                     	;# 
  3773     1E11                     	;# 
  3774     1E12                     	;# 
  3775     1E13                     	;# 
  3776     1E14                     	;# 
  3777     1E15                     	;# 
  3778     1E16                     	;# 
  3779     1E17                     	;# 
  3780     1E18                     	;# 
  3781     1E19                     	;# 
  3782     1E1A                     	;# 
  3783     1E1B                     	;# 
  3784     1E1C                     	;# 
  3785     1E1D                     	;# 
  3786     1E1E                     	;# 
  3787     1E1F                     	;# 
  3788     1E20                     	;# 
  3789     1E21                     	;# 
  3790     1E22                     	;# 
  3791     1E23                     	;# 
  3792     1E24                     	;# 
  3793     1E25                     	;# 
  3794     1E26                     	;# 
  3795     1E27                     	;# 
  3796     1E28                     	;# 
  3797     1E29                     	;# 
  3798     1E2A                     	;# 
  3799     1E2B                     	;# 
  3800     1E2C                     	;# 
  3801     1E2D                     	;# 
  3802     1E2E                     	;# 
  3803     1E2F                     	;# 
  3804     1E30                     	;# 
  3805     1E31                     	;# 
  3806     1E32                     	;# 
  3807     1E33                     	;# 
  3808     1E34                     	;# 
  3809     1E35                     	;# 
  3810     1E36                     	;# 
  3811     1E37                     	;# 
  3812     1E8F                     	;# 
  3813     1E90                     	;# 
  3814     1E91                     	;# 
  3815     1E92                     	;# 
  3816     1E93                     	;# 
  3817     1E94                     	;# 
  3818     1E95                     	;# 
  3819     1E96                     	;# 
  3820     1E97                     	;# 
  3821     1E9C                     	;# 
  3822     1E9D                     	;# 
  3823     1E9E                     	;# 
  3824     1EA1                     	;# 
  3825     1EA2                     	;# 
  3826     1EA3                     	;# 
  3827     1EA4                     	;# 
  3828     1EA5                     	;# 
  3829     1EA9                     	;# 
  3830     1EAA                     	;# 
  3831     1EAB                     	;# 
  3832     1EAC                     	;# 
  3833     1EB1                     	;# 
  3834     1EB2                     	;# 
  3835     1EB3                     	;# 
  3836     1EB8                     	;# 
  3837     1EB9                     	;# 
  3838     1EBA                     	;# 
  3839     1EBB                     	;# 
  3840     1EBC                     	;# 
  3841     1EBD                     	;# 
  3842     1EBE                     	;# 
  3843     1EC3                     	;# 
  3844     1EC5                     	;# 
  3845     1EC6                     	;# 
  3846     1EC7                     	;# 
  3847     1EC8                     	;# 
  3848     1EC9                     	;# 
  3849     1ECA                     	;# 
  3850     1ECB                     	;# 
  3851     1ECC                     	;# 
  3852     1ECD                     	;# 
  3853     1ECE                     	;# 
  3854     1F10                     	;# 
  3855     1F11                     	;# 
  3856     1F12                     	;# 
  3857     1F13                     	;# 
  3858     1F14                     	;# 
  3859     1F15                     	;# 
  3860     1F16                     	;# 
  3861     1F17                     	;# 
  3862     1F18                     	;# 
  3863     1F19                     	;# 
  3864     1F1A                     	;# 
  3865     1F1B                     	;# 
  3866     1F1C                     	;# 
  3867     1F1D                     	;# 
  3868     1F1E                     	;# 
  3869     1F1F                     	;# 
  3870     1F20                     	;# 
  3871     1F21                     	;# 
  3872     1F22                     	;# 
  3873     1F23                     	;# 
  3874     1F24                     	;# 
  3875     1F25                     	;# 
  3876     1F26                     	;# 
  3877     1F27                     	;# 
  3878     1F38                     	;# 
  3879     1F39                     	;# 
  3880     1F3A                     	;# 
  3881     1F3B                     	;# 
  3882     1F3C                     	;# 
  3883     1F3D                     	;# 
  3884     1F3E                     	;# 
  3885     1F3F                     	;# 
  3886     1F43                     	;# 
  3887     1F44                     	;# 
  3888     1F45                     	;# 
  3889     1F46                     	;# 
  3890     1F47                     	;# 
  3891     1F48                     	;# 
  3892     1F49                     	;# 
  3893     1F4A                     	;# 
  3894     1F4E                     	;# 
  3895     1F4F                     	;# 
  3896     1F50                     	;# 
  3897     1F51                     	;# 
  3898     1F52                     	;# 
  3899     1F53                     	;# 
  3900     1F54                     	;# 
  3901     1F55                     	;# 
  3902     1F65                     	;# 
  3903     1F66                     	;# 
  3904     1F67                     	;# 
  3905     1F68                     	;# 
  3906     1F69                     	;# 
  3907     1F6A                     	;# 
  3908     1F6B                     	;# 
  3909     1FE4                     	;# 
  3910     1FE5                     	;# 
  3911     1FE6                     	;# 
  3912     1FE7                     	;# 
  3913     1FE8                     	;# 
  3914     1FE8                     	;# 
  3915     1FE9                     	;# 
  3916     1FEA                     	;# 
  3917     1FEB                     	;# 
  3918     1FED                     	;# 
  3919     1FEE                     	;# 
  3920     1FEF                     	;# 
  3921     0000                     	;# 
  3922     0001                     	;# 
  3923     0002                     	;# 
  3924     0003                     	;# 
  3925     0004                     	;# 
  3926     0005                     	;# 
  3927     0006                     	;# 
  3928     0007                     	;# 
  3929     0008                     	;# 
  3930     0009                     	;# 
  3931     000A                     	;# 
  3932     000B                     	;# 
  3933     000C                     	;# 
  3934     000D                     	;# 
  3935     000E                     	;# 
  3936     0010                     	;# 
  3937     0012                     	;# 
  3938     0013                     	;# 
  3939     0014                     	;# 
  3940     0016                     	;# 
  3941     0018                     	;# 
  3942     0019                     	;# 
  3943     001A                     	;# 
  3944     001C                     	;# 
  3945     008C                     	;# 
  3946     008C                     	;# 
  3947     008D                     	;# 
  3948     008E                     	;# 
  3949     008E                     	;# 
  3950     008F                     	;# 
  3951     0090                     	;# 
  3952     0090                     	;# 
  3953     0091                     	;# 
  3954     0092                     	;# 
  3955     0092                     	;# 
  3956     0093                     	;# 
  3957     0094                     	;# 
  3958     0094                     	;# 
  3959     0095                     	;# 
  3960     0096                     	;# 
  3961     0096                     	;# 
  3962     0097                     	;# 
  3963     0098                     	;# 
  3964     0099                     	;# 
  3965     009A                     	;# 
  3966     009B                     	;# 
  3967     009B                     	;# 
  3968     009C                     	;# 
  3969     009D                     	;# 
  3970     009D                     	;# 
  3971     009E                     	;# 
  3972     009F                     	;# 
  3973     010C                     	;# 
  3974     010C                     	;# 
  3975     010D                     	;# 
  3976     010E                     	;# 
  3977     010F                     	;# 
  3978     010F                     	;# 
  3979     0110                     	;# 
  3980     0111                     	;# 
  3981     0112                     	;# 
  3982     0113                     	;# 
  3983     0114                     	;# 
  3984     0115                     	;# 
  3985     0116                     	;# 
  3986     0117                     	;# 
  3987     0118                     	;# 
  3988     0119                     	;# 
  3989     0119                     	;# 
  3990     0119                     	;# 
  3991     011A                     	;# 
  3992     011A                     	;# 
  3993     011A                     	;# 
  3994     011B                     	;# 
  3995     011B                     	;# 
  3996     011B                     	;# 
  3997     011B                     	;# 
  3998     011B                     	;# 
  3999     011C                     	;# 
  4000     011C                     	;# 
  4001     011C                     	;# 
  4002     011D                     	;# 
  4003     011D                     	;# 
  4004     011D                     	;# 
  4005     011E                     	;# 
  4006     011E                     	;# 
  4007     011E                     	;# 
  4008     011F                     	;# 
  4009     011F                     	;# 
  4010     011F                     	;# 
  4011     011F                     	;# 
  4012     011F                     	;# 
  4013     018C                     	;# 
  4014     018D                     	;# 
  4015     018E                     	;# 
  4016     018F                     	;# 
  4017     0190                     	;# 
  4018     0191                     	;# 
  4019     0192                     	;# 
  4020     0196                     	;# 
  4021     0197                     	;# 
  4022     0198                     	;# 
  4023     0199                     	;# 
  4024     019A                     	;# 
  4025     019B                     	;# 
  4026     019C                     	;# 
  4027     020C                     	;# 
  4028     020D                     	;# 
  4029     020E                     	;# 
  4030     020E                     	;# 
  4031     020F                     	;# 
  4032     020F                     	;# 
  4033     0210                     	;# 
  4034     0210                     	;# 
  4035     0211                     	;# 
  4036     0211                     	;# 
  4037     0212                     	;# 
  4038     0213                     	;# 
  4039     0214                     	;# 
  4040     0214                     	;# 
  4041     0215                     	;# 
  4042     0215                     	;# 
  4043     0216                     	;# 
  4044     0216                     	;# 
  4045     0217                     	;# 
  4046     0217                     	;# 
  4047     0218                     	;# 
  4048     0219                     	;# 
  4049     021A                     	;# 
  4050     021A                     	;# 
  4051     021B                     	;# 
  4052     021B                     	;# 
  4053     021C                     	;# 
  4054     021C                     	;# 
  4055     021D                     	;# 
  4056     021D                     	;# 
  4057     021E                     	;# 
  4058     021F                     	;# 
  4059     028C                     	;# 
  4060     028C                     	;# 
  4061     028D                     	;# 
  4062     028D                     	;# 
  4063     028E                     	;# 
  4064     028F                     	;# 
  4065     0290                     	;# 
  4066     0291                     	;# 
  4067     0292                     	;# 
  4068     0292                     	;# 
  4069     0293                     	;# 
  4070     0293                     	;# 
  4071     0294                     	;# 
  4072     0295                     	;# 
  4073     0296                     	;# 
  4074     0297                     	;# 
  4075     0298                     	;# 
  4076     0298                     	;# 
  4077     0299                     	;# 
  4078     0299                     	;# 
  4079     029A                     	;# 
  4080     029B                     	;# 
  4081     029C                     	;# 
  4082     029D                     	;# 
  4083     029F                     	;# 
  4084     030C                     	;# 
  4085     030C                     	;# 
  4086     030D                     	;# 
  4087     030E                     	;# 
  4088     030F                     	;# 
  4089     0310                     	;# 
  4090     0310                     	;# 
  4091     0311                     	;# 
  4092     0312                     	;# 
  4093     0313                     	;# 
  4094     0314                     	;# 
  4095     0314                     	;# 
  4096     0315                     	;# 
  4097     0316                     	;# 
  4098     0317                     	;# 
  4099     0318                     	;# 
  4100     0318                     	;# 
  4101     0319                     	;# 
  4102     031A                     	;# 
  4103     031B                     	;# 
  4104     031C                     	;# 
  4105     031C                     	;# 
  4106     031D                     	;# 
  4107     031E                     	;# 
  4108     031F                     	;# 
  4109     038C                     	;# 
  4110     038C                     	;# 
  4111     038D                     	;# 
  4112     038E                     	;# 
  4113     0390                     	;# 
  4114     0390                     	;# 
  4115     0391                     	;# 
  4116     0392                     	;# 
  4117     048C                     	;# 
  4118     048C                     	;# 
  4119     048D                     	;# 
  4120     048E                     	;# 
  4121     048F                     	;# 
  4122     048F                     	;# 
  4123     0490                     	;# 
  4124     0491                     	;# 
  4125     0492                     	;# 
  4126     0492                     	;# 
  4127     0493                     	;# 
  4128     0494                     	;# 
  4129     0495                     	;# 
  4130     0495                     	;# 
  4131     0496                     	;# 
  4132     0497                     	;# 
  4133     0498                     	;# 
  4134     0499                     	;# 
  4135     049A                     	;# 
  4136     049B                     	;# 
  4137     049C                     	;# 
  4138     049D                     	;# 
  4139     050C                     	;# 
  4140     050C                     	;# 
  4141     050D                     	;# 
  4142     050E                     	;# 
  4143     050F                     	;# 
  4144     050F                     	;# 
  4145     0510                     	;# 
  4146     0511                     	;# 
  4147     0512                     	;# 
  4148     0512                     	;# 
  4149     0513                     	;# 
  4150     0514                     	;# 
  4151     0515                     	;# 
  4152     0515                     	;# 
  4153     0516                     	;# 
  4154     0517                     	;# 
  4155     0518                     	;# 
  4156     0519                     	;# 
  4157     051A                     	;# 
  4158     051B                     	;# 
  4159     051C                     	;# 
  4160     051D                     	;# 
  4161     058C                     	;# 
  4162     058C                     	;# 
  4163     058D                     	;# 
  4164     058E                     	;# 
  4165     058F                     	;# 
  4166     058F                     	;# 
  4167     0590                     	;# 
  4168     0591                     	;# 
  4169     0592                     	;# 
  4170     0593                     	;# 
  4171     059C                     	;# 
  4172     059C                     	;# 
  4173     059D                     	;# 
  4174     059D                     	;# 
  4175     059E                     	;# 
  4176     059F                     	;# 
  4177     060C                     	;# 
  4178     060C                     	;# 
  4179     060D                     	;# 
  4180     060D                     	;# 
  4181     060E                     	;# 
  4182     060F                     	;# 
  4183     0610                     	;# 
  4184     0611                     	;# 
  4185     0612                     	;# 
  4186     0613                     	;# 
  4187     0614                     	;# 
  4188     0616                     	;# 
  4189     0616                     	;# 
  4190     0617                     	;# 
  4191     0617                     	;# 
  4192     0618                     	;# 
  4193     0619                     	;# 
  4194     061A                     	;# 
  4195     061B                     	;# 
  4196     061C                     	;# 
  4197     061D                     	;# 
  4198     061E                     	;# 
  4199     068C                     	;# 
  4200     068D                     	;# 
  4201     068E                     	;# 
  4202     068F                     	;# 
  4203     0690                     	;# 
  4204     0691                     	;# 
  4205     0692                     	;# 
  4206     0693                     	;# 
  4207     0694                     	;# 
  4208     070C                     	;# 
  4209     070D                     	;# 
  4210     070E                     	;# 
  4211     070F                     	;# 
  4212     0710                     	;# 
  4213     0711                     	;# 
  4214     0712                     	;# 
  4215     0713                     	;# 
  4216     0714                     	;# 
  4217     0716                     	;# 
  4218     0717                     	;# 
  4219     0718                     	;# 
  4220     0719                     	;# 
  4221     071A                     	;# 
  4222     071B                     	;# 
  4223     071C                     	;# 
  4224     071D                     	;# 
  4225     071E                     	;# 
  4226     0796                     	;# 
  4227     0797                     	;# 
  4228     0798                     	;# 
  4229     0799                     	;# 
  4230     079A                     	;# 
  4231     079B                     	;# 
  4232     079C                     	;# 
  4233     079D                     	;# 
  4234     080C                     	;# 
  4235     080D                     	;# 
  4236     080E                     	;# 
  4237     080F                     	;# 
  4238     0810                     	;# 
  4239     0811                     	;# 
  4240     0813                     	;# 
  4241     0814                     	;# 
  4242     081A                     	;# 
  4243     081A                     	;# 
  4244     081B                     	;# 
  4245     081C                     	;# 
  4246     081C                     	;# 
  4247     081D                     	;# 
  4248     081E                     	;# 
  4249     081F                     	;# 
  4250     088C                     	;# 
  4251     088D                     	;# 
  4252     088E                     	;# 
  4253     088F                     	;# 
  4254     0890                     	;# 
  4255     0891                     	;# 
  4256     0892                     	;# 
  4257     0893                     	;# 
  4258     0895                     	;# 
  4259     0896                     	;# 
  4260     0897                     	;# 
  4261     0898                     	;# 
  4262     0899                     	;# 
  4263     089A                     	;# 
  4264     089B                     	;# 
  4265     090C                     	;# 
  4266     090E                     	;# 
  4267     090F                     	;# 
  4268     091F                     	;# 
  4269     098F                     	;# 
  4270     098F                     	;# 
  4271     0990                     	;# 
  4272     0991                     	;# 
  4273     0992                     	;# 
  4274     0993                     	;# 
  4275     0994                     	;# 
  4276     0995                     	;# 
  4277     0996                     	;# 
  4278     0997                     	;# 
  4279     0A19                     	;# 
  4280     0A19                     	;# 
  4281     0A1A                     	;# 
  4282     0A1A                     	;# 
  4283     0A1B                     	;# 
  4284     0A1B                     	;# 
  4285     0A1B                     	;# 
  4286     0A1C                     	;# 
  4287     0A1C                     	;# 
  4288     0A1D                     	;# 
  4289     0A1D                     	;# 
  4290     0A1E                     	;# 
  4291     0A1E                     	;# 
  4292     0A1F                     	;# 
  4293     0A1F                     	;# 
  4294     0A1F                     	;# 
  4295     1E0F                     	;# 
  4296     1E10                     	;# 
  4297     1E11                     	;# 
  4298     1E12                     	;# 
  4299     1E13                     	;# 
  4300     1E14                     	;# 
  4301     1E15                     	;# 
  4302     1E16                     	;# 
  4303     1E17                     	;# 
  4304     1E18                     	;# 
  4305     1E19                     	;# 
  4306     1E1A                     	;# 
  4307     1E1B                     	;# 
  4308     1E1C                     	;# 
  4309     1E1D                     	;# 
  4310     1E1E                     	;# 
  4311     1E1F                     	;# 
  4312     1E20                     	;# 
  4313     1E21                     	;# 
  4314     1E22                     	;# 
  4315     1E23                     	;# 
  4316     1E24                     	;# 
  4317     1E25                     	;# 
  4318     1E26                     	;# 
  4319     1E27                     	;# 
  4320     1E28                     	;# 
  4321     1E29                     	;# 
  4322     1E2A                     	;# 
  4323     1E2B                     	;# 
  4324     1E2C                     	;# 
  4325     1E2D                     	;# 
  4326     1E2E                     	;# 
  4327     1E2F                     	;# 
  4328     1E30                     	;# 
  4329     1E31                     	;# 
  4330     1E32                     	;# 
  4331     1E33                     	;# 
  4332     1E34                     	;# 
  4333     1E35                     	;# 
  4334     1E36                     	;# 
  4335     1E37                     	;# 
  4336     1E8F                     	;# 
  4337     1E90                     	;# 
  4338     1E91                     	;# 
  4339     1E92                     	;# 
  4340     1E93                     	;# 
  4341     1E94                     	;# 
  4342     1E95                     	;# 
  4343     1E96                     	;# 
  4344     1E97                     	;# 
  4345     1E9C                     	;# 
  4346     1E9D                     	;# 
  4347     1E9E                     	;# 
  4348     1EA1                     	;# 
  4349     1EA2                     	;# 
  4350     1EA3                     	;# 
  4351     1EA4                     	;# 
  4352     1EA5                     	;# 
  4353     1EA9                     	;# 
  4354     1EAA                     	;# 
  4355     1EAB                     	;# 
  4356     1EAC                     	;# 
  4357     1EB1                     	;# 
  4358     1EB2                     	;# 
  4359     1EB3                     	;# 
  4360     1EB8                     	;# 
  4361     1EB9                     	;# 
  4362     1EBA                     	;# 
  4363     1EBB                     	;# 
  4364     1EBC                     	;# 
  4365     1EBD                     	;# 
  4366     1EBE                     	;# 
  4367     1EC3                     	;# 
  4368     1EC5                     	;# 
  4369     1EC6                     	;# 
  4370     1EC7                     	;# 
  4371     1EC8                     	;# 
  4372     1EC9                     	;# 
  4373     1ECA                     	;# 
  4374     1ECB                     	;# 
  4375     1ECC                     	;# 
  4376     1ECD                     	;# 
  4377     1ECE                     	;# 
  4378     1F10                     	;# 
  4379     1F11                     	;# 
  4380     1F12                     	;# 
  4381     1F13                     	;# 
  4382     1F14                     	;# 
  4383     1F15                     	;# 
  4384     1F16                     	;# 
  4385     1F17                     	;# 
  4386     1F18                     	;# 
  4387     1F19                     	;# 
  4388     1F1A                     	;# 
  4389     1F1B                     	;# 
  4390     1F1C                     	;# 
  4391     1F1D                     	;# 
  4392     1F1E                     	;# 
  4393     1F1F                     	;# 
  4394     1F20                     	;# 
  4395     1F21                     	;# 
  4396     1F22                     	;# 
  4397     1F23                     	;# 
  4398     1F24                     	;# 
  4399     1F25                     	;# 
  4400     1F26                     	;# 
  4401     1F27                     	;# 
  4402     1F38                     	;# 
  4403     1F39                     	;# 
  4404     1F3A                     	;# 
  4405     1F3B                     	;# 
  4406     1F3C                     	;# 
  4407     1F3D                     	;# 
  4408     1F3E                     	;# 
  4409     1F3F                     	;# 
  4410     1F43                     	;# 
  4411     1F44                     	;# 
  4412     1F45                     	;# 
  4413     1F46                     	;# 
  4414     1F47                     	;# 
  4415     1F48                     	;# 
  4416     1F49                     	;# 
  4417     1F4A                     	;# 
  4418     1F4E                     	;# 
  4419     1F4F                     	;# 
  4420     1F50                     	;# 
  4421     1F51                     	;# 
  4422     1F52                     	;# 
  4423     1F53                     	;# 
  4424     1F54                     	;# 
  4425     1F55                     	;# 
  4426     1F65                     	;# 
  4427     1F66                     	;# 
  4428     1F67                     	;# 
  4429     1F68                     	;# 
  4430     1F69                     	;# 
  4431     1F6A                     	;# 
  4432     1F6B                     	;# 
  4433     1FE4                     	;# 
  4434     1FE5                     	;# 
  4435     1FE6                     	;# 
  4436     1FE7                     	;# 
  4437     1FE8                     	;# 
  4438     1FE8                     	;# 
  4439     1FE9                     	;# 
  4440     1FEA                     	;# 
  4441     1FEB                     	;# 
  4442     1FED                     	;# 
  4443     1FEE                     	;# 
  4444     1FEF                     	;# 
  4445     0000                     	;# 
  4446     0001                     	;# 
  4447     0002                     	;# 
  4448     0003                     	;# 
  4449     0004                     	;# 
  4450     0005                     	;# 
  4451     0006                     	;# 
  4452     0007                     	;# 
  4453     0008                     	;# 
  4454     0009                     	;# 
  4455     000A                     	;# 
  4456     000B                     	;# 
  4457     000C                     	;# 
  4458     000D                     	;# 
  4459     000E                     	;# 
  4460     0010                     	;# 
  4461     0012                     	;# 
  4462     0013                     	;# 
  4463     0014                     	;# 
  4464     0016                     	;# 
  4465     0018                     	;# 
  4466     0019                     	;# 
  4467     001A                     	;# 
  4468     001C                     	;# 
  4469     008C                     	;# 
  4470     008C                     	;# 
  4471     008D                     	;# 
  4472     008E                     	;# 
  4473     008E                     	;# 
  4474     008F                     	;# 
  4475     0090                     	;# 
  4476     0090                     	;# 
  4477     0091                     	;# 
  4478     0092                     	;# 
  4479     0092                     	;# 
  4480     0093                     	;# 
  4481     0094                     	;# 
  4482     0094                     	;# 
  4483     0095                     	;# 
  4484     0096                     	;# 
  4485     0096                     	;# 
  4486     0097                     	;# 
  4487     0098                     	;# 
  4488     0099                     	;# 
  4489     009A                     	;# 
  4490     009B                     	;# 
  4491     009B                     	;# 
  4492     009C                     	;# 
  4493     009D                     	;# 
  4494     009D                     	;# 
  4495     009E                     	;# 
  4496     009F                     	;# 
  4497     010C                     	;# 
  4498     010C                     	;# 
  4499     010D                     	;# 
  4500     010E                     	;# 
  4501     010F                     	;# 
  4502     010F                     	;# 
  4503     0110                     	;# 
  4504     0111                     	;# 
  4505     0112                     	;# 
  4506     0113                     	;# 
  4507     0114                     	;# 
  4508     0115                     	;# 
  4509     0116                     	;# 
  4510     0117                     	;# 
  4511     0118                     	;# 
  4512     0119                     	;# 
  4513     0119                     	;# 
  4514     0119                     	;# 
  4515     011A                     	;# 
  4516     011A                     	;# 
  4517     011A                     	;# 
  4518     011B                     	;# 
  4519     011B                     	;# 
  4520     011B                     	;# 
  4521     011B                     	;# 
  4522     011B                     	;# 
  4523     011C                     	;# 
  4524     011C                     	;# 
  4525     011C                     	;# 
  4526     011D                     	;# 
  4527     011D                     	;# 
  4528     011D                     	;# 
  4529     011E                     	;# 
  4530     011E                     	;# 
  4531     011E                     	;# 
  4532     011F                     	;# 
  4533     011F                     	;# 
  4534     011F                     	;# 
  4535     011F                     	;# 
  4536     011F                     	;# 
  4537     018C                     	;# 
  4538     018D                     	;# 
  4539     018E                     	;# 
  4540     018F                     	;# 
  4541     0190                     	;# 
  4542     0191                     	;# 
  4543     0192                     	;# 
  4544     0196                     	;# 
  4545     0197                     	;# 
  4546     0198                     	;# 
  4547     0199                     	;# 
  4548     019A                     	;# 
  4549     019B                     	;# 
  4550     019C                     	;# 
  4551     020C                     	;# 
  4552     020D                     	;# 
  4553     020E                     	;# 
  4554     020E                     	;# 
  4555     020F                     	;# 
  4556     020F                     	;# 
  4557     0210                     	;# 
  4558     0210                     	;# 
  4559     0211                     	;# 
  4560     0211                     	;# 
  4561     0212                     	;# 
  4562     0213                     	;# 
  4563     0214                     	;# 
  4564     0214                     	;# 
  4565     0215                     	;# 
  4566     0215                     	;# 
  4567     0216                     	;# 
  4568     0216                     	;# 
  4569     0217                     	;# 
  4570     0217                     	;# 
  4571     0218                     	;# 
  4572     0219                     	;# 
  4573     021A                     	;# 
  4574     021A                     	;# 
  4575     021B                     	;# 
  4576     021B                     	;# 
  4577     021C                     	;# 
  4578     021C                     	;# 
  4579     021D                     	;# 
  4580     021D                     	;# 
  4581     021E                     	;# 
  4582     021F                     	;# 
  4583     028C                     	;# 
  4584     028C                     	;# 
  4585     028D                     	;# 
  4586     028D                     	;# 
  4587     028E                     	;# 
  4588     028F                     	;# 
  4589     0290                     	;# 
  4590     0291                     	;# 
  4591     0292                     	;# 
  4592     0292                     	;# 
  4593     0293                     	;# 
  4594     0293                     	;# 
  4595     0294                     	;# 
  4596     0295                     	;# 
  4597     0296                     	;# 
  4598     0297                     	;# 
  4599     0298                     	;# 
  4600     0298                     	;# 
  4601     0299                     	;# 
  4602     0299                     	;# 
  4603     029A                     	;# 
  4604     029B                     	;# 
  4605     029C                     	;# 
  4606     029D                     	;# 
  4607     029F                     	;# 
  4608     030C                     	;# 
  4609     030C                     	;# 
  4610     030D                     	;# 
  4611     030E                     	;# 
  4612     030F                     	;# 
  4613     0310                     	;# 
  4614     0310                     	;# 
  4615     0311                     	;# 
  4616     0312                     	;# 
  4617     0313                     	;# 
  4618     0314                     	;# 
  4619     0314                     	;# 
  4620     0315                     	;# 
  4621     0316                     	;# 
  4622     0317                     	;# 
  4623     0318                     	;# 
  4624     0318                     	;# 
  4625     0319                     	;# 
  4626     031A                     	;# 
  4627     031B                     	;# 
  4628     031C                     	;# 
  4629     031C                     	;# 
  4630     031D                     	;# 
  4631     031E                     	;# 
  4632     031F                     	;# 
  4633     038C                     	;# 
  4634     038C                     	;# 
  4635     038D                     	;# 
  4636     038E                     	;# 
  4637     0390                     	;# 
  4638     0390                     	;# 
  4639     0391                     	;# 
  4640     0392                     	;# 
  4641     048C                     	;# 
  4642     048C                     	;# 
  4643     048D                     	;# 
  4644     048E                     	;# 
  4645     048F                     	;# 
  4646     048F                     	;# 
  4647     0490                     	;# 
  4648     0491                     	;# 
  4649     0492                     	;# 
  4650     0492                     	;# 
  4651     0493                     	;# 
  4652     0494                     	;# 
  4653     0495                     	;# 
  4654     0495                     	;# 
  4655     0496                     	;# 
  4656     0497                     	;# 
  4657     0498                     	;# 
  4658     0499                     	;# 
  4659     049A                     	;# 
  4660     049B                     	;# 
  4661     049C                     	;# 
  4662     049D                     	;# 
  4663     050C                     	;# 
  4664     050C                     	;# 
  4665     050D                     	;# 
  4666     050E                     	;# 
  4667     050F                     	;# 
  4668     050F                     	;# 
  4669     0510                     	;# 
  4670     0511                     	;# 
  4671     0512                     	;# 
  4672     0512                     	;# 
  4673     0513                     	;# 
  4674     0514                     	;# 
  4675     0515                     	;# 
  4676     0515                     	;# 
  4677     0516                     	;# 
  4678     0517                     	;# 
  4679     0518                     	;# 
  4680     0519                     	;# 
  4681     051A                     	;# 
  4682     051B                     	;# 
  4683     051C                     	;# 
  4684     051D                     	;# 
  4685     058C                     	;# 
  4686     058C                     	;# 
  4687     058D                     	;# 
  4688     058E                     	;# 
  4689     058F                     	;# 
  4690     058F                     	;# 
  4691     0590                     	;# 
  4692     0591                     	;# 
  4693     0592                     	;# 
  4694     0593                     	;# 
  4695     059C                     	;# 
  4696     059C                     	;# 
  4697     059D                     	;# 
  4698     059D                     	;# 
  4699     059E                     	;# 
  4700     059F                     	;# 
  4701     060C                     	;# 
  4702     060C                     	;# 
  4703     060D                     	;# 
  4704     060D                     	;# 
  4705     060E                     	;# 
  4706     060F                     	;# 
  4707     0610                     	;# 
  4708     0611                     	;# 
  4709     0612                     	;# 
  4710     0613                     	;# 
  4711     0614                     	;# 
  4712     0616                     	;# 
  4713     0616                     	;# 
  4714     0617                     	;# 
  4715     0617                     	;# 
  4716     0618                     	;# 
  4717     0619                     	;# 
  4718     061A                     	;# 
  4719     061B                     	;# 
  4720     061C                     	;# 
  4721     061D                     	;# 
  4722     061E                     	;# 
  4723     068C                     	;# 
  4724     068D                     	;# 
  4725     068E                     	;# 
  4726     068F                     	;# 
  4727     0690                     	;# 
  4728     0691                     	;# 
  4729     0692                     	;# 
  4730     0693                     	;# 
  4731     0694                     	;# 
  4732     070C                     	;# 
  4733     070D                     	;# 
  4734     070E                     	;# 
  4735     070F                     	;# 
  4736     0710                     	;# 
  4737     0711                     	;# 
  4738     0712                     	;# 
  4739     0713                     	;# 
  4740     0714                     	;# 
  4741     0716                     	;# 
  4742     0717                     	;# 
  4743     0718                     	;# 
  4744     0719                     	;# 
  4745     071A                     	;# 
  4746     071B                     	;# 
  4747     071C                     	;# 
  4748     071D                     	;# 
  4749     071E                     	;# 
  4750     0796                     	;# 
  4751     0797                     	;# 
  4752     0798                     	;# 
  4753     0799                     	;# 
  4754     079A                     	;# 
  4755     079B                     	;# 
  4756     079C                     	;# 
  4757     079D                     	;# 
  4758     080C                     	;# 
  4759     080D                     	;# 
  4760     080E                     	;# 
  4761     080F                     	;# 
  4762     0810                     	;# 
  4763     0811                     	;# 
  4764     0813                     	;# 
  4765     0814                     	;# 
  4766     081A                     	;# 
  4767     081A                     	;# 
  4768     081B                     	;# 
  4769     081C                     	;# 
  4770     081C                     	;# 
  4771     081D                     	;# 
  4772     081E                     	;# 
  4773     081F                     	;# 
  4774     088C                     	;# 
  4775     088D                     	;# 
  4776     088E                     	;# 
  4777     088F                     	;# 
  4778     0890                     	;# 
  4779     0891                     	;# 
  4780     0892                     	;# 
  4781     0893                     	;# 
  4782     0895                     	;# 
  4783     0896                     	;# 
  4784     0897                     	;# 
  4785     0898                     	;# 
  4786     0899                     	;# 
  4787     089A                     	;# 
  4788     089B                     	;# 
  4789     090C                     	;# 
  4790     090E                     	;# 
  4791     090F                     	;# 
  4792     091F                     	;# 
  4793     098F                     	;# 
  4794     098F                     	;# 
  4795     0990                     	;# 
  4796     0991                     	;# 
  4797     0992                     	;# 
  4798     0993                     	;# 
  4799     0994                     	;# 
  4800     0995                     	;# 
  4801     0996                     	;# 
  4802     0997                     	;# 
  4803     0A19                     	;# 
  4804     0A19                     	;# 
  4805     0A1A                     	;# 
  4806     0A1A                     	;# 
  4807     0A1B                     	;# 
  4808     0A1B                     	;# 
  4809     0A1B                     	;# 
  4810     0A1C                     	;# 
  4811     0A1C                     	;# 
  4812     0A1D                     	;# 
  4813     0A1D                     	;# 
  4814     0A1E                     	;# 
  4815     0A1E                     	;# 
  4816     0A1F                     	;# 
  4817     0A1F                     	;# 
  4818     0A1F                     	;# 
  4819     1E0F                     	;# 
  4820     1E10                     	;# 
  4821     1E11                     	;# 
  4822     1E12                     	;# 
  4823     1E13                     	;# 
  4824     1E14                     	;# 
  4825     1E15                     	;# 
  4826     1E16                     	;# 
  4827     1E17                     	;# 
  4828     1E18                     	;# 
  4829     1E19                     	;# 
  4830     1E1A                     	;# 
  4831     1E1B                     	;# 
  4832     1E1C                     	;# 
  4833     1E1D                     	;# 
  4834     1E1E                     	;# 
  4835     1E1F                     	;# 
  4836     1E20                     	;# 
  4837     1E21                     	;# 
  4838     1E22                     	;# 
  4839     1E23                     	;# 
  4840     1E24                     	;# 
  4841     1E25                     	;# 
  4842     1E26                     	;# 
  4843     1E27                     	;# 
  4844     1E28                     	;# 
  4845     1E29                     	;# 
  4846     1E2A                     	;# 
  4847     1E2B                     	;# 
  4848     1E2C                     	;# 
  4849     1E2D                     	;# 
  4850     1E2E                     	;# 
  4851     1E2F                     	;# 
  4852     1E30                     	;# 
  4853     1E31                     	;# 
  4854     1E32                     	;# 
  4855     1E33                     	;# 
  4856     1E34                     	;# 
  4857     1E35                     	;# 
  4858     1E36                     	;# 
  4859     1E37                     	;# 
  4860     1E8F                     	;# 
  4861     1E90                     	;# 
  4862     1E91                     	;# 
  4863     1E92                     	;# 
  4864     1E93                     	;# 
  4865     1E94                     	;# 
  4866     1E95                     	;# 
  4867     1E96                     	;# 
  4868     1E97                     	;# 
  4869     1E9C                     	;# 
  4870     1E9D                     	;# 
  4871     1E9E                     	;# 
  4872     1EA1                     	;# 
  4873     1EA2                     	;# 
  4874     1EA3                     	;# 
  4875     1EA4                     	;# 
  4876     1EA5                     	;# 
  4877     1EA9                     	;# 
  4878     1EAA                     	;# 
  4879     1EAB                     	;# 
  4880     1EAC                     	;# 
  4881     1EB1                     	;# 
  4882     1EB2                     	;# 
  4883     1EB3                     	;# 
  4884     1EB8                     	;# 
  4885     1EB9                     	;# 
  4886     1EBA                     	;# 
  4887     1EBB                     	;# 
  4888     1EBC                     	;# 
  4889     1EBD                     	;# 
  4890     1EBE                     	;# 
  4891     1EC3                     	;# 
  4892     1EC5                     	;# 
  4893     1EC6                     	;# 
  4894     1EC7                     	;# 
  4895     1EC8                     	;# 
  4896     1EC9                     	;# 
  4897     1ECA                     	;# 
  4898     1ECB                     	;# 
  4899     1ECC                     	;# 
  4900     1ECD                     	;# 
  4901     1ECE                     	;# 
  4902     1F10                     	;# 
  4903     1F11                     	;# 
  4904     1F12                     	;# 
  4905     1F13                     	;# 
  4906     1F14                     	;# 
  4907     1F15                     	;# 
  4908     1F16                     	;# 
  4909     1F17                     	;# 
  4910     1F18                     	;# 
  4911     1F19                     	;# 
  4912     1F1A                     	;# 
  4913     1F1B                     	;# 
  4914     1F1C                     	;# 
  4915     1F1D                     	;# 
  4916     1F1E                     	;# 
  4917     1F1F                     	;# 
  4918     1F20                     	;# 
  4919     1F21                     	;# 
  4920     1F22                     	;# 
  4921     1F23                     	;# 
  4922     1F24                     	;# 
  4923     1F25                     	;# 
  4924     1F26                     	;# 
  4925     1F27                     	;# 
  4926     1F38                     	;# 
  4927     1F39                     	;# 
  4928     1F3A                     	;# 
  4929     1F3B                     	;# 
  4930     1F3C                     	;# 
  4931     1F3D                     	;# 
  4932     1F3E                     	;# 
  4933     1F3F                     	;# 
  4934     1F43                     	;# 
  4935     1F44                     	;# 
  4936     1F45                     	;# 
  4937     1F46                     	;# 
  4938     1F47                     	;# 
  4939     1F48                     	;# 
  4940     1F49                     	;# 
  4941     1F4A                     	;# 
  4942     1F4E                     	;# 
  4943     1F4F                     	;# 
  4944     1F50                     	;# 
  4945     1F51                     	;# 
  4946     1F52                     	;# 
  4947     1F53                     	;# 
  4948     1F54                     	;# 
  4949     1F55                     	;# 
  4950     1F65                     	;# 
  4951     1F66                     	;# 
  4952     1F67                     	;# 
  4953     1F68                     	;# 
  4954     1F69                     	;# 
  4955     1F6A                     	;# 
  4956     1F6B                     	;# 
  4957     1FE4                     	;# 
  4958     1FE5                     	;# 
  4959     1FE6                     	;# 
  4960     1FE7                     	;# 
  4961     1FE8                     	;# 
  4962     1FE8                     	;# 
  4963     1FE9                     	;# 
  4964     1FEA                     	;# 
  4965     1FEB                     	;# 
  4966     1FED                     	;# 
  4967     1FEE                     	;# 
  4968     1FEF                     	;# 
  4969     0000                     	;# 
  4970     0001                     	;# 
  4971     0002                     	;# 
  4972     0003                     	;# 
  4973     0004                     	;# 
  4974     0005                     	;# 
  4975     0006                     	;# 
  4976     0007                     	;# 
  4977     0008                     	;# 
  4978     0009                     	;# 
  4979     000A                     	;# 
  4980     000B                     	;# 
  4981     000C                     	;# 
  4982     000D                     	;# 
  4983     000E                     	;# 
  4984     0010                     	;# 
  4985     0012                     	;# 
  4986     0013                     	;# 
  4987     0014                     	;# 
  4988     0016                     	;# 
  4989     0018                     	;# 
  4990     0019                     	;# 
  4991     001A                     	;# 
  4992     001C                     	;# 
  4993     008C                     	;# 
  4994     008C                     	;# 
  4995     008D                     	;# 
  4996     008E                     	;# 
  4997     008E                     	;# 
  4998     008F                     	;# 
  4999     0090                     	;# 
  5000     0090                     	;# 
  5001     0091                     	;# 
  5002     0092                     	;# 
  5003     0092                     	;# 
  5004     0093                     	;# 
  5005     0094                     	;# 
  5006     0094                     	;# 
  5007     0095                     	;# 
  5008     0096                     	;# 
  5009     0096                     	;# 
  5010     0097                     	;# 
  5011     0098                     	;# 
  5012     0099                     	;# 
  5013     009A                     	;# 
  5014     009B                     	;# 
  5015     009B                     	;# 
  5016     009C                     	;# 
  5017     009D                     	;# 
  5018     009D                     	;# 
  5019     009E                     	;# 
  5020     009F                     	;# 
  5021     010C                     	;# 
  5022     010C                     	;# 
  5023     010D                     	;# 
  5024     010E                     	;# 
  5025     010F                     	;# 
  5026     010F                     	;# 
  5027     0110                     	;# 
  5028     0111                     	;# 
  5029     0112                     	;# 
  5030     0113                     	;# 
  5031     0114                     	;# 
  5032     0115                     	;# 
  5033     0116                     	;# 
  5034     0117                     	;# 
  5035     0118                     	;# 
  5036     0119                     	;# 
  5037     0119                     	;# 
  5038     0119                     	;# 
  5039     011A                     	;# 
  5040     011A                     	;# 
  5041     011A                     	;# 
  5042     011B                     	;# 
  5043     011B                     	;# 
  5044     011B                     	;# 
  5045     011B                     	;# 
  5046     011B                     	;# 
  5047     011C                     	;# 
  5048     011C                     	;# 
  5049     011C                     	;# 
  5050     011D                     	;# 
  5051     011D                     	;# 
  5052     011D                     	;# 
  5053     011E                     	;# 
  5054     011E                     	;# 
  5055     011E                     	;# 
  5056     011F                     	;# 
  5057     011F                     	;# 
  5058     011F                     	;# 
  5059     011F                     	;# 
  5060     011F                     	;# 
  5061     018C                     	;# 
  5062     018D                     	;# 
  5063     018E                     	;# 
  5064     018F                     	;# 
  5065     0190                     	;# 
  5066     0191                     	;# 
  5067     0192                     	;# 
  5068     0196                     	;# 
  5069     0197                     	;# 
  5070     0198                     	;# 
  5071     0199                     	;# 
  5072     019A                     	;# 
  5073     019B                     	;# 
  5074     019C                     	;# 
  5075     020C                     	;# 
  5076     020D                     	;# 
  5077     020E                     	;# 
  5078     020E                     	;# 
  5079     020F                     	;# 
  5080     020F                     	;# 
  5081     0210                     	;# 
  5082     0210                     	;# 
  5083     0211                     	;# 
  5084     0211                     	;# 
  5085     0212                     	;# 
  5086     0213                     	;# 
  5087     0214                     	;# 
  5088     0214                     	;# 
  5089     0215                     	;# 
  5090     0215                     	;# 
  5091     0216                     	;# 
  5092     0216                     	;# 
  5093     0217                     	;# 
  5094     0217                     	;# 
  5095     0218                     	;# 
  5096     0219                     	;# 
  5097     021A                     	;# 
  5098     021A                     	;# 
  5099     021B                     	;# 
  5100     021B                     	;# 
  5101     021C                     	;# 
  5102     021C                     	;# 
  5103     021D                     	;# 
  5104     021D                     	;# 
  5105     021E                     	;# 
  5106     021F                     	;# 
  5107     028C                     	;# 
  5108     028C                     	;# 
  5109     028D                     	;# 
  5110     028D                     	;# 
  5111     028E                     	;# 
  5112     028F                     	;# 
  5113     0290                     	;# 
  5114     0291                     	;# 
  5115     0292                     	;# 
  5116     0292                     	;# 
  5117     0293                     	;# 
  5118     0293                     	;# 
  5119     0294                     	;# 
  5120     0295                     	;# 
  5121     0296                     	;# 
  5122     0297                     	;# 
  5123     0298                     	;# 
  5124     0298                     	;# 
  5125     0299                     	;# 
  5126     0299                     	;# 
  5127     029A                     	;# 
  5128     029B                     	;# 
  5129     029C                     	;# 
  5130     029D                     	;# 
  5131     029F                     	;# 
  5132     030C                     	;# 
  5133     030C                     	;# 
  5134     030D                     	;# 
  5135     030E                     	;# 
  5136     030F                     	;# 
  5137     0310                     	;# 
  5138     0310                     	;# 
  5139     0311                     	;# 
  5140     0312                     	;# 
  5141     0313                     	;# 
  5142     0314                     	;# 
  5143     0314                     	;# 
  5144     0315                     	;# 
  5145     0316                     	;# 
  5146     0317                     	;# 
  5147     0318                     	;# 
  5148     0318                     	;# 
  5149     0319                     	;# 
  5150     031A                     	;# 
  5151     031B                     	;# 
  5152     031C                     	;# 
  5153     031C                     	;# 
  5154     031D                     	;# 
  5155     031E                     	;# 
  5156     031F                     	;# 
  5157     038C                     	;# 
  5158     038C                     	;# 
  5159     038D                     	;# 
  5160     038E                     	;# 
  5161     0390                     	;# 
  5162     0390                     	;# 
  5163     0391                     	;# 
  5164     0392                     	;# 
  5165     048C                     	;# 
  5166     048C                     	;# 
  5167     048D                     	;# 
  5168     048E                     	;# 
  5169     048F                     	;# 
  5170     048F                     	;# 
  5171     0490                     	;# 
  5172     0491                     	;# 
  5173     0492                     	;# 
  5174     0492                     	;# 
  5175     0493                     	;# 
  5176     0494                     	;# 
  5177     0495                     	;# 
  5178     0495                     	;# 
  5179     0496                     	;# 
  5180     0497                     	;# 
  5181     0498                     	;# 
  5182     0499                     	;# 
  5183     049A                     	;# 
  5184     049B                     	;# 
  5185     049C                     	;# 
  5186     049D                     	;# 
  5187     050C                     	;# 
  5188     050C                     	;# 
  5189     050D                     	;# 
  5190     050E                     	;# 
  5191     050F                     	;# 
  5192     050F                     	;# 
  5193     0510                     	;# 
  5194     0511                     	;# 
  5195     0512                     	;# 
  5196     0512                     	;# 
  5197     0513                     	;# 
  5198     0514                     	;# 
  5199     0515                     	;# 
  5200     0515                     	;# 
  5201     0516                     	;# 
  5202     0517                     	;# 
  5203     0518                     	;# 
  5204     0519                     	;# 
  5205     051A                     	;# 
  5206     051B                     	;# 
  5207     051C                     	;# 
  5208     051D                     	;# 
  5209     058C                     	;# 
  5210     058C                     	;# 
  5211     058D                     	;# 
  5212     058E                     	;# 
  5213     058F                     	;# 
  5214     058F                     	;# 
  5215     0590                     	;# 
  5216     0591                     	;# 
  5217     0592                     	;# 
  5218     0593                     	;# 
  5219     059C                     	;# 
  5220     059C                     	;# 
  5221     059D                     	;# 
  5222     059D                     	;# 
  5223     059E                     	;# 
  5224     059F                     	;# 
  5225     060C                     	;# 
  5226     060C                     	;# 
  5227     060D                     	;# 
  5228     060D                     	;# 
  5229     060E                     	;# 
  5230     060F                     	;# 
  5231     0610                     	;# 
  5232     0611                     	;# 
  5233     0612                     	;# 
  5234     0613                     	;# 
  5235     0614                     	;# 
  5236     0616                     	;# 
  5237     0616                     	;# 
  5238     0617                     	;# 
  5239     0617                     	;# 
  5240     0618                     	;# 
  5241     0619                     	;# 
  5242     061A                     	;# 
  5243     061B                     	;# 
  5244     061C                     	;# 
  5245     061D                     	;# 
  5246     061E                     	;# 
  5247     068C                     	;# 
  5248     068D                     	;# 
  5249     068E                     	;# 
  5250     068F                     	;# 
  5251     0690                     	;# 
  5252     0691                     	;# 
  5253     0692                     	;# 
  5254     0693                     	;# 
  5255     0694                     	;# 
  5256     070C                     	;# 
  5257     070D                     	;# 
  5258     070E                     	;# 
  5259     070F                     	;# 
  5260     0710                     	;# 
  5261     0711                     	;# 
  5262     0712                     	;# 
  5263     0713                     	;# 
  5264     0714                     	;# 
  5265     0716                     	;# 
  5266     0717                     	;# 
  5267     0718                     	;# 
  5268     0719                     	;# 
  5269     071A                     	;# 
  5270     071B                     	;# 
  5271     071C                     	;# 
  5272     071D                     	;# 
  5273     071E                     	;# 
  5274     0796                     	;# 
  5275     0797                     	;# 
  5276     0798                     	;# 
  5277     0799                     	;# 
  5278     079A                     	;# 
  5279     079B                     	;# 
  5280     079C                     	;# 
  5281     079D                     	;# 
  5282     080C                     	;# 
  5283     080D                     	;# 
  5284     080E                     	;# 
  5285     080F                     	;# 
  5286     0810                     	;# 
  5287     0811                     	;# 
  5288     0813                     	;# 
  5289     0814                     	;# 
  5290     081A                     	;# 
  5291     081A                     	;# 
  5292     081B                     	;# 
  5293     081C                     	;# 
  5294     081C                     	;# 
  5295     081D                     	;# 
  5296     081E                     	;# 
  5297     081F                     	;# 
  5298     088C                     	;# 
  5299     088D                     	;# 
  5300     088E                     	;# 
  5301     088F                     	;# 
  5302     0890                     	;# 
  5303     0891                     	;# 
  5304     0892                     	;# 
  5305     0893                     	;# 
  5306     0895                     	;# 
  5307     0896                     	;# 
  5308     0897                     	;# 
  5309     0898                     	;# 
  5310     0899                     	;# 
  5311     089A                     	;# 
  5312     089B                     	;# 
  5313     090C                     	;# 
  5314     090E                     	;# 
  5315     090F                     	;# 
  5316     091F                     	;# 
  5317     098F                     	;# 
  5318     098F                     	;# 
  5319     0990                     	;# 
  5320     0991                     	;# 
  5321     0992                     	;# 
  5322     0993                     	;# 
  5323     0994                     	;# 
  5324     0995                     	;# 
  5325     0996                     	;# 
  5326     0997                     	;# 
  5327     0A19                     	;# 
  5328     0A19                     	;# 
  5329     0A1A                     	;# 
  5330     0A1A                     	;# 
  5331     0A1B                     	;# 
  5332     0A1B                     	;# 
  5333     0A1B                     	;# 
  5334     0A1C                     	;# 
  5335     0A1C                     	;# 
  5336     0A1D                     	;# 
  5337     0A1D                     	;# 
  5338     0A1E                     	;# 
  5339     0A1E                     	;# 
  5340     0A1F                     	;# 
  5341     0A1F                     	;# 
  5342     0A1F                     	;# 
  5343     1E0F                     	;# 
  5344     1E10                     	;# 
  5345     1E11                     	;# 
  5346     1E12                     	;# 
  5347     1E13                     	;# 
  5348     1E14                     	;# 
  5349     1E15                     	;# 
  5350     1E16                     	;# 
  5351     1E17                     	;# 
  5352     1E18                     	;# 
  5353     1E19                     	;# 
  5354     1E1A                     	;# 
  5355     1E1B                     	;# 
  5356     1E1C                     	;# 
  5357     1E1D                     	;# 
  5358     1E1E                     	;# 
  5359     1E1F                     	;# 
  5360     1E20                     	;# 
  5361     1E21                     	;# 
  5362     1E22                     	;# 
  5363     1E23                     	;# 
  5364     1E24                     	;# 
  5365     1E25                     	;# 
  5366     1E26                     	;# 
  5367     1E27                     	;# 
  5368     1E28                     	;# 
  5369     1E29                     	;# 
  5370     1E2A                     	;# 
  5371     1E2B                     	;# 
  5372     1E2C                     	;# 
  5373     1E2D                     	;# 
  5374     1E2E                     	;# 
  5375     1E2F                     	;# 
  5376     1E30                     	;# 
  5377     1E31                     	;# 
  5378     1E32                     	;# 
  5379     1E33                     	;# 
  5380     1E34                     	;# 
  5381     1E35                     	;# 
  5382     1E36                     	;# 
  5383     1E37                     	;# 
  5384     1E8F                     	;# 
  5385     1E90                     	;# 
  5386     1E91                     	;# 
  5387     1E92                     	;# 
  5388     1E93                     	;# 
  5389     1E94                     	;# 
  5390     1E95                     	;# 
  5391     1E96                     	;# 
  5392     1E97                     	;# 
  5393     1E9C                     	;# 
  5394     1E9D                     	;# 
  5395     1E9E                     	;# 
  5396     1EA1                     	;# 
  5397     1EA2                     	;# 
  5398     1EA3                     	;# 
  5399     1EA4                     	;# 
  5400     1EA5                     	;# 
  5401     1EA9                     	;# 
  5402     1EAA                     	;# 
  5403     1EAB                     	;# 
  5404     1EAC                     	;# 
  5405     1EB1                     	;# 
  5406     1EB2                     	;# 
  5407     1EB3                     	;# 
  5408     1EB8                     	;# 
  5409     1EB9                     	;# 
  5410     1EBA                     	;# 
  5411     1EBB                     	;# 
  5412     1EBC                     	;# 
  5413     1EBD                     	;# 
  5414     1EBE                     	;# 
  5415     1EC3                     	;# 
  5416     1EC5                     	;# 
  5417     1EC6                     	;# 
  5418     1EC7                     	;# 
  5419     1EC8                     	;# 
  5420     1EC9                     	;# 
  5421     1ECA                     	;# 
  5422     1ECB                     	;# 
  5423     1ECC                     	;# 
  5424     1ECD                     	;# 
  5425     1ECE                     	;# 
  5426     1F10                     	;# 
  5427     1F11                     	;# 
  5428     1F12                     	;# 
  5429     1F13                     	;# 
  5430     1F14                     	;# 
  5431     1F15                     	;# 
  5432     1F16                     	;# 
  5433     1F17                     	;# 
  5434     1F18                     	;# 
  5435     1F19                     	;# 
  5436     1F1A                     	;# 
  5437     1F1B                     	;# 
  5438     1F1C                     	;# 
  5439     1F1D                     	;# 
  5440     1F1E                     	;# 
  5441     1F1F                     	;# 
  5442     1F20                     	;# 
  5443     1F21                     	;# 
  5444     1F22                     	;# 
  5445     1F23                     	;# 
  5446     1F24                     	;# 
  5447     1F25                     	;# 
  5448     1F26                     	;# 
  5449     1F27                     	;# 
  5450     1F38                     	;# 
  5451     1F39                     	;# 
  5452     1F3A                     	;# 
  5453     1F3B                     	;# 
  5454     1F3C                     	;# 
  5455     1F3D                     	;# 
  5456     1F3E                     	;# 
  5457     1F3F                     	;# 
  5458     1F43                     	;# 
  5459     1F44                     	;# 
  5460     1F45                     	;# 
  5461     1F46                     	;# 
  5462     1F47                     	;# 
  5463     1F48                     	;# 
  5464     1F49                     	;# 
  5465     1F4A                     	;# 
  5466     1F4E                     	;# 
  5467     1F4F                     	;# 
  5468     1F50                     	;# 
  5469     1F51                     	;# 
  5470     1F52                     	;# 
  5471     1F53                     	;# 
  5472     1F54                     	;# 
  5473     1F55                     	;# 
  5474     1F65                     	;# 
  5475     1F66                     	;# 
  5476     1F67                     	;# 
  5477     1F68                     	;# 
  5478     1F69                     	;# 
  5479     1F6A                     	;# 
  5480     1F6B                     	;# 
  5481     1FE4                     	;# 
  5482     1FE5                     	;# 
  5483     1FE6                     	;# 
  5484     1FE7                     	;# 
  5485     1FE8                     	;# 
  5486     1FE8                     	;# 
  5487     1FE9                     	;# 
  5488     1FEA                     	;# 
  5489     1FEB                     	;# 
  5490     1FED                     	;# 
  5491     1FEE                     	;# 
  5492     1FEF                     	;# 
  5493     0000                     	;# 
  5494     0001                     	;# 
  5495     0002                     	;# 
  5496     0003                     	;# 
  5497     0004                     	;# 
  5498     0005                     	;# 
  5499     0006                     	;# 
  5500     0007                     	;# 
  5501     0008                     	;# 
  5502     0009                     	;# 
  5503     000A                     	;# 
  5504     000B                     	;# 
  5505     000C                     	;# 
  5506     000D                     	;# 
  5507     000E                     	;# 
  5508     0010                     	;# 
  5509     0012                     	;# 
  5510     0013                     	;# 
  5511     0014                     	;# 
  5512     0016                     	;# 
  5513     0018                     	;# 
  5514     0019                     	;# 
  5515     001A                     	;# 
  5516     001C                     	;# 
  5517     008C                     	;# 
  5518     008C                     	;# 
  5519     008D                     	;# 
  5520     008E                     	;# 
  5521     008E                     	;# 
  5522     008F                     	;# 
  5523     0090                     	;# 
  5524     0090                     	;# 
  5525     0091                     	;# 
  5526     0092                     	;# 
  5527     0092                     	;# 
  5528     0093                     	;# 
  5529     0094                     	;# 
  5530     0094                     	;# 
  5531     0095                     	;# 
  5532     0096                     	;# 
  5533     0096                     	;# 
  5534     0097                     	;# 
  5535     0098                     	;# 
  5536     0099                     	;# 
  5537     009A                     	;# 
  5538     009B                     	;# 
  5539     009B                     	;# 
  5540     009C                     	;# 
  5541     009D                     	;# 
  5542     009D                     	;# 
  5543     009E                     	;# 
  5544     009F                     	;# 
  5545     010C                     	;# 
  5546     010C                     	;# 
  5547     010D                     	;# 
  5548     010E                     	;# 
  5549     010F                     	;# 
  5550     010F                     	;# 
  5551     0110                     	;# 
  5552     0111                     	;# 
  5553     0112                     	;# 
  5554     0113                     	;# 
  5555     0114                     	;# 
  5556     0115                     	;# 
  5557     0116                     	;# 
  5558     0117                     	;# 
  5559     0118                     	;# 
  5560     0119                     	;# 
  5561     0119                     	;# 
  5562     0119                     	;# 
  5563     011A                     	;# 
  5564     011A                     	;# 
  5565     011A                     	;# 
  5566     011B                     	;# 
  5567     011B                     	;# 
  5568     011B                     	;# 
  5569     011B                     	;# 
  5570     011B                     	;# 
  5571     011C                     	;# 
  5572     011C                     	;# 
  5573     011C                     	;# 
  5574     011D                     	;# 
  5575     011D                     	;# 
  5576     011D                     	;# 
  5577     011E                     	;# 
  5578     011E                     	;# 
  5579     011E                     	;# 
  5580     011F                     	;# 
  5581     011F                     	;# 
  5582     011F                     	;# 
  5583     011F                     	;# 
  5584     011F                     	;# 
  5585     018C                     	;# 
  5586     018D                     	;# 
  5587     018E                     	;# 
  5588     018F                     	;# 
  5589     0190                     	;# 
  5590     0191                     	;# 
  5591     0192                     	;# 
  5592     0196                     	;# 
  5593     0197                     	;# 
  5594     0198                     	;# 
  5595     0199                     	;# 
  5596     019A                     	;# 
  5597     019B                     	;# 
  5598     019C                     	;# 
  5599     020C                     	;# 
  5600     020D                     	;# 
  5601     020E                     	;# 
  5602     020E                     	;# 
  5603     020F                     	;# 
  5604     020F                     	;# 
  5605     0210                     	;# 
  5606     0210                     	;# 
  5607     0211                     	;# 
  5608     0211                     	;# 
  5609     0212                     	;# 
  5610     0213                     	;# 
  5611     0214                     	;# 
  5612     0214                     	;# 
  5613     0215                     	;# 
  5614     0215                     	;# 
  5615     0216                     	;# 
  5616     0216                     	;# 
  5617     0217                     	;# 
  5618     0217                     	;# 
  5619     0218                     	;# 
  5620     0219                     	;# 
  5621     021A                     	;# 
  5622     021A                     	;# 
  5623     021B                     	;# 
  5624     021B                     	;# 
  5625     021C                     	;# 
  5626     021C                     	;# 
  5627     021D                     	;# 
  5628     021D                     	;# 
  5629     021E                     	;# 
  5630     021F                     	;# 
  5631     028C                     	;# 
  5632     028C                     	;# 
  5633     028D                     	;# 
  5634     028D                     	;# 
  5635     028E                     	;# 
  5636     028F                     	;# 
  5637     0290                     	;# 
  5638     0291                     	;# 
  5639     0292                     	;# 
  5640     0292                     	;# 
  5641     0293                     	;# 
  5642     0293                     	;# 
  5643     0294                     	;# 
  5644     0295                     	;# 
  5645     0296                     	;# 
  5646     0297                     	;# 
  5647     0298                     	;# 
  5648     0298                     	;# 
  5649     0299                     	;# 
  5650     0299                     	;# 
  5651     029A                     	;# 
  5652     029B                     	;# 
  5653     029C                     	;# 
  5654     029D                     	;# 
  5655     029F                     	;# 
  5656     030C                     	;# 
  5657     030C                     	;# 
  5658     030D                     	;# 
  5659     030E                     	;# 
  5660     030F                     	;# 
  5661     0310                     	;# 
  5662     0310                     	;# 
  5663     0311                     	;# 
  5664     0312                     	;# 
  5665     0313                     	;# 
  5666     0314                     	;# 
  5667     0314                     	;# 
  5668     0315                     	;# 
  5669     0316                     	;# 
  5670     0317                     	;# 
  5671     0318                     	;# 
  5672     0318                     	;# 
  5673     0319                     	;# 
  5674     031A                     	;# 
  5675     031B                     	;# 
  5676     031C                     	;# 
  5677     031C                     	;# 
  5678     031D                     	;# 
  5679     031E                     	;# 
  5680     031F                     	;# 
  5681     038C                     	;# 
  5682     038C                     	;# 
  5683     038D                     	;# 
  5684     038E                     	;# 
  5685     0390                     	;# 
  5686     0390                     	;# 
  5687     0391                     	;# 
  5688     0392                     	;# 
  5689     048C                     	;# 
  5690     048C                     	;# 
  5691     048D                     	;# 
  5692     048E                     	;# 
  5693     048F                     	;# 
  5694     048F                     	;# 
  5695     0490                     	;# 
  5696     0491                     	;# 
  5697     0492                     	;# 
  5698     0492                     	;# 
  5699     0493                     	;# 
  5700     0494                     	;# 
  5701     0495                     	;# 
  5702     0495                     	;# 
  5703     0496                     	;# 
  5704     0497                     	;# 
  5705     0498                     	;# 
  5706     0499                     	;# 
  5707     049A                     	;# 
  5708     049B                     	;# 
  5709     049C                     	;# 
  5710     049D                     	;# 
  5711     050C                     	;# 
  5712     050C                     	;# 
  5713     050D                     	;# 
  5714     050E                     	;# 
  5715     050F                     	;# 
  5716     050F                     	;# 
  5717     0510                     	;# 
  5718     0511                     	;# 
  5719     0512                     	;# 
  5720     0512                     	;# 
  5721     0513                     	;# 
  5722     0514                     	;# 
  5723     0515                     	;# 
  5724     0515                     	;# 
  5725     0516                     	;# 
  5726     0517                     	;# 
  5727     0518                     	;# 
  5728     0519                     	;# 
  5729     051A                     	;# 
  5730     051B                     	;# 
  5731     051C                     	;# 
  5732     051D                     	;# 
  5733     058C                     	;# 
  5734     058C                     	;# 
  5735     058D                     	;# 
  5736     058E                     	;# 
  5737     058F                     	;# 
  5738     058F                     	;# 
  5739     0590                     	;# 
  5740     0591                     	;# 
  5741     0592                     	;# 
  5742     0593                     	;# 
  5743     059C                     	;# 
  5744     059C                     	;# 
  5745     059D                     	;# 
  5746     059D                     	;# 
  5747     059E                     	;# 
  5748     059F                     	;# 
  5749     060C                     	;# 
  5750     060C                     	;# 
  5751     060D                     	;# 
  5752     060D                     	;# 
  5753     060E                     	;# 
  5754     060F                     	;# 
  5755     0610                     	;# 
  5756     0611                     	;# 
  5757     0612                     	;# 
  5758     0613                     	;# 
  5759     0614                     	;# 
  5760     0616                     	;# 
  5761     0616                     	;# 
  5762     0617                     	;# 
  5763     0617                     	;# 
  5764     0618                     	;# 
  5765     0619                     	;# 
  5766     061A                     	;# 
  5767     061B                     	;# 
  5768     061C                     	;# 
  5769     061D                     	;# 
  5770     061E                     	;# 
  5771     068C                     	;# 
  5772     068D                     	;# 
  5773     068E                     	;# 
  5774     068F                     	;# 
  5775     0690                     	;# 
  5776     0691                     	;# 
  5777     0692                     	;# 
  5778     0693                     	;# 
  5779     0694                     	;# 
  5780     070C                     	;# 
  5781     070D                     	;# 
  5782     070E                     	;# 
  5783     070F                     	;# 
  5784     0710                     	;# 
  5785     0711                     	;# 
  5786     0712                     	;# 
  5787     0713                     	;# 
  5788     0714                     	;# 
  5789     0716                     	;# 
  5790     0717                     	;# 
  5791     0718                     	;# 
  5792     0719                     	;# 
  5793     071A                     	;# 
  5794     071B                     	;# 
  5795     071C                     	;# 
  5796     071D                     	;# 
  5797     071E                     	;# 
  5798     0796                     	;# 
  5799     0797                     	;# 
  5800     0798                     	;# 
  5801     0799                     	;# 
  5802     079A                     	;# 
  5803     079B                     	;# 
  5804     079C                     	;# 
  5805     079D                     	;# 
  5806     080C                     	;# 
  5807     080D                     	;# 
  5808     080E                     	;# 
  5809     080F                     	;# 
  5810     0810                     	;# 
  5811     0811                     	;# 
  5812     0813                     	;# 
  5813     0814                     	;# 
  5814     081A                     	;# 
  5815     081A                     	;# 
  5816     081B                     	;# 
  5817     081C                     	;# 
  5818     081C                     	;# 
  5819     081D                     	;# 
  5820     081E                     	;# 
  5821     081F                     	;# 
  5822     088C                     	;# 
  5823     088D                     	;# 
  5824     088E                     	;# 
  5825     088F                     	;# 
  5826     0890                     	;# 
  5827     0891                     	;# 
  5828     0892                     	;# 
  5829     0893                     	;# 
  5830     0895                     	;# 
  5831     0896                     	;# 
  5832     0897                     	;# 
  5833     0898                     	;# 
  5834     0899                     	;# 
  5835     089A                     	;# 
  5836     089B                     	;# 
  5837     090C                     	;# 
  5838     090E                     	;# 
  5839     090F                     	;# 
  5840     091F                     	;# 
  5841     098F                     	;# 
  5842     098F                     	;# 
  5843     0990                     	;# 
  5844     0991                     	;# 
  5845     0992                     	;# 
  5846     0993                     	;# 
  5847     0994                     	;# 
  5848     0995                     	;# 
  5849     0996                     	;# 
  5850     0997                     	;# 
  5851     0A19                     	;# 
  5852     0A19                     	;# 
  5853     0A1A                     	;# 
  5854     0A1A                     	;# 
  5855     0A1B                     	;# 
  5856     0A1B                     	;# 
  5857     0A1B                     	;# 
  5858     0A1C                     	;# 
  5859     0A1C                     	;# 
  5860     0A1D                     	;# 
  5861     0A1D                     	;# 
  5862     0A1E                     	;# 
  5863     0A1E                     	;# 
  5864     0A1F                     	;# 
  5865     0A1F                     	;# 
  5866     0A1F                     	;# 
  5867     1E0F                     	;# 
  5868     1E10                     	;# 
  5869     1E11                     	;# 
  5870     1E12                     	;# 
  5871     1E13                     	;# 
  5872     1E14                     	;# 
  5873     1E15                     	;# 
  5874     1E16                     	;# 
  5875     1E17                     	;# 
  5876     1E18                     	;# 
  5877     1E19                     	;# 
  5878     1E1A                     	;# 
  5879     1E1B                     	;# 
  5880     1E1C                     	;# 
  5881     1E1D                     	;# 
  5882     1E1E                     	;# 
  5883     1E1F                     	;# 
  5884     1E20                     	;# 
  5885     1E21                     	;# 
  5886     1E22                     	;# 
  5887     1E23                     	;# 
  5888     1E24                     	;# 
  5889     1E25                     	;# 
  5890     1E26                     	;# 
  5891     1E27                     	;# 
  5892     1E28                     	;# 
  5893     1E29                     	;# 
  5894     1E2A                     	;# 
  5895     1E2B                     	;# 
  5896     1E2C                     	;# 
  5897     1E2D                     	;# 
  5898     1E2E                     	;# 
  5899     1E2F                     	;# 
  5900     1E30                     	;# 
  5901     1E31                     	;# 
  5902     1E32                     	;# 
  5903     1E33                     	;# 
  5904     1E34                     	;# 
  5905     1E35                     	;# 
  5906     1E36                     	;# 
  5907     1E37                     	;# 
  5908     1E8F                     	;# 
  5909     1E90                     	;# 
  5910     1E91                     	;# 
  5911     1E92                     	;# 
  5912     1E93                     	;# 
  5913     1E94                     	;# 
  5914     1E95                     	;# 
  5915     1E96                     	;# 
  5916     1E97                     	;# 
  5917     1E9C                     	;# 
  5918     1E9D                     	;# 
  5919     1E9E                     	;# 
  5920     1EA1                     	;# 
  5921     1EA2                     	;# 
  5922     1EA3                     	;# 
  5923     1EA4                     	;# 
  5924     1EA5                     	;# 
  5925     1EA9                     	;# 
  5926     1EAA                     	;# 
  5927     1EAB                     	;# 
  5928     1EAC                     	;# 
  5929     1EB1                     	;# 
  5930     1EB2                     	;# 
  5931     1EB3                     	;# 
  5932     1EB8                     	;# 
  5933     1EB9                     	;# 
  5934     1EBA                     	;# 
  5935     1EBB                     	;# 
  5936     1EBC                     	;# 
  5937     1EBD                     	;# 
  5938     1EBE                     	;# 
  5939     1EC3                     	;# 
  5940     1EC5                     	;# 
  5941     1EC6                     	;# 
  5942     1EC7                     	;# 
  5943     1EC8                     	;# 
  5944     1EC9                     	;# 
  5945     1ECA                     	;# 
  5946     1ECB                     	;# 
  5947     1ECC                     	;# 
  5948     1ECD                     	;# 
  5949     1ECE                     	;# 
  5950     1F10                     	;# 
  5951     1F11                     	;# 
  5952     1F12                     	;# 
  5953     1F13                     	;# 
  5954     1F14                     	;# 
  5955     1F15                     	;# 
  5956     1F16                     	;# 
  5957     1F17                     	;# 
  5958     1F18                     	;# 
  5959     1F19                     	;# 
  5960     1F1A                     	;# 
  5961     1F1B                     	;# 
  5962     1F1C                     	;# 
  5963     1F1D                     	;# 
  5964     1F1E                     	;# 
  5965     1F1F                     	;# 
  5966     1F20                     	;# 
  5967     1F21                     	;# 
  5968     1F22                     	;# 
  5969     1F23                     	;# 
  5970     1F24                     	;# 
  5971     1F25                     	;# 
  5972     1F26                     	;# 
  5973     1F27                     	;# 
  5974     1F38                     	;# 
  5975     1F39                     	;# 
  5976     1F3A                     	;# 
  5977     1F3B                     	;# 
  5978     1F3C                     	;# 
  5979     1F3D                     	;# 
  5980     1F3E                     	;# 
  5981     1F3F                     	;# 
  5982     1F43                     	;# 
  5983     1F44                     	;# 
  5984     1F45                     	;# 
  5985     1F46                     	;# 
  5986     1F47                     	;# 
  5987     1F48                     	;# 
  5988     1F49                     	;# 
  5989     1F4A                     	;# 
  5990     1F4E                     	;# 
  5991     1F4F                     	;# 
  5992     1F50                     	;# 
  5993     1F51                     	;# 
  5994     1F52                     	;# 
  5995     1F53                     	;# 
  5996     1F54                     	;# 
  5997     1F55                     	;# 
  5998     1F65                     	;# 
  5999     1F66                     	;# 
  6000     1F67                     	;# 
  6001     1F68                     	;# 
  6002     1F69                     	;# 
  6003     1F6A                     	;# 
  6004     1F6B                     	;# 
  6005     1FE4                     	;# 
  6006     1FE5                     	;# 
  6007     1FE6                     	;# 
  6008     1FE7                     	;# 
  6009     1FE8                     	;# 
  6010     1FE8                     	;# 
  6011     1FE9                     	;# 
  6012     1FEA                     	;# 
  6013     1FEB                     	;# 
  6014     1FED                     	;# 
  6015     1FEE                     	;# 
  6016     1FEF                     	;# 
  6017     0000                     	;# 
  6018     0001                     	;# 
  6019     0002                     	;# 
  6020     0003                     	;# 
  6021     0004                     	;# 
  6022     0005                     	;# 
  6023     0006                     	;# 
  6024     0007                     	;# 
  6025     0008                     	;# 
  6026     0009                     	;# 
  6027     000A                     	;# 
  6028     000B                     	;# 
  6029     000C                     	;# 
  6030     000D                     	;# 
  6031     000E                     	;# 
  6032     0010                     	;# 
  6033     0012                     	;# 
  6034     0013                     	;# 
  6035     0014                     	;# 
  6036     0016                     	;# 
  6037     0018                     	;# 
  6038     0019                     	;# 
  6039     001A                     	;# 
  6040     001C                     	;# 
  6041     008C                     	;# 
  6042     008C                     	;# 
  6043     008D                     	;# 
  6044     008E                     	;# 
  6045     008E                     	;# 
  6046     008F                     	;# 
  6047     0090                     	;# 
  6048     0090                     	;# 
  6049     0091                     	;# 
  6050     0092                     	;# 
  6051     0092                     	;# 
  6052     0093                     	;# 
  6053     0094                     	;# 
  6054     0094                     	;# 
  6055     0095                     	;# 
  6056     0096                     	;# 
  6057     0096                     	;# 
  6058     0097                     	;# 
  6059     0098                     	;# 
  6060     0099                     	;# 
  6061     009A                     	;# 
  6062     009B                     	;# 
  6063     009B                     	;# 
  6064     009C                     	;# 
  6065     009D                     	;# 
  6066     009D                     	;# 
  6067     009E                     	;# 
  6068     009F                     	;# 
  6069     010C                     	;# 
  6070     010C                     	;# 
  6071     010D                     	;# 
  6072     010E                     	;# 
  6073     010F                     	;# 
  6074     010F                     	;# 
  6075     0110                     	;# 
  6076     0111                     	;# 
  6077     0112                     	;# 
  6078     0113                     	;# 
  6079     0114                     	;# 
  6080     0115                     	;# 
  6081     0116                     	;# 
  6082     0117                     	;# 
  6083     0118                     	;# 
  6084     0119                     	;# 
  6085     0119                     	;# 
  6086     0119                     	;# 
  6087     011A                     	;# 
  6088     011A                     	;# 
  6089     011A                     	;# 
  6090     011B                     	;# 
  6091     011B                     	;# 
  6092     011B                     	;# 
  6093     011B                     	;# 
  6094     011B                     	;# 
  6095     011C                     	;# 
  6096     011C                     	;# 
  6097     011C                     	;# 
  6098     011D                     	;# 
  6099     011D                     	;# 
  6100     011D                     	;# 
  6101     011E                     	;# 
  6102     011E                     	;# 
  6103     011E                     	;# 
  6104     011F                     	;# 
  6105     011F                     	;# 
  6106     011F                     	;# 
  6107     011F                     	;# 
  6108     011F                     	;# 
  6109     018C                     	;# 
  6110     018D                     	;# 
  6111     018E                     	;# 
  6112     018F                     	;# 
  6113     0190                     	;# 
  6114     0191                     	;# 
  6115     0192                     	;# 
  6116     0196                     	;# 
  6117     0197                     	;# 
  6118     0198                     	;# 
  6119     0199                     	;# 
  6120     019A                     	;# 
  6121     019B                     	;# 
  6122     019C                     	;# 
  6123     020C                     	;# 
  6124     020D                     	;# 
  6125     020E                     	;# 
  6126     020E                     	;# 
  6127     020F                     	;# 
  6128     020F                     	;# 
  6129     0210                     	;# 
  6130     0210                     	;# 
  6131     0211                     	;# 
  6132     0211                     	;# 
  6133     0212                     	;# 
  6134     0213                     	;# 
  6135     0214                     	;# 
  6136     0214                     	;# 
  6137     0215                     	;# 
  6138     0215                     	;# 
  6139     0216                     	;# 
  6140     0216                     	;# 
  6141     0217                     	;# 
  6142     0217                     	;# 
  6143     0218                     	;# 
  6144     0219                     	;# 
  6145     021A                     	;# 
  6146     021A                     	;# 
  6147     021B                     	;# 
  6148     021B                     	;# 
  6149     021C                     	;# 
  6150     021C                     	;# 
  6151     021D                     	;# 
  6152     021D                     	;# 
  6153     021E                     	;# 
  6154     021F                     	;# 
  6155     028C                     	;# 
  6156     028C                     	;# 
  6157     028D                     	;# 
  6158     028D                     	;# 
  6159     028E                     	;# 
  6160     028F                     	;# 
  6161     0290                     	;# 
  6162     0291                     	;# 
  6163     0292                     	;# 
  6164     0292                     	;# 
  6165     0293                     	;# 
  6166     0293                     	;# 
  6167     0294                     	;# 
  6168     0295                     	;# 
  6169     0296                     	;# 
  6170     0297                     	;# 
  6171     0298                     	;# 
  6172     0298                     	;# 
  6173     0299                     	;# 
  6174     0299                     	;# 
  6175     029A                     	;# 
  6176     029B                     	;# 
  6177     029C                     	;# 
  6178     029D                     	;# 
  6179     029F                     	;# 
  6180     030C                     	;# 
  6181     030C                     	;# 
  6182     030D                     	;# 
  6183     030E                     	;# 
  6184     030F                     	;# 
  6185     0310                     	;# 
  6186     0310                     	;# 
  6187     0311                     	;# 
  6188     0312                     	;# 
  6189     0313                     	;# 
  6190     0314                     	;# 
  6191     0314                     	;# 
  6192     0315                     	;# 
  6193     0316                     	;# 
  6194     0317                     	;# 
  6195     0318                     	;# 
  6196     0318                     	;# 
  6197     0319                     	;# 
  6198     031A                     	;# 
  6199     031B                     	;# 
  6200     031C                     	;# 
  6201     031C                     	;# 
  6202     031D                     	;# 
  6203     031E                     	;# 
  6204     031F                     	;# 
  6205     038C                     	;# 
  6206     038C                     	;# 
  6207     038D                     	;# 
  6208     038E                     	;# 
  6209     0390                     	;# 
  6210     0390                     	;# 
  6211     0391                     	;# 
  6212     0392                     	;# 
  6213     048C                     	;# 
  6214     048C                     	;# 
  6215     048D                     	;# 
  6216     048E                     	;# 
  6217     048F                     	;# 
  6218     048F                     	;# 
  6219     0490                     	;# 
  6220     0491                     	;# 
  6221     0492                     	;# 
  6222     0492                     	;# 
  6223     0493                     	;# 
  6224     0494                     	;# 
  6225     0495                     	;# 
  6226     0495                     	;# 
  6227     0496                     	;# 
  6228     0497                     	;# 
  6229     0498                     	;# 
  6230     0499                     	;# 
  6231     049A                     	;# 
  6232     049B                     	;# 
  6233     049C                     	;# 
  6234     049D                     	;# 
  6235     050C                     	;# 
  6236     050C                     	;# 
  6237     050D                     	;# 
  6238     050E                     	;# 
  6239     050F                     	;# 
  6240     050F                     	;# 
  6241     0510                     	;# 
  6242     0511                     	;# 
  6243     0512                     	;# 
  6244     0512                     	;# 
  6245     0513                     	;# 
  6246     0514                     	;# 
  6247     0515                     	;# 
  6248     0515                     	;# 
  6249     0516                     	;# 
  6250     0517                     	;# 
  6251     0518                     	;# 
  6252     0519                     	;# 
  6253     051A                     	;# 
  6254     051B                     	;# 
  6255     051C                     	;# 
  6256     051D                     	;# 
  6257     058C                     	;# 
  6258     058C                     	;# 
  6259     058D                     	;# 
  6260     058E                     	;# 
  6261     058F                     	;# 
  6262     058F                     	;# 
  6263     0590                     	;# 
  6264     0591                     	;# 
  6265     0592                     	;# 
  6266     0593                     	;# 
  6267     059C                     	;# 
  6268     059C                     	;# 
  6269     059D                     	;# 
  6270     059D                     	;# 
  6271     059E                     	;# 
  6272     059F                     	;# 
  6273     060C                     	;# 
  6274     060C                     	;# 
  6275     060D                     	;# 
  6276     060D                     	;# 
  6277     060E                     	;# 
  6278     060F                     	;# 
  6279     0610                     	;# 
  6280     0611                     	;# 
  6281     0612                     	;# 
  6282     0613                     	;# 
  6283     0614                     	;# 
  6284     0616                     	;# 
  6285     0616                     	;# 
  6286     0617                     	;# 
  6287     0617                     	;# 
  6288     0618                     	;# 
  6289     0619                     	;# 
  6290     061A                     	;# 
  6291     061B                     	;# 
  6292     061C                     	;# 
  6293     061D                     	;# 
  6294     061E                     	;# 
  6295     068C                     	;# 
  6296     068D                     	;# 
  6297     068E                     	;# 
  6298     068F                     	;# 
  6299     0690                     	;# 
  6300     0691                     	;# 
  6301     0692                     	;# 
  6302     0693                     	;# 
  6303     0694                     	;# 
  6304     070C                     	;# 
  6305     070D                     	;# 
  6306     070E                     	;# 
  6307     070F                     	;# 
  6308     0710                     	;# 
  6309     0711                     	;# 
  6310     0712                     	;# 
  6311     0713                     	;# 
  6312     0714                     	;# 
  6313     0716                     	;# 
  6314     0717                     	;# 
  6315     0718                     	;# 
  6316     0719                     	;# 
  6317     071A                     	;# 
  6318     071B                     	;# 
  6319     071C                     	;# 
  6320     071D                     	;# 
  6321     071E                     	;# 
  6322     0796                     	;# 
  6323     0797                     	;# 
  6324     0798                     	;# 
  6325     0799                     	;# 
  6326     079A                     	;# 
  6327     079B                     	;# 
  6328     079C                     	;# 
  6329     079D                     	;# 
  6330     080C                     	;# 
  6331     080D                     	;# 
  6332     080E                     	;# 
  6333     080F                     	;# 
  6334     0810                     	;# 
  6335     0811                     	;# 
  6336     0813                     	;# 
  6337     0814                     	;# 
  6338     081A                     	;# 
  6339     081A                     	;# 
  6340     081B                     	;# 
  6341     081C                     	;# 
  6342     081C                     	;# 
  6343     081D                     	;# 
  6344     081E                     	;# 
  6345     081F                     	;# 
  6346     088C                     	;# 
  6347     088D                     	;# 
  6348     088E                     	;# 
  6349     088F                     	;# 
  6350     0890                     	;# 
  6351     0891                     	;# 
  6352     0892                     	;# 
  6353     0893                     	;# 
  6354     0895                     	;# 
  6355     0896                     	;# 
  6356     0897                     	;# 
  6357     0898                     	;# 
  6358     0899                     	;# 
  6359     089A                     	;# 
  6360     089B                     	;# 
  6361     090C                     	;# 
  6362     090E                     	;# 
  6363     090F                     	;# 
  6364     091F                     	;# 
  6365     098F                     	;# 
  6366     098F                     	;# 
  6367     0990                     	;# 
  6368     0991                     	;# 
  6369     0992                     	;# 
  6370     0993                     	;# 
  6371     0994                     	;# 
  6372     0995                     	;# 
  6373     0996                     	;# 
  6374     0997                     	;# 
  6375     0A19                     	;# 
  6376     0A19                     	;# 
  6377     0A1A                     	;# 
  6378     0A1A                     	;# 
  6379     0A1B                     	;# 
  6380     0A1B                     	;# 
  6381     0A1B                     	;# 
  6382     0A1C                     	;# 
  6383     0A1C                     	;# 
  6384     0A1D                     	;# 
  6385     0A1D                     	;# 
  6386     0A1E                     	;# 
  6387     0A1E                     	;# 
  6388     0A1F                     	;# 
  6389     0A1F                     	;# 
  6390     0A1F                     	;# 
  6391     1E0F                     	;# 
  6392     1E10                     	;# 
  6393     1E11                     	;# 
  6394     1E12                     	;# 
  6395     1E13                     	;# 
  6396     1E14                     	;# 
  6397     1E15                     	;# 
  6398     1E16                     	;# 
  6399     1E17                     	;# 
  6400     1E18                     	;# 
  6401     1E19                     	;# 
  6402     1E1A                     	;# 
  6403     1E1B                     	;# 
  6404     1E1C                     	;# 
  6405     1E1D                     	;# 
  6406     1E1E                     	;# 
  6407     1E1F                     	;# 
  6408     1E20                     	;# 
  6409     1E21                     	;# 
  6410     1E22                     	;# 
  6411     1E23                     	;# 
  6412     1E24                     	;# 
  6413     1E25                     	;# 
  6414     1E26                     	;# 
  6415     1E27                     	;# 
  6416     1E28                     	;# 
  6417     1E29                     	;# 
  6418     1E2A                     	;# 
  6419     1E2B                     	;# 
  6420     1E2C                     	;# 
  6421     1E2D                     	;# 
  6422     1E2E                     	;# 
  6423     1E2F                     	;# 
  6424     1E30                     	;# 
  6425     1E31                     	;# 
  6426     1E32                     	;# 
  6427     1E33                     	;# 
  6428     1E34                     	;# 
  6429     1E35                     	;# 
  6430     1E36                     	;# 
  6431     1E37                     	;# 
  6432     1E8F                     	;# 
  6433     1E90                     	;# 
  6434     1E91                     	;# 
  6435     1E92                     	;# 
  6436     1E93                     	;# 
  6437     1E94                     	;# 
  6438     1E95                     	;# 
  6439     1E96                     	;# 
  6440     1E97                     	;# 
  6441     1E9C                     	;# 
  6442     1E9D                     	;# 
  6443     1E9E                     	;# 
  6444     1EA1                     	;# 
  6445     1EA2                     	;# 
  6446     1EA3                     	;# 
  6447     1EA4                     	;# 
  6448     1EA5                     	;# 
  6449     1EA9                     	;# 
  6450     1EAA                     	;# 
  6451     1EAB                     	;# 
  6452     1EAC                     	;# 
  6453     1EB1                     	;# 
  6454     1EB2                     	;# 
  6455     1EB3                     	;# 
  6456     1EB8                     	;# 
  6457     1EB9                     	;# 
  6458     1EBA                     	;# 
  6459     1EBB                     	;# 
  6460     1EBC                     	;# 
  6461     1EBD                     	;# 
  6462     1EBE                     	;# 
  6463     1EC3                     	;# 
  6464     1EC5                     	;# 
  6465     1EC6                     	;# 
  6466     1EC7                     	;# 
  6467     1EC8                     	;# 
  6468     1EC9                     	;# 
  6469     1ECA                     	;# 
  6470     1ECB                     	;# 
  6471     1ECC                     	;# 
  6472     1ECD                     	;# 
  6473     1ECE                     	;# 
  6474     1F10                     	;# 
  6475     1F11                     	;# 
  6476     1F12                     	;# 
  6477     1F13                     	;# 
  6478     1F14                     	;# 
  6479     1F15                     	;# 
  6480     1F16                     	;# 
  6481     1F17                     	;# 
  6482     1F18                     	;# 
  6483     1F19                     	;# 
  6484     1F1A                     	;# 
  6485     1F1B                     	;# 
  6486     1F1C                     	;# 
  6487     1F1D                     	;# 
  6488     1F1E                     	;# 
  6489     1F1F                     	;# 
  6490     1F20                     	;# 
  6491     1F21                     	;# 
  6492     1F22                     	;# 
  6493     1F23                     	;# 
  6494     1F24                     	;# 
  6495     1F25                     	;# 
  6496     1F26                     	;# 
  6497     1F27                     	;# 
  6498     1F38                     	;# 
  6499     1F39                     	;# 
  6500     1F3A                     	;# 
  6501     1F3B                     	;# 
  6502     1F3C                     	;# 
  6503     1F3D                     	;# 
  6504     1F3E                     	;# 
  6505     1F3F                     	;# 
  6506     1F43                     	;# 
  6507     1F44                     	;# 
  6508     1F45                     	;# 
  6509     1F46                     	;# 
  6510     1F47                     	;# 
  6511     1F48                     	;# 
  6512     1F49                     	;# 
  6513     1F4A                     	;# 
  6514     1F4E                     	;# 
  6515     1F4F                     	;# 
  6516     1F50                     	;# 
  6517     1F51                     	;# 
  6518     1F52                     	;# 
  6519     1F53                     	;# 
  6520     1F54                     	;# 
  6521     1F55                     	;# 
  6522     1F65                     	;# 
  6523     1F66                     	;# 
  6524     1F67                     	;# 
  6525     1F68                     	;# 
  6526     1F69                     	;# 
  6527     1F6A                     	;# 
  6528     1F6B                     	;# 
  6529     1FE4                     	;# 
  6530     1FE5                     	;# 
  6531     1FE6                     	;# 
  6532     1FE7                     	;# 
  6533     1FE8                     	;# 
  6534     1FE8                     	;# 
  6535     1FE9                     	;# 
  6536     1FEA                     	;# 
  6537     1FEB                     	;# 
  6538     1FED                     	;# 
  6539     1FEE                     	;# 
  6540     1FEF                     	;# 
  6541     0000                     	;# 
  6542     0001                     	;# 
  6543     0002                     	;# 
  6544     0003                     	;# 
  6545     0004                     	;# 
  6546     0005                     	;# 
  6547     0006                     	;# 
  6548     0007                     	;# 
  6549     0008                     	;# 
  6550     0009                     	;# 
  6551     000A                     	;# 
  6552     000B                     	;# 
  6553     000C                     	;# 
  6554     000D                     	;# 
  6555     000E                     	;# 
  6556     0010                     	;# 
  6557     0012                     	;# 
  6558     0013                     	;# 
  6559     0014                     	;# 
  6560     0016                     	;# 
  6561     0018                     	;# 
  6562     0019                     	;# 
  6563     001A                     	;# 
  6564     001C                     	;# 
  6565     008C                     	;# 
  6566     008C                     	;# 
  6567     008D                     	;# 
  6568     008E                     	;# 
  6569     008E                     	;# 
  6570     008F                     	;# 
  6571     0090                     	;# 
  6572     0090                     	;# 
  6573     0091                     	;# 
  6574     0092                     	;# 
  6575     0092                     	;# 
  6576     0093                     	;# 
  6577     0094                     	;# 
  6578     0094                     	;# 
  6579     0095                     	;# 
  6580     0096                     	;# 
  6581     0096                     	;# 
  6582     0097                     	;# 
  6583     0098                     	;# 
  6584     0099                     	;# 
  6585     009A                     	;# 
  6586     009B                     	;# 
  6587     009B                     	;# 
  6588     009C                     	;# 
  6589     009D                     	;# 
  6590     009D                     	;# 
  6591     009E                     	;# 
  6592     009F                     	;# 
  6593     010C                     	;# 
  6594     010C                     	;# 
  6595     010D                     	;# 
  6596     010E                     	;# 
  6597     010F                     	;# 
  6598     010F                     	;# 
  6599     0110                     	;# 
  6600     0111                     	;# 
  6601     0112                     	;# 
  6602     0113                     	;# 
  6603     0114                     	;# 
  6604     0115                     	;# 
  6605     0116                     	;# 
  6606     0117                     	;# 
  6607     0118                     	;# 
  6608     0119                     	;# 
  6609     0119                     	;# 
  6610     0119                     	;# 
  6611     011A                     	;# 
  6612     011A                     	;# 
  6613     011A                     	;# 
  6614     011B                     	;# 
  6615     011B                     	;# 
  6616     011B                     	;# 
  6617     011B                     	;# 
  6618     011B                     	;# 
  6619     011C                     	;# 
  6620     011C                     	;# 
  6621     011C                     	;# 
  6622     011D                     	;# 
  6623     011D                     	;# 
  6624     011D                     	;# 
  6625     011E                     	;# 
  6626     011E                     	;# 
  6627     011E                     	;# 
  6628     011F                     	;# 
  6629     011F                     	;# 
  6630     011F                     	;# 
  6631     011F                     	;# 
  6632     011F                     	;# 
  6633     018C                     	;# 
  6634     018D                     	;# 
  6635     018E                     	;# 
  6636     018F                     	;# 
  6637     0190                     	;# 
  6638     0191                     	;# 
  6639     0192                     	;# 
  6640     0196                     	;# 
  6641     0197                     	;# 
  6642     0198                     	;# 
  6643     0199                     	;# 
  6644     019A                     	;# 
  6645     019B                     	;# 
  6646     019C                     	;# 
  6647     020C                     	;# 
  6648     020D                     	;# 
  6649     020E                     	;# 
  6650     020E                     	;# 
  6651     020F                     	;# 
  6652     020F                     	;# 
  6653     0210                     	;# 
  6654     0210                     	;# 
  6655     0211                     	;# 
  6656     0211                     	;# 
  6657     0212                     	;# 
  6658     0213                     	;# 
  6659     0214                     	;# 
  6660     0214                     	;# 
  6661     0215                     	;# 
  6662     0215                     	;# 
  6663     0216                     	;# 
  6664     0216                     	;# 
  6665     0217                     	;# 
  6666     0217                     	;# 
  6667     0218                     	;# 
  6668     0219                     	;# 
  6669     021A                     	;# 
  6670     021A                     	;# 
  6671     021B                     	;# 
  6672     021B                     	;# 
  6673     021C                     	;# 
  6674     021C                     	;# 
  6675     021D                     	;# 
  6676     021D                     	;# 
  6677     021E                     	;# 
  6678     021F                     	;# 
  6679     028C                     	;# 
  6680     028C                     	;# 
  6681     028D                     	;# 
  6682     028D                     	;# 
  6683     028E                     	;# 
  6684     028F                     	;# 
  6685     0290                     	;# 
  6686     0291                     	;# 
  6687     0292                     	;# 
  6688     0292                     	;# 
  6689     0293                     	;# 
  6690     0293                     	;# 
  6691     0294                     	;# 
  6692     0295                     	;# 
  6693     0296                     	;# 
  6694     0297                     	;# 
  6695     0298                     	;# 
  6696     0298                     	;# 
  6697     0299                     	;# 
  6698     0299                     	;# 
  6699     029A                     	;# 
  6700     029B                     	;# 
  6701     029C                     	;# 
  6702     029D                     	;# 
  6703     029F                     	;# 
  6704     030C                     	;# 
  6705     030C                     	;# 
  6706     030D                     	;# 
  6707     030E                     	;# 
  6708     030F                     	;# 
  6709     0310                     	;# 
  6710     0310                     	;# 
  6711     0311                     	;# 
  6712     0312                     	;# 
  6713     0313                     	;# 
  6714     0314                     	;# 
  6715     0314                     	;# 
  6716     0315                     	;# 
  6717     0316                     	;# 
  6718     0317                     	;# 
  6719     0318                     	;# 
  6720     0318                     	;# 
  6721     0319                     	;# 
  6722     031A                     	;# 
  6723     031B                     	;# 
  6724     031C                     	;# 
  6725     031C                     	;# 
  6726     031D                     	;# 
  6727     031E                     	;# 
  6728     031F                     	;# 
  6729     038C                     	;# 
  6730     038C                     	;# 
  6731     038D                     	;# 
  6732     038E                     	;# 
  6733     0390                     	;# 
  6734     0390                     	;# 
  6735     0391                     	;# 
  6736     0392                     	;# 
  6737     048C                     	;# 
  6738     048C                     	;# 
  6739     048D                     	;# 
  6740     048E                     	;# 
  6741     048F                     	;# 
  6742     048F                     	;# 
  6743     0490                     	;# 
  6744     0491                     	;# 
  6745     0492                     	;# 
  6746     0492                     	;# 
  6747     0493                     	;# 
  6748     0494                     	;# 
  6749     0495                     	;# 
  6750     0495                     	;# 
  6751     0496                     	;# 
  6752     0497                     	;# 
  6753     0498                     	;# 
  6754     0499                     	;# 
  6755     049A                     	;# 
  6756     049B                     	;# 
  6757     049C                     	;# 
  6758     049D                     	;# 
  6759     050C                     	;# 
  6760     050C                     	;# 
  6761     050D                     	;# 
  6762     050E                     	;# 
  6763     050F                     	;# 
  6764     050F                     	;# 
  6765     0510                     	;# 
  6766     0511                     	;# 
  6767     0512                     	;# 
  6768     0512                     	;# 
  6769     0513                     	;# 
  6770     0514                     	;# 
  6771     0515                     	;# 
  6772     0515                     	;# 
  6773     0516                     	;# 
  6774     0517                     	;# 
  6775     0518                     	;# 
  6776     0519                     	;# 
  6777     051A                     	;# 
  6778     051B                     	;# 
  6779     051C                     	;# 
  6780     051D                     	;# 
  6781     058C                     	;# 
  6782     058C                     	;# 
  6783     058D                     	;# 
  6784     058E                     	;# 
  6785     058F                     	;# 
  6786     058F                     	;# 
  6787     0590                     	;# 
  6788     0591                     	;# 
  6789     0592                     	;# 
  6790     0593                     	;# 
  6791     059C                     	;# 
  6792     059C                     	;# 
  6793     059D                     	;# 
  6794     059D                     	;# 
  6795     059E                     	;# 
  6796     059F                     	;# 
  6797     060C                     	;# 
  6798     060C                     	;# 
  6799     060D                     	;# 
  6800     060D                     	;# 
  6801     060E                     	;# 
  6802     060F                     	;# 
  6803     0610                     	;# 
  6804     0611                     	;# 
  6805     0612                     	;# 
  6806     0613                     	;# 
  6807     0614                     	;# 
  6808     0616                     	;# 
  6809     0616                     	;# 
  6810     0617                     	;# 
  6811     0617                     	;# 
  6812     0618                     	;# 
  6813     0619                     	;# 
  6814     061A                     	;# 
  6815     061B                     	;# 
  6816     061C                     	;# 
  6817     061D                     	;# 
  6818     061E                     	;# 
  6819     068C                     	;# 
  6820     068D                     	;# 
  6821     068E                     	;# 
  6822     068F                     	;# 
  6823     0690                     	;# 
  6824     0691                     	;# 
  6825     0692                     	;# 
  6826     0693                     	;# 
  6827     0694                     	;# 
  6828     070C                     	;# 
  6829     070D                     	;# 
  6830     070E                     	;# 
  6831     070F                     	;# 
  6832     0710                     	;# 
  6833     0711                     	;# 
  6834     0712                     	;# 
  6835     0713                     	;# 
  6836     0714                     	;# 
  6837     0716                     	;# 
  6838     0717                     	;# 
  6839     0718                     	;# 
  6840     0719                     	;# 
  6841     071A                     	;# 
  6842     071B                     	;# 
  6843     071C                     	;# 
  6844     071D                     	;# 
  6845     071E                     	;# 
  6846     0796                     	;# 
  6847     0797                     	;# 
  6848     0798                     	;# 
  6849     0799                     	;# 
  6850     079A                     	;# 
  6851     079B                     	;# 
  6852     079C                     	;# 
  6853     079D                     	;# 
  6854     080C                     	;# 
  6855     080D                     	;# 
  6856     080E                     	;# 
  6857     080F                     	;# 
  6858     0810                     	;# 
  6859     0811                     	;# 
  6860     0813                     	;# 
  6861     0814                     	;# 
  6862     081A                     	;# 
  6863     081A                     	;# 
  6864     081B                     	;# 
  6865     081C                     	;# 
  6866     081C                     	;# 
  6867     081D                     	;# 
  6868     081E                     	;# 
  6869     081F                     	;# 
  6870     088C                     	;# 
  6871     088D                     	;# 
  6872     088E                     	;# 
  6873     088F                     	;# 
  6874     0890                     	;# 
  6875     0891                     	;# 
  6876     0892                     	;# 
  6877     0893                     	;# 
  6878     0895                     	;# 
  6879     0896                     	;# 
  6880     0897                     	;# 
  6881     0898                     	;# 
  6882     0899                     	;# 
  6883     089A                     	;# 
  6884     089B                     	;# 
  6885     090C                     	;# 
  6886     090E                     	;# 
  6887     090F                     	;# 
  6888     091F                     	;# 
  6889     098F                     	;# 
  6890     098F                     	;# 
  6891     0990                     	;# 
  6892     0991                     	;# 
  6893     0992                     	;# 
  6894     0993                     	;# 
  6895     0994                     	;# 
  6896     0995                     	;# 
  6897     0996                     	;# 
  6898     0997                     	;# 
  6899     0A19                     	;# 
  6900     0A19                     	;# 
  6901     0A1A                     	;# 
  6902     0A1A                     	;# 
  6903     0A1B                     	;# 
  6904     0A1B                     	;# 
  6905     0A1B                     	;# 
  6906     0A1C                     	;# 
  6907     0A1C                     	;# 
  6908     0A1D                     	;# 
  6909     0A1D                     	;# 
  6910     0A1E                     	;# 
  6911     0A1E                     	;# 
  6912     0A1F                     	;# 
  6913     0A1F                     	;# 
  6914     0A1F                     	;# 
  6915     1E0F                     	;# 
  6916     1E10                     	;# 
  6917     1E11                     	;# 
  6918     1E12                     	;# 
  6919     1E13                     	;# 
  6920     1E14                     	;# 
  6921     1E15                     	;# 
  6922     1E16                     	;# 
  6923     1E17                     	;# 
  6924     1E18                     	;# 
  6925     1E19                     	;# 
  6926     1E1A                     	;# 
  6927     1E1B                     	;# 
  6928     1E1C                     	;# 
  6929     1E1D                     	;# 
  6930     1E1E                     	;# 
  6931     1E1F                     	;# 
  6932     1E20                     	;# 
  6933     1E21                     	;# 
  6934     1E22                     	;# 
  6935     1E23                     	;# 
  6936     1E24                     	;# 
  6937     1E25                     	;# 
  6938     1E26                     	;# 
  6939     1E27                     	;# 
  6940     1E28                     	;# 
  6941     1E29                     	;# 
  6942     1E2A                     	;# 
  6943     1E2B                     	;# 
  6944     1E2C                     	;# 
  6945     1E2D                     	;# 
  6946     1E2E                     	;# 
  6947     1E2F                     	;# 
  6948     1E30                     	;# 
  6949     1E31                     	;# 
  6950     1E32                     	;# 
  6951     1E33                     	;# 
  6952     1E34                     	;# 
  6953     1E35                     	;# 
  6954     1E36                     	;# 
  6955     1E37                     	;# 
  6956     1E8F                     	;# 
  6957     1E90                     	;# 
  6958     1E91                     	;# 
  6959     1E92                     	;# 
  6960     1E93                     	;# 
  6961     1E94                     	;# 
  6962     1E95                     	;# 
  6963     1E96                     	;# 
  6964     1E97                     	;# 
  6965     1E9C                     	;# 
  6966     1E9D                     	;# 
  6967     1E9E                     	;# 
  6968     1EA1                     	;# 
  6969     1EA2                     	;# 
  6970     1EA3                     	;# 
  6971     1EA4                     	;# 
  6972     1EA5                     	;# 
  6973     1EA9                     	;# 
  6974     1EAA                     	;# 
  6975     1EAB                     	;# 
  6976     1EAC                     	;# 
  6977     1EB1                     	;# 
  6978     1EB2                     	;# 
  6979     1EB3                     	;# 
  6980     1EB8                     	;# 
  6981     1EB9                     	;# 
  6982     1EBA                     	;# 
  6983     1EBB                     	;# 
  6984     1EBC                     	;# 
  6985     1EBD                     	;# 
  6986     1EBE                     	;# 
  6987     1EC3                     	;# 
  6988     1EC5                     	;# 
  6989     1EC6                     	;# 
  6990     1EC7                     	;# 
  6991     1EC8                     	;# 
  6992     1EC9                     	;# 
  6993     1ECA                     	;# 
  6994     1ECB                     	;# 
  6995     1ECC                     	;# 
  6996     1ECD                     	;# 
  6997     1ECE                     	;# 
  6998     1F10                     	;# 
  6999     1F11                     	;# 
  7000     1F12                     	;# 
  7001     1F13                     	;# 
  7002     1F14                     	;# 
  7003     1F15                     	;# 
  7004     1F16                     	;# 
  7005     1F17                     	;# 
  7006     1F18                     	;# 
  7007     1F19                     	;# 
  7008     1F1A                     	;# 
  7009     1F1B                     	;# 
  7010     1F1C                     	;# 
  7011     1F1D                     	;# 
  7012     1F1E                     	;# 
  7013     1F1F                     	;# 
  7014     1F20                     	;# 
  7015     1F21                     	;# 
  7016     1F22                     	;# 
  7017     1F23                     	;# 
  7018     1F24                     	;# 
  7019     1F25                     	;# 
  7020     1F26                     	;# 
  7021     1F27                     	;# 
  7022     1F38                     	;# 
  7023     1F39                     	;# 
  7024     1F3A                     	;# 
  7025     1F3B                     	;# 
  7026     1F3C                     	;# 
  7027     1F3D                     	;# 
  7028     1F3E                     	;# 
  7029     1F3F                     	;# 
  7030     1F43                     	;# 
  7031     1F44                     	;# 
  7032     1F45                     	;# 
  7033     1F46                     	;# 
  7034     1F47                     	;# 
  7035     1F48                     	;# 
  7036     1F49                     	;# 
  7037     1F4A                     	;# 
  7038     1F4E                     	;# 
  7039     1F4F                     	;# 
  7040     1F50                     	;# 
  7041     1F51                     	;# 
  7042     1F52                     	;# 
  7043     1F53                     	;# 
  7044     1F54                     	;# 
  7045     1F55                     	;# 
  7046     1F65                     	;# 
  7047     1F66                     	;# 
  7048     1F67                     	;# 
  7049     1F68                     	;# 
  7050     1F69                     	;# 
  7051     1F6A                     	;# 
  7052     1F6B                     	;# 
  7053     1FE4                     	;# 
  7054     1FE5                     	;# 
  7055     1FE6                     	;# 
  7056     1FE7                     	;# 
  7057     1FE8                     	;# 
  7058     1FE8                     	;# 
  7059     1FE9                     	;# 
  7060     1FEA                     	;# 
  7061     1FEB                     	;# 
  7062     1FED                     	;# 
  7063     1FEE                     	;# 
  7064     1FEF                     	;# 
  7065     0000                     	;# 
  7066     0001                     	;# 
  7067     0002                     	;# 
  7068     0003                     	;# 
  7069     0004                     	;# 
  7070     0005                     	;# 
  7071     0006                     	;# 
  7072     0007                     	;# 
  7073     0008                     	;# 
  7074     0009                     	;# 
  7075     000A                     	;# 
  7076     000B                     	;# 
  7077     000C                     	;# 
  7078     000D                     	;# 
  7079     000E                     	;# 
  7080     0010                     	;# 
  7081     0012                     	;# 
  7082     0013                     	;# 
  7083     0014                     	;# 
  7084     0016                     	;# 
  7085     0018                     	;# 
  7086     0019                     	;# 
  7087     001A                     	;# 
  7088     001C                     	;# 
  7089     008C                     	;# 
  7090     008C                     	;# 
  7091     008D                     	;# 
  7092     008E                     	;# 
  7093     008E                     	;# 
  7094     008F                     	;# 
  7095     0090                     	;# 
  7096     0090                     	;# 
  7097     0091                     	;# 
  7098     0092                     	;# 
  7099     0092                     	;# 
  7100     0093                     	;# 
  7101     0094                     	;# 
  7102     0094                     	;# 
  7103     0095                     	;# 
  7104     0096                     	;# 
  7105     0096                     	;# 
  7106     0097                     	;# 
  7107     0098                     	;# 
  7108     0099                     	;# 
  7109     009A                     	;# 
  7110     009B                     	;# 
  7111     009B                     	;# 
  7112     009C                     	;# 
  7113     009D                     	;# 
  7114     009D                     	;# 
  7115     009E                     	;# 
  7116     009F                     	;# 
  7117     010C                     	;# 
  7118     010C                     	;# 
  7119     010D                     	;# 
  7120     010E                     	;# 
  7121     010F                     	;# 
  7122     010F                     	;# 
  7123     0110                     	;# 
  7124     0111                     	;# 
  7125     0112                     	;# 
  7126     0113                     	;# 
  7127     0114                     	;# 
  7128     0115                     	;# 
  7129     0116                     	;# 
  7130     0117                     	;# 
  7131     0118                     	;# 
  7132     0119                     	;# 
  7133     0119                     	;# 
  7134     0119                     	;# 
  7135     011A                     	;# 
  7136     011A                     	;# 
  7137     011A                     	;# 
  7138     011B                     	;# 
  7139     011B                     	;# 
  7140     011B                     	;# 
  7141     011B                     	;# 
  7142     011B                     	;# 
  7143     011C                     	;# 
  7144     011C                     	;# 
  7145     011C                     	;# 
  7146     011D                     	;# 
  7147     011D                     	;# 
  7148     011D                     	;# 
  7149     011E                     	;# 
  7150     011E                     	;# 
  7151     011E                     	;# 
  7152     011F                     	;# 
  7153     011F                     	;# 
  7154     011F                     	;# 
  7155     011F                     	;# 
  7156     011F                     	;# 
  7157     018C                     	;# 
  7158     018D                     	;# 
  7159     018E                     	;# 
  7160     018F                     	;# 
  7161     0190                     	;# 
  7162     0191                     	;# 
  7163     0192                     	;# 
  7164     0196                     	;# 
  7165     0197                     	;# 
  7166     0198                     	;# 
  7167     0199                     	;# 
  7168     019A                     	;# 
  7169     019B                     	;# 
  7170     019C                     	;# 
  7171     020C                     	;# 
  7172     020D                     	;# 
  7173     020E                     	;# 
  7174     020E                     	;# 
  7175     020F                     	;# 
  7176     020F                     	;# 
  7177     0210                     	;# 
  7178     0210                     	;# 
  7179     0211                     	;# 
  7180     0211                     	;# 
  7181     0212                     	;# 
  7182     0213                     	;# 
  7183     0214                     	;# 
  7184     0214                     	;# 
  7185     0215                     	;# 
  7186     0215                     	;# 
  7187     0216                     	;# 
  7188     0216                     	;# 
  7189     0217                     	;# 
  7190     0217                     	;# 
  7191     0218                     	;# 
  7192     0219                     	;# 
  7193     021A                     	;# 
  7194     021A                     	;# 
  7195     021B                     	;# 
  7196     021B                     	;# 
  7197     021C                     	;# 
  7198     021C                     	;# 
  7199     021D                     	;# 
  7200     021D                     	;# 
  7201     021E                     	;# 
  7202     021F                     	;# 
  7203     028C                     	;# 
  7204     028C                     	;# 
  7205     028D                     	;# 
  7206     028D                     	;# 
  7207     028E                     	;# 
  7208     028F                     	;# 
  7209     0290                     	;# 
  7210     0291                     	;# 
  7211     0292                     	;# 
  7212     0292                     	;# 
  7213     0293                     	;# 
  7214     0293                     	;# 
  7215     0294                     	;# 
  7216     0295                     	;# 
  7217     0296                     	;# 
  7218     0297                     	;# 
  7219     0298                     	;# 
  7220     0298                     	;# 
  7221     0299                     	;# 
  7222     0299                     	;# 
  7223     029A                     	;# 
  7224     029B                     	;# 
  7225     029C                     	;# 
  7226     029D                     	;# 
  7227     029F                     	;# 
  7228     030C                     	;# 
  7229     030C                     	;# 
  7230     030D                     	;# 
  7231     030E                     	;# 
  7232     030F                     	;# 
  7233     0310                     	;# 
  7234     0310                     	;# 
  7235     0311                     	;# 
  7236     0312                     	;# 
  7237     0313                     	;# 
  7238     0314                     	;# 
  7239     0314                     	;# 
  7240     0315                     	;# 
  7241     0316                     	;# 
  7242     0317                     	;# 
  7243     0318                     	;# 
  7244     0318                     	;# 
  7245     0319                     	;# 
  7246     031A                     	;# 
  7247     031B                     	;# 
  7248     031C                     	;# 
  7249     031C                     	;# 
  7250     031D                     	;# 
  7251     031E                     	;# 
  7252     031F                     	;# 
  7253     038C                     	;# 
  7254     038C                     	;# 
  7255     038D                     	;# 
  7256     038E                     	;# 
  7257     0390                     	;# 
  7258     0390                     	;# 
  7259     0391                     	;# 
  7260     0392                     	;# 
  7261     048C                     	;# 
  7262     048C                     	;# 
  7263     048D                     	;# 
  7264     048E                     	;# 
  7265     048F                     	;# 
  7266     048F                     	;# 
  7267     0490                     	;# 
  7268     0491                     	;# 
  7269     0492                     	;# 
  7270     0492                     	;# 
  7271     0493                     	;# 
  7272     0494                     	;# 
  7273     0495                     	;# 
  7274     0495                     	;# 
  7275     0496                     	;# 
  7276     0497                     	;# 
  7277     0498                     	;# 
  7278     0499                     	;# 
  7279     049A                     	;# 
  7280     049B                     	;# 
  7281     049C                     	;# 
  7282     049D                     	;# 
  7283     050C                     	;# 
  7284     050C                     	;# 
  7285     050D                     	;# 
  7286     050E                     	;# 
  7287     050F                     	;# 
  7288     050F                     	;# 
  7289     0510                     	;# 
  7290     0511                     	;# 
  7291     0512                     	;# 
  7292     0512                     	;# 
  7293     0513                     	;# 
  7294     0514                     	;# 
  7295     0515                     	;# 
  7296     0515                     	;# 
  7297     0516                     	;# 
  7298     0517                     	;# 
  7299     0518                     	;# 
  7300     0519                     	;# 
  7301     051A                     	;# 
  7302     051B                     	;# 
  7303     051C                     	;# 
  7304     051D                     	;# 
  7305     058C                     	;# 
  7306     058C                     	;# 
  7307     058D                     	;# 
  7308     058E                     	;# 
  7309     058F                     	;# 
  7310     058F                     	;# 
  7311     0590                     	;# 
  7312     0591                     	;# 
  7313     0592                     	;# 
  7314     0593                     	;# 
  7315     059C                     	;# 
  7316     059C                     	;# 
  7317     059D                     	;# 
  7318     059D                     	;# 
  7319     059E                     	;# 
  7320     059F                     	;# 
  7321     060C                     	;# 
  7322     060C                     	;# 
  7323     060D                     	;# 
  7324     060D                     	;# 
  7325     060E                     	;# 
  7326     060F                     	;# 
  7327     0610                     	;# 
  7328     0611                     	;# 
  7329     0612                     	;# 
  7330     0613                     	;# 
  7331     0614                     	;# 
  7332     0616                     	;# 
  7333     0616                     	;# 
  7334     0617                     	;# 
  7335     0617                     	;# 
  7336     0618                     	;# 
  7337     0619                     	;# 
  7338     061A                     	;# 
  7339     061B                     	;# 
  7340     061C                     	;# 
  7341     061D                     	;# 
  7342     061E                     	;# 
  7343     068C                     	;# 
  7344     068D                     	;# 
  7345     068E                     	;# 
  7346     068F                     	;# 
  7347     0690                     	;# 
  7348     0691                     	;# 
  7349     0692                     	;# 
  7350     0693                     	;# 
  7351     0694                     	;# 
  7352     070C                     	;# 
  7353     070D                     	;# 
  7354     070E                     	;# 
  7355     070F                     	;# 
  7356     0710                     	;# 
  7357     0711                     	;# 
  7358     0712                     	;# 
  7359     0713                     	;# 
  7360     0714                     	;# 
  7361     0716                     	;# 
  7362     0717                     	;# 
  7363     0718                     	;# 
  7364     0719                     	;# 
  7365     071A                     	;# 
  7366     071B                     	;# 
  7367     071C                     	;# 
  7368     071D                     	;# 
  7369     071E                     	;# 
  7370     0796                     	;# 
  7371     0797                     	;# 
  7372     0798                     	;# 
  7373     0799                     	;# 
  7374     079A                     	;# 
  7375     079B                     	;# 
  7376     079C                     	;# 
  7377     079D                     	;# 
  7378     080C                     	;# 
  7379     080D                     	;# 
  7380     080E                     	;# 
  7381     080F                     	;# 
  7382     0810                     	;# 
  7383     0811                     	;# 
  7384     0813                     	;# 
  7385     0814                     	;# 
  7386     081A                     	;# 
  7387     081A                     	;# 
  7388     081B                     	;# 
  7389     081C                     	;# 
  7390     081C                     	;# 
  7391     081D                     	;# 
  7392     081E                     	;# 
  7393     081F                     	;# 
  7394     088C                     	;# 
  7395     088D                     	;# 
  7396     088E                     	;# 
  7397     088F                     	;# 
  7398     0890                     	;# 
  7399     0891                     	;# 
  7400     0892                     	;# 
  7401     0893                     	;# 
  7402     0895                     	;# 
  7403     0896                     	;# 
  7404     0897                     	;# 
  7405     0898                     	;# 
  7406     0899                     	;# 
  7407     089A                     	;# 
  7408     089B                     	;# 
  7409     090C                     	;# 
  7410     090E                     	;# 
  7411     090F                     	;# 
  7412     091F                     	;# 
  7413     098F                     	;# 
  7414     098F                     	;# 
  7415     0990                     	;# 
  7416     0991                     	;# 
  7417     0992                     	;# 
  7418     0993                     	;# 
  7419     0994                     	;# 
  7420     0995                     	;# 
  7421     0996                     	;# 
  7422     0997                     	;# 
  7423     0A19                     	;# 
  7424     0A19                     	;# 
  7425     0A1A                     	;# 
  7426     0A1A                     	;# 
  7427     0A1B                     	;# 
  7428     0A1B                     	;# 
  7429     0A1B                     	;# 
  7430     0A1C                     	;# 
  7431     0A1C                     	;# 
  7432     0A1D                     	;# 
  7433     0A1D                     	;# 
  7434     0A1E                     	;# 
  7435     0A1E                     	;# 
  7436     0A1F                     	;# 
  7437     0A1F                     	;# 
  7438     0A1F                     	;# 
  7439     1E0F                     	;# 
  7440     1E10                     	;# 
  7441     1E11                     	;# 
  7442     1E12                     	;# 
  7443     1E13                     	;# 
  7444     1E14                     	;# 
  7445     1E15                     	;# 
  7446     1E16                     	;# 
  7447     1E17                     	;# 
  7448     1E18                     	;# 
  7449     1E19                     	;# 
  7450     1E1A                     	;# 
  7451     1E1B                     	;# 
  7452     1E1C                     	;# 
  7453     1E1D                     	;# 
  7454     1E1E                     	;# 
  7455     1E1F                     	;# 
  7456     1E20                     	;# 
  7457     1E21                     	;# 
  7458     1E22                     	;# 
  7459     1E23                     	;# 
  7460     1E24                     	;# 
  7461     1E25                     	;# 
  7462     1E26                     	;# 
  7463     1E27                     	;# 
  7464     1E28                     	;# 
  7465     1E29                     	;# 
  7466     1E2A                     	;# 
  7467     1E2B                     	;# 
  7468     1E2C                     	;# 
  7469     1E2D                     	;# 
  7470     1E2E                     	;# 
  7471     1E2F                     	;# 
  7472     1E30                     	;# 
  7473     1E31                     	;# 
  7474     1E32                     	;# 
  7475     1E33                     	;# 
  7476     1E34                     	;# 
  7477     1E35                     	;# 
  7478     1E36                     	;# 
  7479     1E37                     	;# 
  7480     1E8F                     	;# 
  7481     1E90                     	;# 
  7482     1E91                     	;# 
  7483     1E92                     	;# 
  7484     1E93                     	;# 
  7485     1E94                     	;# 
  7486     1E95                     	;# 
  7487     1E96                     	;# 
  7488     1E97                     	;# 
  7489     1E9C                     	;# 
  7490     1E9D                     	;# 
  7491     1E9E                     	;# 
  7492     1EA1                     	;# 
  7493     1EA2                     	;# 
  7494     1EA3                     	;# 
  7495     1EA4                     	;# 
  7496     1EA5                     	;# 
  7497     1EA9                     	;# 
  7498     1EAA                     	;# 
  7499     1EAB                     	;# 
  7500     1EAC                     	;# 
  7501     1EB1                     	;# 
  7502     1EB2                     	;# 
  7503     1EB3                     	;# 
  7504     1EB8                     	;# 
  7505     1EB9                     	;# 
  7506     1EBA                     	;# 
  7507     1EBB                     	;# 
  7508     1EBC                     	;# 
  7509     1EBD                     	;# 
  7510     1EBE                     	;# 
  7511     1EC3                     	;# 
  7512     1EC5                     	;# 
  7513     1EC6                     	;# 
  7514     1EC7                     	;# 
  7515     1EC8                     	;# 
  7516     1EC9                     	;# 
  7517     1ECA                     	;# 
  7518     1ECB                     	;# 
  7519     1ECC                     	;# 
  7520     1ECD                     	;# 
  7521     1ECE                     	;# 
  7522     1F10                     	;# 
  7523     1F11                     	;# 
  7524     1F12                     	;# 
  7525     1F13                     	;# 
  7526     1F14                     	;# 
  7527     1F15                     	;# 
  7528     1F16                     	;# 
  7529     1F17                     	;# 
  7530     1F18                     	;# 
  7531     1F19                     	;# 
  7532     1F1A                     	;# 
  7533     1F1B                     	;# 
  7534     1F1C                     	;# 
  7535     1F1D                     	;# 
  7536     1F1E                     	;# 
  7537     1F1F                     	;# 
  7538     1F20                     	;# 
  7539     1F21                     	;# 
  7540     1F22                     	;# 
  7541     1F23                     	;# 
  7542     1F24                     	;# 
  7543     1F25                     	;# 
  7544     1F26                     	;# 
  7545     1F27                     	;# 
  7546     1F38                     	;# 
  7547     1F39                     	;# 
  7548     1F3A                     	;# 
  7549     1F3B                     	;# 
  7550     1F3C                     	;# 
  7551     1F3D                     	;# 
  7552     1F3E                     	;# 
  7553     1F3F                     	;# 
  7554     1F43                     	;# 
  7555     1F44                     	;# 
  7556     1F45                     	;# 
  7557     1F46                     	;# 
  7558     1F47                     	;# 
  7559     1F48                     	;# 
  7560     1F49                     	;# 
  7561     1F4A                     	;# 
  7562     1F4E                     	;# 
  7563     1F4F                     	;# 
  7564     1F50                     	;# 
  7565     1F51                     	;# 
  7566     1F52                     	;# 
  7567     1F53                     	;# 
  7568     1F54                     	;# 
  7569     1F55                     	;# 
  7570     1F65                     	;# 
  7571     1F66                     	;# 
  7572     1F67                     	;# 
  7573     1F68                     	;# 
  7574     1F69                     	;# 
  7575     1F6A                     	;# 
  7576     1F6B                     	;# 
  7577     1FE4                     	;# 
  7578     1FE5                     	;# 
  7579     1FE6                     	;# 
  7580     1FE7                     	;# 
  7581     1FE8                     	;# 
  7582     1FE8                     	;# 
  7583     1FE9                     	;# 
  7584     1FEA                     	;# 
  7585     1FEB                     	;# 
  7586     1FED                     	;# 
  7587     1FEE                     	;# 
  7588     1FEF                     	;# 
  7589     0000                     	;# 
  7590     0001                     	;# 
  7591     0002                     	;# 
  7592     0003                     	;# 
  7593     0004                     	;# 
  7594     0005                     	;# 
  7595     0006                     	;# 
  7596     0007                     	;# 
  7597     0008                     	;# 
  7598     0009                     	;# 
  7599     000A                     	;# 
  7600     000B                     	;# 
  7601     000C                     	;# 
  7602     000D                     	;# 
  7603     000E                     	;# 
  7604     0010                     	;# 
  7605     0012                     	;# 
  7606     0013                     	;# 
  7607     0014                     	;# 
  7608     0016                     	;# 
  7609     0018                     	;# 
  7610     0019                     	;# 
  7611     001A                     	;# 
  7612     001C                     	;# 
  7613     008C                     	;# 
  7614     008C                     	;# 
  7615     008D                     	;# 
  7616     008E                     	;# 
  7617     008E                     	;# 
  7618     008F                     	;# 
  7619     0090                     	;# 
  7620     0090                     	;# 
  7621     0091                     	;# 
  7622     0092                     	;# 
  7623     0092                     	;# 
  7624     0093                     	;# 
  7625     0094                     	;# 
  7626     0094                     	;# 
  7627     0095                     	;# 
  7628     0096                     	;# 
  7629     0096                     	;# 
  7630     0097                     	;# 
  7631     0098                     	;# 
  7632     0099                     	;# 
  7633     009A                     	;# 
  7634     009B                     	;# 
  7635     009B                     	;# 
  7636     009C                     	;# 
  7637     009D                     	;# 
  7638     009D                     	;# 
  7639     009E                     	;# 
  7640     009F                     	;# 
  7641     010C                     	;# 
  7642     010C                     	;# 
  7643     010D                     	;# 
  7644     010E                     	;# 
  7645     010F                     	;# 
  7646     010F                     	;# 
  7647     0110                     	;# 
  7648     0111                     	;# 
  7649     0112                     	;# 
  7650     0113                     	;# 
  7651     0114                     	;# 
  7652     0115                     	;# 
  7653     0116                     	;# 
  7654     0117                     	;# 
  7655     0118                     	;# 
  7656     0119                     	;# 
  7657     0119                     	;# 
  7658     0119                     	;# 
  7659     011A                     	;# 
  7660     011A                     	;# 
  7661     011A                     	;# 
  7662     011B                     	;# 
  7663     011B                     	;# 
  7664     011B                     	;# 
  7665     011B                     	;# 
  7666     011B                     	;# 
  7667     011C                     	;# 
  7668     011C                     	;# 
  7669     011C                     	;# 
  7670     011D                     	;# 
  7671     011D                     	;# 
  7672     011D                     	;# 
  7673     011E                     	;# 
  7674     011E                     	;# 
  7675     011E                     	;# 
  7676     011F                     	;# 
  7677     011F                     	;# 
  7678     011F                     	;# 
  7679     011F                     	;# 
  7680     011F                     	;# 
  7681     018C                     	;# 
  7682     018D                     	;# 
  7683     018E                     	;# 
  7684     018F                     	;# 
  7685     0190                     	;# 
  7686     0191                     	;# 
  7687     0192                     	;# 
  7688     0196                     	;# 
  7689     0197                     	;# 
  7690     0198                     	;# 
  7691     0199                     	;# 
  7692     019A                     	;# 
  7693     019B                     	;# 
  7694     019C                     	;# 
  7695     020C                     	;# 
  7696     020D                     	;# 
  7697     020E                     	;# 
  7698     020E                     	;# 
  7699     020F                     	;# 
  7700     020F                     	;# 
  7701     0210                     	;# 
  7702     0210                     	;# 
  7703     0211                     	;# 
  7704     0211                     	;# 
  7705     0212                     	;# 
  7706     0213                     	;# 
  7707     0214                     	;# 
  7708     0214                     	;# 
  7709     0215                     	;# 
  7710     0215                     	;# 
  7711     0216                     	;# 
  7712     0216                     	;# 
  7713     0217                     	;# 
  7714     0217                     	;# 
  7715     0218                     	;# 
  7716     0219                     	;# 
  7717     021A                     	;# 
  7718     021A                     	;# 
  7719     021B                     	;# 
  7720     021B                     	;# 
  7721     021C                     	;# 
  7722     021C                     	;# 
  7723     021D                     	;# 
  7724     021D                     	;# 
  7725     021E                     	;# 
  7726     021F                     	;# 
  7727     028C                     	;# 
  7728     028C                     	;# 
  7729     028D                     	;# 
  7730     028D                     	;# 
  7731     028E                     	;# 
  7732     028F                     	;# 
  7733     0290                     	;# 
  7734     0291                     	;# 
  7735     0292                     	;# 
  7736     0292                     	;# 
  7737     0293                     	;# 
  7738     0293                     	;# 
  7739     0294                     	;# 
  7740     0295                     	;# 
  7741     0296                     	;# 
  7742     0297                     	;# 
  7743     0298                     	;# 
  7744     0298                     	;# 
  7745     0299                     	;# 
  7746     0299                     	;# 
  7747     029A                     	;# 
  7748     029B                     	;# 
  7749     029C                     	;# 
  7750     029D                     	;# 
  7751     029F                     	;# 
  7752     030C                     	;# 
  7753     030C                     	;# 
  7754     030D                     	;# 
  7755     030E                     	;# 
  7756     030F                     	;# 
  7757     0310                     	;# 
  7758     0310                     	;# 
  7759     0311                     	;# 
  7760     0312                     	;# 
  7761     0313                     	;# 
  7762     0314                     	;# 
  7763     0314                     	;# 
  7764     0315                     	;# 
  7765     0316                     	;# 
  7766     0317                     	;# 
  7767     0318                     	;# 
  7768     0318                     	;# 
  7769     0319                     	;# 
  7770     031A                     	;# 
  7771     031B                     	;# 
  7772     031C                     	;# 
  7773     031C                     	;# 
  7774     031D                     	;# 
  7775     031E                     	;# 
  7776     031F                     	;# 
  7777     038C                     	;# 
  7778     038C                     	;# 
  7779     038D                     	;# 
  7780     038E                     	;# 
  7781     0390                     	;# 
  7782     0390                     	;# 
  7783     0391                     	;# 
  7784     0392                     	;# 
  7785     048C                     	;# 
  7786     048C                     	;# 
  7787     048D                     	;# 
  7788     048E                     	;# 
  7789     048F                     	;# 
  7790     048F                     	;# 
  7791     0490                     	;# 
  7792     0491                     	;# 
  7793     0492                     	;# 
  7794     0492                     	;# 
  7795     0493                     	;# 
  7796     0494                     	;# 
  7797     0495                     	;# 
  7798     0495                     	;# 
  7799     0496                     	;# 
  7800     0497                     	;# 
  7801     0498                     	;# 
  7802     0499                     	;# 
  7803     049A                     	;# 
  7804     049B                     	;# 
  7805     049C                     	;# 
  7806     049D                     	;# 
  7807     050C                     	;# 
  7808     050C                     	;# 
  7809     050D                     	;# 
  7810     050E                     	;# 
  7811     050F                     	;# 
  7812     050F                     	;# 
  7813     0510                     	;# 
  7814     0511                     	;# 
  7815     0512                     	;# 
  7816     0512                     	;# 
  7817     0513                     	;# 
  7818     0514                     	;# 
  7819     0515                     	;# 
  7820     0515                     	;# 
  7821     0516                     	;# 
  7822     0517                     	;# 
  7823     0518                     	;# 
  7824     0519                     	;# 
  7825     051A                     	;# 
  7826     051B                     	;# 
  7827     051C                     	;# 
  7828     051D                     	;# 
  7829     058C                     	;# 
  7830     058C                     	;# 
  7831     058D                     	;# 
  7832     058E                     	;# 
  7833     058F                     	;# 
  7834     058F                     	;# 
  7835     0590                     	;# 
  7836     0591                     	;# 
  7837     0592                     	;# 
  7838     0593                     	;# 
  7839     059C                     	;# 
  7840     059C                     	;# 
  7841     059D                     	;# 
  7842     059D                     	;# 
  7843     059E                     	;# 
  7844     059F                     	;# 
  7845     060C                     	;# 
  7846     060C                     	;# 
  7847     060D                     	;# 
  7848     060D                     	;# 
  7849     060E                     	;# 
  7850     060F                     	;# 
  7851     0610                     	;# 
  7852     0611                     	;# 
  7853     0612                     	;# 
  7854     0613                     	;# 
  7855     0614                     	;# 
  7856     0616                     	;# 
  7857     0616                     	;# 
  7858     0617                     	;# 
  7859     0617                     	;# 
  7860     0618                     	;# 
  7861     0619                     	;# 
  7862     061A                     	;# 
  7863     061B                     	;# 
  7864     061C                     	;# 
  7865     061D                     	;# 
  7866     061E                     	;# 
  7867     068C                     	;# 
  7868     068D                     	;# 
  7869     068E                     	;# 
  7870     068F                     	;# 
  7871     0690                     	;# 
  7872     0691                     	;# 
  7873     0692                     	;# 
  7874     0693                     	;# 
  7875     0694                     	;# 
  7876     070C                     	;# 
  7877     070D                     	;# 
  7878     070E                     	;# 
  7879     070F                     	;# 
  7880     0710                     	;# 
  7881     0711                     	;# 
  7882     0712                     	;# 
  7883     0713                     	;# 
  7884     0714                     	;# 
  7885     0716                     	;# 
  7886     0717                     	;# 
  7887     0718                     	;# 
  7888     0719                     	;# 
  7889     071A                     	;# 
  7890     071B                     	;# 
  7891     071C                     	;# 
  7892     071D                     	;# 
  7893     071E                     	;# 
  7894     0796                     	;# 
  7895     0797                     	;# 
  7896     0798                     	;# 
  7897     0799                     	;# 
  7898     079A                     	;# 
  7899     079B                     	;# 
  7900     079C                     	;# 
  7901     079D                     	;# 
  7902     080C                     	;# 
  7903     080D                     	;# 
  7904     080E                     	;# 
  7905     080F                     	;# 
  7906     0810                     	;# 
  7907     0811                     	;# 
  7908     0813                     	;# 
  7909     0814                     	;# 
  7910     081A                     	;# 
  7911     081A                     	;# 
  7912     081B                     	;# 
  7913     081C                     	;# 
  7914     081C                     	;# 
  7915     081D                     	;# 
  7916     081E                     	;# 
  7917     081F                     	;# 
  7918     088C                     	;# 
  7919     088D                     	;# 
  7920     088E                     	;# 
  7921     088F                     	;# 
  7922     0890                     	;# 
  7923     0891                     	;# 
  7924     0892                     	;# 
  7925     0893                     	;# 
  7926     0895                     	;# 
  7927     0896                     	;# 
  7928     0897                     	;# 
  7929     0898                     	;# 
  7930     0899                     	;# 
  7931     089A                     	;# 
  7932     089B                     	;# 
  7933     090C                     	;# 
  7934     090E                     	;# 
  7935     090F                     	;# 
  7936     091F                     	;# 
  7937     098F                     	;# 
  7938     098F                     	;# 
  7939     0990                     	;# 
  7940     0991                     	;# 
  7941     0992                     	;# 
  7942     0993                     	;# 
  7943     0994                     	;# 
  7944     0995                     	;# 
  7945     0996                     	;# 
  7946     0997                     	;# 
  7947     0A19                     	;# 
  7948     0A19                     	;# 
  7949     0A1A                     	;# 
  7950     0A1A                     	;# 
  7951     0A1B                     	;# 
  7952     0A1B                     	;# 
  7953     0A1B                     	;# 
  7954     0A1C                     	;# 
  7955     0A1C                     	;# 
  7956     0A1D                     	;# 
  7957     0A1D                     	;# 
  7958     0A1E                     	;# 
  7959     0A1E                     	;# 
  7960     0A1F                     	;# 
  7961     0A1F                     	;# 
  7962     0A1F                     	;# 
  7963     1E0F                     	;# 
  7964     1E10                     	;# 
  7965     1E11                     	;# 
  7966     1E12                     	;# 
  7967     1E13                     	;# 
  7968     1E14                     	;# 
  7969     1E15                     	;# 
  7970     1E16                     	;# 
  7971     1E17                     	;# 
  7972     1E18                     	;# 
  7973     1E19                     	;# 
  7974     1E1A                     	;# 
  7975     1E1B                     	;# 
  7976     1E1C                     	;# 
  7977     1E1D                     	;# 
  7978     1E1E                     	;# 
  7979     1E1F                     	;# 
  7980     1E20                     	;# 
  7981     1E21                     	;# 
  7982     1E22                     	;# 
  7983     1E23                     	;# 
  7984     1E24                     	;# 
  7985     1E25                     	;# 
  7986     1E26                     	;# 
  7987     1E27                     	;# 
  7988     1E28                     	;# 
  7989     1E29                     	;# 
  7990     1E2A                     	;# 
  7991     1E2B                     	;# 
  7992     1E2C                     	;# 
  7993     1E2D                     	;# 
  7994     1E2E                     	;# 
  7995     1E2F                     	;# 
  7996     1E30                     	;# 
  7997     1E31                     	;# 
  7998     1E32                     	;# 
  7999     1E33                     	;# 
  8000     1E34                     	;# 
  8001     1E35                     	;# 
  8002     1E36                     	;# 
  8003     1E37                     	;# 
  8004     1E8F                     	;# 
  8005     1E90                     	;# 
  8006     1E91                     	;# 
  8007     1E92                     	;# 
  8008     1E93                     	;# 
  8009     1E94                     	;# 
  8010     1E95                     	;# 
  8011     1E96                     	;# 
  8012     1E97                     	;# 
  8013     1E9C                     	;# 
  8014     1E9D                     	;# 
  8015     1E9E                     	;# 
  8016     1EA1                     	;# 
  8017     1EA2                     	;# 
  8018     1EA3                     	;# 
  8019     1EA4                     	;# 
  8020     1EA5                     	;# 
  8021     1EA9                     	;# 
  8022     1EAA                     	;# 
  8023     1EAB                     	;# 
  8024     1EAC                     	;# 
  8025     1EB1                     	;# 
  8026     1EB2                     	;# 
  8027     1EB3                     	;# 
  8028     1EB8                     	;# 
  8029     1EB9                     	;# 
  8030     1EBA                     	;# 
  8031     1EBB                     	;# 
  8032     1EBC                     	;# 
  8033     1EBD                     	;# 
  8034     1EBE                     	;# 
  8035     1EC3                     	;# 
  8036     1EC5                     	;# 
  8037     1EC6                     	;# 
  8038     1EC7                     	;# 
  8039     1EC8                     	;# 
  8040     1EC9                     	;# 
  8041     1ECA                     	;# 
  8042     1ECB                     	;# 
  8043     1ECC                     	;# 
  8044     1ECD                     	;# 
  8045     1ECE                     	;# 
  8046     1F10                     	;# 
  8047     1F11                     	;# 
  8048     1F12                     	;# 
  8049     1F13                     	;# 
  8050     1F14                     	;# 
  8051     1F15                     	;# 
  8052     1F16                     	;# 
  8053     1F17                     	;# 
  8054     1F18                     	;# 
  8055     1F19                     	;# 
  8056     1F1A                     	;# 
  8057     1F1B                     	;# 
  8058     1F1C                     	;# 
  8059     1F1D                     	;# 
  8060     1F1E                     	;# 
  8061     1F1F                     	;# 
  8062     1F20                     	;# 
  8063     1F21                     	;# 
  8064     1F22                     	;# 
  8065     1F23                     	;# 
  8066     1F24                     	;# 
  8067     1F25                     	;# 
  8068     1F26                     	;# 
  8069     1F27                     	;# 
  8070     1F38                     	;# 
  8071     1F39                     	;# 
  8072     1F3A                     	;# 
  8073     1F3B                     	;# 
  8074     1F3C                     	;# 
  8075     1F3D                     	;# 
  8076     1F3E                     	;# 
  8077     1F3F                     	;# 
  8078     1F43                     	;# 
  8079     1F44                     	;# 
  8080     1F45                     	;# 
  8081     1F46                     	;# 
  8082     1F47                     	;# 
  8083     1F48                     	;# 
  8084     1F49                     	;# 
  8085     1F4A                     	;# 
  8086     1F4E                     	;# 
  8087     1F4F                     	;# 
  8088     1F50                     	;# 
  8089     1F51                     	;# 
  8090     1F52                     	;# 
  8091     1F53                     	;# 
  8092     1F54                     	;# 
  8093     1F55                     	;# 
  8094     1F65                     	;# 
  8095     1F66                     	;# 
  8096     1F67                     	;# 
  8097     1F68                     	;# 
  8098     1F69                     	;# 
  8099     1F6A                     	;# 
  8100     1F6B                     	;# 
  8101     1FE4                     	;# 
  8102     1FE5                     	;# 
  8103     1FE6                     	;# 
  8104     1FE7                     	;# 
  8105     1FE8                     	;# 
  8106     1FE8                     	;# 
  8107     1FE9                     	;# 
  8108     1FEA                     	;# 
  8109     1FEB                     	;# 
  8110     1FED                     	;# 
  8111     1FEE                     	;# 
  8112     1FEF                     	;# 
  8113     0000                     	;# 
  8114     0001                     	;# 
  8115     0002                     	;# 
  8116     0003                     	;# 
  8117     0004                     	;# 
  8118     0005                     	;# 
  8119     0006                     	;# 
  8120     0007                     	;# 
  8121     0008                     	;# 
  8122     0009                     	;# 
  8123     000A                     	;# 
  8124     000B                     	;# 
  8125     000C                     	;# 
  8126     000D                     	;# 
  8127     000E                     	;# 
  8128     0010                     	;# 
  8129     0012                     	;# 
  8130     0013                     	;# 
  8131     0014                     	;# 
  8132     0016                     	;# 
  8133     0018                     	;# 
  8134     0019                     	;# 
  8135     001A                     	;# 
  8136     001C                     	;# 
  8137     008C                     	;# 
  8138     008C                     	;# 
  8139     008D                     	;# 
  8140     008E                     	;# 
  8141     008E                     	;# 
  8142     008F                     	;# 
  8143     0090                     	;# 
  8144     0090                     	;# 
  8145     0091                     	;# 
  8146     0092                     	;# 
  8147     0092                     	;# 
  8148     0093                     	;# 
  8149     0094                     	;# 
  8150     0094                     	;# 
  8151     0095                     	;# 
  8152     0096                     	;# 
  8153     0096                     	;# 
  8154     0097                     	;# 
  8155     0098                     	;# 
  8156     0099                     	;# 
  8157     009A                     	;# 
  8158     009B                     	;# 
  8159     009B                     	;# 
  8160     009C                     	;# 
  8161     009D                     	;# 
  8162     009D                     	;# 
  8163     009E                     	;# 
  8164     009F                     	;# 
  8165     010C                     	;# 
  8166     010C                     	;# 
  8167     010D                     	;# 
  8168     010E                     	;# 
  8169     010F                     	;# 
  8170     010F                     	;# 
  8171     0110                     	;# 
  8172     0111                     	;# 
  8173     0112                     	;# 
  8174     0113                     	;# 
  8175     0114                     	;# 
  8176     0115                     	;# 
  8177     0116                     	;# 
  8178     0117                     	;# 
  8179     0118                     	;# 
  8180     0119                     	;# 
  8181     0119                     	;# 
  8182     0119                     	;# 
  8183     011A                     	;# 
  8184     011A                     	;# 
  8185     011A                     	;# 
  8186     011B                     	;# 
  8187     011B                     	;# 
  8188     011B                     	;# 
  8189     011B                     	;# 
  8190     011B                     	;# 
  8191     011C                     	;# 
  8192     011C                     	;# 
  8193     011C                     	;# 
  8194     011D                     	;# 
  8195     011D                     	;# 
  8196     011D                     	;# 
  8197     011E                     	;# 
  8198     011E                     	;# 
  8199     011E                     	;# 
  8200     011F                     	;# 
  8201     011F                     	;# 
  8202     011F                     	;# 
  8203     011F                     	;# 
  8204     011F                     	;# 
  8205     018C                     	;# 
  8206     018D                     	;# 
  8207     018E                     	;# 
  8208     018F                     	;# 
  8209     0190                     	;# 
  8210     0191                     	;# 
  8211     0192                     	;# 
  8212     0196                     	;# 
  8213     0197                     	;# 
  8214     0198                     	;# 
  8215     0199                     	;# 
  8216     019A                     	;# 
  8217     019B                     	;# 
  8218     019C                     	;# 
  8219     020C                     	;# 
  8220     020D                     	;# 
  8221     020E                     	;# 
  8222     020E                     	;# 
  8223     020F                     	;# 
  8224     020F                     	;# 
  8225     0210                     	;# 
  8226     0210                     	;# 
  8227     0211                     	;# 
  8228     0211                     	;# 
  8229     0212                     	;# 
  8230     0213                     	;# 
  8231     0214                     	;# 
  8232     0214                     	;# 
  8233     0215                     	;# 
  8234     0215                     	;# 
  8235     0216                     	;# 
  8236     0216                     	;# 
  8237     0217                     	;# 
  8238     0217                     	;# 
  8239     0218                     	;# 
  8240     0219                     	;# 
  8241     021A                     	;# 
  8242     021A                     	;# 
  8243     021B                     	;# 
  8244     021B                     	;# 
  8245     021C                     	;# 
  8246     021C                     	;# 
  8247     021D                     	;# 
  8248     021D                     	;# 
  8249     021E                     	;# 
  8250     021F                     	;# 
  8251     028C                     	;# 
  8252     028C                     	;# 
  8253     028D                     	;# 
  8254     028D                     	;# 
  8255     028E                     	;# 
  8256     028F                     	;# 
  8257     0290                     	;# 
  8258     0291                     	;# 
  8259     0292                     	;# 
  8260     0292                     	;# 
  8261     0293                     	;# 
  8262     0293                     	;# 
  8263     0294                     	;# 
  8264     0295                     	;# 
  8265     0296                     	;# 
  8266     0297                     	;# 
  8267     0298                     	;# 
  8268     0298                     	;# 
  8269     0299                     	;# 
  8270     0299                     	;# 
  8271     029A                     	;# 
  8272     029B                     	;# 
  8273     029C                     	;# 
  8274     029D                     	;# 
  8275     029F                     	;# 
  8276     030C                     	;# 
  8277     030C                     	;# 
  8278     030D                     	;# 
  8279     030E                     	;# 
  8280     030F                     	;# 
  8281     0310                     	;# 
  8282     0310                     	;# 
  8283     0311                     	;# 
  8284     0312                     	;# 
  8285     0313                     	;# 
  8286     0314                     	;# 
  8287     0314                     	;# 
  8288     0315                     	;# 
  8289     0316                     	;# 
  8290     0317                     	;# 
  8291     0318                     	;# 
  8292     0318                     	;# 
  8293     0319                     	;# 
  8294     031A                     	;# 
  8295     031B                     	;# 
  8296     031C                     	;# 
  8297     031C                     	;# 
  8298     031D                     	;# 
  8299     031E                     	;# 
  8300     031F                     	;# 
  8301     038C                     	;# 
  8302     038C                     	;# 
  8303     038D                     	;# 
  8304     038E                     	;# 
  8305     0390                     	;# 
  8306     0390                     	;# 
  8307     0391                     	;# 
  8308     0392                     	;# 
  8309     048C                     	;# 
  8310     048C                     	;# 
  8311     048D                     	;# 
  8312     048E                     	;# 
  8313     048F                     	;# 
  8314     048F                     	;# 
  8315     0490                     	;# 
  8316     0491                     	;# 
  8317     0492                     	;# 
  8318     0492                     	;# 
  8319     0493                     	;# 
  8320     0494                     	;# 
  8321     0495                     	;# 
  8322     0495                     	;# 
  8323     0496                     	;# 
  8324     0497                     	;# 
  8325     0498                     	;# 
  8326     0499                     	;# 
  8327     049A                     	;# 
  8328     049B                     	;# 
  8329     049C                     	;# 
  8330     049D                     	;# 
  8331     050C                     	;# 
  8332     050C                     	;# 
  8333     050D                     	;# 
  8334     050E                     	;# 
  8335     050F                     	;# 
  8336     050F                     	;# 
  8337     0510                     	;# 
  8338     0511                     	;# 
  8339     0512                     	;# 
  8340     0512                     	;# 
  8341     0513                     	;# 
  8342     0514                     	;# 
  8343     0515                     	;# 
  8344     0515                     	;# 
  8345     0516                     	;# 
  8346     0517                     	;# 
  8347     0518                     	;# 
  8348     0519                     	;# 
  8349     051A                     	;# 
  8350     051B                     	;# 
  8351     051C                     	;# 
  8352     051D                     	;# 
  8353     058C                     	;# 
  8354     058C                     	;# 
  8355     058D                     	;# 
  8356     058E                     	;# 
  8357     058F                     	;# 
  8358     058F                     	;# 
  8359     0590                     	;# 
  8360     0591                     	;# 
  8361     0592                     	;# 
  8362     0593                     	;# 
  8363     059C                     	;# 
  8364     059C                     	;# 
  8365     059D                     	;# 
  8366     059D                     	;# 
  8367     059E                     	;# 
  8368     059F                     	;# 
  8369     060C                     	;# 
  8370     060C                     	;# 
  8371     060D                     	;# 
  8372     060D                     	;# 
  8373     060E                     	;# 
  8374     060F                     	;# 
  8375     0610                     	;# 
  8376     0611                     	;# 
  8377     0612                     	;# 
  8378     0613                     	;# 
  8379     0614                     	;# 
  8380     0616                     	;# 
  8381     0616                     	;# 
  8382     0617                     	;# 
  8383     0617                     	;# 
  8384     0618                     	;# 
  8385     0619                     	;# 
  8386     061A                     	;# 
  8387     061B                     	;# 
  8388     061C                     	;# 
  8389     061D                     	;# 
  8390     061E                     	;# 
  8391     068C                     	;# 
  8392     068D                     	;# 
  8393     068E                     	;# 
  8394     068F                     	;# 
  8395     0690                     	;# 
  8396     0691                     	;# 
  8397     0692                     	;# 
  8398     0693                     	;# 
  8399     0694                     	;# 
  8400     070C                     	;# 
  8401     070D                     	;# 
  8402     070E                     	;# 
  8403     070F                     	;# 
  8404     0710                     	;# 
  8405     0711                     	;# 
  8406     0712                     	;# 
  8407     0713                     	;# 
  8408     0714                     	;# 
  8409     0716                     	;# 
  8410     0717                     	;# 
  8411     0718                     	;# 
  8412     0719                     	;# 
  8413     071A                     	;# 
  8414     071B                     	;# 
  8415     071C                     	;# 
  8416     071D                     	;# 
  8417     071E                     	;# 
  8418     0796                     	;# 
  8419     0797                     	;# 
  8420     0798                     	;# 
  8421     0799                     	;# 
  8422     079A                     	;# 
  8423     079B                     	;# 
  8424     079C                     	;# 
  8425     079D                     	;# 
  8426     080C                     	;# 
  8427     080D                     	;# 
  8428     080E                     	;# 
  8429     080F                     	;# 
  8430     0810                     	;# 
  8431     0811                     	;# 
  8432     0813                     	;# 
  8433     0814                     	;# 
  8434     081A                     	;# 
  8435     081A                     	;# 
  8436     081B                     	;# 
  8437     081C                     	;# 
  8438     081C                     	;# 
  8439     081D                     	;# 
  8440     081E                     	;# 
  8441     081F                     	;# 
  8442     088C                     	;# 
  8443     088D                     	;# 
  8444     088E                     	;# 
  8445     088F                     	;# 
  8446     0890                     	;# 
  8447     0891                     	;# 
  8448     0892                     	;# 
  8449     0893                     	;# 
  8450     0895                     	;# 
  8451     0896                     	;# 
  8452     0897                     	;# 
  8453     0898                     	;# 
  8454     0899                     	;# 
  8455     089A                     	;# 
  8456     089B                     	;# 
  8457     090C                     	;# 
  8458     090E                     	;# 
  8459     090F                     	;# 
  8460     091F                     	;# 
  8461     098F                     	;# 
  8462     098F                     	;# 
  8463     0990                     	;# 
  8464     0991                     	;# 
  8465     0992                     	;# 
  8466     0993                     	;# 
  8467     0994                     	;# 
  8468     0995                     	;# 
  8469     0996                     	;# 
  8470     0997                     	;# 
  8471     0A19                     	;# 
  8472     0A19                     	;# 
  8473     0A1A                     	;# 
  8474     0A1A                     	;# 
  8475     0A1B                     	;# 
  8476     0A1B                     	;# 
  8477     0A1B                     	;# 
  8478     0A1C                     	;# 
  8479     0A1C                     	;# 
  8480     0A1D                     	;# 
  8481     0A1D                     	;# 
  8482     0A1E                     	;# 
  8483     0A1E                     	;# 
  8484     0A1F                     	;# 
  8485     0A1F                     	;# 
  8486     0A1F                     	;# 
  8487     1E0F                     	;# 
  8488     1E10                     	;# 
  8489     1E11                     	;# 
  8490     1E12                     	;# 
  8491     1E13                     	;# 
  8492     1E14                     	;# 
  8493     1E15                     	;# 
  8494     1E16                     	;# 
  8495     1E17                     	;# 
  8496     1E18                     	;# 
  8497     1E19                     	;# 
  8498     1E1A                     	;# 
  8499     1E1B                     	;# 
  8500     1E1C                     	;# 
  8501     1E1D                     	;# 
  8502     1E1E                     	;# 
  8503     1E1F                     	;# 
  8504     1E20                     	;# 
  8505     1E21                     	;# 
  8506     1E22                     	;# 
  8507     1E23                     	;# 
  8508     1E24                     	;# 
  8509     1E25                     	;# 
  8510     1E26                     	;# 
  8511     1E27                     	;# 
  8512     1E28                     	;# 
  8513     1E29                     	;# 
  8514     1E2A                     	;# 
  8515     1E2B                     	;# 
  8516     1E2C                     	;# 
  8517     1E2D                     	;# 
  8518     1E2E                     	;# 
  8519     1E2F                     	;# 
  8520     1E30                     	;# 
  8521     1E31                     	;# 
  8522     1E32                     	;# 
  8523     1E33                     	;# 
  8524     1E34                     	;# 
  8525     1E35                     	;# 
  8526     1E36                     	;# 
  8527     1E37                     	;# 
  8528     1E8F                     	;# 
  8529     1E90                     	;# 
  8530     1E91                     	;# 
  8531     1E92                     	;# 
  8532     1E93                     	;# 
  8533     1E94                     	;# 
  8534     1E95                     	;# 
  8535     1E96                     	;# 
  8536     1E97                     	;# 
  8537     1E9C                     	;# 
  8538     1E9D                     	;# 
  8539     1E9E                     	;# 
  8540     1EA1                     	;# 
  8541     1EA2                     	;# 
  8542     1EA3                     	;# 
  8543     1EA4                     	;# 
  8544     1EA5                     	;# 
  8545     1EA9                     	;# 
  8546     1EAA                     	;# 
  8547     1EAB                     	;# 
  8548     1EAC                     	;# 
  8549     1EB1                     	;# 
  8550     1EB2                     	;# 
  8551     1EB3                     	;# 
  8552     1EB8                     	;# 
  8553     1EB9                     	;# 
  8554     1EBA                     	;# 
  8555     1EBB                     	;# 
  8556     1EBC                     	;# 
  8557     1EBD                     	;# 
  8558     1EBE                     	;# 
  8559     1EC3                     	;# 
  8560     1EC5                     	;# 
  8561     1EC6                     	;# 
  8562     1EC7                     	;# 
  8563     1EC8                     	;# 
  8564     1EC9                     	;# 
  8565     1ECA                     	;# 
  8566     1ECB                     	;# 
  8567     1ECC                     	;# 
  8568     1ECD                     	;# 
  8569     1ECE                     	;# 
  8570     1F10                     	;# 
  8571     1F11                     	;# 
  8572     1F12                     	;# 
  8573     1F13                     	;# 
  8574     1F14                     	;# 
  8575     1F15                     	;# 
  8576     1F16                     	;# 
  8577     1F17                     	;# 
  8578     1F18                     	;# 
  8579     1F19                     	;# 
  8580     1F1A                     	;# 
  8581     1F1B                     	;# 
  8582     1F1C                     	;# 
  8583     1F1D                     	;# 
  8584     1F1E                     	;# 
  8585     1F1F                     	;# 
  8586     1F20                     	;# 
  8587     1F21                     	;# 
  8588     1F22                     	;# 
  8589     1F23                     	;# 
  8590     1F24                     	;# 
  8591     1F25                     	;# 
  8592     1F26                     	;# 
  8593     1F27                     	;# 
  8594     1F38                     	;# 
  8595     1F39                     	;# 
  8596     1F3A                     	;# 
  8597     1F3B                     	;# 
  8598     1F3C                     	;# 
  8599     1F3D                     	;# 
  8600     1F3E                     	;# 
  8601     1F3F                     	;# 
  8602     1F43                     	;# 
  8603     1F44                     	;# 
  8604     1F45                     	;# 
  8605     1F46                     	;# 
  8606     1F47                     	;# 
  8607     1F48                     	;# 
  8608     1F49                     	;# 
  8609     1F4A                     	;# 
  8610     1F4E                     	;# 
  8611     1F4F                     	;# 
  8612     1F50                     	;# 
  8613     1F51                     	;# 
  8614     1F52                     	;# 
  8615     1F53                     	;# 
  8616     1F54                     	;# 
  8617     1F55                     	;# 
  8618     1F65                     	;# 
  8619     1F66                     	;# 
  8620     1F67                     	;# 
  8621     1F68                     	;# 
  8622     1F69                     	;# 
  8623     1F6A                     	;# 
  8624     1F6B                     	;# 
  8625     1FE4                     	;# 
  8626     1FE5                     	;# 
  8627     1FE6                     	;# 
  8628     1FE7                     	;# 
  8629     1FE8                     	;# 
  8630     1FE8                     	;# 
  8631     1FE9                     	;# 
  8632     1FEA                     	;# 
  8633     1FEB                     	;# 
  8634     1FED                     	;# 
  8635     1FEE                     	;# 
  8636     1FEF                     	;# 
  8637     0000                     	;# 
  8638     0001                     	;# 
  8639     0002                     	;# 
  8640     0003                     	;# 
  8641     0004                     	;# 
  8642     0005                     	;# 
  8643     0006                     	;# 
  8644     0007                     	;# 
  8645     0008                     	;# 
  8646     0009                     	;# 
  8647     000A                     	;# 
  8648     000B                     	;# 
  8649     000C                     	;# 
  8650     000D                     	;# 
  8651     000E                     	;# 
  8652     0010                     	;# 
  8653     0012                     	;# 
  8654     0013                     	;# 
  8655     0014                     	;# 
  8656     0016                     	;# 
  8657     0018                     	;# 
  8658     0019                     	;# 
  8659     001A                     	;# 
  8660     001C                     	;# 
  8661     008C                     	;# 
  8662     008C                     	;# 
  8663     008D                     	;# 
  8664     008E                     	;# 
  8665     008E                     	;# 
  8666     008F                     	;# 
  8667     0090                     	;# 
  8668     0090                     	;# 
  8669     0091                     	;# 
  8670     0092                     	;# 
  8671     0092                     	;# 
  8672     0093                     	;# 
  8673     0094                     	;# 
  8674     0094                     	;# 
  8675     0095                     	;# 
  8676     0096                     	;# 
  8677     0096                     	;# 
  8678     0097                     	;# 
  8679     0098                     	;# 
  8680     0099                     	;# 
  8681     009A                     	;# 
  8682     009B                     	;# 
  8683     009B                     	;# 
  8684     009C                     	;# 
  8685     009D                     	;# 
  8686     009D                     	;# 
  8687     009E                     	;# 
  8688     009F                     	;# 
  8689     010C                     	;# 
  8690     010C                     	;# 
  8691     010D                     	;# 
  8692     010E                     	;# 
  8693     010F                     	;# 
  8694     010F                     	;# 
  8695     0110                     	;# 
  8696     0111                     	;# 
  8697     0112                     	;# 
  8698     0113                     	;# 
  8699     0114                     	;# 
  8700     0115                     	;# 
  8701     0116                     	;# 
  8702     0117                     	;# 
  8703     0118                     	;# 
  8704     0119                     	;# 
  8705     0119                     	;# 
  8706     0119                     	;# 
  8707     011A                     	;# 
  8708     011A                     	;# 
  8709     011A                     	;# 
  8710     011B                     	;# 
  8711     011B                     	;# 
  8712     011B                     	;# 
  8713     011B                     	;# 
  8714     011B                     	;# 
  8715     011C                     	;# 
  8716     011C                     	;# 
  8717     011C                     	;# 
  8718     011D                     	;# 
  8719     011D                     	;# 
  8720     011D                     	;# 
  8721     011E                     	;# 
  8722     011E                     	;# 
  8723     011E                     	;# 
  8724     011F                     	;# 
  8725     011F                     	;# 
  8726     011F                     	;# 
  8727     011F                     	;# 
  8728     011F                     	;# 
  8729     018C                     	;# 
  8730     018D                     	;# 
  8731     018E                     	;# 
  8732     018F                     	;# 
  8733     0190                     	;# 
  8734     0191                     	;# 
  8735     0192                     	;# 
  8736     0196                     	;# 
  8737     0197                     	;# 
  8738     0198                     	;# 
  8739     0199                     	;# 
  8740     019A                     	;# 
  8741     019B                     	;# 
  8742     019C                     	;# 
  8743     020C                     	;# 
  8744     020D                     	;# 
  8745     020E                     	;# 
  8746     020E                     	;# 
  8747     020F                     	;# 
  8748     020F                     	;# 
  8749     0210                     	;# 
  8750     0210                     	;# 
  8751     0211                     	;# 
  8752     0211                     	;# 
  8753     0212                     	;# 
  8754     0213                     	;# 
  8755     0214                     	;# 
  8756     0214                     	;# 
  8757     0215                     	;# 
  8758     0215                     	;# 
  8759     0216                     	;# 
  8760     0216                     	;# 
  8761     0217                     	;# 
  8762     0217                     	;# 
  8763     0218                     	;# 
  8764     0219                     	;# 
  8765     021A                     	;# 
  8766     021A                     	;# 
  8767     021B                     	;# 
  8768     021B                     	;# 
  8769     021C                     	;# 
  8770     021C                     	;# 
  8771     021D                     	;# 
  8772     021D                     	;# 
  8773     021E                     	;# 
  8774     021F                     	;# 
  8775     028C                     	;# 
  8776     028C                     	;# 
  8777     028D                     	;# 
  8778     028D                     	;# 
  8779     028E                     	;# 
  8780     028F                     	;# 
  8781     0290                     	;# 
  8782     0291                     	;# 
  8783     0292                     	;# 
  8784     0292                     	;# 
  8785     0293                     	;# 
  8786     0293                     	;# 
  8787     0294                     	;# 
  8788     0295                     	;# 
  8789     0296                     	;# 
  8790     0297                     	;# 
  8791     0298                     	;# 
  8792     0298                     	;# 
  8793     0299                     	;# 
  8794     0299                     	;# 
  8795     029A                     	;# 
  8796     029B                     	;# 
  8797     029C                     	;# 
  8798     029D                     	;# 
  8799     029F                     	;# 
  8800     030C                     	;# 
  8801     030C                     	;# 
  8802     030D                     	;# 
  8803     030E                     	;# 
  8804     030F                     	;# 
  8805     0310                     	;# 
  8806     0310                     	;# 
  8807     0311                     	;# 
  8808     0312                     	;# 
  8809     0313                     	;# 
  8810     0314                     	;# 
  8811     0314                     	;# 
  8812     0315                     	;# 
  8813     0316                     	;# 
  8814     0317                     	;# 
  8815     0318                     	;# 
  8816     0318                     	;# 
  8817     0319                     	;# 
  8818     031A                     	;# 
  8819     031B                     	;# 
  8820     031C                     	;# 
  8821     031C                     	;# 
  8822     031D                     	;# 
  8823     031E                     	;# 
  8824     031F                     	;# 
  8825     038C                     	;# 
  8826     038C                     	;# 
  8827     038D                     	;# 
  8828     038E                     	;# 
  8829     0390                     	;# 
  8830     0390                     	;# 
  8831     0391                     	;# 
  8832     0392                     	;# 
  8833     048C                     	;# 
  8834     048C                     	;# 
  8835     048D                     	;# 
  8836     048E                     	;# 
  8837     048F                     	;# 
  8838     048F                     	;# 
  8839     0490                     	;# 
  8840     0491                     	;# 
  8841     0492                     	;# 
  8842     0492                     	;# 
  8843     0493                     	;# 
  8844     0494                     	;# 
  8845     0495                     	;# 
  8846     0495                     	;# 
  8847     0496                     	;# 
  8848     0497                     	;# 
  8849     0498                     	;# 
  8850     0499                     	;# 
  8851     049A                     	;# 
  8852     049B                     	;# 
  8853     049C                     	;# 
  8854     049D                     	;# 
  8855     050C                     	;# 
  8856     050C                     	;# 
  8857     050D                     	;# 
  8858     050E                     	;# 
  8859     050F                     	;# 
  8860     050F                     	;# 
  8861     0510                     	;# 
  8862     0511                     	;# 
  8863     0512                     	;# 
  8864     0512                     	;# 
  8865     0513                     	;# 
  8866     0514                     	;# 
  8867     0515                     	;# 
  8868     0515                     	;# 
  8869     0516                     	;# 
  8870     0517                     	;# 
  8871     0518                     	;# 
  8872     0519                     	;# 
  8873     051A                     	;# 
  8874     051B                     	;# 
  8875     051C                     	;# 
  8876     051D                     	;# 
  8877     058C                     	;# 
  8878     058C                     	;# 
  8879     058D                     	;# 
  8880     058E                     	;# 
  8881     058F                     	;# 
  8882     058F                     	;# 
  8883     0590                     	;# 
  8884     0591                     	;# 
  8885     0592                     	;# 
  8886     0593                     	;# 
  8887     059C                     	;# 
  8888     059C                     	;# 
  8889     059D                     	;# 
  8890     059D                     	;# 
  8891     059E                     	;# 
  8892     059F                     	;# 
  8893     060C                     	;# 
  8894     060C                     	;# 
  8895     060D                     	;# 
  8896     060D                     	;# 
  8897     060E                     	;# 
  8898     060F                     	;# 
  8899     0610                     	;# 
  8900     0611                     	;# 
  8901     0612                     	;# 
  8902     0613                     	;# 
  8903     0614                     	;# 
  8904     0616                     	;# 
  8905     0616                     	;# 
  8906     0617                     	;# 
  8907     0617                     	;# 
  8908     0618                     	;# 
  8909     0619                     	;# 
  8910     061A                     	;# 
  8911     061B                     	;# 
  8912     061C                     	;# 
  8913     061D                     	;# 
  8914     061E                     	;# 
  8915     068C                     	;# 
  8916     068D                     	;# 
  8917     068E                     	;# 
  8918     068F                     	;# 
  8919     0690                     	;# 
  8920     0691                     	;# 
  8921     0692                     	;# 
  8922     0693                     	;# 
  8923     0694                     	;# 
  8924     070C                     	;# 
  8925     070D                     	;# 
  8926     070E                     	;# 
  8927     070F                     	;# 
  8928     0710                     	;# 
  8929     0711                     	;# 
  8930     0712                     	;# 
  8931     0713                     	;# 
  8932     0714                     	;# 
  8933     0716                     	;# 
  8934     0717                     	;# 
  8935     0718                     	;# 
  8936     0719                     	;# 
  8937     071A                     	;# 
  8938     071B                     	;# 
  8939     071C                     	;# 
  8940     071D                     	;# 
  8941     071E                     	;# 
  8942     0796                     	;# 
  8943     0797                     	;# 
  8944     0798                     	;# 
  8945     0799                     	;# 
  8946     079A                     	;# 
  8947     079B                     	;# 
  8948     079C                     	;# 
  8949     079D                     	;# 
  8950     080C                     	;# 
  8951     080D                     	;# 
  8952     080E                     	;# 
  8953     080F                     	;# 
  8954     0810                     	;# 
  8955     0811                     	;# 
  8956     0813                     	;# 
  8957     0814                     	;# 
  8958     081A                     	;# 
  8959     081A                     	;# 
  8960     081B                     	;# 
  8961     081C                     	;# 
  8962     081C                     	;# 
  8963     081D                     	;# 
  8964     081E                     	;# 
  8965     081F                     	;# 
  8966     088C                     	;# 
  8967     088D                     	;# 
  8968     088E                     	;# 
  8969     088F                     	;# 
  8970     0890                     	;# 
  8971     0891                     	;# 
  8972     0892                     	;# 
  8973     0893                     	;# 
  8974     0895                     	;# 
  8975     0896                     	;# 
  8976     0897                     	;# 
  8977     0898                     	;# 
  8978     0899                     	;# 
  8979     089A                     	;# 
  8980     089B                     	;# 
  8981     090C                     	;# 
  8982     090E                     	;# 
  8983     090F                     	;# 
  8984     091F                     	;# 
  8985     098F                     	;# 
  8986     098F                     	;# 
  8987     0990                     	;# 
  8988     0991                     	;# 
  8989     0992                     	;# 
  8990     0993                     	;# 
  8991     0994                     	;# 
  8992     0995                     	;# 
  8993     0996                     	;# 
  8994     0997                     	;# 
  8995     0A19                     	;# 
  8996     0A19                     	;# 
  8997     0A1A                     	;# 
  8998     0A1A                     	;# 
  8999     0A1B                     	;# 
  9000     0A1B                     	;# 
  9001     0A1B                     	;# 
  9002     0A1C                     	;# 
  9003     0A1C                     	;# 
  9004     0A1D                     	;# 
  9005     0A1D                     	;# 
  9006     0A1E                     	;# 
  9007     0A1E                     	;# 
  9008     0A1F                     	;# 
  9009     0A1F                     	;# 
  9010     0A1F                     	;# 
  9011     1E0F                     	;# 
  9012     1E10                     	;# 
  9013     1E11                     	;# 
  9014     1E12                     	;# 
  9015     1E13                     	;# 
  9016     1E14                     	;# 
  9017     1E15                     	;# 
  9018     1E16                     	;# 
  9019     1E17                     	;# 
  9020     1E18                     	;# 
  9021     1E19                     	;# 
  9022     1E1A                     	;# 
  9023     1E1B                     	;# 
  9024     1E1C                     	;# 
  9025     1E1D                     	;# 
  9026     1E1E                     	;# 
  9027     1E1F                     	;# 
  9028     1E20                     	;# 
  9029     1E21                     	;# 
  9030     1E22                     	;# 
  9031     1E23                     	;# 
  9032     1E24                     	;# 
  9033     1E25                     	;# 
  9034     1E26                     	;# 
  9035     1E27                     	;# 
  9036     1E28                     	;# 
  9037     1E29                     	;# 
  9038     1E2A                     	;# 
  9039     1E2B                     	;# 
  9040     1E2C                     	;# 
  9041     1E2D                     	;# 
  9042     1E2E                     	;# 
  9043     1E2F                     	;# 
  9044     1E30                     	;# 
  9045     1E31                     	;# 
  9046     1E32                     	;# 
  9047     1E33                     	;# 
  9048     1E34                     	;# 
  9049     1E35                     	;# 
  9050     1E36                     	;# 
  9051     1E37                     	;# 
  9052     1E8F                     	;# 
  9053     1E90                     	;# 
  9054     1E91                     	;# 
  9055     1E92                     	;# 
  9056     1E93                     	;# 
  9057     1E94                     	;# 
  9058     1E95                     	;# 
  9059     1E96                     	;# 
  9060     1E97                     	;# 
  9061     1E9C                     	;# 
  9062     1E9D                     	;# 
  9063     1E9E                     	;# 
  9064     1EA1                     	;# 
  9065     1EA2                     	;# 
  9066     1EA3                     	;# 
  9067     1EA4                     	;# 
  9068     1EA5                     	;# 
  9069     1EA9                     	;# 
  9070     1EAA                     	;# 
  9071     1EAB                     	;# 
  9072     1EAC                     	;# 
  9073     1EB1                     	;# 
  9074     1EB2                     	;# 
  9075     1EB3                     	;# 
  9076     1EB8                     	;# 
  9077     1EB9                     	;# 
  9078     1EBA                     	;# 
  9079     1EBB                     	;# 
  9080     1EBC                     	;# 
  9081     1EBD                     	;# 
  9082     1EBE                     	;# 
  9083     1EC3                     	;# 
  9084     1EC5                     	;# 
  9085     1EC6                     	;# 
  9086     1EC7                     	;# 
  9087     1EC8                     	;# 
  9088     1EC9                     	;# 
  9089     1ECA                     	;# 
  9090     1ECB                     	;# 
  9091     1ECC                     	;# 
  9092     1ECD                     	;# 
  9093     1ECE                     	;# 
  9094     1F10                     	;# 
  9095     1F11                     	;# 
  9096     1F12                     	;# 
  9097     1F13                     	;# 
  9098     1F14                     	;# 
  9099     1F15                     	;# 
  9100     1F16                     	;# 
  9101     1F17                     	;# 
  9102     1F18                     	;# 
  9103     1F19                     	;# 
  9104     1F1A                     	;# 
  9105     1F1B                     	;# 
  9106     1F1C                     	;# 
  9107     1F1D                     	;# 
  9108     1F1E                     	;# 
  9109     1F1F                     	;# 
  9110     1F20                     	;# 
  9111     1F21                     	;# 
  9112     1F22                     	;# 
  9113     1F23                     	;# 
  9114     1F24                     	;# 
  9115     1F25                     	;# 
  9116     1F26                     	;# 
  9117     1F27                     	;# 
  9118     1F38                     	;# 
  9119     1F39                     	;# 
  9120     1F3A                     	;# 
  9121     1F3B                     	;# 
  9122     1F3C                     	;# 
  9123     1F3D                     	;# 
  9124     1F3E                     	;# 
  9125     1F3F                     	;# 
  9126     1F43                     	;# 
  9127     1F44                     	;# 
  9128     1F45                     	;# 
  9129     1F46                     	;# 
  9130     1F47                     	;# 
  9131     1F48                     	;# 
  9132     1F49                     	;# 
  9133     1F4A                     	;# 
  9134     1F4E                     	;# 
  9135     1F4F                     	;# 
  9136     1F50                     	;# 
  9137     1F51                     	;# 
  9138     1F52                     	;# 
  9139     1F53                     	;# 
  9140     1F54                     	;# 
  9141     1F55                     	;# 
  9142     1F65                     	;# 
  9143     1F66                     	;# 
  9144     1F67                     	;# 
  9145     1F68                     	;# 
  9146     1F69                     	;# 
  9147     1F6A                     	;# 
  9148     1F6B                     	;# 
  9149     1FE4                     	;# 
  9150     1FE5                     	;# 
  9151     1FE6                     	;# 
  9152     1FE7                     	;# 
  9153     1FE8                     	;# 
  9154     1FE8                     	;# 
  9155     1FE9                     	;# 
  9156     1FEA                     	;# 
  9157     1FEB                     	;# 
  9158     1FED                     	;# 
  9159     1FEE                     	;# 
  9160     1FEF                     	;# 
  9161     0000                     	;# 
  9162     0001                     	;# 
  9163     0002                     	;# 
  9164     0003                     	;# 
  9165     0004                     	;# 
  9166     0005                     	;# 
  9167     0006                     	;# 
  9168     0007                     	;# 
  9169     0008                     	;# 
  9170     0009                     	;# 
  9171     000A                     	;# 
  9172     000B                     	;# 
  9173     000C                     	;# 
  9174     000D                     	;# 
  9175     000E                     	;# 
  9176     0010                     	;# 
  9177     0012                     	;# 
  9178     0013                     	;# 
  9179     0014                     	;# 
  9180     0016                     	;# 
  9181     0018                     	;# 
  9182     0019                     	;# 
  9183     001A                     	;# 
  9184     001C                     	;# 
  9185     008C                     	;# 
  9186     008C                     	;# 
  9187     008D                     	;# 
  9188     008E                     	;# 
  9189     008E                     	;# 
  9190     008F                     	;# 
  9191     0090                     	;# 
  9192     0090                     	;# 
  9193     0091                     	;# 
  9194     0092                     	;# 
  9195     0092                     	;# 
  9196     0093                     	;# 
  9197     0094                     	;# 
  9198     0094                     	;# 
  9199     0095                     	;# 
  9200     0096                     	;# 
  9201     0096                     	;# 
  9202     0097                     	;# 
  9203     0098                     	;# 
  9204     0099                     	;# 
  9205     009A                     	;# 
  9206     009B                     	;# 
  9207     009B                     	;# 
  9208     009C                     	;# 
  9209     009D                     	;# 
  9210     009D                     	;# 
  9211     009E                     	;# 
  9212     009F                     	;# 
  9213     010C                     	;# 
  9214     010C                     	;# 
  9215     010D                     	;# 
  9216     010E                     	;# 
  9217     010F                     	;# 
  9218     010F                     	;# 
  9219     0110                     	;# 
  9220     0111                     	;# 
  9221     0112                     	;# 
  9222     0113                     	;# 
  9223     0114                     	;# 
  9224     0115                     	;# 
  9225     0116                     	;# 
  9226     0117                     	;# 
  9227     0118                     	;# 
  9228     0119                     	;# 
  9229     0119                     	;# 
  9230     0119                     	;# 
  9231     011A                     	;# 
  9232     011A                     	;# 
  9233     011A                     	;# 
  9234     011B                     	;# 
  9235     011B                     	;# 
  9236     011B                     	;# 
  9237     011B                     	;# 
  9238     011B                     	;# 
  9239     011C                     	;# 
  9240     011C                     	;# 
  9241     011C                     	;# 
  9242     011D                     	;# 
  9243     011D                     	;# 
  9244     011D                     	;# 
  9245     011E                     	;# 
  9246     011E                     	;# 
  9247     011E                     	;# 
  9248     011F                     	;# 
  9249     011F                     	;# 
  9250     011F                     	;# 
  9251     011F                     	;# 
  9252     011F                     	;# 
  9253     018C                     	;# 
  9254     018D                     	;# 
  9255     018E                     	;# 
  9256     018F                     	;# 
  9257     0190                     	;# 
  9258     0191                     	;# 
  9259     0192                     	;# 
  9260     0196                     	;# 
  9261     0197                     	;# 
  9262     0198                     	;# 
  9263     0199                     	;# 
  9264     019A                     	;# 
  9265     019B                     	;# 
  9266     019C                     	;# 
  9267     020C                     	;# 
  9268     020D                     	;# 
  9269     020E                     	;# 
  9270     020E                     	;# 
  9271     020F                     	;# 
  9272     020F                     	;# 
  9273     0210                     	;# 
  9274     0210                     	;# 
  9275     0211                     	;# 
  9276     0211                     	;# 
  9277     0212                     	;# 
  9278     0213                     	;# 
  9279     0214                     	;# 
  9280     0214                     	;# 
  9281     0215                     	;# 
  9282     0215                     	;# 
  9283     0216                     	;# 
  9284     0216                     	;# 
  9285     0217                     	;# 
  9286     0217                     	;# 
  9287     0218                     	;# 
  9288     0219                     	;# 
  9289     021A                     	;# 
  9290     021A                     	;# 
  9291     021B                     	;# 
  9292     021B                     	;# 
  9293     021C                     	;# 
  9294     021C                     	;# 
  9295     021D                     	;# 
  9296     021D                     	;# 
  9297     021E                     	;# 
  9298     021F                     	;# 
  9299     028C                     	;# 
  9300     028C                     	;# 
  9301     028D                     	;# 
  9302     028D                     	;# 
  9303     028E                     	;# 
  9304     028F                     	;# 
  9305     0290                     	;# 
  9306     0291                     	;# 
  9307     0292                     	;# 
  9308     0292                     	;# 
  9309     0293                     	;# 
  9310     0293                     	;# 
  9311     0294                     	;# 
  9312     0295                     	;# 
  9313     0296                     	;# 
  9314     0297                     	;# 
  9315     0298                     	;# 
  9316     0298                     	;# 
  9317     0299                     	;# 
  9318     0299                     	;# 
  9319     029A                     	;# 
  9320     029B                     	;# 
  9321     029C                     	;# 
  9322     029D                     	;# 
  9323     029F                     	;# 
  9324     030C                     	;# 
  9325     030C                     	;# 
  9326     030D                     	;# 
  9327     030E                     	;# 
  9328     030F                     	;# 
  9329     0310                     	;# 
  9330     0310                     	;# 
  9331     0311                     	;# 
  9332     0312                     	;# 
  9333     0313                     	;# 
  9334     0314                     	;# 
  9335     0314                     	;# 
  9336     0315                     	;# 
  9337     0316                     	;# 
  9338     0317                     	;# 
  9339     0318                     	;# 
  9340     0318                     	;# 
  9341     0319                     	;# 
  9342     031A                     	;# 
  9343     031B                     	;# 
  9344     031C                     	;# 
  9345     031C                     	;# 
  9346     031D                     	;# 
  9347     031E                     	;# 
  9348     031F                     	;# 
  9349     038C                     	;# 
  9350     038C                     	;# 
  9351     038D                     	;# 
  9352     038E                     	;# 
  9353     0390                     	;# 
  9354     0390                     	;# 
  9355     0391                     	;# 
  9356     0392                     	;# 
  9357     048C                     	;# 
  9358     048C                     	;# 
  9359     048D                     	;# 
  9360     048E                     	;# 
  9361     048F                     	;# 
  9362     048F                     	;# 
  9363     0490                     	;# 
  9364     0491                     	;# 
  9365     0492                     	;# 
  9366     0492                     	;# 
  9367     0493                     	;# 
  9368     0494                     	;# 
  9369     0495                     	;# 
  9370     0495                     	;# 
  9371     0496                     	;# 
  9372     0497                     	;# 
  9373     0498                     	;# 
  9374     0499                     	;# 
  9375     049A                     	;# 
  9376     049B                     	;# 
  9377     049C                     	;# 
  9378     049D                     	;# 
  9379     050C                     	;# 
  9380     050C                     	;# 
  9381     050D                     	;# 
  9382     050E                     	;# 
  9383     050F                     	;# 
  9384     050F                     	;# 
  9385     0510                     	;# 
  9386     0511                     	;# 
  9387     0512                     	;# 
  9388     0512                     	;# 
  9389     0513                     	;# 
  9390     0514                     	;# 
  9391     0515                     	;# 
  9392     0515                     	;# 
  9393     0516                     	;# 
  9394     0517                     	;# 
  9395     0518                     	;# 
  9396     0519                     	;# 
  9397     051A                     	;# 
  9398     051B                     	;# 
  9399     051C                     	;# 
  9400     051D                     	;# 
  9401     058C                     	;# 
  9402     058C                     	;# 
  9403     058D                     	;# 
  9404     058E                     	;# 
  9405     058F                     	;# 
  9406     058F                     	;# 
  9407     0590                     	;# 
  9408     0591                     	;# 
  9409     0592                     	;# 
  9410     0593                     	;# 
  9411     059C                     	;# 
  9412     059C                     	;# 
  9413     059D                     	;# 
  9414     059D                     	;# 
  9415     059E                     	;# 
  9416     059F                     	;# 
  9417     060C                     	;# 
  9418     060C                     	;# 
  9419     060D                     	;# 
  9420     060D                     	;# 
  9421     060E                     	;# 
  9422     060F                     	;# 
  9423     0610                     	;# 
  9424     0611                     	;# 
  9425     0612                     	;# 
  9426     0613                     	;# 
  9427     0614                     	;# 
  9428     0616                     	;# 
  9429     0616                     	;# 
  9430     0617                     	;# 
  9431     0617                     	;# 
  9432     0618                     	;# 
  9433     0619                     	;# 
  9434     061A                     	;# 
  9435     061B                     	;# 
  9436     061C                     	;# 
  9437     061D                     	;# 
  9438     061E                     	;# 
  9439     068C                     	;# 
  9440     068D                     	;# 
  9441     068E                     	;# 
  9442     068F                     	;# 
  9443     0690                     	;# 
  9444     0691                     	;# 
  9445     0692                     	;# 
  9446     0693                     	;# 
  9447     0694                     	;# 
  9448     070C                     	;# 
  9449     070D                     	;# 
  9450     070E                     	;# 
  9451     070F                     	;# 
  9452     0710                     	;# 
  9453     0711                     	;# 
  9454     0712                     	;# 
  9455     0713                     	;# 
  9456     0714                     	;# 
  9457     0716                     	;# 
  9458     0717                     	;# 
  9459     0718                     	;# 
  9460     0719                     	;# 
  9461     071A                     	;# 
  9462     071B                     	;# 
  9463     071C                     	;# 
  9464     071D                     	;# 
  9465     071E                     	;# 
  9466     0796                     	;# 
  9467     0797                     	;# 
  9468     0798                     	;# 
  9469     0799                     	;# 
  9470     079A                     	;# 
  9471     079B                     	;# 
  9472     079C                     	;# 
  9473     079D                     	;# 
  9474     080C                     	;# 
  9475     080D                     	;# 
  9476     080E                     	;# 
  9477     080F                     	;# 
  9478     0810                     	;# 
  9479     0811                     	;# 
  9480     0813                     	;# 
  9481     0814                     	;# 
  9482     081A                     	;# 
  9483     081A                     	;# 
  9484     081B                     	;# 
  9485     081C                     	;# 
  9486     081C                     	;# 
  9487     081D                     	;# 
  9488     081E                     	;# 
  9489     081F                     	;# 
  9490     088C                     	;# 
  9491     088D                     	;# 
  9492     088E                     	;# 
  9493     088F                     	;# 
  9494     0890                     	;# 
  9495     0891                     	;# 
  9496     0892                     	;# 
  9497     0893                     	;# 
  9498     0895                     	;# 
  9499     0896                     	;# 
  9500     0897                     	;# 
  9501     0898                     	;# 
  9502     0899                     	;# 
  9503     089A                     	;# 
  9504     089B                     	;# 
  9505     090C                     	;# 
  9506     090E                     	;# 
  9507     090F                     	;# 
  9508     091F                     	;# 
  9509     098F                     	;# 
  9510     098F                     	;# 
  9511     0990                     	;# 
  9512     0991                     	;# 
  9513     0992                     	;# 
  9514     0993                     	;# 
  9515     0994                     	;# 
  9516     0995                     	;# 
  9517     0996                     	;# 
  9518     0997                     	;# 
  9519     0A19                     	;# 
  9520     0A19                     	;# 
  9521     0A1A                     	;# 
  9522     0A1A                     	;# 
  9523     0A1B                     	;# 
  9524     0A1B                     	;# 
  9525     0A1B                     	;# 
  9526     0A1C                     	;# 
  9527     0A1C                     	;# 
  9528     0A1D                     	;# 
  9529     0A1D                     	;# 
  9530     0A1E                     	;# 
  9531     0A1E                     	;# 
  9532     0A1F                     	;# 
  9533     0A1F                     	;# 
  9534     0A1F                     	;# 
  9535     1E0F                     	;# 
  9536     1E10                     	;# 
  9537     1E11                     	;# 
  9538     1E12                     	;# 
  9539     1E13                     	;# 
  9540     1E14                     	;# 
  9541     1E15                     	;# 
  9542     1E16                     	;# 
  9543     1E17                     	;# 
  9544     1E18                     	;# 
  9545     1E19                     	;# 
  9546     1E1A                     	;# 
  9547     1E1B                     	;# 
  9548     1E1C                     	;# 
  9549     1E1D                     	;# 
  9550     1E1E                     	;# 
  9551     1E1F                     	;# 
  9552     1E20                     	;# 
  9553     1E21                     	;# 
  9554     1E22                     	;# 
  9555     1E23                     	;# 
  9556     1E24                     	;# 
  9557     1E25                     	;# 
  9558     1E26                     	;# 
  9559     1E27                     	;# 
  9560     1E28                     	;# 
  9561     1E29                     	;# 
  9562     1E2A                     	;# 
  9563     1E2B                     	;# 
  9564     1E2C                     	;# 
  9565     1E2D                     	;# 
  9566     1E2E                     	;# 
  9567     1E2F                     	;# 
  9568     1E30                     	;# 
  9569     1E31                     	;# 
  9570     1E32                     	;# 
  9571     1E33                     	;# 
  9572     1E34                     	;# 
  9573     1E35                     	;# 
  9574     1E36                     	;# 
  9575     1E37                     	;# 
  9576     1E8F                     	;# 
  9577     1E90                     	;# 
  9578     1E91                     	;# 
  9579     1E92                     	;# 
  9580     1E93                     	;# 
  9581     1E94                     	;# 
  9582     1E95                     	;# 
  9583     1E96                     	;# 
  9584     1E97                     	;# 
  9585     1E9C                     	;# 
  9586     1E9D                     	;# 
  9587     1E9E                     	;# 
  9588     1EA1                     	;# 
  9589     1EA2                     	;# 
  9590     1EA3                     	;# 
  9591     1EA4                     	;# 
  9592     1EA5                     	;# 
  9593     1EA9                     	;# 
  9594     1EAA                     	;# 
  9595     1EAB                     	;# 
  9596     1EAC                     	;# 
  9597     1EB1                     	;# 
  9598     1EB2                     	;# 
  9599     1EB3                     	;# 
  9600     1EB8                     	;# 
  9601     1EB9                     	;# 
  9602     1EBA                     	;# 
  9603     1EBB                     	;# 
  9604     1EBC                     	;# 
  9605     1EBD                     	;# 
  9606     1EBE                     	;# 
  9607     1EC3                     	;# 
  9608     1EC5                     	;# 
  9609     1EC6                     	;# 
  9610     1EC7                     	;# 
  9611     1EC8                     	;# 
  9612     1EC9                     	;# 
  9613     1ECA                     	;# 
  9614     1ECB                     	;# 
  9615     1ECC                     	;# 
  9616     1ECD                     	;# 
  9617     1ECE                     	;# 
  9618     1F10                     	;# 
  9619     1F11                     	;# 
  9620     1F12                     	;# 
  9621     1F13                     	;# 
  9622     1F14                     	;# 
  9623     1F15                     	;# 
  9624     1F16                     	;# 
  9625     1F17                     	;# 
  9626     1F18                     	;# 
  9627     1F19                     	;# 
  9628     1F1A                     	;# 
  9629     1F1B                     	;# 
  9630     1F1C                     	;# 
  9631     1F1D                     	;# 
  9632     1F1E                     	;# 
  9633     1F1F                     	;# 
  9634     1F20                     	;# 
  9635     1F21                     	;# 
  9636     1F22                     	;# 
  9637     1F23                     	;# 
  9638     1F24                     	;# 
  9639     1F25                     	;# 
  9640     1F26                     	;# 
  9641     1F27                     	;# 
  9642     1F38                     	;# 
  9643     1F39                     	;# 
  9644     1F3A                     	;# 
  9645     1F3B                     	;# 
  9646     1F3C                     	;# 
  9647     1F3D                     	;# 
  9648     1F3E                     	;# 
  9649     1F3F                     	;# 
  9650     1F43                     	;# 
  9651     1F44                     	;# 
  9652     1F45                     	;# 
  9653     1F46                     	;# 
  9654     1F47                     	;# 
  9655     1F48                     	;# 
  9656     1F49                     	;# 
  9657     1F4A                     	;# 
  9658     1F4E                     	;# 
  9659     1F4F                     	;# 
  9660     1F50                     	;# 
  9661     1F51                     	;# 
  9662     1F52                     	;# 
  9663     1F53                     	;# 
  9664     1F54                     	;# 
  9665     1F55                     	;# 
  9666     1F65                     	;# 
  9667     1F66                     	;# 
  9668     1F67                     	;# 
  9669     1F68                     	;# 
  9670     1F69                     	;# 
  9671     1F6A                     	;# 
  9672     1F6B                     	;# 
  9673     1FE4                     	;# 
  9674     1FE5                     	;# 
  9675     1FE6                     	;# 
  9676     1FE7                     	;# 
  9677     1FE8                     	;# 
  9678     1FE8                     	;# 
  9679     1FE9                     	;# 
  9680     1FEA                     	;# 
  9681     1FEB                     	;# 
  9682     1FED                     	;# 
  9683     1FEE                     	;# 
  9684     1FEF                     	;# 
  9685     0000                     	;# 
  9686     0001                     	;# 
  9687     0002                     	;# 
  9688     0003                     	;# 
  9689     0004                     	;# 
  9690     0005                     	;# 
  9691     0006                     	;# 
  9692     0007                     	;# 
  9693     0008                     	;# 
  9694     0009                     	;# 
  9695     000A                     	;# 
  9696     000B                     	;# 
  9697     000C                     	;# 
  9698     000D                     	;# 
  9699     000E                     	;# 
  9700     0010                     	;# 
  9701     0012                     	;# 
  9702     0013                     	;# 
  9703     0014                     	;# 
  9704     0016                     	;# 
  9705     0018                     	;# 
  9706     0019                     	;# 
  9707     001A                     	;# 
  9708     001C                     	;# 
  9709     008C                     	;# 
  9710     008C                     	;# 
  9711     008D                     	;# 
  9712     008E                     	;# 
  9713     008E                     	;# 
  9714     008F                     	;# 
  9715     0090                     	;# 
  9716     0090                     	;# 
  9717     0091                     	;# 
  9718     0092                     	;# 
  9719     0092                     	;# 
  9720     0093                     	;# 
  9721     0094                     	;# 
  9722     0094                     	;# 
  9723     0095                     	;# 
  9724     0096                     	;# 
  9725     0096                     	;# 
  9726     0097                     	;# 
  9727     0098                     	;# 
  9728     0099                     	;# 
  9729     009A                     	;# 
  9730     009B                     	;# 
  9731     009B                     	;# 
  9732     009C                     	;# 
  9733     009D                     	;# 
  9734     009D                     	;# 
  9735     009E                     	;# 
  9736     009F                     	;# 
  9737     010C                     	;# 
  9738     010C                     	;# 
  9739     010D                     	;# 
  9740     010E                     	;# 
  9741     010F                     	;# 
  9742     010F                     	;# 
  9743     0110                     	;# 
  9744     0111                     	;# 
  9745     0112                     	;# 
  9746     0113                     	;# 
  9747     0114                     	;# 
  9748     0115                     	;# 
  9749     0116                     	;# 
  9750     0117                     	;# 
  9751     0118                     	;# 
  9752     0119                     	;# 
  9753     0119                     	;# 
  9754     0119                     	;# 
  9755     011A                     	;# 
  9756     011A                     	;# 
  9757     011A                     	;# 
  9758     011B                     	;# 
  9759     011B                     	;# 
  9760     011B                     	;# 
  9761     011B                     	;# 
  9762     011B                     	;# 
  9763     011C                     	;# 
  9764     011C                     	;# 
  9765     011C                     	;# 
  9766     011D                     	;# 
  9767     011D                     	;# 
  9768     011D                     	;# 
  9769     011E                     	;# 
  9770     011E                     	;# 
  9771     011E                     	;# 
  9772     011F                     	;# 
  9773     011F                     	;# 
  9774     011F                     	;# 
  9775     011F                     	;# 
  9776     011F                     	;# 
  9777     018C                     	;# 
  9778     018D                     	;# 
  9779     018E                     	;# 
  9780     018F                     	;# 
  9781     0190                     	;# 
  9782     0191                     	;# 
  9783     0192                     	;# 
  9784     0196                     	;# 
  9785     0197                     	;# 
  9786     0198                     	;# 
  9787     0199                     	;# 
  9788     019A                     	;# 
  9789     019B                     	;# 
  9790     019C                     	;# 
  9791     020C                     	;# 
  9792     020D                     	;# 
  9793     020E                     	;# 
  9794     020E                     	;# 
  9795     020F                     	;# 
  9796     020F                     	;# 
  9797     0210                     	;# 
  9798     0210                     	;# 
  9799     0211                     	;# 
  9800     0211                     	;# 
  9801     0212                     	;# 
  9802     0213                     	;# 
  9803     0214                     	;# 
  9804     0214                     	;# 
  9805     0215                     	;# 
  9806     0215                     	;# 
  9807     0216                     	;# 
  9808     0216                     	;# 
  9809     0217                     	;# 
  9810     0217                     	;# 
  9811     0218                     	;# 
  9812     0219                     	;# 
  9813     021A                     	;# 
  9814     021A                     	;# 
  9815     021B                     	;# 
  9816     021B                     	;# 
  9817     021C                     	;# 
  9818     021C                     	;# 
  9819     021D                     	;# 
  9820     021D                     	;# 
  9821     021E                     	;# 
  9822     021F                     	;# 
  9823     028C                     	;# 
  9824     028C                     	;# 
  9825     028D                     	;# 
  9826     028D                     	;# 
  9827     028E                     	;# 
  9828     028F                     	;# 
  9829     0290                     	;# 
  9830     0291                     	;# 
  9831     0292                     	;# 
  9832     0292                     	;# 
  9833     0293                     	;# 
  9834     0293                     	;# 
  9835     0294                     	;# 
  9836     0295                     	;# 
  9837     0296                     	;# 
  9838     0297                     	;# 
  9839     0298                     	;# 
  9840     0298                     	;# 
  9841     0299                     	;# 
  9842     0299                     	;# 
  9843     029A                     	;# 
  9844     029B                     	;# 
  9845     029C                     	;# 
  9846     029D                     	;# 
  9847     029F                     	;# 
  9848     030C                     	;# 
  9849     030C                     	;# 
  9850     030D                     	;# 
  9851     030E                     	;# 
  9852     030F                     	;# 
  9853     0310                     	;# 
  9854     0310                     	;# 
  9855     0311                     	;# 
  9856     0312                     	;# 
  9857     0313                     	;# 
  9858     0314                     	;# 
  9859     0314                     	;# 
  9860     0315                     	;# 
  9861     0316                     	;# 
  9862     0317                     	;# 
  9863     0318                     	;# 
  9864     0318                     	;# 
  9865     0319                     	;# 
  9866     031A                     	;# 
  9867     031B                     	;# 
  9868     031C                     	;# 
  9869     031C                     	;# 
  9870     031D                     	;# 
  9871     031E                     	;# 
  9872     031F                     	;# 
  9873     038C                     	;# 
  9874     038C                     	;# 
  9875     038D                     	;# 
  9876     038E                     	;# 
  9877     0390                     	;# 
  9878     0390                     	;# 
  9879     0391                     	;# 
  9880     0392                     	;# 
  9881     048C                     	;# 
  9882     048C                     	;# 
  9883     048D                     	;# 
  9884     048E                     	;# 
  9885     048F                     	;# 
  9886     048F                     	;# 
  9887     0490                     	;# 
  9888     0491                     	;# 
  9889     0492                     	;# 
  9890     0492                     	;# 
  9891     0493                     	;# 
  9892     0494                     	;# 
  9893     0495                     	;# 
  9894     0495                     	;# 
  9895     0496                     	;# 
  9896     0497                     	;# 
  9897     0498                     	;# 
  9898     0499                     	;# 
  9899     049A                     	;# 
  9900     049B                     	;# 
  9901     049C                     	;# 
  9902     049D                     	;# 
  9903     050C                     	;# 
  9904     050C                     	;# 
  9905     050D                     	;# 
  9906     050E                     	;# 
  9907     050F                     	;# 
  9908     050F                     	;# 
  9909     0510                     	;# 
  9910     0511                     	;# 
  9911     0512                     	;# 
  9912     0512                     	;# 
  9913     0513                     	;# 
  9914     0514                     	;# 
  9915     0515                     	;# 
  9916     0515                     	;# 
  9917     0516                     	;# 
  9918     0517                     	;# 
  9919     0518                     	;# 
  9920     0519                     	;# 
  9921     051A                     	;# 
  9922     051B                     	;# 
  9923     051C                     	;# 
  9924     051D                     	;# 
  9925     058C                     	;# 
  9926     058C                     	;# 
  9927     058D                     	;# 
  9928     058E                     	;# 
  9929     058F                     	;# 
  9930     058F                     	;# 
  9931     0590                     	;# 
  9932     0591                     	;# 
  9933     0592                     	;# 
  9934     0593                     	;# 
  9935     059C                     	;# 
  9936     059C                     	;# 
  9937     059D                     	;# 
  9938     059D                     	;# 
  9939     059E                     	;# 
  9940     059F                     	;# 
  9941     060C                     	;# 
  9942     060C                     	;# 
  9943     060D                     	;# 
  9944     060D                     	;# 
  9945     060E                     	;# 
  9946     060F                     	;# 
  9947     0610                     	;# 
  9948     0611                     	;# 
  9949     0612                     	;# 
  9950     0613                     	;# 
  9951     0614                     	;# 
  9952     0616                     	;# 
  9953     0616                     	;# 
  9954     0617                     	;# 
  9955     0617                     	;# 
  9956     0618                     	;# 
  9957     0619                     	;# 
  9958     061A                     	;# 
  9959     061B                     	;# 
  9960     061C                     	;# 
  9961     061D                     	;# 
  9962     061E                     	;# 
  9963     068C                     	;# 
  9964     068D                     	;# 
  9965     068E                     	;# 
  9966     068F                     	;# 
  9967     0690                     	;# 
  9968     0691                     	;# 
  9969     0692                     	;# 
  9970     0693                     	;# 
  9971     0694                     	;# 
  9972     070C                     	;# 
  9973     070D                     	;# 
  9974     070E                     	;# 
  9975     070F                     	;# 
  9976     0710                     	;# 
  9977     0711                     	;# 
  9978     0712                     	;# 
  9979     0713                     	;# 
  9980     0714                     	;# 
  9981     0716                     	;# 
  9982     0717                     	;# 
  9983     0718                     	;# 
  9984     0719                     	;# 
  9985     071A                     	;# 
  9986     071B                     	;# 
  9987     071C                     	;# 
  9988     071D                     	;# 
  9989     071E                     	;# 
  9990     0796                     	;# 
  9991     0797                     	;# 
  9992     0798                     	;# 
  9993     0799                     	;# 
  9994     079A                     	;# 
  9995     079B                     	;# 
  9996     079C                     	;# 
  9997     079D                     	;# 
  9998     080C                     	;# 
  9999     080D                     	;# 
 10000     080E                     	;# 
 10001     080F                     	;# 
 10002     0810                     	;# 
 10003     0811                     	;# 
 10004     0813                     	;# 
 10005     0814                     	;# 
 10006     081A                     	;# 
 10007     081A                     	;# 
 10008     081B                     	;# 
 10009     081C                     	;# 
 10010     081C                     	;# 
 10011     081D                     	;# 
 10012     081E                     	;# 
 10013     081F                     	;# 
 10014     088C                     	;# 
 10015     088D                     	;# 
 10016     088E                     	;# 
 10017     088F                     	;# 
 10018     0890                     	;# 
 10019     0891                     	;# 
 10020     0892                     	;# 
 10021     0893                     	;# 
 10022     0895                     	;# 
 10023     0896                     	;# 
 10024     0897                     	;# 
 10025     0898                     	;# 
 10026     0899                     	;# 
 10027     089A                     	;# 
 10028     089B                     	;# 
 10029     090C                     	;# 
 10030     090E                     	;# 
 10031     090F                     	;# 
 10032     091F                     	;# 
 10033     098F                     	;# 
 10034     098F                     	;# 
 10035     0990                     	;# 
 10036     0991                     	;# 
 10037     0992                     	;# 
 10038     0993                     	;# 
 10039     0994                     	;# 
 10040     0995                     	;# 
 10041     0996                     	;# 
 10042     0997                     	;# 
 10043     0A19                     	;# 
 10044     0A19                     	;# 
 10045     0A1A                     	;# 
 10046     0A1A                     	;# 
 10047     0A1B                     	;# 
 10048     0A1B                     	;# 
 10049     0A1B                     	;# 
 10050     0A1C                     	;# 
 10051     0A1C                     	;# 
 10052     0A1D                     	;# 
 10053     0A1D                     	;# 
 10054     0A1E                     	;# 
 10055     0A1E                     	;# 
 10056     0A1F                     	;# 
 10057     0A1F                     	;# 
 10058     0A1F                     	;# 
 10059     1E0F                     	;# 
 10060     1E10                     	;# 
 10061     1E11                     	;# 
 10062     1E12                     	;# 
 10063     1E13                     	;# 
 10064     1E14                     	;# 
 10065     1E15                     	;# 
 10066     1E16                     	;# 
 10067     1E17                     	;# 
 10068     1E18                     	;# 
 10069     1E19                     	;# 
 10070     1E1A                     	;# 
 10071     1E1B                     	;# 
 10072     1E1C                     	;# 
 10073     1E1D                     	;# 
 10074     1E1E                     	;# 
 10075     1E1F                     	;# 
 10076     1E20                     	;# 
 10077     1E21                     	;# 
 10078     1E22                     	;# 
 10079     1E23                     	;# 
 10080     1E24                     	;# 
 10081     1E25                     	;# 
 10082     1E26                     	;# 
 10083     1E27                     	;# 
 10084     1E28                     	;# 
 10085     1E29                     	;# 
 10086     1E2A                     	;# 
 10087     1E2B                     	;# 
 10088     1E2C                     	;# 
 10089     1E2D                     	;# 
 10090     1E2E                     	;# 
 10091     1E2F                     	;# 
 10092     1E30                     	;# 
 10093     1E31                     	;# 
 10094     1E32                     	;# 
 10095     1E33                     	;# 
 10096     1E34                     	;# 
 10097     1E35                     	;# 
 10098     1E36                     	;# 
 10099     1E37                     	;# 
 10100     1E8F                     	;# 
 10101     1E90                     	;# 
 10102     1E91                     	;# 
 10103     1E92                     	;# 
 10104     1E93                     	;# 
 10105     1E94                     	;# 
 10106     1E95                     	;# 
 10107     1E96                     	;# 
 10108     1E97                     	;# 
 10109     1E9C                     	;# 
 10110     1E9D                     	;# 
 10111     1E9E                     	;# 
 10112     1EA1                     	;# 
 10113     1EA2                     	;# 
 10114     1EA3                     	;# 
 10115     1EA4                     	;# 
 10116     1EA5                     	;# 
 10117     1EA9                     	;# 
 10118     1EAA                     	;# 
 10119     1EAB                     	;# 
 10120     1EAC                     	;# 
 10121     1EB1                     	;# 
 10122     1EB2                     	;# 
 10123     1EB3                     	;# 
 10124     1EB8                     	;# 
 10125     1EB9                     	;# 
 10126     1EBA                     	;# 
 10127     1EBB                     	;# 
 10128     1EBC                     	;# 
 10129     1EBD                     	;# 
 10130     1EBE                     	;# 
 10131     1EC3                     	;# 
 10132     1EC5                     	;# 
 10133     1EC6                     	;# 
 10134     1EC7                     	;# 
 10135     1EC8                     	;# 
 10136     1EC9                     	;# 
 10137     1ECA                     	;# 
 10138     1ECB                     	;# 
 10139     1ECC                     	;# 
 10140     1ECD                     	;# 
 10141     1ECE                     	;# 
 10142     1F10                     	;# 
 10143     1F11                     	;# 
 10144     1F12                     	;# 
 10145     1F13                     	;# 
 10146     1F14                     	;# 
 10147     1F15                     	;# 
 10148     1F16                     	;# 
 10149     1F17                     	;# 
 10150     1F18                     	;# 
 10151     1F19                     	;# 
 10152     1F1A                     	;# 
 10153     1F1B                     	;# 
 10154     1F1C                     	;# 
 10155     1F1D                     	;# 
 10156     1F1E                     	;# 
 10157     1F1F                     	;# 
 10158     1F20                     	;# 
 10159     1F21                     	;# 
 10160     1F22                     	;# 
 10161     1F23                     	;# 
 10162     1F24                     	;# 
 10163     1F25                     	;# 
 10164     1F26                     	;# 
 10165     1F27                     	;# 
 10166     1F38                     	;# 
 10167     1F39                     	;# 
 10168     1F3A                     	;# 
 10169     1F3B                     	;# 
 10170     1F3C                     	;# 
 10171     1F3D                     	;# 
 10172     1F3E                     	;# 
 10173     1F3F                     	;# 
 10174     1F43                     	;# 
 10175     1F44                     	;# 
 10176     1F45                     	;# 
 10177     1F46                     	;# 
 10178     1F47                     	;# 
 10179     1F48                     	;# 
 10180     1F49                     	;# 
 10181     1F4A                     	;# 
 10182     1F4E                     	;# 
 10183     1F4F                     	;# 
 10184     1F50                     	;# 
 10185     1F51                     	;# 
 10186     1F52                     	;# 
 10187     1F53                     	;# 
 10188     1F54                     	;# 
 10189     1F55                     	;# 
 10190     1F65                     	;# 
 10191     1F66                     	;# 
 10192     1F67                     	;# 
 10193     1F68                     	;# 
 10194     1F69                     	;# 
 10195     1F6A                     	;# 
 10196     1F6B                     	;# 
 10197     1FE4                     	;# 
 10198     1FE5                     	;# 
 10199     1FE6                     	;# 
 10200     1FE7                     	;# 
 10201     1FE8                     	;# 
 10202     1FE8                     	;# 
 10203     1FE9                     	;# 
 10204     1FEA                     	;# 
 10205     1FEB                     	;# 
 10206     1FED                     	;# 
 10207     1FEE                     	;# 
 10208     1FEF                     	;# 
 10209                           
 10210 ;; Function _do_I2C_RESET is unused but had its address taken
 10211     0000                     
 10212 ;; Function _do_I2C_IDLE is unused but had its address taken
 10213     0000                     
 10214 ;; Function _do_I2C_SEND_RESTART_READ is unused but had its address taken
 10215     0000                     
 10216 ;; Function _do_I2C_SEND_RESTART_WRITE is unused but had its address taken
 10217     0000                     
 10218 ;; Function _do_I2C_SEND_RESTART is unused but had its address taken
 10219     0000                     
 10220 ;; Function _do_I2C_SEND_STOP is unused but had its address taken
 10221     0000                     
 10222 ;; Function _do_I2C_SEND_ADR_READ is unused but had its address taken
 10223     0000                     
 10224 ;; Function _do_I2C_SEND_ADR_WRITE is unused but had its address taken
 10225     0000                     
 10226 ;; Function _do_I2C_RCEN is unused but had its address taken
 10227     0000                     
 10228 ;; Function _do_I2C_DO_ACK is unused but had its address taken
 10229     0000                     
 10230 ;; Function _do_I2C_DO_NACK_STOP is unused but had its address taken
 10231     0000                     
 10232 ;; Function _do_I2C_DO_NACK_RESTART is unused but had its address taken
 10233     0000                     
 10234 ;; Function _do_I2C_DO_ADDRESS_NACK is unused but had its address taken
 10235     0000                     
 10236 ;; Function _do_I2C_TX is unused but had its address taken
 10237     0000                     
 10238 ;; Function _do_I2C_RX is unused but had its address taken
 10239     0000                     
 10240 ;; Function _do_I2C_TX_EMPTY is unused but had its address taken
 10241     0000                     
 10242 ;; Function _i2c_ISR is unused but had its address taken
 10243     0000                     
 10244 ;; Function _i2c_busCollisionISR is unused but had its address taken
 10245     0000                     
 10246 ;; Function _returnStop is unused but had its address taken
 10247     0000                     
 10248 ;; Function _returnReset is unused but had its address taken
 10249     0000                     
 10250 ;; Function _EUSART2_is_tx_ready is unused but had its address taken
 10251     0000                     
 10252 ;; Function _EUSART1_is_tx_ready is unused but had its address taken
 10253     0000                     
 10254                           	psect	idataBANK1
 10255     0002                     __pidataBANK1:
 10256                           
 10257                           ;initializer for RN487X_GetInputsValues@F12901
 10258     0002  3430               	retlw	48
 10259     0003  3430               	retlw	48
 10260                           
 10261                           	psect	idataBANK3
 10262     10C4                     __pidataBANK3:
 10263                           
 10264                           ;initializer for __hex
 10265     10C4  3430               	retlw	48
 10266     10C5  3431               	retlw	49
 10267     10C6  3432               	retlw	50
 10268     10C7  3433               	retlw	51
 10269     10C8  3434               	retlw	52
 10270     10C9  3435               	retlw	53
 10271     10CA  3436               	retlw	54
 10272     10CB  3437               	retlw	55
 10273     10CC  3438               	retlw	56
 10274     10CD  3439               	retlw	57
 10275     10CE  3441               	retlw	65
 10276     10CF  3442               	retlw	66
 10277     10D0  3443               	retlw	67
 10278     10D1  3444               	retlw	68
 10279     10D2  3445               	retlw	69
 10280     10D3  3446               	retlw	70
 10281     10D4  3400               	retlw	0
 10282                           
 10283                           	psect	stringtext1
 10284     1800                     __pstringtext1:
 10285     1800                     _uart:
 10286     1800  345E               	retlw	low _EUSART1_Read
 10287     1801  3415               	retlw	high _EUSART1_Read
 10288     1802  34E5               	retlw	low _EUSART1_Write
 10289     1803  3414               	retlw	high _EUSART1_Write
 10290     1804  3400               	retlw	0
 10291     1805  3400               	retlw	0
 10292     1806  3485               	retlw	low _EUSART1_is_rx_ready
 10293     1807  341F               	retlw	high _EUSART1_is_rx_ready
 10294     1808  3416               	retlw	low _EUSART1_SetTxInterruptHandler
 10295     1809  341F               	retlw	high _EUSART1_SetTxInterruptHandler
 10296     180A  3486               	retlw	low _EUSART1_Receive_ISR
 10297     180B  3408               	retlw	high _EUSART1_Receive_ISR
 10298     180C  3410               	retlw	low _EUSART1_SetRxInterruptHandler
 10299     180D  341F               	retlw	high _EUSART1_SetRxInterruptHandler
 10300     180E  349B               	retlw	low _EUSART1_is_tx_done
 10301     180F  341E               	retlw	high _EUSART1_is_tx_done
 10302     1810  3406               	retlw	low _EUSART1_Transmit_ISR
 10303     1811  3414               	retlw	high _EUSART1_Transmit_ISR
 10304     1812  343D               	retlw	low _EUSART1_Initialize
 10305     1813  3409               	retlw	high _EUSART1_Initialize
 10306     1814  340D               	retlw	low _EUSART2_Read
 10307     1815  3415               	retlw	high _EUSART2_Read
 10308     1816  3496               	retlw	low _EUSART2_Write
 10309     1817  3414               	retlw	high _EUSART2_Write
 10310     1818  3400               	retlw	0
 10311     1819  3400               	retlw	0
 10312     181A  347C               	retlw	low _EUSART2_is_rx_ready
 10313     181B  341F               	retlw	high _EUSART2_is_rx_ready
 10314     181C  3434               	retlw	low _EUSART2_SetTxInterruptHandler
 10315     181D  341F               	retlw	high _EUSART2_SetTxInterruptHandler
 10316     181E  344D               	retlw	low _EUSART2_Receive_ISR
 10317     181F  3408               	retlw	high _EUSART2_Receive_ISR
 10318     1820  342E               	retlw	low _EUSART2_SetRxInterruptHandler
 10319     1821  341F               	retlw	high _EUSART2_SetRxInterruptHandler
 10320     1822  3497               	retlw	low _EUSART2_is_tx_done
 10321     1823  341E               	retlw	high _EUSART2_is_tx_done
 10322     1824  34E4               	retlw	low _EUSART2_Transmit_ISR
 10323     1825  3413               	retlw	high _EUSART2_Transmit_ISR
 10324     1826  347C               	retlw	low _EUSART2_Initialize
 10325     1827  3409               	retlw	high _EUSART2_Initialize
 10326     1828                     __end_of_uart:
 10327                           
 10328                           	psect	stringtext2
 10329     1828                     __pstringtext2:
 10330     1828                     _i2c1_fsmStateTable:
 10331     1828  34A4               	retlw	low _I2C1_DO_IDLE
 10332     1829  341E               	retlw	high _I2C1_DO_IDLE
 10333     182A  3473               	retlw	low _I2C1_DO_SEND_ADR_READ
 10334     182B  341F               	retlw	high _I2C1_DO_SEND_ADR_READ
 10335     182C  345A               	retlw	low _I2C1_DO_SEND_ADR_WRITE
 10336     182D  341F               	retlw	high _I2C1_DO_SEND_ADR_WRITE
 10337     182E  349D               	retlw	low _I2C1_DO_TX
 10338     182F  340D               	retlw	high _I2C1_DO_TX
 10339     1830  3488               	retlw	low _I2C1_DO_RX
 10340     1831  340A               	retlw	high _I2C1_DO_RX
 10341     1832  344C               	retlw	low _I2C1_DO_RCEN
 10342     1833  341F               	retlw	high _I2C1_DO_RCEN
 10343     1834  34B2               	retlw	low _I2C1_DO_TX_EMPTY
 10344     1835  3415               	retlw	high _I2C1_DO_TX_EMPTY
 10345     1836  34A9               	retlw	low _I2C1_DO_SEND_RESTART_READ
 10346     1837  341E               	retlw	high _I2C1_DO_SEND_RESTART_READ
 10347     1838  34AE               	retlw	low _I2C1_DO_SEND_RESTART_WRITE
 10348     1839  341E               	retlw	high _I2C1_DO_SEND_RESTART_WRITE
 10349     183A  34B3               	retlw	low _I2C1_DO_SEND_RESTART
 10350     183B  341E               	retlw	high _I2C1_DO_SEND_RESTART
 10351     183C  34B8               	retlw	low _I2C1_DO_SEND_STOP
 10352     183D  341E               	retlw	high _I2C1_DO_SEND_STOP
 10353     183E  34BD               	retlw	low _I2C1_DO_RX_ACK
 10354     183F  341E               	retlw	high _I2C1_DO_RX_ACK
 10355     1840  34C2               	retlw	low _I2C1_DO_RX_NACK_STOP
 10356     1841  341E               	retlw	high _I2C1_DO_RX_NACK_STOP
 10357     1842  34C7               	retlw	low _I2C1_DO_RX_NACK_RESTART
 10358     1843  341E               	retlw	high _I2C1_DO_RX_NACK_RESTART
 10359     1844  34CC               	retlw	low _I2C1_DO_RESET
 10360     1845  341E               	retlw	high _I2C1_DO_RESET
 10361     1846  34BD               	retlw	low _I2C1_DO_ADDRESS_NACK
 10362     1847  3414               	retlw	high _I2C1_DO_ADDRESS_NACK
 10363     1848                     __end_of_i2c1_fsmStateTable:
 10364                           
 10365                           	psect	stringtext3
 10366     1848                     __pstringtext3:
 10367     1848                     _fsmStateTable:
 10368     1848  3400               	retlw	0
 10369     1849  3400               	retlw	0
 10370     184A  3400               	retlw	0
 10371     184B  3400               	retlw	0
 10372     184C  3400               	retlw	0
 10373     184D  3400               	retlw	0
 10374     184E  3400               	retlw	0
 10375     184F  3400               	retlw	0
 10376     1850  3400               	retlw	0
 10377     1851  3400               	retlw	0
 10378     1852  3400               	retlw	0
 10379     1853  3400               	retlw	0
 10380     1854  3400               	retlw	0
 10381     1855  3400               	retlw	0
 10382     1856  3400               	retlw	0
 10383     1857  3400               	retlw	0
 10384     1858  3400               	retlw	0
 10385     1859  3400               	retlw	0
 10386     185A  3400               	retlw	0
 10387     185B  3400               	retlw	0
 10388     185C  3400               	retlw	0
 10389     185D  3400               	retlw	0
 10390     185E  3400               	retlw	0
 10391     185F  3400               	retlw	0
 10392     1860  3400               	retlw	0
 10393     1861  3400               	retlw	0
 10394     1862  3400               	retlw	0
 10395     1863  3400               	retlw	0
 10396     1864  3400               	retlw	0
 10397     1865  3400               	retlw	0
 10398     1866  3400               	retlw	0
 10399     1867  3400               	retlw	0
 10400     1868                     __end_of_fsmStateTable:
 10401                           
 10402                           	psect	stringtext4
 10403     1868                     __pstringtext4:
 10404     1868                     _RN487X:
 10405     1868  3401               	retlw	low _RN487X_Write
 10406     1869  3410               	retlw	high _RN487X_Write
 10407     186A  3497               	retlw	low _RN487X_Read@rn487x_interface$F1835
 10408     186B  341F               	retlw	high _RN487X_Read@rn487x_interface$F1835
 10409     186C  34A1               	retlw	low _RN487X_is_tx_done
 10410     186D  341F               	retlw	high _RN487X_is_tx_done
 10411     186E  34AB               	retlw	low _RN487X_is_rx_ready
 10412     186F  341F               	retlw	high _RN487X_is_rx_ready
 10413     1870  34DF               	retlw	low _RN487X_IndicateRx
 10414     1871  341F               	retlw	high _RN487X_IndicateRx
 10415     1872  34EA               	retlw	low _RN487X_Reset
 10416     1873  341F               	retlw	high _RN487X_Reset
 10417     1874  340D               	retlw	low _RN487X_SetSystemMode
 10418     1875  3410               	retlw	high _RN487X_SetSystemMode
 10419     1876  3462               	retlw	low _RN487X_Delay
 10420     1877  341F               	retlw	high _RN487X_Delay
 10421     1878  34C9               	retlw	low _RN487X_MessageHandler
 10422     1879  3417               	retlw	high _RN487X_MessageHandler
 10423     187A                     __end_of_RN487X:
 10424                           
 10425                           	psect	stringtext5
 10426     2010                     __pstringtext5:
 10427     2010                     _rn487x_driver_version:
 10428     2010  3400               	retlw	low (STR_1| (0+32768))
 10429     2011  34A0               	retlw	high (STR_1| (0+32768))
 10430     2012                     __end_of_rn487x_driver_version:
 10431                           
 10432                           	psect	stringtext6
 10433     2012                     __pstringtext6:
 10434     2012                     _protocol_version_number:
 10435     2012  3400               	retlw	low (STR_1| (0+32768))
 10436     2013  34A0               	retlw	high (STR_1| (0+32768))
 10437     2014                     __end_of_protocol_version_number:
 10438                           
 10439                           	psect	stringtext7
 10440     1886                     __pstringtext7:
 10441     1886                     RN487X_RebootCmd@reboot:
 10442     1886  3452               	retlw	82
 10443     1887  3465               	retlw	101
 10444     1888  3462               	retlw	98
 10445     1889  346F               	retlw	111
 10446     188A  346F               	retlw	111
 10447     188B  3474               	retlw	116
 10448     188C  3469               	retlw	105
 10449     188D  346E               	retlw	110
 10450     188E  3467               	retlw	103
 10451     188F  340D               	retlw	13
 10452     1890  340A               	retlw	10
 10453     1891                     __end_ofRN487X_RebootCmd@reboot:
 10454                           
 10455                           	psect	stringtext8
 10456     2006                     __pstringtext8:
 10457     2006                     RN487X_EnterDataMode@cmdPrompt:
 10458     2006  3445               	retlw	69
 10459     2007  344E               	retlw	78
 10460     2008  3444               	retlw	68
 10461     2009  340D               	retlw	13
 10462     200A  340A               	retlw	10
 10463     200B                     __end_ofRN487X_EnterDataMode@cmdPrompt:
 10464                           
 10465                           	psect	stringtext9
 10466     200B                     __pstringtext9:
 10467     200B                     RN487X_EnterCmdMode@cmdPrompt:
 10468     200B  3443               	retlw	67
 10469     200C  344D               	retlw	77
 10470     200D  3444               	retlw	68
 10471     200E  343E               	retlw	62
 10472     200F  3420               	retlw	32
 10473     2010                     __end_ofRN487X_EnterCmdMode@cmdPrompt:
 10474                           
 10475                           	psect	nvBANK1
 10476     00EA                     __pnvBANK1:
 10477     00EA                     _IOCAF6_InterruptHandler:
 10478     00EA                     	ds	2
 10479     00EC                     _EUSART2_TxDefaultInterruptHandler:
 10480     00EC                     	ds	2
 10481                           
 10482                           	psect	nvBANK2
 10483     0154                     __pnvBANK2:
 10484     0154                     _EUSART1_ErrorHandler:
 10485     0154                     	ds	2
 10486     0156                     _EUSART1_OverrunErrorHandler:
 10487     0156                     	ds	2
 10488     0158                     _EUSART1_FramingErrorHandler:
 10489     0158                     	ds	2
 10490     015A                     _EUSART1_RxDefaultInterruptHandler:
 10491     015A                     	ds	2
 10492     015C                     _EUSART1_TxDefaultInterruptHandler:
 10493     015C                     	ds	2
 10494     015E                     _EUSART2_ErrorHandler:
 10495     015E                     	ds	2
 10496     0160                     _EUSART2_OverrunErrorHandler:
 10497     0160                     	ds	2
 10498     0162                     _EUSART2_FramingErrorHandler:
 10499     0162                     	ds	2
 10500     0164                     _EUSART2_RxDefaultInterruptHandler:
 10501     0164                     	ds	2
 10502     0014                     _TRISC	set	20
 10503     0013                     _TRISB	set	19
 10504     0012                     _TRISA	set	18
 10505     0016                     _TRISE	set	22
 10506     001A                     _LATC	set	26
 10507     0019                     _LATB	set	25
 10508     0018                     _LATA	set	24
 10509     001C                     _LATE	set	28
 10510     0012                     _TRISAbits	set	18
 10511     001A                     _LATCbits	set	26
 10512     000B                     _INTCONbits	set	11
 10513     0018                     _LATAbits	set	24
 10514     000C                     _PORTAbits	set	12
 10515     0119                     _RC1REG	set	281
 10516     011D                     _RC1STAbits	set	285
 10517     011A                     _TX1REG	set	282
 10518     011E                     _TX1STAbits	set	286
 10519     011C                     _SP1BRGH	set	284
 10520     011B                     _SP1BRGL	set	283
 10521     011E                     _TX1STA	set	286
 10522     011D                     _RC1STA	set	285
 10523     011F                     _BAUD1CON	set	287
 10524     018F                     _SSP1STATbits	set	399
 10525     018E                     _SSP1MSK	set	398
 10526     018C                     _SSP1BUF	set	396
 10527     0191                     _SSP1CON2bits	set	401
 10528     018D                     _SSP1ADD	set	397
 10529     0191                     _SSP1CON2	set	401
 10530     0190                     _SSP1CON1	set	400
 10531     018F                     _SSP1STAT	set	399
 10532     0190                     _SSP1CON1bits	set	400
 10533     059E                     _T0CON0bits	set	1438
 10534     059E                     _T0CON0	set	1438
 10535     059C                     _TMR0L	set	1436
 10536     059D                     _TMR0H	set	1437
 10537     059F                     _T0CON1	set	1439
 10538     070F                     _PIR3bits	set	1807
 10539     070C                     _PIR0bits	set	1804
 10540     0716                     _PIE0bits	set	1814
 10541     0719                     _PIE3bits	set	1817
 10542     079D                     _PMD7	set	1949
 10543     079C                     _PMD6	set	1948
 10544     079B                     _PMD5	set	1947
 10545     079A                     _PMD4	set	1946
 10546     0799                     _PMD3	set	1945
 10547     0798                     _PMD2	set	1944
 10548     0797                     _PMD1	set	1943
 10549     0796                     _PMD0	set	1942
 10550     0892                     _OSCTUNE	set	2194
 10551     0890                     _OSCSTAT	set	2192
 10552     0893                     _OSCFRQ	set	2195
 10553     0891                     _OSCEN	set	2193
 10554     088F                     _OSCCON3	set	2191
 10555     088D                     _OSCCON1	set	2189
 10556     0A19                     _RC2REG	set	2585
 10557     0A1D                     _RC2STAbits	set	2589
 10558     0A1A                     _TX2REG	set	2586
 10559     0A1E                     _TX2STAbits	set	2590
 10560     0A1C                     _SP2BRGH	set	2588
 10561     0A1B                     _SP2BRGL	set	2587
 10562     0A1E                     _TX2STA	set	2590
 10563     0A1D                     _RC2STA	set	2589
 10564     0A1F                     _BAUD2CON	set	2591
 10565     1ECB                     _RX1DTPPS	set	7883
 10566     1EC6                     _SSP1DATPPS	set	7878
 10567     1ECD                     _RX2DTPPS	set	7885
 10568     1EC5                     _SSP1CLKPPS	set	7877
 10569     1F1C                     _RB4PPS	set	7964
 10570     1F24                     _RC4PPS	set	7972
 10571     1F1A                     _RB2PPS	set	7962
 10572     1F19                     _RB1PPS	set	7961
 10573     1F3D                     _IOCAPbits	set	7997
 10574     1F3E                     _IOCANbits	set	7998
 10575     1F3F                     _IOCAFbits	set	7999
 10576     1F52                     _INLVLC	set	8018
 10577     1F47                     _INLVLB	set	8007
 10578     1F3C                     _INLVLA	set	7996
 10579     1F51                     _SLRCONC	set	8017
 10580     1F46                     _SLRCONB	set	8006
 10581     1F3B                     _SLRCONA	set	7995
 10582     1F50                     _ODCONC	set	8016
 10583     1F45                     _ODCONB	set	8005
 10584     1F3A                     _ODCONA	set	7994
 10585     1F66                     _ODCONE	set	8038
 10586     1F4F                     _WPUC	set	8015
 10587     1F39                     _WPUA	set	7993
 10588     1F44                     _WPUB	set	8004
 10589     1F65                     _WPUE	set	8037
 10590     1F38                     _ANSELA	set	7992
 10591     1F43                     _ANSELB	set	8003
 10592     1F4E                     _ANSELC	set	8014
 10593                           
 10594                           	psect	stringtext10
 10595     187A                     __pstringtext10:
 10596     187A                     STR_4:
 10597     187A  3453               	retlw	83	;'S'
 10598     187B  3454               	retlw	84	;'T'
 10599     187C  3452               	retlw	82	;'R'
 10600     187D  3445               	retlw	69	;'E'
 10601     187E  3441               	retlw	65	;'A'
 10602     187F  344D               	retlw	77	;'M'
 10603     1880  345F               	retlw	95	;'_'
 10604     1881  344F               	retlw	79	;'O'
 10605     1882  3450               	retlw	80	;'P'
 10606     1883  3445               	retlw	69	;'E'
 10607     1884  344E               	retlw	78	;'N'
 10608     1885  3400               	retlw	0
 10609                           
 10610                           	psect	stringtext11
 10611     1891                     __pstringtext11:
 10612     1891                     STR_2:
 10613     1891  3444               	retlw	68	;'D'
 10614     1892  3449               	retlw	73	;'I'
 10615     1893  3453               	retlw	83	;'S'
 10616     1894  3443               	retlw	67	;'C'
 10617     1895  344F               	retlw	79	;'O'
 10618     1896  344E               	retlw	78	;'N'
 10619     1897  344E               	retlw	78	;'N'
 10620     1898  3445               	retlw	69	;'E'
 10621     1899  3443               	retlw	67	;'C'
 10622     189A  3454               	retlw	84	;'T'
 10623     189B  3400               	retlw	0
 10624                           
 10625                           	psect	stringtext12
 10626     2000                     __pstringtext12:
 10627     2000                     STR_1:
 10628     2000  3431               	retlw	49	;'1'
 10629     2001  342E               	retlw	46	;'.'
 10630     2002  3431               	retlw	49	;'1'
 10631     2003  342E               	retlw	46	;'.'
 10632     2004  3430               	retlw	48	;'0'
 10633     2005  3400               	retlw	0
 10634                           
 10635                           	psect	stringtext13
 10636     0000                     __pstringtext13:
 10637     2000                     
 10638                           	psect	cinit
 10639     0057                     start_initialization:	
 10640                           ; #config settings
 10641                           
 10642     0057                     __initialization:
 10643                           
 10644                           ; Initialize objects allocated to BANK1
 10645     0057  0141               	movlb	1	; select bank1
 10646     0058  3180  2002  3180   	fcall	__pidataBANK1	;fetch initializer
 10647     005B  00EE               	movwf	__pdataBANK1& (0+127)
 10648     005C  3180  2003  3180   	fcall	__pidataBANK1+1	;fetch initializer
 10649     005F  00EF               	movwf	(__pdataBANK1+1)& (0+127)
 10650                           
 10651                           ; Initialize objects allocated to BANK3
 10652     0060  30C4               	movlw	low __pidataBANK3
 10653     0061  0084               	movwf	4
 10654     0062  3090               	movlw	(high __pidataBANK3)| (0+128)
 10655     0063  0085               	movwf	5
 10656     0064  30A0               	movlw	low __pdataBANK3
 10657     0065  0086               	movwf	6
 10658     0066  3001               	movlw	high __pdataBANK3
 10659     0067  0087               	movwf	7
 10660     0068  3011               	movlw	17
 10661     0069  319F  2746  3180   	fcall	init_ram
 10662                           
 10663                           ; Clear objects allocated to COMMON
 10664     006C  01FC               	clrf	__pbssCOMMON& (0+127)
 10665                           
 10666                           ; Clear objects allocated to BANK0
 10667     006D  304D               	movlw	low __pbssBANK0
 10668     006E  0084               	movwf	4
 10669     006F  3000               	movlw	high __pbssBANK0
 10670     0070  0085               	movwf	5
 10671     0071  3023               	movlw	35
 10672     0072  319F  2740  3180   	fcall	clear_ram0
 10673                           
 10674                           ; Clear objects allocated to BANK1
 10675     0075  30A0               	movlw	low __pbssBANK1
 10676     0076  0084               	movwf	4
 10677     0077  3000               	movlw	high __pbssBANK1
 10678     0078  0085               	movwf	5
 10679     0079  304A               	movlw	74
 10680     007A  319F  2740  3180   	fcall	clear_ram0
 10681                           
 10682                           ; Clear objects allocated to BANK2
 10683     007D  3020               	movlw	low __pbssBANK2
 10684     007E  0084               	movwf	4
 10685     007F  3001               	movlw	high __pbssBANK2
 10686     0080  0085               	movwf	5
 10687     0081  3034               	movlw	52
 10688     0082  319F  2740  3180   	fcall	clear_ram0
 10689                           
 10690                           ; Clear objects allocated to BANK4
 10691     0085  3020               	movlw	low __pbssBANK4
 10692     0086  0084               	movwf	4
 10693     0087  3002               	movlw	high __pbssBANK4
 10694     0088  0085               	movwf	5
 10695     0089  3040               	movlw	64
 10696     008A  319F  2740  3180   	fcall	clear_ram0
 10697                           
 10698                           ; Clear objects allocated to BANK5
 10699     008D  30A0               	movlw	low __pbssBANK5
 10700     008E  0084               	movwf	4
 10701     008F  3002               	movlw	high __pbssBANK5
 10702     0090  0085               	movwf	5
 10703     0091  3050               	movlw	80
 10704     0092  319F  2740  3180   	fcall	clear_ram0
 10705                           
 10706                           ; Clear objects allocated to BANK6
 10707     0095  3020               	movlw	low __pbssBANK6
 10708     0096  0084               	movwf	4
 10709     0097  3003               	movlw	high __pbssBANK6
 10710     0098  0085               	movwf	5
 10711     0099  3050               	movlw	80
 10712     009A  319F  2740  3180   	fcall	clear_ram0
 10713                           
 10714                           ; Clear objects allocated to BANK7
 10715     009D  30A0               	movlw	low __pbssBANK7
 10716     009E  0084               	movwf	4
 10717     009F  3003               	movlw	high __pbssBANK7
 10718     00A0  0085               	movwf	5
 10719     00A1  3050               	movlw	80
 10720     00A2  319F  2740  3180   	fcall	clear_ram0
 10721     00A5                     end_of_initialization:	
 10722                           ;End of C runtime variable initialization code
 10723                           
 10724     00A5                     __end_of__initialization:
 10725     00A5  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 10726     00A6  0140               	movlb	0
 10727     00A7  3185  2D95         	ljmp	_main	;jump to C main() function
 10728                           
 10729                           	psect	bssCOMMON
 10730     007C                     __pbssCOMMON:
 10731     007C                     _eusart2RxHead:
 10732     007C                     	ds	1
 10733                           
 10734                           	psect	bssBANK0
 10735     004D                     __pbssBANK0:
 10736     004D                     _timer0ReloadVal16bit:
 10737     004D                     	ds	2
 10738     004F                     _bitMap:
 10739     004F                     	ds	2
 10740     0051                     _serialIndex:
 10741     0051                     	ds	1
 10742     0052                     _eusart1RxCount:
 10743     0052                     	ds	1
 10744     0053                     _eusart1RxTail:
 10745     0053                     	ds	1
 10746     0054                     _eusart1RxHead:
 10747     0054                     	ds	1
 10748     0055                     _eusart1TxBufferRemaining:
 10749     0055                     	ds	1
 10750     0056                     _eusart1TxTail:
 10751     0056                     	ds	1
 10752     0057                     _eusart1TxHead:
 10753     0057                     	ds	1
 10754     0058                     _eusart2RxCount:
 10755     0058                     	ds	1
 10756     0059                     _eusart2RxTail:
 10757     0059                     	ds	1
 10758     005A                     _eusart2TxBufferRemaining:
 10759     005A                     	ds	1
 10760     005B                     _eusart2TxTail:
 10761     005B                     	ds	1
 10762     005C                     _eusart2TxHead:
 10763     005C                     	ds	1
 10764     005D                     RN487X_FilterData@asyncBuffering:
 10765     005D                     	ds	1
 10766     005E                     _dataReady:
 10767     005E                     	ds	1
 10768     005F                     _peek:
 10769     005F                     	ds	1
 10770     0060                     _pHead:
 10771     0060                     	ds	1
 10772     0061                     _asyncBufferSize:
 10773     0061                     	ds	1
 10774     0062                     _asyncBuffer:
 10775     0062                     	ds	1
 10776     0063                     _connected:
 10777     0063                     	ds	1
 10778     0064                     _cinco:
 10779     0064                     	ds	1
 10780     0065                     _cuatro:
 10781     0065                     	ds	1
 10782     0066                     _tres:
 10783     0066                     	ds	1
 10784     0067                     _dos:
 10785     0067                     	ds	1
 10786     0068                     _uno:
 10787     0068                     	ds	1
 10788     0069                     _zero:
 10789     0069                     	ds	1
 10790     006A                     LIGHTBLUE_ParseIncomingPacket@packetID:
 10791     006A                     	ds	1
 10792     006B                     LIGHTBLUE_ParseIncomingPacket@length:
 10793     006B                     	ds	1
 10794     006C                     LIGHTBLUE_ParseIncomingPacket@parserState:
 10795     006C                     	ds	1
 10796     006D                     _sequenceNumber:
 10797     006D                     	ds	1
 10798     006E                     __deviceAddress:
 10799     006E                     	ds	1
 10800     006F                     _number:
 10801     006F                     	ds	1
 10802                           
 10803                           	psect	bssBANK1
 10804     00A0                     __pbssBANK1:
 10805     00A0                     _I2C1_Status:
 10806     00A0                     	ds	30
 10807     00BE                     _eusart1RxStatusBuffer:
 10808     00BE                     	ds	8
 10809     00C6                     _eusart2RxStatusBuffer:
 10810     00C6                     	ds	8
 10811     00CE                     _eusart2RxBuffer:
 10812     00CE                     	ds	8
 10813     00D6                     _eusart2TxBuffer:
 10814     00D6                     	ds	8
 10815     00DE                     _manufactureId:
 10816     00DE                     	ds	2
 10817     00E0                     _i2c1_driver_i2cISR:
 10818     00E0                     	ds	2
 10819     00E2                     _i2c1_driver_busCollisionISR:
 10820     00E2                     	ds	2
 10821     00E4                     LIGHTBLUE_ParseIncomingPacket@data:
 10822     00E4                     	ds	2
 10823     00E6                     _eusart1RxLastError:
 10824     00E6                     	ds	1
 10825     00E7                     _eusart2RxLastError:
 10826     00E7                     	ds	1
 10827     00E8                     _siete:
 10828     00E8                     	ds	1
 10829     00E9                     _seis:
 10830     00E9                     	ds	1
 10831                           
 10832                           	psect	dataBANK1
 10833     00EE                     __pdataBANK1:
 10834     00EE                     RN487X_GetInputsValues@F12901:
 10835     00EE                     	ds	2
 10836                           
 10837                           	psect	bssBANK2
 10838     0120                     __pbssBANK2:
 10839     0120                     _i2c_status:
 10840     0120                     	ds	36
 10841     0144                     _eusart1RxBuffer:
 10842     0144                     	ds	8
 10843     014C                     _eusart1TxBuffer:
 10844     014C                     	ds	8
 10845                           
 10846                           	psect	dataBANK3
 10847     01A0                     __pdataBANK3:
 10848     01A0                     __hex:
 10849     01A0                     	ds	17
 10850                           
 10851                           	psect	bssBANK4
 10852     0220                     __pbssBANK4:
 10853     0220                     _cmdBuf:
 10854     0220                     	ds	64
 10855                           
 10856                           	psect	bssBANK5
 10857     02A0                     __pbssBANK5:
 10858     02A0                     _lightBlueSerial:
 10859     02A0                     	ds	80
 10860                           
 10861                           	psect	bssBANK6
 10862     0320                     __pbssBANK6:
 10863     0320                     _statusBuffer:
 10864     0320                     	ds	80
 10865                           
 10866                           	psect	bssBANK7
 10867     03A0                     __pbssBANK7:
 10868     03A0                     _statusBuffer@main$F4234:
 10869     03A0                     	ds	80
 10870                           
 10871                           	psect	inittext
 10872     1F46                     init_ram:
 10873     1F46  00FE               	movwf	btemp
 10874     1F47                     initloop:
 10875     1F47  0012               	moviw fsr0++
 10876     1F48  001E               	movwi fsr1++
 10877     1F49  0BFE               	decfsz	btemp,f
 10878     1F4A  2F47               	goto	initloop
 10879     1F4B  3400               	retlw	0
 10880                           
 10881                           	psect	clrtext
 10882     1F40                     clear_ram0:	
 10883                           ;	Called with FSR0 containing the base address, and
 10884                           ;	WREG with the size to clear
 10885                           
 10886     1F40  0064               	clrwdt	;clear the watchdog before getting into this loop
 10887     1F41                     clrloop0:
 10888     1F41  0180               	clrf	0	;clear RAM location pointed to by FSR
 10889     1F42  3101               	addfsr 0,1
 10890     1F43  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
 10891     1F44  2F41               	goto	clrloop0	;have we reached the end yet?
 10892     1F45  3400               	retlw	0	;all done for this memory range, return
 10893                           
 10894                           	psect	cstackBANK2
 10895     0166                     __pcstackBANK2:
 10896     0166                     _main$5433:
 10897                           
 10898                           ; 1 bytes @ 0x0
 10899     0166                     	ds	1
 10900                           
 10901                           	psect	cstackCOMMON
 10902     0070                     __pcstackCOMMON:
 10903     0070                     ?_BMA253_NewAccelDataRdyY:
 10904     0070                     ?_BMA253_NewAccelDataRdyZ:	
 10905                           ; 1 bytes @ 0x0
 10906                           
 10907     0070                     ?_TMAG5273_GetXValue:	
 10908                           ; 1 bytes @ 0x0
 10909                           
 10910     0070                     ?_TMAG5273_GetTemperatureValue:	
 10911                           ; 1 bytes @ 0x0
 10912                           
 10913     0070                     ?_LIGHTBLUE_GetButtonValue:	
 10914                           ; 1 bytes @ 0x0
 10915                           
 10916     0070                     ?_LIGHTBLUE_GetDataLedValue:	
 10917                           ; 1 bytes @ 0x0
 10918                           
 10919     0070                     ?_LIGHTBLUE_GetErrorLedValue:	
 10920                           ; 1 bytes @ 0x0
 10921                           
 10922     0070                     ?_LIGHTBLUE_UpdateErrorLed:	
 10923                           ; 1 bytes @ 0x0
 10924                           
 10925     0070                     ?_RN487X_EnterCmdMode:	
 10926                           ; 1 bytes @ 0x0
 10927                           
 10928     0070                     ?_RN487X_EnterDataMode:	
 10929                           ; 1 bytes @ 0x0
 10930                           
 10931     0070                     ?_EUSART1_Read:	
 10932                           ; 1 bytes @ 0x0
 10933                           
 10934     0070                     ?_EUSART1_is_rx_ready:	
 10935                           ; 1 bytes @ 0x0
 10936                           
 10937     0070                     ?_EUSART1_Receive_ISR:	
 10938                           ; 1 bytes @ 0x0
 10939                           
 10940     0070                     ?_EUSART1_is_tx_done:	
 10941                           ; 1 bytes @ 0x0
 10942                           
 10943     0070                     ?_EUSART1_Transmit_ISR:	
 10944                           ; 1 bytes @ 0x0
 10945                           
 10946     0070                     ??_EUSART1_Transmit_ISR:	
 10947                           ; 1 bytes @ 0x0
 10948                           
 10949     0070                     ?_EUSART1_Initialize:	
 10950                           ; 1 bytes @ 0x0
 10951                           
 10952     0070                     ?_EUSART2_Read:	
 10953                           ; 1 bytes @ 0x0
 10954                           
 10955     0070                     ?_EUSART2_is_rx_ready:	
 10956                           ; 1 bytes @ 0x0
 10957                           
 10958     0070                     ?_EUSART2_Receive_ISR:	
 10959                           ; 1 bytes @ 0x0
 10960                           
 10961     0070                     ?_EUSART2_is_tx_done:	
 10962                           ; 1 bytes @ 0x0
 10963                           
 10964     0070                     ?_EUSART2_Transmit_ISR:	
 10965                           ; 1 bytes @ 0x0
 10966                           
 10967     0070                     ??_EUSART2_Transmit_ISR:	
 10968                           ; 1 bytes @ 0x0
 10969                           
 10970     0070                     ?_EUSART2_Initialize:	
 10971                           ; 1 bytes @ 0x0
 10972                           
 10973     0070                     ?_I2C1_Open:	
 10974                           ; 1 bytes @ 0x0
 10975                           
 10976     0070                     ?_I2C1_MasterWrite:	
 10977                           ; 1 bytes @ 0x0
 10978                           
 10979     0070                     ?_I2C1_Close:	
 10980                           ; 1 bytes @ 0x0
 10981                           
 10982     0070                     ?_isConnected:	
 10983                           ; 1 bytes @ 0x0
 10984                           
 10985     0070                     ?_setMagneticChannel:	
 10986                           ; 1 bytes @ 0x0
 10987                           
 10988     0070                     ?_setTemperatureEn:	
 10989                           ; 1 bytes @ 0x0
 10990                           
 10991     0070                     ?_setOperatingMode:	
 10992                           ; 1 bytes @ 0x0
 10993                           
 10994     0070                     ?_setXYAxisRange:	
 10995                           ; 1 bytes @ 0x0
 10996                           
 10997     0070                     ?_setZAxisRange:	
 10998                           ; 1 bytes @ 0x0
 10999                           
 11000     0070                     ?_getError:	
 11001                           ; 1 bytes @ 0x0
 11002                           
 11003     0070                     ?_getLowPower:	
 11004                           ; 1 bytes @ 0x0
 11005                           
 11006     0070                     ?_getOperatingMode:	
 11007                           ; 1 bytes @ 0x0
 11008                           
 11009     0070                     ?_getMagneticChannel:	
 11010                           ; 1 bytes @ 0x0
 11011                           
 11012     0070                     ?_getTemperatureEN:	
 11013                           ; 1 bytes @ 0x0
 11014                           
 11015     0070                     ?_getAngleEn:	
 11016                           ; 1 bytes @ 0x0
 11017                           
 11018     0070                     ?_RN487X_IsConnected:	
 11019                           ; 1 bytes @ 0x0
 11020                           
 11021     0070                     ?_RN487X_Read:	
 11022                           ; 1 bytes @ 0x0
 11023                           
 11024     0070                     ?_RN487X_DataReady:	
 11025                           ; 1 bytes @ 0x0
 11026                           
 11027     0070                     ?_RN487X_Read@rn487x_interface$F1836:	
 11028                           ; 1 bytes @ 0x0
 11029                           
 11030     0070                     ?_RN487X_is_tx_done:	
 11031                           ; 1 bytes @ 0x0
 11032                           
 11033     0070                     ?_RN487X_is_rx_ready:	
 11034                           ; 1 bytes @ 0x0
 11035                           
 11036     0070                     ?_RN487X_FilterData:	
 11037                           ; 1 bytes @ 0x0
 11038                           
 11039     0070                     ?_EUSART2_DefaultFramingErrorHandler:	
 11040                           ; 1 bytes @ 0x0
 11041                           
 11042     0070                     ??_EUSART2_DefaultFramingErrorHandler:	
 11043                           ; 1 bytes @ 0x0
 11044                           
 11045     0070                     ?_EUSART2_DefaultOverrunErrorHandler:	
 11046                           ; 1 bytes @ 0x0
 11047                           
 11048     0070                     ??_EUSART2_DefaultOverrunErrorHandler:	
 11049                           ; 1 bytes @ 0x0
 11050                           
 11051     0070                     ?_EUSART2_DefaultErrorHandler:	
 11052                           ; 1 bytes @ 0x0
 11053                           
 11054     0070                     ?_EUSART2_RxDataHandler:	
 11055                           ; 1 bytes @ 0x0
 11056                           
 11057     0070                     ??_EUSART2_RxDataHandler:	
 11058                           ; 1 bytes @ 0x0
 11059                           
 11060     0070                     ?_EUSART1_DefaultFramingErrorHandler:	
 11061                           ; 1 bytes @ 0x0
 11062                           
 11063     0070                     ??_EUSART1_DefaultFramingErrorHandler:	
 11064                           ; 1 bytes @ 0x0
 11065                           
 11066     0070                     ?_EUSART1_DefaultOverrunErrorHandler:	
 11067                           ; 1 bytes @ 0x0
 11068                           
 11069     0070                     ??_EUSART1_DefaultOverrunErrorHandler:	
 11070                           ; 1 bytes @ 0x0
 11071                           
 11072     0070                     ?_EUSART1_DefaultErrorHandler:	
 11073                           ; 1 bytes @ 0x0
 11074                           
 11075     0070                     ?_EUSART1_RxDataHandler:	
 11076                           ; 1 bytes @ 0x0
 11077                           
 11078     0070                     ??_EUSART1_RxDataHandler:	
 11079                           ; 1 bytes @ 0x0
 11080                           
 11081     0070                     ?_PIN_MANAGER_IOC:	
 11082                           ; 1 bytes @ 0x0
 11083                           
 11084     0070                     ??_PIN_MANAGER_IOC:	
 11085                           ; 1 bytes @ 0x0
 11086                           
 11087     0070                     ?_PMD_Initialize:	
 11088                           ; 1 bytes @ 0x0
 11089                           
 11090     0070                     ?_I2C1_Initialize:	
 11091                           ; 1 bytes @ 0x0
 11092                           
 11093     0070                     ?_PIN_MANAGER_Initialize:	
 11094                           ; 1 bytes @ 0x0
 11095                           
 11096     0070                     ?_OSCILLATOR_Initialize:	
 11097                           ; 1 bytes @ 0x0
 11098                           
 11099     0070                     ?_TMR0_Initialize:	
 11100                           ; 1 bytes @ 0x0
 11101                           
 11102     0070                     ?_IOCAF6_DefaultInterruptHandler:	
 11103                           ; 1 bytes @ 0x0
 11104                           
 11105     0070                     ??_IOCAF6_DefaultInterruptHandler:	
 11106                           ; 1 bytes @ 0x0
 11107                           
 11108     0070                     ?_IOCAF6_ISR:	
 11109                           ; 1 bytes @ 0x0
 11110                           
 11111     0070                     ??_IOCAF6_ISR:	
 11112                           ; 1 bytes @ 0x0
 11113                           
 11114     0070                     ?_I2C1_DO_IDLE:	
 11115                           ; 1 bytes @ 0x0
 11116                           
 11117     0070                     ?_I2C1_DO_SEND_ADR_READ:	
 11118                           ; 1 bytes @ 0x0
 11119                           
 11120     0070                     ?_I2C1_DO_SEND_ADR_WRITE:	
 11121                           ; 1 bytes @ 0x0
 11122                           
 11123     0070                     ?_I2C1_DO_TX:	
 11124                           ; 1 bytes @ 0x0
 11125                           
 11126     0070                     ?_I2C1_DO_RX:	
 11127                           ; 1 bytes @ 0x0
 11128                           
 11129     0070                     ?_I2C1_DO_RCEN:	
 11130                           ; 1 bytes @ 0x0
 11131                           
 11132     0070                     ?_I2C1_DO_TX_EMPTY:	
 11133                           ; 1 bytes @ 0x0
 11134                           
 11135     0070                     ?_I2C1_DO_SEND_RESTART_READ:	
 11136                           ; 1 bytes @ 0x0
 11137                           
 11138     0070                     ?_I2C1_DO_SEND_RESTART_WRITE:	
 11139                           ; 1 bytes @ 0x0
 11140                           
 11141     0070                     ?_I2C1_DO_SEND_RESTART:	
 11142                           ; 1 bytes @ 0x0
 11143                           
 11144     0070                     ?_I2C1_DO_SEND_STOP:	
 11145                           ; 1 bytes @ 0x0
 11146                           
 11147     0070                     ?_I2C1_DO_RX_ACK:	
 11148                           ; 1 bytes @ 0x0
 11149                           
 11150     0070                     ?_I2C1_DO_RX_NACK_STOP:	
 11151                           ; 1 bytes @ 0x0
 11152                           
 11153     0070                     ?_I2C1_DO_RX_NACK_RESTART:	
 11154                           ; 1 bytes @ 0x0
 11155                           
 11156     0070                     ?_I2C1_DO_RESET:	
 11157                           ; 1 bytes @ 0x0
 11158                           
 11159     0070                     ?_I2C1_DO_ADDRESS_NACK:	
 11160                           ; 1 bytes @ 0x0
 11161                           
 11162     0070                     ?_I2C1_MasterClearIrq:	
 11163                           ; 1 bytes @ 0x0
 11164                           
 11165     0070                     ?_I2C1_MasterOpen:	
 11166                           ; 1 bytes @ 0x0
 11167                           
 11168     0070                     ?_I2C1_MasterDisableIrq:	
 11169                           ; 1 bytes @ 0x0
 11170                           
 11171     0070                     ?_I2C1_MasterClose:	
 11172                           ; 1 bytes @ 0x0
 11173                           
 11174     0070                     ?_I2C1_MasterStart:	
 11175                           ; 1 bytes @ 0x0
 11176                           
 11177     0070                     ?_I2C1_Poller:	
 11178                           ; 1 bytes @ 0x0
 11179                           
 11180     0070                     ?_I2C1_MasterWaitForEvent:	
 11181                           ; 1 bytes @ 0x0
 11182                           
 11183     0070                     ?_I2C1_MasterFsm:	
 11184                           ; 1 bytes @ 0x0
 11185                           
 11186     0070                     ?_I2C1_MasterIsNack:	
 11187                           ; 1 bytes @ 0x0
 11188                           
 11189     0070                     ?_I2C1_MasterSendTxData:	
 11190                           ; 1 bytes @ 0x0
 11191                           
 11192     0070                     ?_I2C1_MasterGetRxData:	
 11193                           ; 1 bytes @ 0x0
 11194                           
 11195     0070                     ?_I2C1_MasterSendAck:	
 11196                           ; 1 bytes @ 0x0
 11197                           
 11198     0070                     ?_I2C1_MasterStartRx:	
 11199                           ; 1 bytes @ 0x0
 11200                           
 11201     0070                     ?_I2C1_MasterSetIrq:	
 11202                           ; 1 bytes @ 0x0
 11203                           
 11204     0070                     ?_I2C1_MasterEnableRestart:	
 11205                           ; 1 bytes @ 0x0
 11206                           
 11207     0070                     ?_I2C1_MasterStop:	
 11208                           ; 1 bytes @ 0x0
 11209                           
 11210     0070                     ?_I2C1_MasterSendNack:	
 11211                           ; 1 bytes @ 0x0
 11212                           
 11213     0070                     ?_BMA253_GetAccelDataY:	
 11214                           ; 1 bytes @ 0x0
 11215                           
 11216     0070                     ?_BMA253_GetAccelDataZ:	
 11217                           ; 1 bytes @ 0x0
 11218                           
 11219     0070                     ?_BMA253_GetAccelDataXYZ:	
 11220                           ; 1 bytes @ 0x0
 11221                           
 11222     0070                     ?_LIGHTBLUE_Initialize:	
 11223                           ; 1 bytes @ 0x0
 11224                           
 11225     0070                     ?_LIGHTBLUE_TemperatureSensor:	
 11226                           ; 1 bytes @ 0x0
 11227                           
 11228     0070                     ?_LIGHTBLUE_AccelSensor:	
 11229                           ; 1 bytes @ 0x0
 11230                           
 11231     0070                     ?_LIGHTBLUE_PushButton:	
 11232                           ; 1 bytes @ 0x0
 11233                           
 11234     0070                     ?_LIGHTBLUE_LedState:	
 11235                           ; 1 bytes @ 0x0
 11236                           
 11237     0070                     ?_LIGHTBLUE_SendProtocolVersion:	
 11238                           ; 1 bytes @ 0x0
 11239                           
 11240     0070                     ?_LIGHTBLUE_SendSerialData:	
 11241                           ; 1 bytes @ 0x0
 11242                           
 11243     0070                     ?_LIGHTBLUE_ParseIncomingPacket:	
 11244                           ; 1 bytes @ 0x0
 11245                           
 11246     0070                     ?_LIGHTBLUE_SetErrorLedValue:	
 11247                           ; 1 bytes @ 0x0
 11248                           
 11249     0070                     ?_begin:	
 11250                           ; 1 bytes @ 0x0
 11251                           
 11252     0070                     ?_readRegister:	
 11253                           ; 1 bytes @ 0x0
 11254                           
 11255     0070                     ?_getDeviceStatus:	
 11256                           ; 1 bytes @ 0x0
 11257                           
 11258     0070                     ?_rn487x_PrintMessageStart:	
 11259                           ; 1 bytes @ 0x0
 11260                           
 11261     0070                     ?_rn487x_PrintMessageEnd:	
 11262                           ; 1 bytes @ 0x0
 11263                           
 11264     0070                     ?_rn487x_PrintIndicatorCharacters:	
 11265                           ; 1 bytes @ 0x0
 11266                           
 11267     0070                     ?_rn487x_PrintMessage:	
 11268                           ; 1 bytes @ 0x0
 11269                           
 11270     0070                     ?_RN487X_Init:	
 11271                           ; 1 bytes @ 0x0
 11272                           
 11273     0070                     ?_RN487X_ReadDefaultResponse:	
 11274                           ; 1 bytes @ 0x0
 11275                           
 11276     0070                     ?_INTERRUPT_InterruptManager:	
 11277                           ; 1 bytes @ 0x0
 11278                           
 11279     0070                     ?_SYSTEM_Initialize:	
 11280                           ; 1 bytes @ 0x0
 11281                           
 11282     0070                     ?_TMR0_HasOverflowOccured:	
 11283                           ; 1 bytes @ 0x0
 11284                           
 11285     0070                     ?_I2C1_MasterOperation:	
 11286                           ; 1 bytes @ 0x0
 11287                           
 11288     0070                     ?_main:	
 11289                           ; 1 bytes @ 0x0
 11290                           
 11291                           
 11292                           ; 2 bytes @ 0x0
 11293     0070                     	ds	1
 11294     0071                     ??_LIGHTBLUE_GetButtonValue:
 11295     0071                     ??_LIGHTBLUE_GetDataLedValue:	
 11296                           ; 1 bytes @ 0x1
 11297                           
 11298     0071                     ??_LIGHTBLUE_GetErrorLedValue:	
 11299                           ; 1 bytes @ 0x1
 11300                           
 11301     0071                     ??_EUSART1_Read:	
 11302                           ; 1 bytes @ 0x1
 11303                           
 11304     0071                     ?_EUSART1_Write:	
 11305                           ; 1 bytes @ 0x1
 11306                           
 11307     0071                     ??_EUSART1_is_rx_ready:	
 11308                           ; 1 bytes @ 0x1
 11309                           
 11310     0071                     ?_EUSART1_SetTxInterruptHandler:	
 11311                           ; 1 bytes @ 0x1
 11312                           
 11313     0071                     ??_EUSART1_Receive_ISR:	
 11314                           ; 1 bytes @ 0x1
 11315                           
 11316     0071                     ?_EUSART1_SetRxInterruptHandler:	
 11317                           ; 1 bytes @ 0x1
 11318                           
 11319     0071                     ??_EUSART1_is_tx_done:	
 11320                           ; 1 bytes @ 0x1
 11321                           
 11322     0071                     ??_EUSART2_Read:	
 11323                           ; 1 bytes @ 0x1
 11324                           
 11325     0071                     ?_EUSART2_Write:	
 11326                           ; 1 bytes @ 0x1
 11327                           
 11328     0071                     ??_EUSART2_is_rx_ready:	
 11329                           ; 1 bytes @ 0x1
 11330                           
 11331     0071                     ?_EUSART2_SetTxInterruptHandler:	
 11332                           ; 1 bytes @ 0x1
 11333                           
 11334     0071                     ??_EUSART2_Receive_ISR:	
 11335                           ; 1 bytes @ 0x1
 11336                           
 11337     0071                     ?_EUSART2_SetRxInterruptHandler:	
 11338                           ; 1 bytes @ 0x1
 11339                           
 11340     0071                     ??_EUSART2_is_tx_done:	
 11341                           ; 1 bytes @ 0x1
 11342                           
 11343     0071                     ?_I2C1_SetBuffer:	
 11344                           ; 1 bytes @ 0x1
 11345                           
 11346     0071                     ??_I2C1_Open:	
 11347                           ; 1 bytes @ 0x1
 11348                           
 11349     0071                     ??_I2C1_Close:	
 11350                           ; 1 bytes @ 0x1
 11351                           
 11352     0071                     ?_bitRead8:	
 11353                           ; 1 bytes @ 0x1
 11354                           
 11355     0071                     ?_bitWrite8:	
 11356                           ; 1 bytes @ 0x1
 11357                           
 11358     0071                     ?_RN487X_SetAsyncMessageHandler:	
 11359                           ; 1 bytes @ 0x1
 11360                           
 11361     0071                     ??_RN487X_IsConnected:	
 11362                           ; 1 bytes @ 0x1
 11363                           
 11364     0071                     ??_RN487X_is_tx_done:	
 11365                           ; 1 bytes @ 0x1
 11366                           
 11367     0071                     ??_RN487X_is_rx_ready:	
 11368                           ; 1 bytes @ 0x1
 11369                           
 11370     0071                     ?_RN487X_IndicateRx:	
 11371                           ; 1 bytes @ 0x1
 11372                           
 11373     0071                     ?_RN487X_Reset:	
 11374                           ; 1 bytes @ 0x1
 11375                           
 11376     0071                     ?_RN487X_SetSystemMode:	
 11377                           ; 1 bytes @ 0x1
 11378                           
 11379     0071                     ?_DELAY_milliseconds:	
 11380                           ; 1 bytes @ 0x1
 11381                           
 11382     0071                     ?_strcpy:	
 11383                           ; 1 bytes @ 0x1
 11384                           
 11385     0071                     ?_EUSART2_SetFramingErrorHandler:	
 11386                           ; 1 bytes @ 0x1
 11387                           
 11388     0071                     ?_EUSART2_SetOverrunErrorHandler:	
 11389                           ; 1 bytes @ 0x1
 11390                           
 11391     0071                     ?_EUSART2_SetErrorHandler:	
 11392                           ; 1 bytes @ 0x1
 11393                           
 11394     0071                     ??_EUSART2_DefaultErrorHandler:	
 11395                           ; 1 bytes @ 0x1
 11396                           
 11397     0071                     ?_EUSART1_SetFramingErrorHandler:	
 11398                           ; 1 bytes @ 0x1
 11399                           
 11400     0071                     ?_EUSART1_SetOverrunErrorHandler:	
 11401                           ; 1 bytes @ 0x1
 11402                           
 11403     0071                     ?_EUSART1_SetErrorHandler:	
 11404                           ; 1 bytes @ 0x1
 11405                           
 11406     0071                     ??_EUSART1_DefaultErrorHandler:	
 11407                           ; 1 bytes @ 0x1
 11408                           
 11409     0071                     ??_PMD_Initialize:	
 11410                           ; 1 bytes @ 0x1
 11411                           
 11412     0071                     ??_I2C1_Initialize:	
 11413                           ; 1 bytes @ 0x1
 11414                           
 11415     0071                     ??_OSCILLATOR_Initialize:	
 11416                           ; 1 bytes @ 0x1
 11417                           
 11418     0071                     ??_TMR0_Initialize:	
 11419                           ; 1 bytes @ 0x1
 11420                           
 11421     0071                     ?_IOCAF6_SetInterruptHandler:	
 11422                           ; 1 bytes @ 0x1
 11423                           
 11424     0071                     ??_I2C1_DO_IDLE:	
 11425                           ; 1 bytes @ 0x1
 11426                           
 11427     0071                     ??_I2C1_DO_SEND_ADR_READ:	
 11428                           ; 1 bytes @ 0x1
 11429                           
 11430     0071                     ??_I2C1_DO_RCEN:	
 11431                           ; 1 bytes @ 0x1
 11432                           
 11433     0071                     ??_I2C1_DO_SEND_RESTART_READ:	
 11434                           ; 1 bytes @ 0x1
 11435                           
 11436     0071                     ??_I2C1_DO_SEND_RESTART_WRITE:	
 11437                           ; 1 bytes @ 0x1
 11438                           
 11439     0071                     ??_I2C1_DO_SEND_RESTART:	
 11440                           ; 1 bytes @ 0x1
 11441                           
 11442     0071                     ??_I2C1_DO_SEND_STOP:	
 11443                           ; 1 bytes @ 0x1
 11444                           
 11445     0071                     ??_I2C1_DO_RX_ACK:	
 11446                           ; 1 bytes @ 0x1
 11447                           
 11448     0071                     ??_I2C1_DO_RX_NACK_STOP:	
 11449                           ; 1 bytes @ 0x1
 11450                           
 11451     0071                     ??_I2C1_DO_RX_NACK_RESTART:	
 11452                           ; 1 bytes @ 0x1
 11453                           
 11454     0071                     ??_I2C1_DO_RESET:	
 11455                           ; 1 bytes @ 0x1
 11456                           
 11457     0071                     ??_I2C1_MasterClearIrq:	
 11458                           ; 1 bytes @ 0x1
 11459                           
 11460     0071                     ??_I2C1_MasterOpen:	
 11461                           ; 1 bytes @ 0x1
 11462                           
 11463     0071                     ??_I2C1_MasterDisableIrq:	
 11464                           ; 1 bytes @ 0x1
 11465                           
 11466     0071                     ??_I2C1_MasterClose:	
 11467                           ; 1 bytes @ 0x1
 11468                           
 11469     0071                     ??_I2C1_MasterStart:	
 11470                           ; 1 bytes @ 0x1
 11471                           
 11472     0071                     ?_I2C1_SetCallback:	
 11473                           ; 1 bytes @ 0x1
 11474                           
 11475     0071                     ??_I2C1_MasterWaitForEvent:	
 11476                           ; 1 bytes @ 0x1
 11477                           
 11478     0071                     ??_I2C1_MasterIsNack:	
 11479                           ; 1 bytes @ 0x1
 11480                           
 11481     0071                     ??_I2C1_MasterSendTxData:	
 11482                           ; 1 bytes @ 0x1
 11483                           
 11484     0071                     ??_I2C1_MasterGetRxData:	
 11485                           ; 1 bytes @ 0x1
 11486                           
 11487     0071                     ??_I2C1_MasterSendAck:	
 11488                           ; 1 bytes @ 0x1
 11489                           
 11490     0071                     ??_I2C1_MasterStartRx:	
 11491                           ; 1 bytes @ 0x1
 11492                           
 11493     0071                     ??_I2C1_MasterSetIrq:	
 11494                           ; 1 bytes @ 0x1
 11495                           
 11496     0071                     ??_I2C1_MasterEnableRestart:	
 11497                           ; 1 bytes @ 0x1
 11498                           
 11499     0071                     ??_I2C1_MasterStop:	
 11500                           ; 1 bytes @ 0x1
 11501                           
 11502     0071                     ??_I2C1_MasterSendNack:	
 11503                           ; 1 bytes @ 0x1
 11504                           
 11505     0071                     ?_strchr:	
 11506                           ; 1 bytes @ 0x1
 11507                           
 11508     0071                     ??_LIGHTBLUE_Initialize:	
 11509                           ; 1 bytes @ 0x1
 11510                           
 11511     0071                     ??_INTERRUPT_InterruptManager:	
 11512                           ; 1 bytes @ 0x1
 11513                           
 11514     0071                     ??_TMR0_HasOverflowOccured:	
 11515                           ; 1 bytes @ 0x1
 11516                           
 11517     0071                     ?_strlen:	
 11518                           ; 1 bytes @ 0x1
 11519                           
 11520     0071                     ?_swap:	
 11521                           ; 2 bytes @ 0x1
 11522                           
 11523     0071                     ?_strncmp:	
 11524                           ; 2 bytes @ 0x1
 11525                           
 11526     0071                     RN487X_Reset@value:	
 11527                           ; 2 bytes @ 0x1
 11528                           
 11529     0071                     RN487X_IndicateRx@value:	
 11530                           ; 1 bytes @ 0x1
 11531                           
 11532     0071                     RN487X_SetSystemMode@mode:	
 11533                           ; 1 bytes @ 0x1
 11534                           
 11535     0071                     RN487X_SetAsyncMessageHandler@len:	
 11536                           ; 1 bytes @ 0x1
 11537                           
 11538     0071                     EUSART2_Write@txData:	
 11539                           ; 1 bytes @ 0x1
 11540                           
 11541     0071                     EUSART1_Write@txData:	
 11542                           ; 1 bytes @ 0x1
 11543                           
 11544     0071                     I2C1_Open@address:	
 11545                           ; 1 bytes @ 0x1
 11546                           
 11547     0071                     I2C1_Close@returnValue:	
 11548                           ; 1 bytes @ 0x1
 11549                           
 11550     0071                     I2C1_MasterSendTxData@data:	
 11551                           ; 1 bytes @ 0x1
 11552                           
 11553     0071                     strcpy@src:	
 11554                           ; 1 bytes @ 0x1
 11555                           
 11556     0071                     bitRead8@reg:	
 11557                           ; 1 bytes @ 0x1
 11558                           
 11559     0071                     bitWrite8@reg:	
 11560                           ; 2 bytes @ 0x1
 11561                           
 11562     0071                     swap@reg:	
 11563                           ; 2 bytes @ 0x1
 11564                           
 11565     0071                     EUSART2_SetFramingErrorHandler@interruptHandler:	
 11566                           ; 2 bytes @ 0x1
 11567                           
 11568     0071                     EUSART2_SetOverrunErrorHandler@interruptHandler:	
 11569                           ; 2 bytes @ 0x1
 11570                           
 11571     0071                     EUSART2_SetErrorHandler@interruptHandler:	
 11572                           ; 2 bytes @ 0x1
 11573                           
 11574     0071                     EUSART2_SetTxInterruptHandler@interruptHandler:	
 11575                           ; 2 bytes @ 0x1
 11576                           
 11577     0071                     EUSART2_SetRxInterruptHandler@interruptHandler:	
 11578                           ; 2 bytes @ 0x1
 11579                           
 11580     0071                     EUSART1_SetFramingErrorHandler@interruptHandler:	
 11581                           ; 2 bytes @ 0x1
 11582                           
 11583     0071                     EUSART1_SetOverrunErrorHandler@interruptHandler:	
 11584                           ; 2 bytes @ 0x1
 11585                           
 11586     0071                     EUSART1_SetErrorHandler@interruptHandler:	
 11587                           ; 2 bytes @ 0x1
 11588                           
 11589     0071                     EUSART1_SetTxInterruptHandler@interruptHandler:	
 11590                           ; 2 bytes @ 0x1
 11591                           
 11592     0071                     EUSART1_SetRxInterruptHandler@interruptHandler:	
 11593                           ; 2 bytes @ 0x1
 11594                           
 11595     0071                     IOCAF6_SetInterruptHandler@InterruptHandler:	
 11596                           ; 2 bytes @ 0x1
 11597                           
 11598     0071                     I2C1_SetBuffer@buffer:	
 11599                           ; 2 bytes @ 0x1
 11600                           
 11601     0071                     I2C1_SetCallback@cb:	
 11602                           ; 2 bytes @ 0x1
 11603                           
 11604     0071                     DELAY_milliseconds@milliseconds:	
 11605                           ; 2 bytes @ 0x1
 11606                           
 11607     0071                     strlen@s:	
 11608                           ; 2 bytes @ 0x1
 11609                           
 11610     0071                     strchr@c:	
 11611                           ; 2 bytes @ 0x1
 11612                           
 11613     0071                     strncmp@r:	
 11614                           ; 2 bytes @ 0x1
 11615                           
 11616                           
 11617                           ; 2 bytes @ 0x1
 11618     0071                     	ds	1
 11619     0072                     ??_EUSART1_Write:
 11620     0072                     ??_EUSART2_Write:	
 11621                           ; 1 bytes @ 0x2
 11622                           
 11623     0072                     ??_RN487X_SetAsyncMessageHandler:	
 11624                           ; 1 bytes @ 0x2
 11625                           
 11626     0072                     ??_RN487X_IndicateRx:	
 11627                           ; 1 bytes @ 0x2
 11628                           
 11629     0072                     ??_RN487X_Reset:	
 11630                           ; 1 bytes @ 0x2
 11631                           
 11632     0072                     ??_RN487X_SetSystemMode:	
 11633                           ; 1 bytes @ 0x2
 11634                           
 11635     0072                     ??_strcpy:	
 11636                           ; 1 bytes @ 0x2
 11637                           
 11638     0072                     ??_I2C1_DO_SEND_ADR_WRITE:	
 11639                           ; 1 bytes @ 0x2
 11640                           
 11641     0072                     RN487X_SetAsyncMessageHandler@pBuffer:	
 11642                           ; 1 bytes @ 0x2
 11643                           
 11644     0072                     EUSART2_Read@readValue:	
 11645                           ; 1 bytes @ 0x2
 11646                           
 11647     0072                     EUSART1_Read@readValue:	
 11648                           ; 1 bytes @ 0x2
 11649                           
 11650     0072                     I2C1_Open@returnValue:	
 11651                           ; 1 bytes @ 0x2
 11652                           
 11653     0072                     strcpy@d:	
 11654                           ; 1 bytes @ 0x2
 11655                           
 11656                           
 11657                           ; 1 bytes @ 0x2
 11658     0072                     	ds	1
 11659     0073                     ??_strlen:
 11660     0073                     ??_EUSART1_SetTxInterruptHandler:	
 11661                           ; 1 bytes @ 0x3
 11662                           
 11663     0073                     ??_EUSART1_SetRxInterruptHandler:	
 11664                           ; 1 bytes @ 0x3
 11665                           
 11666     0073                     ??_EUSART1_Initialize:	
 11667                           ; 1 bytes @ 0x3
 11668                           
 11669     0073                     ??_EUSART2_SetTxInterruptHandler:	
 11670                           ; 1 bytes @ 0x3
 11671                           
 11672     0073                     ??_EUSART2_SetRxInterruptHandler:	
 11673                           ; 1 bytes @ 0x3
 11674                           
 11675     0073                     ??_EUSART2_Initialize:	
 11676                           ; 1 bytes @ 0x3
 11677                           
 11678     0073                     ??_swap:	
 11679                           ; 1 bytes @ 0x3
 11680                           
 11681     0073                     ??_RN487X_Read@rn487x_interface$F1838:	
 11682                           ; 1 bytes @ 0x3
 11683                           
 11684     0073                     ??_DELAY_milliseconds:	
 11685                           ; 1 bytes @ 0x3
 11686                           
 11687     0073                     ??_EUSART2_SetFramingErrorHandler:	
 11688                           ; 1 bytes @ 0x3
 11689                           
 11690     0073                     ??_EUSART2_SetOverrunErrorHandler:	
 11691                           ; 1 bytes @ 0x3
 11692                           
 11693     0073                     ??_EUSART2_SetErrorHandler:	
 11694                           ; 1 bytes @ 0x3
 11695                           
 11696     0073                     ??_EUSART1_SetFramingErrorHandler:	
 11697                           ; 1 bytes @ 0x3
 11698                           
 11699     0073                     ??_EUSART1_SetOverrunErrorHandler:	
 11700                           ; 1 bytes @ 0x3
 11701                           
 11702     0073                     ??_EUSART1_SetErrorHandler:	
 11703                           ; 1 bytes @ 0x3
 11704                           
 11705     0073                     ??_PIN_MANAGER_Initialize:	
 11706                           ; 1 bytes @ 0x3
 11707                           
 11708     0073                     ??_IOCAF6_SetInterruptHandler:	
 11709                           ; 1 bytes @ 0x3
 11710                           
 11711     0073                     ??_strchr:	
 11712                           ; 1 bytes @ 0x3
 11713                           
 11714     0073                     ??_rn487x_PrintMessageStart:	
 11715                           ; 1 bytes @ 0x3
 11716                           
 11717     0073                     ??_rn487x_PrintMessageEnd:	
 11718                           ; 1 bytes @ 0x3
 11719                           
 11720     0073                     ??_rn487x_PrintIndicatorCharacters:	
 11721                           ; 1 bytes @ 0x3
 11722                           
 11723     0073                     ?_RN487X_ReadMsg:	
 11724                           ; 1 bytes @ 0x3
 11725                           
 11726     0073                     ??_RN487X_ReadDefaultResponse:	
 11727                           ; 1 bytes @ 0x3
 11728                           
 11729     0073                     ??_SYSTEM_Initialize:	
 11730                           ; 1 bytes @ 0x3
 11731                           
 11732     0073                     bitRead8@position:	
 11733                           ; 1 bytes @ 0x3
 11734                           
 11735     0073                     bitWrite8@position:	
 11736                           ; 1 bytes @ 0x3
 11737                           
 11738     0073                     rn487x_PrintIndicatorCharacters@messageType:	
 11739                           ; 1 bytes @ 0x3
 11740                           
 11741     0073                     I2C1_SetCallback@ptr:	
 11742                           ; 1 bytes @ 0x3
 11743                           
 11744     0073                     strcpy@dest:	
 11745                           ; 1 bytes @ 0x3
 11746                           
 11747     0073                     strchr@s:	
 11748                           ; 1 bytes @ 0x3
 11749                           
 11750     0073                     RN487X_ReadMsg@expectedMsg:	
 11751                           ; 1 bytes @ 0x3
 11752                           
 11753     0073                     I2C1_SetBuffer@bufferSize:	
 11754                           ; 2 bytes @ 0x3
 11755                           
 11756     0073                     strncmp@n:	
 11757                           ; 2 bytes @ 0x3
 11758                           
 11759     0073                     RN487X_ReadDefaultResponse@resp:	
 11760                           ; 2 bytes @ 0x3
 11761                           
 11762                           
 11763                           ; 3 bytes @ 0x3
 11764     0073                     	ds	1
 11765     0074                     ??_bitRead8:
 11766     0074                     ?_RN487X_Delay:	
 11767                           ; 1 bytes @ 0x4
 11768                           
 11769     0074                     ??_I2C1_SetCallback:	
 11770                           ; 1 bytes @ 0x4
 11771                           
 11772     0074                     bitWrite8@value:	
 11773                           ; 1 bytes @ 0x4
 11774                           
 11775     0074                     I2C1_SetCallback@idx:	
 11776                           ; 1 bytes @ 0x4
 11777                           
 11778     0074                     RN487X_Delay@delayCount:	
 11779                           ; 1 bytes @ 0x4
 11780                           
 11781     0074                     strlen@a:	
 11782                           ; 2 bytes @ 0x4
 11783                           
 11784                           
 11785                           ; 2 bytes @ 0x4
 11786     0074                     	ds	1
 11787     0075                     ??_I2C1_SetBuffer:
 11788     0075                     ?_I2C1_SetDataCompleteCallback:	
 11789                           ; 1 bytes @ 0x5
 11790                           
 11791     0075                     ?_I2C1_SetAddressNackCallback:	
 11792                           ; 1 bytes @ 0x5
 11793                           
 11794     0075                     ??_bitWrite8:	
 11795                           ; 1 bytes @ 0x5
 11796                           
 11797     0075                     ??_strncmp:	
 11798                           ; 1 bytes @ 0x5
 11799                           
 11800     0075                     bitRead8@mask:	
 11801                           ; 1 bytes @ 0x5
 11802                           
 11803     0075                     RN487X_ReadMsg@msgLen:	
 11804                           ; 1 bytes @ 0x5
 11805                           
 11806     0075                     I2C1_SetDataCompleteCallback@cb:	
 11807                           ; 1 bytes @ 0x5
 11808                           
 11809     0075                     I2C1_SetAddressNackCallback@cb:	
 11810                           ; 2 bytes @ 0x5
 11811                           
 11812                           
 11813                           ; 2 bytes @ 0x5
 11814     0075                     	ds	1
 11815     0076                     ?_LIGHTBLUE_SplitByte:
 11816     0076                     ?_RN487X_Write:	
 11817                           ; 1 bytes @ 0x6
 11818                           
 11819     0076                     ??_RN487X_Delay:	
 11820                           ; 1 bytes @ 0x6
 11821                           
 11822     0076                     ??_rn487x_PrintMessage:	
 11823                           ; 1 bytes @ 0x6
 11824                           
 11825     0076                     ??_RN487X_Init:	
 11826                           ; 1 bytes @ 0x6
 11827                           
 11828     0076                     ??_RN487X_ReadMsg:	
 11829                           ; 1 bytes @ 0x6
 11830                           
 11831     0076                     LIGHTBLUE_SplitByte@value:	
 11832                           ; 1 bytes @ 0x6
 11833                           
 11834     0076                     bitWrite8@mask:	
 11835                           ; 1 bytes @ 0x6
 11836                           
 11837     0076                     RN487X_Write@txData:	
 11838                           ; 1 bytes @ 0x6
 11839                           
 11840     0076                     RN487X_ReadDefaultResponse@status:	
 11841                           ; 1 bytes @ 0x6
 11842                           
 11843     0076                     strncmp@l:	
 11844                           ; 1 bytes @ 0x6
 11845                           
 11846                           
 11847                           ; 1 bytes @ 0x6
 11848     0076                     	ds	1
 11849     0077                     ?_LIGHTBLUE_SendPacket:
 11850     0077                     ??_LIGHTBLUE_SplitByte:	
 11851                           ; 1 bytes @ 0x7
 11852                           
 11853     0077                     ??_RN487X_Write:	
 11854                           ; 1 bytes @ 0x7
 11855                           
 11856     0077                     ?_strstr:	
 11857                           ; 1 bytes @ 0x7
 11858                           
 11859     0077                     ??_LIGHTBLUE_SendSerialData:	
 11860                           ; 1 bytes @ 0x7
 11861                           
 11862     0077                     ?_RN487X_SendCmd:	
 11863                           ; 1 bytes @ 0x7
 11864                           
 11865     0077                     LIGHTBLUE_SendPacket@payload:	
 11866                           ; 1 bytes @ 0x7
 11867                           
 11868     0077                     RN487X_SendCmd@cmdLen:	
 11869                           ; 1 bytes @ 0x7
 11870                           
 11871     0077                     I2C1_SetDataCompleteCallback@ptr:	
 11872                           ; 1 bytes @ 0x7
 11873                           
 11874     0077                     I2C1_SetAddressNackCallback@ptr:	
 11875                           ; 1 bytes @ 0x7
 11876                           
 11877     0077                     strstr@n:	
 11878                           ; 2 bytes @ 0x7
 11879                           
 11880                           
 11881                           ; 2 bytes @ 0x7
 11882     0077                     	ds	1
 11883     0078                     ??_LIGHTBLUE_SendPacket:
 11884     0078                     ??_I2C1_SetDataCompleteCallback:	
 11885                           ; 1 bytes @ 0x8
 11886                           
 11887     0078                     ?_rd1RegCompleteHandler:	
 11888                           ; 1 bytes @ 0x8
 11889                           
 11890     0078                     ?_rd2RegCompleteHandler:	
 11891                           ; 1 bytes @ 0x8
 11892                           
 11893     0078                     ?_wr1RegCompleteHandler:	
 11894                           ; 1 bytes @ 0x8
 11895                           
 11896     0078                     ?_wr2RegCompleteHandler:	
 11897                           ; 1 bytes @ 0x8
 11898                           
 11899     0078                     ?_rdBlkRegCompleteHandler:	
 11900                           ; 1 bytes @ 0x8
 11901                           
 11902     0078                     ?_I2C1_CallbackReturnStop:	
 11903                           ; 1 bytes @ 0x8
 11904                           
 11905     0078                     ?_I2C1_CallbackReturnReset:	
 11906                           ; 1 bytes @ 0x8
 11907                           
 11908     0078                     ?_wr1RegCompleteHandler@strncmp$F4842:	
 11909                           ; 1 bytes @ 0x8
 11910                           
 11911     0078                     ?_rd1RegCompleteHandler@strncmp$F4848:	
 11912                           ; 1 bytes @ 0x8
 11913                           
 11914     0078                     ?_rd2RegCompleteHandler@strncmp$F4851:	
 11915                           ; 1 bytes @ 0x8
 11916                           
 11917     0078                     ?_wr2RegCompleteHandler@strncmp$F4854:	
 11918                           ; 1 bytes @ 0x8
 11919                           
 11920     0078                     ?_rdBlkRegCompleteHandler@strncmp$F4860:	
 11921                           ; 1 bytes @ 0x8
 11922                           
 11923     0078                     ??_RN487X_SendCmd:	
 11924                           ; 1 bytes @ 0x8
 11925                           
 11926     0078                     LIGHTBLUE_SendSerialData@length:	
 11927                           ; 1 bytes @ 0x8
 11928                           
 11929     0078                     LIGHTBLUE_SplitByte@payload:	
 11930                           ; 1 bytes @ 0x8
 11931                           
 11932     0078                     wr1RegCompleteHandler@p:	
 11933                           ; 1 bytes @ 0x8
 11934                           
 11935     0078                     rd1RegCompleteHandler@p:	
 11936                           ; 1 bytes @ 0x8
 11937                           
 11938     0078                     rd2RegCompleteHandler@p:	
 11939                           ; 1 bytes @ 0x8
 11940                           
 11941     0078                     wr2RegCompleteHandler@p:	
 11942                           ; 1 bytes @ 0x8
 11943                           
 11944     0078                     rdBlkRegCompleteHandler@p:	
 11945                           ; 1 bytes @ 0x8
 11946                           
 11947     0078                     swap@upperByte:	
 11948                           ; 1 bytes @ 0x8
 11949                           
 11950     0078                     rd1RegCompleteHandler@i2c1_master_example$F1693@ptr:	
 11951                           ; 1 bytes @ 0x8
 11952                           
 11953     0078                     rd2RegCompleteHandler@i2c1_master_example$F1704@ptr:	
 11954                           ; 1 bytes @ 0x8
 11955                           
 11956     0078                     wr1RegCompleteHandler@i2c1_master_example$F1710@ptr:	
 11957                           ; 1 bytes @ 0x8
 11958                           
 11959     0078                     wr2RegCompleteHandler@i2c1_master_example$F1716@ptr:	
 11960                           ; 1 bytes @ 0x8
 11961                           
 11962     0078                     rdBlkRegCompleteHandler@i2c1_master_example$F1727@ptr:	
 11963                           ; 1 bytes @ 0x8
 11964                           
 11965     0078                     RN487X_ReadMsg@resp:	
 11966                           ; 1 bytes @ 0x8
 11967                           
 11968     0078                     I2C1_CallbackReturnStop@funPtr:	
 11969                           ; 1 bytes @ 0x8
 11970                           
 11971     0078                     I2C1_CallbackReturnReset@funPtr:	
 11972                           ; 1 bytes @ 0x8
 11973                           
 11974                           
 11975                           ; 1 bytes @ 0x8
 11976     0078                     	ds	1
 11977     0079                     ?_LIGHTBLUE_SplitWord:
 11978     0079                     ??_I2C1_SetAddressNackCallback:	
 11979                           ; 1 bytes @ 0x9
 11980                           
 11981     0079                     ??_rd1RegCompleteHandler:	
 11982                           ; 1 bytes @ 0x9
 11983                           
 11984     0079                     ??_rd2RegCompleteHandler:	
 11985                           ; 1 bytes @ 0x9
 11986                           
 11987     0079                     ??_wr1RegCompleteHandler:	
 11988                           ; 1 bytes @ 0x9
 11989                           
 11990     0079                     ??_wr2RegCompleteHandler:	
 11991                           ; 1 bytes @ 0x9
 11992                           
 11993     0079                     ??_rdBlkRegCompleteHandler:	
 11994                           ; 1 bytes @ 0x9
 11995                           
 11996     0079                     ??_strstr:	
 11997                           ; 1 bytes @ 0x9
 11998                           
 11999     0079                     ??_I2C1_DO_TX:	
 12000                           ; 1 bytes @ 0x9
 12001                           
 12002     0079                     ??_I2C1_DO_RX:	
 12003                           ; 1 bytes @ 0x9
 12004                           
 12005     0079                     ??_I2C1_DO_TX_EMPTY:	
 12006                           ; 1 bytes @ 0x9
 12007                           
 12008     0079                     ??_I2C1_DO_ADDRESS_NACK:	
 12009                           ; 1 bytes @ 0x9
 12010                           
 12011     0079                     ??_I2C1_CallbackReturnStop:	
 12012                           ; 1 bytes @ 0x9
 12013                           
 12014     0079                     ??_I2C1_CallbackReturnReset:	
 12015                           ; 1 bytes @ 0x9
 12016                           
 12017     0079                     ??_wr1RegCompleteHandler@strncmp$F4844:	
 12018                           ; 1 bytes @ 0x9
 12019                           
 12020     0079                     ??_rd1RegCompleteHandler@strncmp$F4850:	
 12021                           ; 1 bytes @ 0x9
 12022                           
 12023     0079                     ??_rd2RegCompleteHandler@strncmp$F4853:	
 12024                           ; 1 bytes @ 0x9
 12025                           
 12026     0079                     ??_wr2RegCompleteHandler@strncmp$F4856:	
 12027                           ; 1 bytes @ 0x9
 12028                           
 12029     0079                     ??_rdBlkRegCompleteHandler@strncmp$F4862:	
 12030                           ; 1 bytes @ 0x9
 12031                           
 12032     0079                     LIGHTBLUE_SendSerialData@serialData:	
 12033                           ; 1 bytes @ 0x9
 12034                           
 12035     0079                     swap@lowerByte:	
 12036                           ; 1 bytes @ 0x9
 12037                           
 12038     0079                     RN487X_SendCmd@index:	
 12039                           ; 1 bytes @ 0x9
 12040                           
 12041     0079                     RN487X_ReadMsg@index:	
 12042                           ; 1 bytes @ 0x9
 12043                           
 12044     0079                     LIGHTBLUE_SplitWord@value:	
 12045                           ; 1 bytes @ 0x9
 12046                           
 12047                           
 12048                           ; 2 bytes @ 0x9
 12049     0079                     	ds	1
 12050     007A                     LIGHTBLUE_SendPacket@packetID:
 12051     007A                     RN487X_SendCmd@cmd:	
 12052                           ; 1 bytes @ 0xA
 12053                           
 12054                           
 12055                           ; 1 bytes @ 0xA
 12056     007A                     	ds	1
 12057     007B                     ??_i2c_write1ByteRegister:
 12058     007B                     ??_i2c_read1ByteRegister:	
 12059                           ; 1 bytes @ 0xB
 12060                           
 12061     007B                     ??_BMA253_NewAccelDataRdyY:	
 12062                           ; 1 bytes @ 0xB
 12063                           
 12064     007B                     ??_BMA253_NewAccelDataRdyZ:	
 12065                           ; 1 bytes @ 0xB
 12066                           
 12067     007B                     ??_TMAG5273_GetXValue:	
 12068                           ; 1 bytes @ 0xB
 12069                           
 12070     007B                     ??_TMAG5273_GetTemperatureValue:	
 12071                           ; 1 bytes @ 0xB
 12072                           
 12073     007B                     ??_LIGHTBLUE_SplitWord:	
 12074                           ; 1 bytes @ 0xB
 12075                           
 12076     007B                     ??_LIGHTBLUE_UpdateErrorLed:	
 12077                           ; 1 bytes @ 0xB
 12078                           
 12079     007B                     ??_RN487X_EnterCmdMode:	
 12080                           ; 1 bytes @ 0xB
 12081                           
 12082     007B                     ??_RN487X_SetOutputs:	
 12083                           ; 1 bytes @ 0xB
 12084                           
 12085     007B                     ??_RN487X_EnterDataMode:	
 12086                           ; 1 bytes @ 0xB
 12087                           
 12088     007B                     ??_I2C1_MasterWrite:	
 12089                           ; 1 bytes @ 0xB
 12090                           
 12091     007B                     ??_isConnected:	
 12092                           ; 1 bytes @ 0xB
 12093                           
 12094     007B                     ??_TMAG5273_GetManufacture:	
 12095                           ; 1 bytes @ 0xB
 12096                           
 12097     007B                     ?_RN487X_MessageHandler:	
 12098                           ; 1 bytes @ 0xB
 12099                           
 12100     007B                     ??_I2C1_Poller:	
 12101                           ; 1 bytes @ 0xB
 12102                           
 12103     007B                     ??_LIGHTBLUE_PushButton:	
 12104                           ; 1 bytes @ 0xB
 12105                           
 12106     007B                     ??_LIGHTBLUE_LedState:	
 12107                           ; 1 bytes @ 0xB
 12108                           
 12109     007B                     ??_LIGHTBLUE_SetErrorLedValue:	
 12110                           ; 1 bytes @ 0xB
 12111                           
 12112     007B                     ??_readRegister:	
 12113                           ; 1 bytes @ 0xB
 12114                           
 12115     007B                     ??_getDeviceStatus:	
 12116                           ; 1 bytes @ 0xB
 12117                           
 12118     007B                     ??_I2C1_MasterOperation:	
 12119                           ; 1 bytes @ 0xB
 12120                           
 12121     007B                     BMA253_NewAccelDataRdyY@yNewData:	
 12122                           ; 1 bytes @ 0xB
 12123                           
 12124     007B                     BMA253_NewAccelDataRdyZ@zNewData:	
 12125                           ; 1 bytes @ 0xB
 12126                           
 12127     007B                     LIGHTBLUE_SplitWord@payload:	
 12128                           ; 1 bytes @ 0xB
 12129                           
 12130     007B                     i2c_write1ByteRegister@address:	
 12131                           ; 1 bytes @ 0xB
 12132                           
 12133     007B                     getDeviceStatus@deviceStatusReg:	
 12134                           ; 1 bytes @ 0xB
 12135                           
 12136     007B                     TMAG5273_GetTemperatureValue@temperature:	
 12137                           ; 1 bytes @ 0xB
 12138                           
 12139     007B                     TMAG5273_GetXValue@x:	
 12140                           ; 1 bytes @ 0xB
 12141                           
 12142     007B                     RN487X_MessageHandler@message:	
 12143                           ; 1 bytes @ 0xB
 12144                           
 12145                           
 12146                           ; 1 bytes @ 0xB
 12147     007B                     	ds	1
 12148     007C                     ??_RN487X_Read:
 12149     007C                     ??_RN487X_DataReady:	
 12150                           ; 1 bytes @ 0xC
 12151                           
 12152     007C                     ??_RN487X_MessageHandler:	
 12153                           ; 1 bytes @ 0xC
 12154                           
 12155     007C                     ??_BMA253_GetAccelDataXYZ:	
 12156                           ; 1 bytes @ 0xC
 12157                           
 12158     007C                     ??_LIGHTBLUE_TemperatureSensor:	
 12159                           ; 1 bytes @ 0xC
 12160                           
 12161     007C                     ??_LIGHTBLUE_AccelSensor:	
 12162                           ; 1 bytes @ 0xC
 12163                           
 12164     007C                     ??_begin:	
 12165                           ; 1 bytes @ 0xC
 12166                           
 12167     007C                     ??_writeRegister:	
 12168                           ; 1 bytes @ 0xC
 12169                           
 12170                           
 12171                           	psect	cstackBANK0
 12172     0020                     __pcstackBANK0:	
 12173                           ; 1 bytes @ 0xC
 12174                           
 12175     0020                     ?_RN487X_SetOutputs:
 12176     0020                     ??_I2C1_MasterFsm:	
 12177                           ; 1 bytes @ 0x0
 12178                           
 12179     0020                     ??_LIGHTBLUE_SendProtocolVersion:	
 12180                           ; 1 bytes @ 0x0
 12181                           
 12182     0020                     LIGHTBLUE_PushButton@button:	
 12183                           ; 1 bytes @ 0x0
 12184                           
 12185     0020                     RN487X_SetOutputs@bitMap:	
 12186                           ; 1 bytes @ 0x0
 12187                           
 12188     0020                     strstr@nl:	
 12189                           ; 2 bytes @ 0x0
 12190                           
 12191     0020                     LIGHTBLUE_LedState@payload:	
 12192                           ; 2 bytes @ 0x0
 12193                           
 12194     0020                     rn487x_PrintMessage@printCharacter:	
 12195                           ; 3 bytes @ 0x0
 12196                           
 12197                           
 12198                           ; 32 bytes @ 0x0
 12199     0020                     	ds	1
 12200     0021                     LIGHTBLUE_PushButton@payload:
 12201                           
 12202                           ; 3 bytes @ 0x1
 12203     0021                     	ds	1
 12204     0022                     RN487X_SetOutputs@ioLowNibble:
 12205     0022                     I2C1_MasterOperation@read:	
 12206                           ; 1 bytes @ 0x2
 12207                           
 12208     0022                     strstr@h:	
 12209                           ; 1 bytes @ 0x2
 12210                           
 12211     0022                     LIGHTBLUE_SendProtocolVersion@payload:	
 12212                           ; 1 bytes @ 0x2
 12213                           
 12214                           
 12215                           ; 19 bytes @ 0x2
 12216     0022                     	ds	1
 12217     0023                     LIGHTBLUE_LedState@led:
 12218     0023                     RN487X_SetOutputs@stateLowNibble:	
 12219                           ; 1 bytes @ 0x3
 12220                           
 12221     0023                     I2C1_MasterOperation@returnValue:	
 12222                           ; 1 bytes @ 0x3
 12223                           
 12224                           
 12225                           ; 1 bytes @ 0x3
 12226     0023                     	ds	1
 12227     0024                     ?_i2c_write1ByteRegister:
 12228     0024                     ?_i2c_read1ByteRegister:	
 12229                           ; 1 bytes @ 0x4
 12230                           
 12231     0024                     ?_i2c_read2ByteRegister:	
 12232                           ; 1 bytes @ 0x4
 12233                           
 12234     0024                     i2c_write1ByteRegister@reg:	
 12235                           ; 2 bytes @ 0x4
 12236                           
 12237     0024                     i2c_read1ByteRegister@reg:	
 12238                           ; 1 bytes @ 0x4
 12239                           
 12240     0024                     i2c_read2ByteRegister@reg:	
 12241                           ; 1 bytes @ 0x4
 12242                           
 12243     0024                     RN487X_SetOutputs@ioHighNibble:	
 12244                           ; 1 bytes @ 0x4
 12245                           
 12246                           
 12247                           ; 1 bytes @ 0x4
 12248     0024                     	ds	1
 12249     0025                     i2c_write1ByteRegister@data:
 12250     0025                     i2c_read1ByteRegister@address:	
 12251                           ; 1 bytes @ 0x5
 12252                           
 12253     0025                     RN487X_SetOutputs@stateHighNibble:	
 12254                           ; 1 bytes @ 0x5
 12255                           
 12256                           
 12257                           ; 1 bytes @ 0x5
 12258     0025                     	ds	1
 12259     0026                     ??_i2c_read2ByteRegister:
 12260     0026                     ?_writeRegister:	
 12261                           ; 1 bytes @ 0x6
 12262                           
 12263     0026                     LIGHTBLUE_SetErrorLedValue@value:	
 12264                           ; 1 bytes @ 0x6
 12265                           
 12266     0026                     i2c_read1ByteRegister@e:	
 12267                           ; 1 bytes @ 0x6
 12268                           
 12269     0026                     writeRegister@data:	
 12270                           ; 1 bytes @ 0x6
 12271                           
 12272                           
 12273                           ; 1 bytes @ 0x6
 12274     0026                     	ds	1
 12275     0027                     ?_LIGHTBLUE_PerformAction:
 12276     0027                     LIGHTBLUE_PerformAction@data:	
 12277                           ; 1 bytes @ 0x7
 12278                           
 12279     0027                     writeRegister@regAddress:	
 12280                           ; 1 bytes @ 0x7
 12281                           
 12282     0027                     i2c_read1ByteRegister@x:	
 12283                           ; 1 bytes @ 0x7
 12284                           
 12285                           
 12286                           ; 2 bytes @ 0x7
 12287     0027                     	ds	1
 12288     0028                     ??_LIGHTBLUE_PerformAction:
 12289                           
 12290                           ; 1 bytes @ 0x8
 12291     0028                     	ds	1
 12292     0029                     LIGHTBLUE_PerformAction@id:
 12293     0029                     i2c_read1ByteRegister@d2:	
 12294                           ; 1 bytes @ 0x9
 12295                           
 12296                           
 12297                           ; 1 bytes @ 0x9
 12298     0029                     	ds	1
 12299     002A                     ??_BMA253_GetAccelDataY:
 12300     002A                     ??_BMA253_GetAccelDataZ:	
 12301                           ; 1 bytes @ 0xA
 12302                           
 12303     002A                     LIGHTBLUE_PerformAction@led:	
 12304                           ; 1 bytes @ 0xA
 12305                           
 12306     002A                     i2c_read2ByteRegister@address:	
 12307                           ; 1 bytes @ 0xA
 12308                           
 12309     002A                     readRegister@regAddress:	
 12310                           ; 1 bytes @ 0xA
 12311                           
 12312                           
 12313                           ; 1 bytes @ 0xA
 12314     002A                     	ds	1
 12315     002B                     ??_LIGHTBLUE_ParseIncomingPacket:
 12316     002B                     readRegister@regVal:	
 12317                           ; 1 bytes @ 0xB
 12318                           
 12319     002B                     i2c_read2ByteRegister@result:	
 12320                           ; 1 bytes @ 0xB
 12321                           
 12322                           
 12323                           ; 2 bytes @ 0xB
 12324     002B                     	ds	1
 12325     002C                     ??_getError:
 12326     002C                     ??_getLowPower:	
 12327                           ; 1 bytes @ 0xC
 12328                           
 12329     002C                     ??_getOperatingMode:	
 12330                           ; 1 bytes @ 0xC
 12331                           
 12332     002C                     ??_getMagneticChannel:	
 12333                           ; 1 bytes @ 0xC
 12334                           
 12335     002C                     ??_getTemperatureEN:	
 12336                           ; 1 bytes @ 0xC
 12337                           
 12338     002C                     ??_getAngleEn:	
 12339                           ; 1 bytes @ 0xC
 12340                           
 12341                           
 12342                           ; 1 bytes @ 0xC
 12343     002C                     	ds	1
 12344     002D                     ?_TMAG5273_GetManufacture:
 12345     002D                     ?_TMAG5273_CalcMeasurement:	
 12346                           ; 2 bytes @ 0xD
 12347                           
 12348     002D                     BMA253_GetAccelDataY@yAccelData:	
 12349                           ; 2 bytes @ 0xD
 12350                           
 12351     002D                     BMA253_GetAccelDataZ@zAccelData:	
 12352                           ; 1 bytes @ 0xD
 12353                           
 12354     002D                     _LIGHTBLUE_ParseIncomingPacket$431:	
 12355                           ; 1 bytes @ 0xD
 12356                           
 12357                           
 12358                           ; 2 bytes @ 0xD
 12359     002D                     	ds	1
 12360     002E                     BMA253_GetAccelDataY@lsbData:
 12361     002E                     BMA253_GetAccelDataZ@lsbData:	
 12362                           ; 1 bytes @ 0xE
 12363                           
 12364     002E                     getLowPower@lowPowerModeBit:	
 12365                           ; 1 bytes @ 0xE
 12366                           
 12367     002E                     getOperatingMode@opMode:	
 12368                           ; 1 bytes @ 0xE
 12369                           
 12370     002E                     getMagneticChannel@magChannel:	
 12371                           ; 1 bytes @ 0xE
 12372                           
 12373     002E                     getAngleEn@angleReg:	
 12374                           ; 1 bytes @ 0xE
 12375                           
 12376     002E                     getTemperatureEN@tempEN:	
 12377                           ; 1 bytes @ 0xE
 12378                           
 12379     002E                     getError@undervoltageError:	
 12380                           ; 1 bytes @ 0xE
 12381                           
 12382                           
 12383                           ; 1 bytes @ 0xE
 12384     002E                     	ds	1
 12385     002F                     ??_TMAG5273_CalcMeasurement:
 12386     002F                     BMA253_GetAccelDataY@msbData:	
 12387                           ; 1 bytes @ 0xF
 12388                           
 12389     002F                     BMA253_GetAccelDataZ@msbData:	
 12390                           ; 1 bytes @ 0xF
 12391                           
 12392     002F                     getLowPower@lowPowerMode:	
 12393                           ; 1 bytes @ 0xF
 12394                           
 12395     002F                     getOperatingMode@opMode0:	
 12396                           ; 1 bytes @ 0xF
 12397                           
 12398     002F                     getMagneticChannel@magMode4:	
 12399                           ; 1 bytes @ 0xF
 12400                           
 12401     002F                     getAngleEn@angleDir2:	
 12402                           ; 1 bytes @ 0xF
 12403                           
 12404     002F                     getTemperatureEN@tempENreg:	
 12405                           ; 1 bytes @ 0xF
 12406                           
 12407     002F                     getError@otpCrcError:	
 12408                           ; 1 bytes @ 0xF
 12409                           
 12410     002F                     _LIGHTBLUE_ParseIncomingPacket$432:	
 12411                           ; 1 bytes @ 0xF
 12412                           
 12413     002F                     TMAG5273_GetManufacture@read:	
 12414                           ; 2 bytes @ 0xF
 12415                           
 12416                           
 12417                           ; 2 bytes @ 0xF
 12418     002F                     	ds	1
 12419     0030                     getOperatingMode@opMode1:
 12420     0030                     getMagneticChannel@magMode5:	
 12421                           ; 1 bytes @ 0x10
 12422                           
 12423     0030                     getAngleEn@angleDir3:	
 12424                           ; 1 bytes @ 0x10
 12425                           
 12426     0030                     getError@intPinError:	
 12427                           ; 1 bytes @ 0x10
 12428                           
 12429                           
 12430                           ; 1 bytes @ 0x10
 12431     0030                     	ds	1
 12432     0031                     getMagneticChannel@magMode6:
 12433     0031                     getError@oscillatorError:	
 12434                           ; 1 bytes @ 0x11
 12435                           
 12436     0031                     _LIGHTBLUE_ParseIncomingPacket$433:	
 12437                           ; 1 bytes @ 0x11
 12438                           
 12439                           
 12440                           ; 2 bytes @ 0x11
 12441     0031                     	ds	1
 12442     0032                     getMagneticChannel@magMode7:
 12443     0032                     getError@statusReg:	
 12444                           ; 1 bytes @ 0x12
 12445                           
 12446     0032                     TMAG5273_CalcMeasurement@regAddress:	
 12447                           ; 1 bytes @ 0x12
 12448                           
 12449                           
 12450                           ; 1 bytes @ 0x12
 12451     0032                     	ds	1
 12452     0033                     ??_setMagneticChannel:
 12453     0033                     ??_setTemperatureEn:	
 12454                           ; 1 bytes @ 0x13
 12455                           
 12456     0033                     ??_setOperatingMode:	
 12457                           ; 1 bytes @ 0x13
 12458                           
 12459     0033                     ??_setXYAxisRange:	
 12460                           ; 1 bytes @ 0x13
 12461                           
 12462     0033                     ??_setZAxisRange:	
 12463                           ; 1 bytes @ 0x13
 12464                           
 12465     0033                     LIGHTBLUE_ParseIncomingPacket@receivedByte:	
 12466                           ; 1 bytes @ 0x13
 12467                           
 12468     0033                     TMAG5273_CalcMeasurement@lowerByte:	
 12469                           ; 1 bytes @ 0x13
 12470                           
 12471                           
 12472                           ; 1 bytes @ 0x13
 12473     0033                     	ds	1
 12474     0034                     TMAG5273_CalcMeasurement@data:
 12475                           
 12476                           ; 2 bytes @ 0x14
 12477     0034                     	ds	1
 12478     0035                     LIGHTBLUE_SendProtocolVersion@value:
 12479     0035                     setOperatingMode@opMode:	
 12480                           ; 1 bytes @ 0x15
 12481                           
 12482     0035                     setMagneticChannel@channelMode:	
 12483                           ; 1 bytes @ 0x15
 12484                           
 12485     0035                     setXYAxisRange@xyAxisRange:	
 12486                           ; 1 bytes @ 0x15
 12487                           
 12488     0035                     setZAxisRange@zAxisRange:	
 12489                           ; 1 bytes @ 0x15
 12490                           
 12491     0035                     setTemperatureEn@temperatureEnable:	
 12492                           ; 1 bytes @ 0x15
 12493                           
 12494                           
 12495                           ; 1 bytes @ 0x15
 12496     0035                     	ds	1
 12497     0036                     BMA253_GetAccelDataXYZ@accelData:
 12498     0036                     LIGHTBLUE_SendProtocolVersion@dataIndex:	
 12499                           ; 1 bytes @ 0x16
 12500                           
 12501     0036                     setOperatingMode@mode:	
 12502                           ; 1 bytes @ 0x16
 12503                           
 12504     0036                     setMagneticChannel@mode:	
 12505                           ; 2 bytes @ 0x16
 12506                           
 12507     0036                     setXYAxisRange@mode:	
 12508                           ; 2 bytes @ 0x16
 12509                           
 12510     0036                     setZAxisRange@mode:	
 12511                           ; 2 bytes @ 0x16
 12512                           
 12513     0036                     setTemperatureEn@mode:	
 12514                           ; 2 bytes @ 0x16
 12515                           
 12516     0036                     LIGHTBLUE_TemperatureSensor@payload:	
 12517                           ; 2 bytes @ 0x16
 12518                           
 12519                           
 12520                           ; 5 bytes @ 0x16
 12521     0036                     	ds	1
 12522     0037                     BMA253_GetAccelDataXYZ@sensorValue:
 12523                           
 12524                           ; 2 bytes @ 0x17
 12525     0037                     	ds	2
 12526     0039                     LIGHTBLUE_AccelSensor@payload:
 12527                           
 12528                           ; 13 bytes @ 0x19
 12529     0039                     	ds	2
 12530     003B                     LIGHTBLUE_TemperatureSensor@temperature:
 12531                           
 12532                           ; 2 bytes @ 0x1B
 12533     003B                     	ds	5
 12534     0040                     rn487x_PrintMessage@passedMessage:
 12535                           
 12536                           ; 1 bytes @ 0x20
 12537     0040                     	ds	1
 12538     0041                     rn487x_PrintMessage@messageIndex:
 12539                           
 12540                           ; 1 bytes @ 0x21
 12541     0041                     	ds	1
 12542     0042                     RN487X_MessageHandler@messageType:
 12543                           
 12544                           ; 1 bytes @ 0x22
 12545     0042                     	ds	1
 12546     0043                     ??_RN487X_FilterData:
 12547                           
 12548                           ; 1 bytes @ 0x23
 12549     0043                     	ds	1
 12550     0044                     RN487X_FilterData@readChar:
 12551                           
 12552                           ; 1 bytes @ 0x24
 12553     0044                     	ds	2
 12554     0046                     LIGHTBLUE_AccelSensor@accelData:
 12555                           
 12556                           ; 6 bytes @ 0x26
 12557     0046                     	ds	6
 12558     004C                     ??_main:
 12559                           
 12560                           ; 1 bytes @ 0x2C
 12561     004C                     	ds	1
 12562                           
 12563                           	psect	maintext
 12564     0595                     __pmaintext:	
 12565 ;;
 12566 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
 12567 ;;
 12568 ;; *************** function _main *****************
 12569 ;; Defined at:
 12570 ;;		line 72 in file "main.c"
 12571 ;; Parameters:    Size  Location     Type
 12572 ;;		None
 12573 ;; Auto vars:     Size  Location     Type
 12574 ;;		None
 12575 ;; Return value:  Size  Location     Type
 12576 ;;                  2  2695[None  ] int 
 12577 ;; Registers used:
 12578 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12579 ;; Tracked objects:
 12580 ;;		On entry : B3F/0
 12581 ;;		On exit  : 0/0
 12582 ;;		Unchanged: 0/0
 12583 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12584 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12585 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12586 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12587 ;;      Totals:         0       1       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12588 ;;Total ram usage:        2 bytes
 12589 ;; Hardware stack levels required when called: 18
 12590 ;; This function calls:
 12591 ;;		_EUSART1_Read
 12592 ;;		_EUSART1_Write
 12593 ;;		_EUSART1_is_rx_ready
 12594 ;;		_EUSART2_Read
 12595 ;;		_EUSART2_Write
 12596 ;;		_EUSART2_is_rx_ready
 12597 ;;		_LIGHTBLUE_AccelSensor
 12598 ;;		_LIGHTBLUE_Initialize
 12599 ;;		_LIGHTBLUE_LedState
 12600 ;;		_LIGHTBLUE_ParseIncomingPacket
 12601 ;;		_LIGHTBLUE_PushButton
 12602 ;;		_LIGHTBLUE_SendProtocolVersion
 12603 ;;		_LIGHTBLUE_SendSerialData
 12604 ;;		_LIGHTBLUE_TemperatureSensor
 12605 ;;		_RN487X_DataReady
 12606 ;;		_RN487X_Init
 12607 ;;		_RN487X_IsConnected
 12608 ;;		_RN487X_Read
 12609 ;;		_RN487X_SetAsyncMessageHandler
 12610 ;;		_RN487X_Write
 12611 ;;		_SYSTEM_Initialize
 12612 ;;		_TMR0_HasOverflowOccured
 12613 ;;		_begin
 12614 ;; This function is called by:
 12615 ;;		Startup code after reset
 12616 ;; This function uses a non-reentrant model
 12617 ;;
 12618                           
 12619     0595                     _main:	
 12620                           ;psect for function _main
 12621                           
 12622     0595                     l16442:	
 12623                           ;incstack = 0
 12624 ;; hardware stack exceeded
 12625                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12626                           
 12627                           
 12628                           ;main.c: 75:     SYSTEM_Initialize();
 12629     0595  3191  21FE  3185   	fcall	_SYSTEM_Initialize
 12630                           
 12631                           ;main.c: 76:     RN487X_SetAsyncMessageHandler(statusBuffer, sizeof(statusBuffer));
 12632     0598  3050               	movlw	80
 12633     0599  00F1               	movwf	RN487X_SetAsyncMessageHandler@len
 12634     059A  30A0               	movlw	(low (_statusBuffer@main$F4234| (0+768)))& (0+255)
 12635     059B  3191  21E8  3185   	fcall	_RN487X_SetAsyncMessageHandler
 12636     059E                     l16444:
 12637                           
 12638                           ;main.c: 79:     (INTCONbits.GIE = 1);
 12639     059E  178B               	bsf	11,7	;volatile
 12640     059F                     l16446:
 12641                           
 12642                           ;main.c: 82:     (INTCONbits.PEIE = 1);
 12643     059F  170B               	bsf	11,6	;volatile
 12644     05A0                     l16448:
 12645                           
 12646                           ;main.c: 84:     RN487X_Init();
 12647     05A0  318D  25F3  3185   	fcall	_RN487X_Init
 12648     05A3                     l16450:
 12649                           
 12650                           ;main.c: 85:     LIGHTBLUE_Initialize();
 12651     05A3  319E  26EC  3185   	fcall	_LIGHTBLUE_Initialize
 12652                           
 12653                           ;main.c: 86:     begin();
 12654     05A6  3186  2665  3185   	fcall	_begin
 12655     05A9                     l16452:
 12656                           
 12657                           ;main.c: 89:     {;main.c: 90:         if (RN487X_IsConnected() == 1)
 12658     05A9  3187  27FD  3185   	fcall	_RN487X_IsConnected
 12659     05AC  3A01               	xorlw	1
 12660     05AD  1D03               	skipz
 12661     05AE  2DB0               	goto	u13771
 12662     05AF  2DB1               	goto	u13770
 12663     05B0                     u13771:
 12664     05B0  2E38               	goto	l2711
 12665     05B1                     u13770:
 12666     05B1                     l16454:
 12667                           
 12668                           ;main.c: 91:         {;main.c: 92:             if ((TMR0_HasOverflowOccured()) == 1)
 12669     05B1  319E  26DB  3185   	fcall	_TMR0_HasOverflowOccured
 12670     05B4  3A01               	xorlw	1
 12671     05B5  1D03               	skipz
 12672     05B6  2DB8               	goto	u13781
 12673     05B7  2DB9               	goto	u13780
 12674     05B8                     u13781:
 12675     05B8  2DD1               	goto	l2700
 12676     05B9                     u13780:
 12677     05B9                     l16456:
 12678                           
 12679                           ;main.c: 93:             {;main.c: 94:                 (PIR0bits.TMR0IF = 0);
 12680     05B9  014E               	movlb	14	; select bank14
 12681     05BA  128C               	bcf	12,5	;volatile
 12682     05BB                     l16458:
 12683                           
 12684                           ;main.c: 96:                 LIGHTBLUE_TemperatureSensor();
 12685     05BB  3191  21D2  3185   	fcall	_LIGHTBLUE_TemperatureSensor
 12686                           
 12687                           ;main.c: 97:                 LIGHTBLUE_AccelSensor();
 12688     05BE  3196  2668  3185   	fcall	_LIGHTBLUE_AccelSensor
 12689                           
 12690                           ;main.c: 98:                 LIGHTBLUE_PushButton();
 12691     05C1  3191  216D  3185   	fcall	_LIGHTBLUE_PushButton
 12692                           
 12693                           ;main.c: 99:                 LIGHTBLUE_LedState();
 12694     05C4  3194  2470  3185   	fcall	_LIGHTBLUE_LedState
 12695                           
 12696                           ;main.c: 100:                 LIGHTBLUE_SendProtocolVersion();
 12697     05C7  3197  2728  3185   	fcall	_LIGHTBLUE_SendProtocolVersion
 12698                           
 12699                           ;main.c: 101:             }
 12700     05CA  2DA9               	goto	l16452
 12701     05CB                     l16460:
 12702                           
 12703                           ;main.c: 105:                 {;main.c: 106:                     LIGHTBLUE_ParseIncoming
      +                          Packet(RN487X_Read());
 12704     05CB  3190  2019  3185   	fcall	_RN487X_Read
 12705     05CE  3184  24BE  3185   	fcall	_LIGHTBLUE_ParseIncomingPacket
 12706     05D1                     l2700:	
 12707                           ;main.c: 107:                 }
 12708                           
 12709                           
 12710                           ;main.c: 104:                 while (RN487X_DataReady())
 12711     05D1  3193  2389  3185   	fcall	_RN487X_DataReady
 12712     05D4  3A00               	xorlw	0
 12713     05D5  1D03               	skipz
 12714     05D6  2DD8               	goto	u13791
 12715     05D7  2DD9               	goto	u13790
 12716     05D8                     u13791:
 12717     05D8  2DCB               	goto	l16460
 12718     05D9                     u13790:
 12719     05D9  2E19               	goto	l16478
 12720     05DA                     l16462:
 12721                           
 12722                           ;main.c: 109:                 {;main.c: 110:                     lightBlueSerial[serialI
      +                          ndex] = uart[UART_CDC].Read();
 12723     05DA  3000               	movlw	low (_uart| (0+32768))
 12724     05DB  0084               	movwf	4
 12725     05DC  3098               	movlw	high (_uart| (0+32768))
 12726     05DD  0085               	movwf	5
 12727     05DE  3F01               	moviw [1]fsr0
 12728     05DF  008A               	movwf	10
 12729     05E0  3F00               	moviw [0]fsr0
 12730     05E1  000A               	callw
 12731     05E2  3185               	pagesel	$
 12732     05E3  0140               	movlb	0	; select bank0
 12733     05E4  00CC               	movwf	??_main
 12734     05E5  0851               	movf	_serialIndex,w
 12735     05E6  3EA0               	addlw	(low (_lightBlueSerial| (0+512)))& (0+255)
 12736     05E7  0086               	movwf	6
 12737     05E8  3002               	movlw	2	; select bank5/6
 12738     05E9  0087               	movwf	7
 12739     05EA  084C               	movf	??_main,w
 12740     05EB  0081               	movwf	1
 12741     05EC                     l16464:
 12742                           
 12743                           ;main.c: 111:                     if ((lightBlueSerial[serialIndex] == '\r')
 12744     05EC  0851               	movf	_serialIndex,w
 12745     05ED  3EA0               	addlw	(low (_lightBlueSerial| (0+512)))& (0+255)
 12746     05EE  0086               	movwf	6
 12747     05EF  3002               	movlw	2	; select bank5/6
 12748     05F0  0087               	movwf	7
 12749     05F1  300D               	movlw	13
 12750     05F2  0601               	xorwf	1,w
 12751     05F3  1903               	btfsc	3,2
 12752     05F4  2DF6               	goto	u13801
 12753     05F5  2DF7               	goto	u13800
 12754     05F6                     u13801:
 12755     05F6  2E08               	goto	l16470
 12756     05F7                     u13800:
 12757     05F7                     l16466:
 12758     05F7  0851               	movf	_serialIndex,w
 12759     05F8  3EA0               	addlw	(low (_lightBlueSerial| (0+512)))& (0+255)
 12760     05F9  0086               	movwf	6
 12761     05FA  3002               	movlw	2	; select bank5/6
 12762     05FB  0087               	movwf	7
 12763     05FC  300A               	movlw	10
 12764     05FD  0601               	xorwf	1,w
 12765     05FE  1903               	btfsc	3,2
 12766     05FF  2E01               	goto	u13811
 12767     0600  2E02               	goto	u13810
 12768     0601                     u13811:
 12769     0601  2E08               	goto	l16470
 12770     0602                     u13810:
 12771     0602                     l16468:
 12772     0602  304F               	movlw	79
 12773     0603  0651               	xorwf	_serialIndex,w
 12774     0604  1D03               	btfss	3,2
 12775     0605  2E07               	goto	u13821
 12776     0606  2E08               	goto	u13820
 12777     0607                     u13821:
 12778     0607  2E15               	goto	l16476
 12779     0608                     u13820:
 12780     0608                     l16470:
 12781                           
 12782                           ;main.c: 114:                     {;main.c: 115:                         lightBlueSerial
      +                          [serialIndex] = '\0';
 12783     0608  0851               	movf	_serialIndex,w
 12784     0609  3EA0               	addlw	(low (_lightBlueSerial| (0+512)))& (0+255)
 12785     060A  0086               	movwf	6
 12786     060B  3002               	movlw	2	; select bank5/6
 12787     060C  0087               	movwf	7
 12788     060D  0181               	clrf	1
 12789     060E                     l16472:
 12790                           
 12791                           ;main.c: 116:                         LIGHTBLUE_SendSerialData(lightBlueSerial);
 12792     060E  30A0               	movlw	(low (_lightBlueSerial| (0+512)))& (0+255)
 12793     060F  3187  271A  3185   	fcall	_LIGHTBLUE_SendSerialData
 12794     0612                     l16474:
 12795                           
 12796                           ;main.c: 117:                         serialIndex = 0;
 12797     0612  0140               	movlb	0	; select bank0
 12798     0613  01D1               	clrf	_serialIndex
 12799                           
 12800                           ;main.c: 118:                     }
 12801     0614  2E19               	goto	l16478
 12802     0615                     l16476:
 12803                           
 12804                           ;main.c: 120:                     {;main.c: 121:                         serialIndex++;
 12805     0615  3001               	movlw	1
 12806     0616  00CC               	movwf	??_main
 12807     0617  084C               	movf	??_main,w
 12808     0618  07D1               	addwf	_serialIndex,f
 12809     0619                     l16478:
 12810                           
 12811                           ;main.c: 108:                 while (uart[UART_CDC].DataReady())
 12812     0619  3006               	movlw	low ((_uart+6)| (0+32768))
 12813     061A  0084               	movwf	4
 12814     061B  3098               	movlw	high ((_uart+6)| (0+32768))
 12815     061C  0085               	movwf	5
 12816     061D  3F01               	moviw [1]fsr0
 12817     061E  008A               	movwf	10
 12818     061F  3F00               	moviw [0]fsr0
 12819     0620  000A               	callw
 12820     0621  3185               	pagesel	$
 12821     0622  3A00               	xorlw	0
 12822     0623  1D03               	skipz
 12823     0624  2E26               	goto	u13831
 12824     0625  2E27               	goto	u13830
 12825     0626                     u13831:
 12826     0626  2DDA               	goto	l16462
 12827     0627                     u13830:
 12828     0627  2DA9               	goto	l16452
 12829     0628                     l16480:
 12830                           
 12831                           ;main.c: 130:             {;main.c: 131:                 uart[UART_CDC].Write(RN487X_Rea
      +                          d());
 12832     0628  3190  2019  3185   	fcall	_RN487X_Read
 12833     062B  0142               	movlb	2	; select bank2
 12834     062C  00E6               	movwf	_main$5433^(0+256)
 12835                           
 12836                           ;main.c: 130:             {;main.c: 131:                 uart[UART_CDC].Write(RN487X_Rea
      +                          d());
 12837     062D  0866               	movf	_main$5433^(0+256),w
 12838     062E  00F1               	movwf	EUSART2_Write@txData
 12839     062F  3002               	movlw	low ((_uart+2)| (0+32768))
 12840     0630  0084               	movwf	4
 12841     0631  3098               	movlw	high ((_uart+2)| (0+32768))
 12842     0632  0085               	movwf	5
 12843     0633  3F01               	moviw [1]fsr0
 12844     0634  008A               	movwf	10
 12845     0635  3F00               	moviw [0]fsr0
 12846     0636  000A               	callw
 12847     0637  3185               	pagesel	$
 12848     0638                     l2711:	
 12849                           ;main.c: 132:             }
 12850                           
 12851                           
 12852                           ;main.c: 129:             while(RN487X_DataReady())
 12853     0638  3193  2389  3185   	fcall	_RN487X_DataReady
 12854     063B  3A00               	xorlw	0
 12855     063C  1D03               	skipz
 12856     063D  2E3F               	goto	u13841
 12857     063E  2E40               	goto	u13840
 12858     063F                     u13841:
 12859     063F  2E28               	goto	l16480
 12860     0640                     u13840:
 12861     0640  2E54               	goto	l16484
 12862     0641                     l16482:
 12863                           
 12864                           ;main.c: 134:             {;main.c: 135:                 RN487X.Write(uart[UART_CDC].Rea
      +                          d());
 12865     0641  3000               	movlw	low (_uart| (0+32768))
 12866     0642  0084               	movwf	4
 12867     0643  3098               	movlw	high (_uart| (0+32768))
 12868     0644  0085               	movwf	5
 12869     0645  3F01               	moviw [1]fsr0
 12870     0646  008A               	movwf	10
 12871     0647  3F00               	moviw [0]fsr0
 12872     0648  000A               	callw
 12873     0649  3185               	pagesel	$
 12874     064A  00F6               	movwf	RN487X_Write@txData
 12875     064B  3068               	movlw	low (_RN487X| (0+32768))
 12876     064C  0084               	movwf	4
 12877     064D  3098               	movlw	high (_RN487X| (0+32768))
 12878     064E  0085               	movwf	5
 12879     064F  3F01               	moviw [1]fsr0
 12880     0650  008A               	movwf	10
 12881     0651  3F00               	moviw [0]fsr0
 12882     0652  000A               	callw
 12883     0653  3185               	pagesel	$
 12884     0654                     l16484:
 12885                           
 12886                           ;main.c: 133:             while (uart[UART_CDC].DataReady())
 12887     0654  3006               	movlw	low ((_uart+6)| (0+32768))
 12888     0655  0084               	movwf	4
 12889     0656  3098               	movlw	high ((_uart+6)| (0+32768))
 12890     0657  0085               	movwf	5
 12891     0658  3F01               	moviw [1]fsr0
 12892     0659  008A               	movwf	10
 12893     065A  3F00               	moviw [0]fsr0
 12894     065B  000A               	callw
 12895     065C  3185               	pagesel	$
 12896     065D  3A00               	xorlw	0
 12897     065E  1D03               	skipz
 12898     065F  2E61               	goto	u13851
 12899     0660  2E62               	goto	u13850
 12900     0661                     u13851:
 12901     0661  2E41               	goto	l16482
 12902     0662                     u13850:
 12903     0662  2DA9               	goto	l16452
 12904     0663  3180  2855         	ljmp	start
 12905     0665                     __end_of_main:
 12906                           
 12907                           	psect	text1
 12908     0665                     __ptext1:	
 12909 ;; *************** function _begin *****************
 12910 ;; Defined at:
 12911 ;;		line 41 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 12912 ;; Parameters:    Size  Location     Type
 12913 ;;		None
 12914 ;; Auto vars:     Size  Location     Type
 12915 ;;  stop            1    0        unsigned char 
 12916 ;; Return value:  Size  Location     Type
 12917 ;;                  1    wreg      char 
 12918 ;; Registers used:
 12919 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12920 ;; Tracked objects:
 12921 ;;		On entry : 0/0
 12922 ;;		On exit  : 0/0
 12923 ;;		Unchanged: 0/0
 12924 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12925 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12926 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12928 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12929 ;;Total ram usage:        0 bytes
 12930 ;; Hardware stack levels used: 1
 12931 ;; Hardware stack levels required when called: 17
 12932 ;; This function calls:
 12933 ;;		_bitRead8
 12934 ;;		_bitWrite8
 12935 ;;		_getAngleEn
 12936 ;;		_getError
 12937 ;;		_getLowPower
 12938 ;;		_getMagneticChannel
 12939 ;;		_getOperatingMode
 12940 ;;		_getTemperatureEN
 12941 ;;		_isConnected
 12942 ;;		_setMagneticChannel
 12943 ;;		_setOperatingMode
 12944 ;;		_setTemperatureEn
 12945 ;;		_setXYAxisRange
 12946 ;;		_setZAxisRange
 12947 ;; This function is called by:
 12948 ;;		_main
 12949 ;; This function uses a non-reentrant model
 12950 ;;
 12951                           
 12952     0665                     _begin:	
 12953                           ;psect for function _begin
 12954                           
 12955     0665                     l14518:	
 12956                           ;incstack = 0
 12957 ;; hardware stack exceeded
 12958                           ; Regs used in _begin: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12959                           
 12960                           
 12961                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 44:     number = 0b000
      +                          10000;
 12962     0665  3010               	movlw	16
 12963     0666  0140               	movlb	0	; select bank0
 12964     0667  00EF               	movwf	_number
 12965     0668                     l14520:
 12966                           
 12967                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 45:     zero = bitRead
      +                          8(&number, 0);
 12968     0668  306F               	movlw	low _number
 12969     0669  00F1               	movwf	bitRead8@reg
 12970     066A  3000               	movlw	high _number
 12971     066B  00F2               	movwf	bitRead8@reg+1
 12972     066C  01F3               	clrf	bitRead8@position
 12973     066D  3192  2241  3186   	fcall	_bitRead8
 12974     0670  0140               	movlb	0	; select bank0
 12975     0671  00E9               	movwf	_zero
 12976     0672                     l14522:
 12977                           
 12978                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 46:     uno = bitRead8
      +                          (&number, 1);
 12979     0672  306F               	movlw	low _number
 12980     0673  00F1               	movwf	bitRead8@reg
 12981     0674  3000               	movlw	high _number
 12982     0675  00F2               	movwf	bitRead8@reg+1
 12983     0676  01F3               	clrf	bitRead8@position
 12984     0677  0AF3               	incf	bitRead8@position,f
 12985     0678  3192  2241  3186   	fcall	_bitRead8
 12986     067B  0140               	movlb	0	; select bank0
 12987     067C  00E8               	movwf	_uno
 12988     067D                     l14524:
 12989                           
 12990                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 47:     dos = bitRead8
      +                          (&number, 2);
 12991     067D  306F               	movlw	low _number
 12992     067E  00F1               	movwf	bitRead8@reg
 12993     067F  3000               	movlw	high _number
 12994     0680  00F2               	movwf	bitRead8@reg+1
 12995     0681  3002               	movlw	2
 12996     0682  00F3               	movwf	bitRead8@position
 12997     0683  3192  2241  3186   	fcall	_bitRead8
 12998     0686  0140               	movlb	0	; select bank0
 12999     0687  00E7               	movwf	_dos
 13000     0688                     l14526:
 13001                           
 13002                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 48:     tres = bitRead
      +                          8(&number, 3);
 13003     0688  306F               	movlw	low _number
 13004     0689  00F1               	movwf	bitRead8@reg
 13005     068A  3000               	movlw	high _number
 13006     068B  00F2               	movwf	bitRead8@reg+1
 13007     068C  3003               	movlw	3
 13008     068D  00F3               	movwf	bitRead8@position
 13009     068E  3192  2241  3186   	fcall	_bitRead8
 13010     0691  0140               	movlb	0	; select bank0
 13011     0692  00E6               	movwf	_tres
 13012     0693                     l14528:
 13013                           
 13014                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 49:     cuatro = bitRe
      +                          ad8(&number, 4);
 13015     0693  306F               	movlw	low _number
 13016     0694  00F1               	movwf	bitRead8@reg
 13017     0695  3000               	movlw	high _number
 13018     0696  00F2               	movwf	bitRead8@reg+1
 13019     0697  3004               	movlw	4
 13020     0698  00F3               	movwf	bitRead8@position
 13021     0699  3192  2241  3186   	fcall	_bitRead8
 13022     069C  0140               	movlb	0	; select bank0
 13023     069D  00E5               	movwf	_cuatro
 13024     069E                     l14530:
 13025                           
 13026                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 50:     cinco = bitRea
      +                          d8(&number, 5);
 13027     069E  306F               	movlw	low _number
 13028     069F  00F1               	movwf	bitRead8@reg
 13029     06A0  3000               	movlw	high _number
 13030     06A1  00F2               	movwf	bitRead8@reg+1
 13031     06A2  3005               	movlw	5
 13032     06A3  00F3               	movwf	bitRead8@position
 13033     06A4  3192  2241  3186   	fcall	_bitRead8
 13034     06A7  0140               	movlb	0	; select bank0
 13035     06A8  00E4               	movwf	_cinco
 13036     06A9                     l14532:
 13037                           
 13038                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 51:     seis = bitRead
      +                          8(&number, 6);
 13039     06A9  306F               	movlw	low _number
 13040     06AA  00F1               	movwf	bitRead8@reg
 13041     06AB  3000               	movlw	high _number
 13042     06AC  00F2               	movwf	bitRead8@reg+1
 13043     06AD  3006               	movlw	6
 13044     06AE  00F3               	movwf	bitRead8@position
 13045     06AF  3192  2241  3186   	fcall	_bitRead8
 13046     06B2  0141               	movlb	1	; select bank1
 13047     06B3  00E9               	movwf	_seis^(0+128)
 13048     06B4                     l14534:
 13049                           
 13050                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 52:     siete = bitRea
      +                          d8(&number, 7);
 13051     06B4  306F               	movlw	low _number
 13052     06B5  00F1               	movwf	bitRead8@reg
 13053     06B6  3000               	movlw	high _number
 13054     06B7  00F2               	movwf	bitRead8@reg+1
 13055     06B8  3007               	movlw	7
 13056     06B9  00F3               	movwf	bitRead8@position
 13057     06BA  3192  2241  3186   	fcall	_bitRead8
 13058     06BD  0141               	movlb	1	; select bank1
 13059     06BE  00E8               	movwf	_siete^(0+128)
 13060     06BF                     l14536:
 13061                           
 13062                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 54:     number=0;
 13063     06BF  0140               	movlb	0	; select bank0
 13064     06C0  01EF               	clrf	_number
 13065     06C1                     l14538:
 13066                           
 13067                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 55:     bitWrite8(&num
      +                          ber,4,1);
 13068     06C1  306F               	movlw	low _number
 13069     06C2  00F1               	movwf	bitWrite8@reg
 13070     06C3  3000               	movlw	high _number
 13071     06C4  00F2               	movwf	bitWrite8@reg+1
 13072     06C5  3004               	movlw	4
 13073     06C6  00F3               	movwf	bitWrite8@position
 13074     06C7  01F4               	clrf	bitWrite8@value
 13075     06C8  0AF4               	incf	bitWrite8@value,f
 13076     06C9  3192  2258  3186   	fcall	_bitWrite8
 13077     06CC                     l14540:
 13078     06CC                     l14542:
 13079                           
 13080                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 69:     if (isConnecte
      +                          d() != 0) {
 13081     06CC  3192  229F  3186   	fcall	_isConnected
 13082     06CF  3A00               	xorlw	0
 13083     06D0  1903               	skipnz
 13084     06D1  2ED3               	goto	u11521
 13085     06D2  2ED4               	goto	u11520
 13086     06D3                     u11521:
 13087     06D3  2ED5               	goto	l14546
 13088     06D4                     u11520:
 13089     06D4  2F19               	goto	l663
 13090     06D5                     l14546:
 13091                           
 13092                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 74:     setMagneticCha
      +                          nnel(0X7);
 13093     06D5  3007               	movlw	7
 13094     06D6  3180  20A9  3186   	fcall	_setMagneticChannel
 13095                           
 13096                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 75:     setTemperature
      +                          En(1);
 13097     06D9  3001               	movlw	1
 13098     06DA  3188  20C3  3186   	fcall	_setTemperatureEn
 13099                           
 13100                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 76:     setOperatingMo
      +                          de(0X2);
 13101     06DD  3002               	movlw	2
 13102     06DE  318F  2765  3186   	fcall	_setOperatingMode
 13103                           
 13104                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 79:     setXYAxisRange
      +                          (0X1);
 13105     06E1  3001               	movlw	1
 13106     06E2  3189  21BB  3186   	fcall	_setXYAxisRange
 13107                           
 13108                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 80:     setZAxisRange(
      +                          0X1);
 13109     06E5  3001               	movlw	1
 13110     06E6  3189  2100  3186   	fcall	_setZAxisRange
 13111                           
 13112                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 83:     if (getError()
      +                           != 0) {
 13113     06E9  318D  2549  3186   	fcall	_getError
 13114     06EC  3A00               	xorlw	0
 13115     06ED  1903               	skipnz
 13116     06EE  2EF0               	goto	u11531
 13117     06EF  2EF1               	goto	u11530
 13118     06F0                     u11531:
 13119     06F0  2EF2               	goto	l14550
 13120     06F1                     u11530:
 13121     06F1  2F19               	goto	l663
 13122     06F2                     l14550:
 13123                           
 13124                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 88:     if (getLowPowe
      +                          r() != 0X0) {
 13125     06F2  3192  2214  3186   	fcall	_getLowPower
 13126     06F5  3A00               	xorlw	0
 13127     06F6  1903               	skipnz
 13128     06F7  2EF9               	goto	u11541
 13129     06F8  2EFA               	goto	u11540
 13130     06F9                     u11541:
 13131     06F9  2EFB               	goto	l14554
 13132     06FA                     u11540:
 13133     06FA  2F19               	goto	l663
 13134     06FB                     l14554:
 13135                           
 13136                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 93:     if (getOperati
      +                          ngMode() != 0X2) {
 13137     06FB  318C  24A2  3186   	fcall	_getOperatingMode
 13138     06FE  3A02               	xorlw	2
 13139     06FF  1903               	skipnz
 13140     0700  2F02               	goto	u11551
 13141     0701  2F03               	goto	u11550
 13142     0702                     u11551:
 13143     0702  2F04               	goto	l14558
 13144     0703                     u11550:
 13145     0703  2F19               	goto	l663
 13146     0704                     l14558:
 13147                           
 13148                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 98:     if (getMagneti
      +                          cChannel() != 0X7) {
 13149     0704  3183  2378  3186   	fcall	_getMagneticChannel
 13150     0707  3A07               	xorlw	7
 13151     0708  1903               	skipnz
 13152     0709  2F0B               	goto	u11561
 13153     070A  2F0C               	goto	u11560
 13154     070B                     u11561:
 13155     070B  2F0D               	goto	l14562
 13156     070C                     u11560:
 13157     070C  2F19               	goto	l663
 13158     070D                     l14562:
 13159                           
 13160                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 103:     if (getTemper
      +                          atureEN() != 0X1) {
 13161     070D  3188  2000  3186   	fcall	_getTemperatureEN
 13162     0710  3A01               	xorlw	1
 13163     0711  1903               	skipnz
 13164     0712  2F14               	goto	u11571
 13165     0713  2F15               	goto	u11570
 13166     0714                     u11571:
 13167     0714  2F16               	goto	l14566
 13168     0715                     u11570:
 13169     0715  2F19               	goto	l663
 13170     0716                     l14566:
 13171                           
 13172                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 108:     if (getAngleE
      +                          n() != 0X0) {
 13173     0716  318C  24F5  3186   	fcall	_getAngleEn
 13174     0719                     l663:
 13175     0719  0008               	return
 13176     071A                     __end_of_begin:
 13177                           
 13178                           	psect	text2
 13179     0900                     __ptext2:	
 13180 ;; *************** function _setZAxisRange *****************
 13181 ;; Defined at:
 13182 ;;		line 1037 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 13183 ;; Parameters:    Size  Location     Type
 13184 ;;  zAxisRange      1    wreg     unsigned char 
 13185 ;; Auto vars:     Size  Location     Type
 13186 ;;  zAxisRange      1   21[BANK0 ] unsigned char 
 13187 ;;  mode            2   22[BANK0 ] unsigned short 
 13188 ;; Return value:  Size  Location     Type
 13189 ;;                  1    wreg      char 
 13190 ;; Registers used:
 13191 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13192 ;; Tracked objects:
 13193 ;;		On entry : 0/0
 13194 ;;		On exit  : 0/0
 13195 ;;		Unchanged: 0/0
 13196 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13197 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13198 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13199 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13200 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13201 ;;Total ram usage:        5 bytes
 13202 ;; Hardware stack levels used: 1
 13203 ;; Hardware stack levels required when called: 16
 13204 ;; This function calls:
 13205 ;;		_bitWrite8
 13206 ;;		_getError
 13207 ;;		_readRegister
 13208 ;;		_writeRegister
 13209 ;; This function is called by:
 13210 ;;		_begin
 13211 ;; This function uses a non-reentrant model
 13212 ;;
 13213                           
 13214     0900                     _setZAxisRange:	
 13215                           ;psect for function _setZAxisRange
 13216                           
 13217                           
 13218                           ;incstack = 0
 13219 ;; hardware stack exceeded
 13220                           ; Regs used in _setZAxisRange: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13221                           ;setZAxisRange@zAxisRange stored from wreg
 13222     0900  0140               	movlb	0	; select bank0
 13223     0901  00B5               	movwf	setZAxisRange@zAxisRange
 13224     0902                     l13872:
 13225     0902                     l13874:
 13226                           
 13227                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1039:     mode = readR
      +                          egister(TMAG5273_REG_SENSOR_CONFIG_2);
 13228     0902  3003               	movlw	3
 13229     0903  3190  2025  3189   	fcall	_readRegister
 13230     0906  0140               	movlb	0	; select bank0
 13231     0907  00B3               	movwf	??_setZAxisRange
 13232     0908  01B4               	clrf	??_setZAxisRange+1
 13233     0909  0833               	movf	??_setZAxisRange,w
 13234     090A  00B6               	movwf	setZAxisRange@mode
 13235     090B  0834               	movf	??_setZAxisRange+1,w
 13236     090C  00B7               	movwf	setZAxisRange@mode+1
 13237     090D                     l13876:
 13238                           
 13239                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1042:     if (zAxisRan
      +                          ge == 0X0)
 13240     090D  0835               	movf	setZAxisRange@zAxisRange,w
 13241     090E  1D03               	btfss	3,2
 13242     090F  2911               	goto	u10691
 13243     0910  2912               	goto	u10690
 13244     0911                     u10691:
 13245     0911  2923               	goto	l13882
 13246     0912                     u10690:
 13247     0912                     l13878:
 13248                           
 13249                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1043:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1045:         bitWrite8(mode, 0, 
      +                          0);
 13250     0912  0837               	movf	setZAxisRange@mode+1,w
 13251     0913  00F2               	movwf	bitWrite8@reg+1
 13252     0914  0836               	movf	setZAxisRange@mode,w
 13253     0915  00F1               	movwf	bitWrite8@reg
 13254     0916  01F3               	clrf	bitWrite8@position
 13255     0917  01F4               	clrf	bitWrite8@value
 13256     0918  3192  2258  3189   	fcall	_bitWrite8
 13257     091B                     l13880:
 13258                           
 13259                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1047:         writeReg
      +                          ister(TMAG5273_REG_SENSOR_CONFIG_2, mode);
 13260     091B  0140               	movlb	0	; select bank0
 13261     091C  0836               	movf	setZAxisRange@mode,w
 13262     091D  00A6               	movwf	writeRegister@data
 13263     091E  3003               	movlw	3
 13264     091F  319F  27F5  3189   	fcall	_writeRegister
 13265                           
 13266                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1048:     } else if (z
      +                          AxisRange == 0X1)
 13267     0922  2939               	goto	l13888
 13268     0923                     l13882:
 13269     0923  0335               	decf	setZAxisRange@zAxisRange,w
 13270     0924  1D03               	btfss	3,2
 13271     0925  2927               	goto	u10701
 13272     0926  2928               	goto	u10700
 13273     0927                     u10701:
 13274     0927  2939               	goto	l13888
 13275     0928                     u10700:
 13276     0928                     l13884:
 13277                           
 13278                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1049:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1050:         bitWrite8(mode, 0, 
      +                          1);
 13279     0928  0837               	movf	setZAxisRange@mode+1,w
 13280     0929  00F2               	movwf	bitWrite8@reg+1
 13281     092A  0836               	movf	setZAxisRange@mode,w
 13282     092B  00F1               	movwf	bitWrite8@reg
 13283     092C  01F3               	clrf	bitWrite8@position
 13284     092D  01F4               	clrf	bitWrite8@value
 13285     092E  0AF4               	incf	bitWrite8@value,f
 13286     092F  3192  2258  3189   	fcall	_bitWrite8
 13287     0932                     l13886:
 13288                           
 13289                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1051:         writeReg
      +                          ister(TMAG5273_REG_SENSOR_CONFIG_2, mode);
 13290     0932  0140               	movlb	0	; select bank0
 13291     0933  0836               	movf	setZAxisRange@mode,w
 13292     0934  00A6               	movwf	writeRegister@data
 13293     0935  3003               	movlw	3
 13294     0936  319F  27F5  3189   	fcall	_writeRegister
 13295     0939                     l13888:
 13296                           
 13297                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1054:     return getEr
      +                          ror();;	Return value of _setZAxisRange is never used
 13298     0939  318D  2549  3189   	fcall	_getError
 13299     093C                     l875:
 13300     093C  0008               	return
 13301     093D                     __end_of_setZAxisRange:
 13302                           
 13303                           	psect	text3
 13304     09BB                     __ptext3:	
 13305 ;; *************** function _setXYAxisRange *****************
 13306 ;; Defined at:
 13307 ;;		line 1010 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 13308 ;; Parameters:    Size  Location     Type
 13309 ;;  xyAxisRange     1    wreg     unsigned char 
 13310 ;; Auto vars:     Size  Location     Type
 13311 ;;  xyAxisRange     1   21[BANK0 ] unsigned char 
 13312 ;;  mode            2   22[BANK0 ] unsigned short 
 13313 ;; Return value:  Size  Location     Type
 13314 ;;                  1    wreg      char 
 13315 ;; Registers used:
 13316 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13317 ;; Tracked objects:
 13318 ;;		On entry : 0/0
 13319 ;;		On exit  : 0/0
 13320 ;;		Unchanged: 0/0
 13321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13322 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13323 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13324 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13325 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13326 ;;Total ram usage:        5 bytes
 13327 ;; Hardware stack levels used: 1
 13328 ;; Hardware stack levels required when called: 16
 13329 ;; This function calls:
 13330 ;;		_bitWrite8
 13331 ;;		_getError
 13332 ;;		_readRegister
 13333 ;;		_writeRegister
 13334 ;; This function is called by:
 13335 ;;		_begin
 13336 ;; This function uses a non-reentrant model
 13337 ;;
 13338                           
 13339     09BB                     _setXYAxisRange:	
 13340                           ;psect for function _setXYAxisRange
 13341                           
 13342                           
 13343                           ;incstack = 0
 13344 ;; hardware stack exceeded
 13345                           ; Regs used in _setXYAxisRange: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13346                           ;setXYAxisRange@xyAxisRange stored from wreg
 13347     09BB  0140               	movlb	0	; select bank0
 13348     09BC  00B5               	movwf	setXYAxisRange@xyAxisRange
 13349     09BD                     l13852:
 13350     09BD                     l13854:
 13351                           
 13352                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1012:     mode = readR
      +                          egister(TMAG5273_REG_SENSOR_CONFIG_2);
 13353     09BD  3003               	movlw	3
 13354     09BE  3190  2025  3189   	fcall	_readRegister
 13355     09C1  0140               	movlb	0	; select bank0
 13356     09C2  00B3               	movwf	??_setXYAxisRange
 13357     09C3  01B4               	clrf	??_setXYAxisRange+1
 13358     09C4  0833               	movf	??_setXYAxisRange,w
 13359     09C5  00B6               	movwf	setXYAxisRange@mode
 13360     09C6  0834               	movf	??_setXYAxisRange+1,w
 13361     09C7  00B7               	movwf	setXYAxisRange@mode+1
 13362     09C8                     l13856:
 13363                           
 13364                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1015:     if (xyAxisRa
      +                          nge == 0X0)
 13365     09C8  0835               	movf	setXYAxisRange@xyAxisRange,w
 13366     09C9  1D03               	btfss	3,2
 13367     09CA  29CC               	goto	u10671
 13368     09CB  29CD               	goto	u10670
 13369     09CC                     u10671:
 13370     09CC  29DF               	goto	l13862
 13371     09CD                     u10670:
 13372     09CD                     l13858:
 13373                           
 13374                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1016:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1018:         bitWrite8(mode, 1, 
      +                          0);
 13375     09CD  0837               	movf	setXYAxisRange@mode+1,w
 13376     09CE  00F2               	movwf	bitWrite8@reg+1
 13377     09CF  0836               	movf	setXYAxisRange@mode,w
 13378     09D0  00F1               	movwf	bitWrite8@reg
 13379     09D1  01F3               	clrf	bitWrite8@position
 13380     09D2  0AF3               	incf	bitWrite8@position,f
 13381     09D3  01F4               	clrf	bitWrite8@value
 13382     09D4  3192  2258  3189   	fcall	_bitWrite8
 13383     09D7                     l13860:
 13384                           
 13385                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1020:         writeReg
      +                          ister(TMAG5273_REG_SENSOR_CONFIG_2, mode);
 13386     09D7  0140               	movlb	0	; select bank0
 13387     09D8  0836               	movf	setXYAxisRange@mode,w
 13388     09D9  00A6               	movwf	writeRegister@data
 13389     09DA  3003               	movlw	3
 13390     09DB  319F  27F5  3189   	fcall	_writeRegister
 13391                           
 13392                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1021:     } else if (x
      +                          yAxisRange == 0X1)
 13393     09DE  29F6               	goto	l13868
 13394     09DF                     l13862:
 13395     09DF  0335               	decf	setXYAxisRange@xyAxisRange,w
 13396     09E0  1D03               	btfss	3,2
 13397     09E1  29E3               	goto	u10681
 13398     09E2  29E4               	goto	u10680
 13399     09E3                     u10681:
 13400     09E3  29F6               	goto	l13868
 13401     09E4                     u10680:
 13402     09E4                     l13864:
 13403                           
 13404                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1022:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1023:         bitWrite8(mode, 1, 
      +                          1);
 13405     09E4  0837               	movf	setXYAxisRange@mode+1,w
 13406     09E5  00F2               	movwf	bitWrite8@reg+1
 13407     09E6  0836               	movf	setXYAxisRange@mode,w
 13408     09E7  00F1               	movwf	bitWrite8@reg
 13409     09E8  01F3               	clrf	bitWrite8@position
 13410     09E9  0AF3               	incf	bitWrite8@position,f
 13411     09EA  01F4               	clrf	bitWrite8@value
 13412     09EB  0AF4               	incf	bitWrite8@value,f
 13413     09EC  3192  2258  3189   	fcall	_bitWrite8
 13414     09EF                     l13866:
 13415                           
 13416                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1024:         writeReg
      +                          ister(TMAG5273_REG_SENSOR_CONFIG_2, mode);
 13417     09EF  0140               	movlb	0	; select bank0
 13418     09F0  0836               	movf	setXYAxisRange@mode,w
 13419     09F1  00A6               	movwf	writeRegister@data
 13420     09F2  3003               	movlw	3
 13421     09F3  319F  27F5  3189   	fcall	_writeRegister
 13422     09F6                     l13868:
 13423                           
 13424                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1027:     return getEr
      +                          ror();;	Return value of _setXYAxisRange is never used
 13425     09F6  318D  2549  3189   	fcall	_getError
 13426     09F9                     l869:
 13427     09F9  0008               	return
 13428     09FA                     __end_of_setXYAxisRange:
 13429                           
 13430                           	psect	text4
 13431     08C3                     __ptext4:	
 13432 ;; *************** function _setTemperatureEn *****************
 13433 ;; Defined at:
 13434 ;;		line 1136 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 13435 ;; Parameters:    Size  Location     Type
 13436 ;;  temperatureE    1    wreg     _Bool 
 13437 ;; Auto vars:     Size  Location     Type
 13438 ;;  temperatureE    1   21[BANK0 ] _Bool 
 13439 ;;  mode            2   22[BANK0 ] unsigned short 
 13440 ;; Return value:  Size  Location     Type
 13441 ;;                  1    wreg      char 
 13442 ;; Registers used:
 13443 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13444 ;; Tracked objects:
 13445 ;;		On entry : 0/0
 13446 ;;		On exit  : 0/0
 13447 ;;		Unchanged: 0/0
 13448 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13449 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13450 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13451 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13452 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13453 ;;Total ram usage:        5 bytes
 13454 ;; Hardware stack levels used: 1
 13455 ;; Hardware stack levels required when called: 16
 13456 ;; This function calls:
 13457 ;;		_bitWrite8
 13458 ;;		_getError
 13459 ;;		_readRegister
 13460 ;;		_writeRegister
 13461 ;; This function is called by:
 13462 ;;		_begin
 13463 ;; This function uses a non-reentrant model
 13464 ;;
 13465                           
 13466     08C3                     _setTemperatureEn:	
 13467                           ;psect for function _setTemperatureEn
 13468                           
 13469                           
 13470                           ;incstack = 0
 13471 ;; hardware stack exceeded
 13472                           ; Regs used in _setTemperatureEn: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13473                           ;setTemperatureEn@temperatureEnable stored from wreg
 13474     08C3  0140               	movlb	0	; select bank0
 13475     08C4  00B5               	movwf	setTemperatureEn@temperatureEnable
 13476     08C5                     l13800:
 13477     08C5                     l13802:
 13478                           
 13479                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1138:     mode = readR
      +                          egister(TMAG5273_REG_T_CONFIG);
 13480     08C5  3007               	movlw	7
 13481     08C6  3190  2025  3188   	fcall	_readRegister
 13482     08C9  0140               	movlb	0	; select bank0
 13483     08CA  00B3               	movwf	??_setTemperatureEn
 13484     08CB  01B4               	clrf	??_setTemperatureEn+1
 13485     08CC  0833               	movf	??_setTemperatureEn,w
 13486     08CD  00B6               	movwf	setTemperatureEn@mode
 13487     08CE  0834               	movf	??_setTemperatureEn+1,w
 13488     08CF  00B7               	movwf	setTemperatureEn@mode+1
 13489     08D0                     l13804:
 13490                           
 13491                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1141:     if (temperat
      +                          ureEnable == 0)
 13492     08D0  0835               	movf	setTemperatureEn@temperatureEnable,w
 13493     08D1  1D03               	btfss	3,2
 13494     08D2  28D4               	goto	u10611
 13495     08D3  28D5               	goto	u10610
 13496     08D4                     u10611:
 13497     08D4  28E6               	goto	l13810
 13498     08D5                     u10610:
 13499     08D5                     l13806:
 13500                           
 13501                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1142:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1144:         bitWrite8(mode, 0, 
      +                          0);
 13502     08D5  0837               	movf	setTemperatureEn@mode+1,w
 13503     08D6  00F2               	movwf	bitWrite8@reg+1
 13504     08D7  0836               	movf	setTemperatureEn@mode,w
 13505     08D8  00F1               	movwf	bitWrite8@reg
 13506     08D9  01F3               	clrf	bitWrite8@position
 13507     08DA  01F4               	clrf	bitWrite8@value
 13508     08DB  3192  2258  3188   	fcall	_bitWrite8
 13509     08DE                     l13808:
 13510                           
 13511                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1146:         writeReg
      +                          ister(TMAG5273_REG_T_CONFIG, mode);
 13512     08DE  0140               	movlb	0	; select bank0
 13513     08DF  0836               	movf	setTemperatureEn@mode,w
 13514     08E0  00A6               	movwf	writeRegister@data
 13515     08E1  3007               	movlw	7
 13516     08E2  319F  27F5  3188   	fcall	_writeRegister
 13517                           
 13518                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1147:     } else if (t
      +                          emperatureEnable == 1)
 13519     08E5  28FC               	goto	l13816
 13520     08E6                     l13810:
 13521     08E6  0335               	decf	setTemperatureEn@temperatureEnable,w
 13522     08E7  1D03               	btfss	3,2
 13523     08E8  28EA               	goto	u10621
 13524     08E9  28EB               	goto	u10620
 13525     08EA                     u10621:
 13526     08EA  28FC               	goto	l13816
 13527     08EB                     u10620:
 13528     08EB                     l13812:
 13529                           
 13530                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1148:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1149:         bitWrite8(mode, 0, 
      +                          1);
 13531     08EB  0837               	movf	setTemperatureEn@mode+1,w
 13532     08EC  00F2               	movwf	bitWrite8@reg+1
 13533     08ED  0836               	movf	setTemperatureEn@mode,w
 13534     08EE  00F1               	movwf	bitWrite8@reg
 13535     08EF  01F3               	clrf	bitWrite8@position
 13536     08F0  01F4               	clrf	bitWrite8@value
 13537     08F1  0AF4               	incf	bitWrite8@value,f
 13538     08F2  3192  2258  3188   	fcall	_bitWrite8
 13539     08F5                     l13814:
 13540                           
 13541                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1150:         writeReg
      +                          ister(TMAG5273_REG_T_CONFIG, mode);
 13542     08F5  0140               	movlb	0	; select bank0
 13543     08F6  0836               	movf	setTemperatureEn@mode,w
 13544     08F7  00A6               	movwf	writeRegister@data
 13545     08F8  3007               	movlw	7
 13546     08F9  319F  27F5  3188   	fcall	_writeRegister
 13547     08FC                     l13816:
 13548                           
 13549                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1153:     return getEr
      +                          ror();;	Return value of _setTemperatureEn is never used
 13550     08FC  318D  2549  3188   	fcall	_getError
 13551     08FF                     l893:
 13552     08FF  0008               	return
 13553     0900                     __end_of_setTemperatureEn:
 13554                           
 13555                           	psect	text5
 13556     0F65                     __ptext5:	
 13557 ;; *************** function _setOperatingMode *****************
 13558 ;; Defined at:
 13559 ;;		line 529 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 13560 ;; Parameters:    Size  Location     Type
 13561 ;;  opMode          1    wreg     unsigned char 
 13562 ;; Auto vars:     Size  Location     Type
 13563 ;;  opMode          1   21[BANK0 ] unsigned char 
 13564 ;;  mode            2   22[BANK0 ] unsigned short 
 13565 ;; Return value:  Size  Location     Type
 13566 ;;                  1    wreg      char 
 13567 ;; Registers used:
 13568 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13569 ;; Tracked objects:
 13570 ;;		On entry : 0/0
 13571 ;;		On exit  : 0/0
 13572 ;;		Unchanged: 0/0
 13573 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13574 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13575 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13576 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13577 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13578 ;;Total ram usage:        5 bytes
 13579 ;; Hardware stack levels used: 1
 13580 ;; Hardware stack levels required when called: 16
 13581 ;; This function calls:
 13582 ;;		_bitWrite8
 13583 ;;		_getError
 13584 ;;		_readRegister
 13585 ;;		_writeRegister
 13586 ;; This function is called by:
 13587 ;;		_begin
 13588 ;; This function uses a non-reentrant model
 13589 ;;
 13590                           
 13591     0F65                     _setOperatingMode:	
 13592                           ;psect for function _setOperatingMode
 13593                           
 13594                           
 13595                           ;incstack = 0
 13596 ;; hardware stack exceeded
 13597                           ; Regs used in _setOperatingMode: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13598                           ;setOperatingMode@opMode stored from wreg
 13599     0F65  0140               	movlb	0	; select bank0
 13600     0F66  00B5               	movwf	setOperatingMode@opMode
 13601     0F67                     l13820:
 13602     0F67                     l13822:
 13603                           
 13604                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 531:     mode = readRe
      +                          gister(TMAG5273_REG_DEVICE_CONFIG_2);
 13605     0F67  3001               	movlw	1
 13606     0F68  3190  2025  318F   	fcall	_readRegister
 13607     0F6B  0140               	movlb	0	; select bank0
 13608     0F6C  00B3               	movwf	??_setOperatingMode
 13609     0F6D  01B4               	clrf	??_setOperatingMode+1
 13610     0F6E  0833               	movf	??_setOperatingMode,w
 13611     0F6F  00B6               	movwf	setOperatingMode@mode
 13612     0F70  0834               	movf	??_setOperatingMode+1,w
 13613     0F71  00B7               	movwf	setOperatingMode@mode+1
 13614     0F72                     l13824:
 13615                           
 13616                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 534:     if (opMode ==
      +                           0)
 13617     0F72  0835               	movf	setOperatingMode@opMode,w
 13618     0F73  1D03               	btfss	3,2
 13619     0F74  2F76               	goto	u10631
 13620     0F75  2F77               	goto	u10630
 13621     0F76                     u10631:
 13622     0F76  2F93               	goto	l13830
 13623     0F77                     u10630:
 13624     0F77                     l13826:
 13625                           
 13626                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 535:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 537:         bitWrite8(mode, 0, 0)
      +                          ;
 13627     0F77  0837               	movf	setOperatingMode@mode+1,w
 13628     0F78  00F2               	movwf	bitWrite8@reg+1
 13629     0F79  0836               	movf	setOperatingMode@mode,w
 13630     0F7A  00F1               	movwf	bitWrite8@reg
 13631     0F7B  01F3               	clrf	bitWrite8@position
 13632     0F7C  01F4               	clrf	bitWrite8@value
 13633     0F7D  3192  2258  318F   	fcall	_bitWrite8
 13634                           
 13635                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 539:         bitWrite8
      +                          (mode, 1, 0);
 13636     0F80  0140               	movlb	0	; select bank0
 13637     0F81  0837               	movf	setOperatingMode@mode+1,w
 13638     0F82  00F2               	movwf	bitWrite8@reg+1
 13639     0F83  0836               	movf	setOperatingMode@mode,w
 13640     0F84  00F1               	movwf	bitWrite8@reg
 13641     0F85  01F3               	clrf	bitWrite8@position
 13642     0F86  0AF3               	incf	bitWrite8@position,f
 13643     0F87  01F4               	clrf	bitWrite8@value
 13644     0F88  3192  2258  318F   	fcall	_bitWrite8
 13645     0F8B                     l13828:
 13646                           
 13647                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 540:         writeRegi
      +                          ster(TMAG5273_REG_DEVICE_CONFIG_2, mode);
 13648     0F8B  0140               	movlb	0	; select bank0
 13649     0F8C  0836               	movf	setOperatingMode@mode,w
 13650     0F8D  00A6               	movwf	writeRegister@data
 13651     0F8E  3001               	movlw	1
 13652     0F8F  319F  27F5  318F   	fcall	_writeRegister
 13653                           
 13654                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 541:     } else if (op
      +                          Mode == 0X1)
 13655     0F92  2FFC               	goto	l13848
 13656     0F93                     l13830:
 13657     0F93  0335               	decf	setOperatingMode@opMode,w
 13658     0F94  1D03               	btfss	3,2
 13659     0F95  2F97               	goto	u10641
 13660     0F96  2F98               	goto	u10640
 13661     0F97                     u10641:
 13662     0F97  2FB5               	goto	l13836
 13663     0F98                     u10640:
 13664     0F98                     l13832:
 13665                           
 13666                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 542:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 544:         bitWrite8(mode, 0, 1)
      +                          ;
 13667     0F98  0837               	movf	setOperatingMode@mode+1,w
 13668     0F99  00F2               	movwf	bitWrite8@reg+1
 13669     0F9A  0836               	movf	setOperatingMode@mode,w
 13670     0F9B  00F1               	movwf	bitWrite8@reg
 13671     0F9C  01F3               	clrf	bitWrite8@position
 13672     0F9D  01F4               	clrf	bitWrite8@value
 13673     0F9E  0AF4               	incf	bitWrite8@value,f
 13674     0F9F  3192  2258  318F   	fcall	_bitWrite8
 13675                           
 13676                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 546:         bitWrite8
      +                          (mode, 1, 0);
 13677     0FA2  0140               	movlb	0	; select bank0
 13678     0FA3  0837               	movf	setOperatingMode@mode+1,w
 13679     0FA4  00F2               	movwf	bitWrite8@reg+1
 13680     0FA5  0836               	movf	setOperatingMode@mode,w
 13681     0FA6  00F1               	movwf	bitWrite8@reg
 13682     0FA7  01F3               	clrf	bitWrite8@position
 13683     0FA8  0AF3               	incf	bitWrite8@position,f
 13684     0FA9  01F4               	clrf	bitWrite8@value
 13685     0FAA  3192  2258  318F   	fcall	_bitWrite8
 13686     0FAD                     l13834:
 13687                           
 13688                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 547:         writeRegi
      +                          ster(TMAG5273_REG_DEVICE_CONFIG_2, mode);
 13689     0FAD  0140               	movlb	0	; select bank0
 13690     0FAE  0836               	movf	setOperatingMode@mode,w
 13691     0FAF  00A6               	movwf	writeRegister@data
 13692     0FB0  3001               	movlw	1
 13693     0FB1  319F  27F5  318F   	fcall	_writeRegister
 13694                           
 13695                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 548:     } else if (op
      +                          Mode == 0X2)
 13696     0FB4  2FFC               	goto	l13848
 13697     0FB5                     l13836:
 13698     0FB5  3002               	movlw	2
 13699     0FB6  0635               	xorwf	setOperatingMode@opMode,w
 13700     0FB7  1D03               	btfss	3,2
 13701     0FB8  2FBA               	goto	u10651
 13702     0FB9  2FBB               	goto	u10650
 13703     0FBA                     u10651:
 13704     0FBA  2FD8               	goto	l13842
 13705     0FBB                     u10650:
 13706     0FBB                     l13838:
 13707                           
 13708                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 549:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 550:         bitWrite8(mode, 0, 0)
      +                          ;
 13709     0FBB  0837               	movf	setOperatingMode@mode+1,w
 13710     0FBC  00F2               	movwf	bitWrite8@reg+1
 13711     0FBD  0836               	movf	setOperatingMode@mode,w
 13712     0FBE  00F1               	movwf	bitWrite8@reg
 13713     0FBF  01F3               	clrf	bitWrite8@position
 13714     0FC0  01F4               	clrf	bitWrite8@value
 13715     0FC1  3192  2258  318F   	fcall	_bitWrite8
 13716                           
 13717                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 551:         bitWrite8
      +                          (mode, 1, 1);
 13718     0FC4  0140               	movlb	0	; select bank0
 13719     0FC5  0837               	movf	setOperatingMode@mode+1,w
 13720     0FC6  00F2               	movwf	bitWrite8@reg+1
 13721     0FC7  0836               	movf	setOperatingMode@mode,w
 13722     0FC8  00F1               	movwf	bitWrite8@reg
 13723     0FC9  01F3               	clrf	bitWrite8@position
 13724     0FCA  0AF3               	incf	bitWrite8@position,f
 13725     0FCB  01F4               	clrf	bitWrite8@value
 13726     0FCC  0AF4               	incf	bitWrite8@value,f
 13727     0FCD  3192  2258  318F   	fcall	_bitWrite8
 13728     0FD0                     l13840:
 13729                           
 13730                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 552:         writeRegi
      +                          ster(TMAG5273_REG_DEVICE_CONFIG_2, mode);
 13731     0FD0  0140               	movlb	0	; select bank0
 13732     0FD1  0836               	movf	setOperatingMode@mode,w
 13733     0FD2  00A6               	movwf	writeRegister@data
 13734     0FD3  3001               	movlw	1
 13735     0FD4  319F  27F5  318F   	fcall	_writeRegister
 13736                           
 13737                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 553:     } else if (op
      +                          Mode == 0X3)
 13738     0FD7  2FFC               	goto	l13848
 13739     0FD8                     l13842:
 13740     0FD8  3003               	movlw	3
 13741     0FD9  0635               	xorwf	setOperatingMode@opMode,w
 13742     0FDA  1D03               	btfss	3,2
 13743     0FDB  2FDD               	goto	u10661
 13744     0FDC  2FDE               	goto	u10660
 13745     0FDD                     u10661:
 13746     0FDD  2FFC               	goto	l759
 13747     0FDE                     u10660:
 13748     0FDE                     l13844:
 13749                           
 13750                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 554:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 555:         bitWrite8(mode, 0, 1)
      +                          ;
 13751     0FDE  0837               	movf	setOperatingMode@mode+1,w
 13752     0FDF  00F2               	movwf	bitWrite8@reg+1
 13753     0FE0  0836               	movf	setOperatingMode@mode,w
 13754     0FE1  00F1               	movwf	bitWrite8@reg
 13755     0FE2  01F3               	clrf	bitWrite8@position
 13756     0FE3  01F4               	clrf	bitWrite8@value
 13757     0FE4  0AF4               	incf	bitWrite8@value,f
 13758     0FE5  3192  2258  318F   	fcall	_bitWrite8
 13759                           
 13760                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 556:         bitWrite8
      +                          (mode, 1, 1);
 13761     0FE8  0140               	movlb	0	; select bank0
 13762     0FE9  0837               	movf	setOperatingMode@mode+1,w
 13763     0FEA  00F2               	movwf	bitWrite8@reg+1
 13764     0FEB  0836               	movf	setOperatingMode@mode,w
 13765     0FEC  00F1               	movwf	bitWrite8@reg
 13766     0FED  01F3               	clrf	bitWrite8@position
 13767     0FEE  0AF3               	incf	bitWrite8@position,f
 13768     0FEF  01F4               	clrf	bitWrite8@value
 13769     0FF0  0AF4               	incf	bitWrite8@value,f
 13770     0FF1  3192  2258  318F   	fcall	_bitWrite8
 13771     0FF4                     l13846:
 13772                           
 13773                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 557:         writeRegi
      +                          ster(TMAG5273_REG_DEVICE_CONFIG_2, mode);
 13774     0FF4  0140               	movlb	0	; select bank0
 13775     0FF5  0836               	movf	setOperatingMode@mode,w
 13776     0FF6  00A6               	movwf	writeRegister@data
 13777     0FF7  3001               	movlw	1
 13778     0FF8  319F  27F5  318F   	fcall	_writeRegister
 13779     0FFB  2FFC               	goto	l13848
 13780     0FFC                     l759:
 13781     0FFC                     l13848:
 13782                           
 13783                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 560:     return getErr
      +                          or();;	Return value of _setOperatingMode is never used
 13784     0FFC  318D  2549  318F   	fcall	_getError
 13785     0FFF                     l763:
 13786     0FFF  0008               	return
 13787     1000                     __end_of_setOperatingMode:
 13788                           
 13789                           	psect	text6
 13790     00A9                     __ptext6:	
 13791 ;; *************** function _setMagneticChannel *****************
 13792 ;; Defined at:
 13793 ;;		line 581 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 13794 ;; Parameters:    Size  Location     Type
 13795 ;;  channelMode     1    wreg     unsigned char 
 13796 ;; Auto vars:     Size  Location     Type
 13797 ;;  channelMode     1   21[BANK0 ] unsigned char 
 13798 ;;  mode            2   22[BANK0 ] unsigned short 
 13799 ;; Return value:  Size  Location     Type
 13800 ;;                  1    wreg      char 
 13801 ;; Registers used:
 13802 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13803 ;; Tracked objects:
 13804 ;;		On entry : 0/0
 13805 ;;		On exit  : 0/0
 13806 ;;		Unchanged: 0/0
 13807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13808 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13809 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13810 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13811 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13812 ;;Total ram usage:        5 bytes
 13813 ;; Hardware stack levels used: 1
 13814 ;; Hardware stack levels required when called: 16
 13815 ;; This function calls:
 13816 ;;		_bitWrite8
 13817 ;;		_getError
 13818 ;;		_readRegister
 13819 ;;		_writeRegister
 13820 ;; This function is called by:
 13821 ;;		_begin
 13822 ;; This function uses a non-reentrant model
 13823 ;;
 13824                           
 13825     00A9                     _setMagneticChannel:	
 13826                           ;psect for function _setMagneticChannel
 13827                           
 13828                           
 13829                           ;incstack = 0
 13830 ;; hardware stack exceeded
 13831                           ; Regs used in _setMagneticChannel: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13832                           ;setMagneticChannel@channelMode stored from wreg
 13833     00A9  0140               	movlb	0	; select bank0
 13834     00AA  00B5               	movwf	setMagneticChannel@channelMode
 13835     00AB                     l13720:
 13836     00AB                     l13722:
 13837                           
 13838                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 583:     mode = readRe
      +                          gister(TMAG5273_REG_SENSOR_CONFIG_1);
 13839     00AB  3002               	movlw	2
 13840     00AC  3190  2025  3180   	fcall	_readRegister
 13841     00AF  0140               	movlb	0	; select bank0
 13842     00B0  00B3               	movwf	??_setMagneticChannel
 13843     00B1  01B4               	clrf	??_setMagneticChannel+1
 13844     00B2  0833               	movf	??_setMagneticChannel,w
 13845     00B3  00B6               	movwf	setMagneticChannel@mode
 13846     00B4  0834               	movf	??_setMagneticChannel+1,w
 13847     00B5  00B7               	movwf	setMagneticChannel@mode+1
 13848     00B6                     l13724:
 13849                           
 13850                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 586:     if (channelMo
      +                          de == 0X0)
 13851     00B6  0835               	movf	setMagneticChannel@channelMode,w
 13852     00B7  1D03               	btfss	3,2
 13853     00B8  28BA               	goto	u10491
 13854     00B9  28BB               	goto	u10490
 13855     00BA                     u10491:
 13856     00BA  28EE               	goto	l13730
 13857     00BB                     u10490:
 13858     00BB                     l13726:
 13859                           
 13860                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 587:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 589:         bitWrite8(mode, 4, 0)
      +                          ;
 13861     00BB  0837               	movf	setMagneticChannel@mode+1,w
 13862     00BC  00F2               	movwf	bitWrite8@reg+1
 13863     00BD  0836               	movf	setMagneticChannel@mode,w
 13864     00BE  00F1               	movwf	bitWrite8@reg
 13865     00BF  3004               	movlw	4
 13866     00C0  00F3               	movwf	bitWrite8@position
 13867     00C1  01F4               	clrf	bitWrite8@value
 13868     00C2  3192  2258  3180   	fcall	_bitWrite8
 13869                           
 13870                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 591:         bitWrite8
      +                          (mode, 5, 0);
 13871     00C5  0140               	movlb	0	; select bank0
 13872     00C6  0837               	movf	setMagneticChannel@mode+1,w
 13873     00C7  00F2               	movwf	bitWrite8@reg+1
 13874     00C8  0836               	movf	setMagneticChannel@mode,w
 13875     00C9  00F1               	movwf	bitWrite8@reg
 13876     00CA  3005               	movlw	5
 13877     00CB  00F3               	movwf	bitWrite8@position
 13878     00CC  01F4               	clrf	bitWrite8@value
 13879     00CD  3192  2258  3180   	fcall	_bitWrite8
 13880                           
 13881                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 593:         bitWrite8
      +                          (mode, 6, 0);
 13882     00D0  0140               	movlb	0	; select bank0
 13883     00D1  0837               	movf	setMagneticChannel@mode+1,w
 13884     00D2  00F2               	movwf	bitWrite8@reg+1
 13885     00D3  0836               	movf	setMagneticChannel@mode,w
 13886     00D4  00F1               	movwf	bitWrite8@reg
 13887     00D5  3006               	movlw	6
 13888     00D6  00F3               	movwf	bitWrite8@position
 13889     00D7  01F4               	clrf	bitWrite8@value
 13890     00D8  3192  2258  3180   	fcall	_bitWrite8
 13891                           
 13892                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 595:         bitWrite8
      +                          (mode, 7, 0);
 13893     00DB  0140               	movlb	0	; select bank0
 13894     00DC  0837               	movf	setMagneticChannel@mode+1,w
 13895     00DD  00F2               	movwf	bitWrite8@reg+1
 13896     00DE  0836               	movf	setMagneticChannel@mode,w
 13897     00DF  00F1               	movwf	bitWrite8@reg
 13898     00E0  3007               	movlw	7
 13899     00E1  00F3               	movwf	bitWrite8@position
 13900     00E2  01F4               	clrf	bitWrite8@value
 13901     00E3  3192  2258  3180   	fcall	_bitWrite8
 13902     00E6                     l13728:
 13903                           
 13904                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 597:         writeRegi
      +                          ster(TMAG5273_REG_SENSOR_CONFIG_1, mode);
 13905     00E6  0140               	movlb	0	; select bank0
 13906     00E7  0836               	movf	setMagneticChannel@mode,w
 13907     00E8  00A6               	movwf	writeRegister@data
 13908     00E9  3002               	movlw	2
 13909     00EA  319F  27F5  3180   	fcall	_writeRegister
 13910                           
 13911                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 599:     } else if (ch
      +                          annelMode == 0X1)
 13912     00ED  2B74               	goto	l13796
 13913     00EE                     l13730:
 13914     00EE  0335               	decf	setMagneticChannel@channelMode,w
 13915     00EF  1D03               	btfss	3,2
 13916     00F0  28F2               	goto	u10501
 13917     00F1  28F3               	goto	u10500
 13918     00F2                     u10501:
 13919     00F2  2927               	goto	l13736
 13920     00F3                     u10500:
 13921     00F3                     l13732:
 13922                           
 13923                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 600:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 601:         bitWrite8(mode, 4, 1)
      +                          ;
 13924     00F3  0837               	movf	setMagneticChannel@mode+1,w
 13925     00F4  00F2               	movwf	bitWrite8@reg+1
 13926     00F5  0836               	movf	setMagneticChannel@mode,w
 13927     00F6  00F1               	movwf	bitWrite8@reg
 13928     00F7  3004               	movlw	4
 13929     00F8  00F3               	movwf	bitWrite8@position
 13930     00F9  01F4               	clrf	bitWrite8@value
 13931     00FA  0AF4               	incf	bitWrite8@value,f
 13932     00FB  3192  2258  3180   	fcall	_bitWrite8
 13933                           
 13934                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 602:         bitWrite8
      +                          (mode, 5, 0);
 13935     00FE  0140               	movlb	0	; select bank0
 13936     00FF  0837               	movf	setMagneticChannel@mode+1,w
 13937     0100  00F2               	movwf	bitWrite8@reg+1
 13938     0101  0836               	movf	setMagneticChannel@mode,w
 13939     0102  00F1               	movwf	bitWrite8@reg
 13940     0103  3005               	movlw	5
 13941     0104  00F3               	movwf	bitWrite8@position
 13942     0105  01F4               	clrf	bitWrite8@value
 13943     0106  3192  2258  3180   	fcall	_bitWrite8
 13944                           
 13945                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 603:         bitWrite8
      +                          (mode, 6, 0);
 13946     0109  0140               	movlb	0	; select bank0
 13947     010A  0837               	movf	setMagneticChannel@mode+1,w
 13948     010B  00F2               	movwf	bitWrite8@reg+1
 13949     010C  0836               	movf	setMagneticChannel@mode,w
 13950     010D  00F1               	movwf	bitWrite8@reg
 13951     010E  3006               	movlw	6
 13952     010F  00F3               	movwf	bitWrite8@position
 13953     0110  01F4               	clrf	bitWrite8@value
 13954     0111  3192  2258  3180   	fcall	_bitWrite8
 13955                           
 13956                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 604:         bitWrite8
      +                          (mode, 7, 0);
 13957     0114  0140               	movlb	0	; select bank0
 13958     0115  0837               	movf	setMagneticChannel@mode+1,w
 13959     0116  00F2               	movwf	bitWrite8@reg+1
 13960     0117  0836               	movf	setMagneticChannel@mode,w
 13961     0118  00F1               	movwf	bitWrite8@reg
 13962     0119  3007               	movlw	7
 13963     011A  00F3               	movwf	bitWrite8@position
 13964     011B  01F4               	clrf	bitWrite8@value
 13965     011C  3192  2258  3180   	fcall	_bitWrite8
 13966     011F                     l13734:
 13967                           
 13968                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 605:         writeRegi
      +                          ster(TMAG5273_REG_SENSOR_CONFIG_1, mode);
 13969     011F  0140               	movlb	0	; select bank0
 13970     0120  0836               	movf	setMagneticChannel@mode,w
 13971     0121  00A6               	movwf	writeRegister@data
 13972     0122  3002               	movlw	2
 13973     0123  319F  27F5  3180   	fcall	_writeRegister
 13974                           
 13975                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 606:     } else if (ch
      +                          annelMode == 0X2)
 13976     0126  2B74               	goto	l13796
 13977     0127                     l13736:
 13978     0127  3002               	movlw	2
 13979     0128  0635               	xorwf	setMagneticChannel@channelMode,w
 13980     0129  1D03               	btfss	3,2
 13981     012A  292C               	goto	u10511
 13982     012B  292D               	goto	u10510
 13983     012C                     u10511:
 13984     012C  2961               	goto	l13742
 13985     012D                     u10510:
 13986     012D                     l13738:
 13987                           
 13988                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 607:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 608:         bitWrite8(mode, 4, 0)
      +                          ;
 13989     012D  0837               	movf	setMagneticChannel@mode+1,w
 13990     012E  00F2               	movwf	bitWrite8@reg+1
 13991     012F  0836               	movf	setMagneticChannel@mode,w
 13992     0130  00F1               	movwf	bitWrite8@reg
 13993     0131  3004               	movlw	4
 13994     0132  00F3               	movwf	bitWrite8@position
 13995     0133  01F4               	clrf	bitWrite8@value
 13996     0134  3192  2258  3180   	fcall	_bitWrite8
 13997                           
 13998                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 609:         bitWrite8
      +                          (mode, 5, 1);
 13999     0137  0140               	movlb	0	; select bank0
 14000     0138  0837               	movf	setMagneticChannel@mode+1,w
 14001     0139  00F2               	movwf	bitWrite8@reg+1
 14002     013A  0836               	movf	setMagneticChannel@mode,w
 14003     013B  00F1               	movwf	bitWrite8@reg
 14004     013C  3005               	movlw	5
 14005     013D  00F3               	movwf	bitWrite8@position
 14006     013E  01F4               	clrf	bitWrite8@value
 14007     013F  0AF4               	incf	bitWrite8@value,f
 14008     0140  3192  2258  3180   	fcall	_bitWrite8
 14009                           
 14010                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 610:         bitWrite8
      +                          (mode, 6, 0);
 14011     0143  0140               	movlb	0	; select bank0
 14012     0144  0837               	movf	setMagneticChannel@mode+1,w
 14013     0145  00F2               	movwf	bitWrite8@reg+1
 14014     0146  0836               	movf	setMagneticChannel@mode,w
 14015     0147  00F1               	movwf	bitWrite8@reg
 14016     0148  3006               	movlw	6
 14017     0149  00F3               	movwf	bitWrite8@position
 14018     014A  01F4               	clrf	bitWrite8@value
 14019     014B  3192  2258  3180   	fcall	_bitWrite8
 14020                           
 14021                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 611:         bitWrite8
      +                          (mode, 7, 0);
 14022     014E  0140               	movlb	0	; select bank0
 14023     014F  0837               	movf	setMagneticChannel@mode+1,w
 14024     0150  00F2               	movwf	bitWrite8@reg+1
 14025     0151  0836               	movf	setMagneticChannel@mode,w
 14026     0152  00F1               	movwf	bitWrite8@reg
 14027     0153  3007               	movlw	7
 14028     0154  00F3               	movwf	bitWrite8@position
 14029     0155  01F4               	clrf	bitWrite8@value
 14030     0156  3192  2258  3180   	fcall	_bitWrite8
 14031     0159                     l13740:
 14032                           
 14033                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 612:         writeRegi
      +                          ster(TMAG5273_REG_SENSOR_CONFIG_1, mode);
 14034     0159  0140               	movlb	0	; select bank0
 14035     015A  0836               	movf	setMagneticChannel@mode,w
 14036     015B  00A6               	movwf	writeRegister@data
 14037     015C  3002               	movlw	2
 14038     015D  319F  27F5  3180   	fcall	_writeRegister
 14039                           
 14040                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 613:     } else if (ch
      +                          annelMode == 0X3)
 14041     0160  2B74               	goto	l13796
 14042     0161                     l13742:
 14043     0161  3003               	movlw	3
 14044     0162  0635               	xorwf	setMagneticChannel@channelMode,w
 14045     0163  1D03               	btfss	3,2
 14046     0164  2966               	goto	u10521
 14047     0165  2967               	goto	u10520
 14048     0166                     u10521:
 14049     0166  299C               	goto	l13748
 14050     0167                     u10520:
 14051     0167                     l13744:
 14052                           
 14053                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 614:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 615:         bitWrite8(mode, 4, 1)
      +                          ;
 14054     0167  0837               	movf	setMagneticChannel@mode+1,w
 14055     0168  00F2               	movwf	bitWrite8@reg+1
 14056     0169  0836               	movf	setMagneticChannel@mode,w
 14057     016A  00F1               	movwf	bitWrite8@reg
 14058     016B  3004               	movlw	4
 14059     016C  00F3               	movwf	bitWrite8@position
 14060     016D  01F4               	clrf	bitWrite8@value
 14061     016E  0AF4               	incf	bitWrite8@value,f
 14062     016F  3192  2258  3180   	fcall	_bitWrite8
 14063                           
 14064                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 616:         bitWrite8
      +                          (mode, 5, 1);
 14065     0172  0140               	movlb	0	; select bank0
 14066     0173  0837               	movf	setMagneticChannel@mode+1,w
 14067     0174  00F2               	movwf	bitWrite8@reg+1
 14068     0175  0836               	movf	setMagneticChannel@mode,w
 14069     0176  00F1               	movwf	bitWrite8@reg
 14070     0177  3005               	movlw	5
 14071     0178  00F3               	movwf	bitWrite8@position
 14072     0179  01F4               	clrf	bitWrite8@value
 14073     017A  0AF4               	incf	bitWrite8@value,f
 14074     017B  3192  2258  3180   	fcall	_bitWrite8
 14075                           
 14076                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 617:         bitWrite8
      +                          (mode, 6, 0);
 14077     017E  0140               	movlb	0	; select bank0
 14078     017F  0837               	movf	setMagneticChannel@mode+1,w
 14079     0180  00F2               	movwf	bitWrite8@reg+1
 14080     0181  0836               	movf	setMagneticChannel@mode,w
 14081     0182  00F1               	movwf	bitWrite8@reg
 14082     0183  3006               	movlw	6
 14083     0184  00F3               	movwf	bitWrite8@position
 14084     0185  01F4               	clrf	bitWrite8@value
 14085     0186  3192  2258  3180   	fcall	_bitWrite8
 14086                           
 14087                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 618:         bitWrite8
      +                          (mode, 7, 0);
 14088     0189  0140               	movlb	0	; select bank0
 14089     018A  0837               	movf	setMagneticChannel@mode+1,w
 14090     018B  00F2               	movwf	bitWrite8@reg+1
 14091     018C  0836               	movf	setMagneticChannel@mode,w
 14092     018D  00F1               	movwf	bitWrite8@reg
 14093     018E  3007               	movlw	7
 14094     018F  00F3               	movwf	bitWrite8@position
 14095     0190  01F4               	clrf	bitWrite8@value
 14096     0191  3192  2258  3180   	fcall	_bitWrite8
 14097     0194                     l13746:
 14098                           
 14099                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 619:         writeRegi
      +                          ster(TMAG5273_REG_SENSOR_CONFIG_1, mode);
 14100     0194  0140               	movlb	0	; select bank0
 14101     0195  0836               	movf	setMagneticChannel@mode,w
 14102     0196  00A6               	movwf	writeRegister@data
 14103     0197  3002               	movlw	2
 14104     0198  319F  27F5  3180   	fcall	_writeRegister
 14105                           
 14106                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 620:     } else if (ch
      +                          annelMode == 0X4)
 14107     019B  2B74               	goto	l13796
 14108     019C                     l13748:
 14109     019C  3004               	movlw	4
 14110     019D  0635               	xorwf	setMagneticChannel@channelMode,w
 14111     019E  1D03               	btfss	3,2
 14112     019F  29A1               	goto	u10531
 14113     01A0  29A2               	goto	u10530
 14114     01A1                     u10531:
 14115     01A1  29D6               	goto	l13754
 14116     01A2                     u10530:
 14117     01A2                     l13750:
 14118                           
 14119                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 621:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 622:         bitWrite8(mode, 4, 0)
      +                          ;
 14120     01A2  0837               	movf	setMagneticChannel@mode+1,w
 14121     01A3  00F2               	movwf	bitWrite8@reg+1
 14122     01A4  0836               	movf	setMagneticChannel@mode,w
 14123     01A5  00F1               	movwf	bitWrite8@reg
 14124     01A6  3004               	movlw	4
 14125     01A7  00F3               	movwf	bitWrite8@position
 14126     01A8  01F4               	clrf	bitWrite8@value
 14127     01A9  3192  2258  3180   	fcall	_bitWrite8
 14128                           
 14129                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 623:         bitWrite8
      +                          (mode, 5, 0);
 14130     01AC  0140               	movlb	0	; select bank0
 14131     01AD  0837               	movf	setMagneticChannel@mode+1,w
 14132     01AE  00F2               	movwf	bitWrite8@reg+1
 14133     01AF  0836               	movf	setMagneticChannel@mode,w
 14134     01B0  00F1               	movwf	bitWrite8@reg
 14135     01B1  3005               	movlw	5
 14136     01B2  00F3               	movwf	bitWrite8@position
 14137     01B3  01F4               	clrf	bitWrite8@value
 14138     01B4  3192  2258  3180   	fcall	_bitWrite8
 14139                           
 14140                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 624:         bitWrite8
      +                          (mode, 6, 1);
 14141     01B7  0140               	movlb	0	; select bank0
 14142     01B8  0837               	movf	setMagneticChannel@mode+1,w
 14143     01B9  00F2               	movwf	bitWrite8@reg+1
 14144     01BA  0836               	movf	setMagneticChannel@mode,w
 14145     01BB  00F1               	movwf	bitWrite8@reg
 14146     01BC  3006               	movlw	6
 14147     01BD  00F3               	movwf	bitWrite8@position
 14148     01BE  01F4               	clrf	bitWrite8@value
 14149     01BF  0AF4               	incf	bitWrite8@value,f
 14150     01C0  3192  2258  3180   	fcall	_bitWrite8
 14151                           
 14152                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 625:         bitWrite8
      +                          (mode, 7, 0);
 14153     01C3  0140               	movlb	0	; select bank0
 14154     01C4  0837               	movf	setMagneticChannel@mode+1,w
 14155     01C5  00F2               	movwf	bitWrite8@reg+1
 14156     01C6  0836               	movf	setMagneticChannel@mode,w
 14157     01C7  00F1               	movwf	bitWrite8@reg
 14158     01C8  3007               	movlw	7
 14159     01C9  00F3               	movwf	bitWrite8@position
 14160     01CA  01F4               	clrf	bitWrite8@value
 14161     01CB  3192  2258  3180   	fcall	_bitWrite8
 14162     01CE                     l13752:
 14163                           
 14164                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 626:         writeRegi
      +                          ster(TMAG5273_REG_SENSOR_CONFIG_1, mode);
 14165     01CE  0140               	movlb	0	; select bank0
 14166     01CF  0836               	movf	setMagneticChannel@mode,w
 14167     01D0  00A6               	movwf	writeRegister@data
 14168     01D1  3002               	movlw	2
 14169     01D2  319F  27F5  3180   	fcall	_writeRegister
 14170                           
 14171                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 627:     } else if (ch
      +                          annelMode == 0X5)
 14172     01D5  2B74               	goto	l13796
 14173     01D6                     l13754:
 14174     01D6  3005               	movlw	5
 14175     01D7  0635               	xorwf	setMagneticChannel@channelMode,w
 14176     01D8  1D03               	btfss	3,2
 14177     01D9  29DB               	goto	u10541
 14178     01DA  29DC               	goto	u10540
 14179     01DB                     u10541:
 14180     01DB  2A11               	goto	l13760
 14181     01DC                     u10540:
 14182     01DC                     l13756:
 14183                           
 14184                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 628:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 629:         bitWrite8(mode, 4, 1)
      +                          ;
 14185     01DC  0837               	movf	setMagneticChannel@mode+1,w
 14186     01DD  00F2               	movwf	bitWrite8@reg+1
 14187     01DE  0836               	movf	setMagneticChannel@mode,w
 14188     01DF  00F1               	movwf	bitWrite8@reg
 14189     01E0  3004               	movlw	4
 14190     01E1  00F3               	movwf	bitWrite8@position
 14191     01E2  01F4               	clrf	bitWrite8@value
 14192     01E3  0AF4               	incf	bitWrite8@value,f
 14193     01E4  3192  2258  3180   	fcall	_bitWrite8
 14194                           
 14195                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 630:         bitWrite8
      +                          (mode, 5, 0);
 14196     01E7  0140               	movlb	0	; select bank0
 14197     01E8  0837               	movf	setMagneticChannel@mode+1,w
 14198     01E9  00F2               	movwf	bitWrite8@reg+1
 14199     01EA  0836               	movf	setMagneticChannel@mode,w
 14200     01EB  00F1               	movwf	bitWrite8@reg
 14201     01EC  3005               	movlw	5
 14202     01ED  00F3               	movwf	bitWrite8@position
 14203     01EE  01F4               	clrf	bitWrite8@value
 14204     01EF  3192  2258  3180   	fcall	_bitWrite8
 14205                           
 14206                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 631:         bitWrite8
      +                          (mode, 6, 1);
 14207     01F2  0140               	movlb	0	; select bank0
 14208     01F3  0837               	movf	setMagneticChannel@mode+1,w
 14209     01F4  00F2               	movwf	bitWrite8@reg+1
 14210     01F5  0836               	movf	setMagneticChannel@mode,w
 14211     01F6  00F1               	movwf	bitWrite8@reg
 14212     01F7  3006               	movlw	6
 14213     01F8  00F3               	movwf	bitWrite8@position
 14214     01F9  01F4               	clrf	bitWrite8@value
 14215     01FA  0AF4               	incf	bitWrite8@value,f
 14216     01FB  3192  2258  3180   	fcall	_bitWrite8
 14217                           
 14218                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 632:         bitWrite8
      +                          (mode, 7, 0);
 14219     01FE  0140               	movlb	0	; select bank0
 14220     01FF  0837               	movf	setMagneticChannel@mode+1,w
 14221     0200  00F2               	movwf	bitWrite8@reg+1
 14222     0201  0836               	movf	setMagneticChannel@mode,w
 14223     0202  00F1               	movwf	bitWrite8@reg
 14224     0203  3007               	movlw	7
 14225     0204  00F3               	movwf	bitWrite8@position
 14226     0205  01F4               	clrf	bitWrite8@value
 14227     0206  3192  2258  3180   	fcall	_bitWrite8
 14228     0209                     l13758:
 14229                           
 14230                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 633:         writeRegi
      +                          ster(TMAG5273_REG_SENSOR_CONFIG_1, mode);
 14231     0209  0140               	movlb	0	; select bank0
 14232     020A  0836               	movf	setMagneticChannel@mode,w
 14233     020B  00A6               	movwf	writeRegister@data
 14234     020C  3002               	movlw	2
 14235     020D  319F  27F5  3180   	fcall	_writeRegister
 14236                           
 14237                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 634:     } else if (ch
      +                          annelMode == 0X6)
 14238     0210  2B74               	goto	l13796
 14239     0211                     l13760:
 14240     0211  3006               	movlw	6
 14241     0212  0635               	xorwf	setMagneticChannel@channelMode,w
 14242     0213  1D03               	btfss	3,2
 14243     0214  2A16               	goto	u10551
 14244     0215  2A17               	goto	u10550
 14245     0216                     u10551:
 14246     0216  2A4C               	goto	l13766
 14247     0217                     u10550:
 14248     0217                     l13762:
 14249                           
 14250                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 635:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 636:         bitWrite8(mode, 4, 0)
      +                          ;
 14251     0217  0837               	movf	setMagneticChannel@mode+1,w
 14252     0218  00F2               	movwf	bitWrite8@reg+1
 14253     0219  0836               	movf	setMagneticChannel@mode,w
 14254     021A  00F1               	movwf	bitWrite8@reg
 14255     021B  3004               	movlw	4
 14256     021C  00F3               	movwf	bitWrite8@position
 14257     021D  01F4               	clrf	bitWrite8@value
 14258     021E  3192  2258  3180   	fcall	_bitWrite8
 14259                           
 14260                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 637:         bitWrite8
      +                          (mode, 5, 1);
 14261     0221  0140               	movlb	0	; select bank0
 14262     0222  0837               	movf	setMagneticChannel@mode+1,w
 14263     0223  00F2               	movwf	bitWrite8@reg+1
 14264     0224  0836               	movf	setMagneticChannel@mode,w
 14265     0225  00F1               	movwf	bitWrite8@reg
 14266     0226  3005               	movlw	5
 14267     0227  00F3               	movwf	bitWrite8@position
 14268     0228  01F4               	clrf	bitWrite8@value
 14269     0229  0AF4               	incf	bitWrite8@value,f
 14270     022A  3192  2258  3180   	fcall	_bitWrite8
 14271                           
 14272                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 638:         bitWrite8
      +                          (mode, 6, 1);
 14273     022D  0140               	movlb	0	; select bank0
 14274     022E  0837               	movf	setMagneticChannel@mode+1,w
 14275     022F  00F2               	movwf	bitWrite8@reg+1
 14276     0230  0836               	movf	setMagneticChannel@mode,w
 14277     0231  00F1               	movwf	bitWrite8@reg
 14278     0232  3006               	movlw	6
 14279     0233  00F3               	movwf	bitWrite8@position
 14280     0234  01F4               	clrf	bitWrite8@value
 14281     0235  0AF4               	incf	bitWrite8@value,f
 14282     0236  3192  2258  3180   	fcall	_bitWrite8
 14283                           
 14284                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 639:         bitWrite8
      +                          (mode, 7, 0);
 14285     0239  0140               	movlb	0	; select bank0
 14286     023A  0837               	movf	setMagneticChannel@mode+1,w
 14287     023B  00F2               	movwf	bitWrite8@reg+1
 14288     023C  0836               	movf	setMagneticChannel@mode,w
 14289     023D  00F1               	movwf	bitWrite8@reg
 14290     023E  3007               	movlw	7
 14291     023F  00F3               	movwf	bitWrite8@position
 14292     0240  01F4               	clrf	bitWrite8@value
 14293     0241  3192  2258  3180   	fcall	_bitWrite8
 14294     0244                     l13764:
 14295                           
 14296                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 640:         writeRegi
      +                          ster(TMAG5273_REG_SENSOR_CONFIG_1, mode);
 14297     0244  0140               	movlb	0	; select bank0
 14298     0245  0836               	movf	setMagneticChannel@mode,w
 14299     0246  00A6               	movwf	writeRegister@data
 14300     0247  3002               	movlw	2
 14301     0248  319F  27F5  3180   	fcall	_writeRegister
 14302                           
 14303                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 641:     } else if (ch
      +                          annelMode == 0X7)
 14304     024B  2B74               	goto	l13796
 14305     024C                     l13766:
 14306     024C  3007               	movlw	7
 14307     024D  0635               	xorwf	setMagneticChannel@channelMode,w
 14308     024E  1D03               	btfss	3,2
 14309     024F  2A51               	goto	u10561
 14310     0250  2A52               	goto	u10560
 14311     0251                     u10561:
 14312     0251  2A88               	goto	l13772
 14313     0252                     u10560:
 14314     0252                     l13768:
 14315                           
 14316                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 642:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 643:         bitWrite8(mode, 4, 1)
      +                          ;
 14317     0252  0837               	movf	setMagneticChannel@mode+1,w
 14318     0253  00F2               	movwf	bitWrite8@reg+1
 14319     0254  0836               	movf	setMagneticChannel@mode,w
 14320     0255  00F1               	movwf	bitWrite8@reg
 14321     0256  3004               	movlw	4
 14322     0257  00F3               	movwf	bitWrite8@position
 14323     0258  01F4               	clrf	bitWrite8@value
 14324     0259  0AF4               	incf	bitWrite8@value,f
 14325     025A  3192  2258  3180   	fcall	_bitWrite8
 14326                           
 14327                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 644:         bitWrite8
      +                          (mode, 5, 1);
 14328     025D  0140               	movlb	0	; select bank0
 14329     025E  0837               	movf	setMagneticChannel@mode+1,w
 14330     025F  00F2               	movwf	bitWrite8@reg+1
 14331     0260  0836               	movf	setMagneticChannel@mode,w
 14332     0261  00F1               	movwf	bitWrite8@reg
 14333     0262  3005               	movlw	5
 14334     0263  00F3               	movwf	bitWrite8@position
 14335     0264  01F4               	clrf	bitWrite8@value
 14336     0265  0AF4               	incf	bitWrite8@value,f
 14337     0266  3192  2258  3180   	fcall	_bitWrite8
 14338                           
 14339                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 645:         bitWrite8
      +                          (mode, 6, 1);
 14340     0269  0140               	movlb	0	; select bank0
 14341     026A  0837               	movf	setMagneticChannel@mode+1,w
 14342     026B  00F2               	movwf	bitWrite8@reg+1
 14343     026C  0836               	movf	setMagneticChannel@mode,w
 14344     026D  00F1               	movwf	bitWrite8@reg
 14345     026E  3006               	movlw	6
 14346     026F  00F3               	movwf	bitWrite8@position
 14347     0270  01F4               	clrf	bitWrite8@value
 14348     0271  0AF4               	incf	bitWrite8@value,f
 14349     0272  3192  2258  3180   	fcall	_bitWrite8
 14350                           
 14351                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 646:         bitWrite8
      +                          (mode, 7, 0);
 14352     0275  0140               	movlb	0	; select bank0
 14353     0276  0837               	movf	setMagneticChannel@mode+1,w
 14354     0277  00F2               	movwf	bitWrite8@reg+1
 14355     0278  0836               	movf	setMagneticChannel@mode,w
 14356     0279  00F1               	movwf	bitWrite8@reg
 14357     027A  3007               	movlw	7
 14358     027B  00F3               	movwf	bitWrite8@position
 14359     027C  01F4               	clrf	bitWrite8@value
 14360     027D  3192  2258  3180   	fcall	_bitWrite8
 14361     0280                     l13770:
 14362                           
 14363                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 647:         writeRegi
      +                          ster(TMAG5273_REG_SENSOR_CONFIG_1, mode);
 14364     0280  0140               	movlb	0	; select bank0
 14365     0281  0836               	movf	setMagneticChannel@mode,w
 14366     0282  00A6               	movwf	writeRegister@data
 14367     0283  3002               	movlw	2
 14368     0284  319F  27F5  3180   	fcall	_writeRegister
 14369                           
 14370                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 648:     } else if (ch
      +                          annelMode == 0X8)
 14371     0287  2B74               	goto	l13796
 14372     0288                     l13772:
 14373     0288  3008               	movlw	8
 14374     0289  0635               	xorwf	setMagneticChannel@channelMode,w
 14375     028A  1D03               	btfss	3,2
 14376     028B  2A8D               	goto	u10571
 14377     028C  2A8E               	goto	u10570
 14378     028D                     u10571:
 14379     028D  2AC2               	goto	l13778
 14380     028E                     u10570:
 14381     028E                     l13774:
 14382                           
 14383                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 649:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 650:         bitWrite8(mode, 4, 0)
      +                          ;
 14384     028E  0837               	movf	setMagneticChannel@mode+1,w
 14385     028F  00F2               	movwf	bitWrite8@reg+1
 14386     0290  0836               	movf	setMagneticChannel@mode,w
 14387     0291  00F1               	movwf	bitWrite8@reg
 14388     0292  3004               	movlw	4
 14389     0293  00F3               	movwf	bitWrite8@position
 14390     0294  01F4               	clrf	bitWrite8@value
 14391     0295  3192  2258  3180   	fcall	_bitWrite8
 14392                           
 14393                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 651:         bitWrite8
      +                          (mode, 5, 0);
 14394     0298  0140               	movlb	0	; select bank0
 14395     0299  0837               	movf	setMagneticChannel@mode+1,w
 14396     029A  00F2               	movwf	bitWrite8@reg+1
 14397     029B  0836               	movf	setMagneticChannel@mode,w
 14398     029C  00F1               	movwf	bitWrite8@reg
 14399     029D  3005               	movlw	5
 14400     029E  00F3               	movwf	bitWrite8@position
 14401     029F  01F4               	clrf	bitWrite8@value
 14402     02A0  3192  2258  3180   	fcall	_bitWrite8
 14403                           
 14404                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 652:         bitWrite8
      +                          (mode, 6, 0);
 14405     02A3  0140               	movlb	0	; select bank0
 14406     02A4  0837               	movf	setMagneticChannel@mode+1,w
 14407     02A5  00F2               	movwf	bitWrite8@reg+1
 14408     02A6  0836               	movf	setMagneticChannel@mode,w
 14409     02A7  00F1               	movwf	bitWrite8@reg
 14410     02A8  3006               	movlw	6
 14411     02A9  00F3               	movwf	bitWrite8@position
 14412     02AA  01F4               	clrf	bitWrite8@value
 14413     02AB  3192  2258  3180   	fcall	_bitWrite8
 14414                           
 14415                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 653:         bitWrite8
      +                          (mode, 7, 1);
 14416     02AE  0140               	movlb	0	; select bank0
 14417     02AF  0837               	movf	setMagneticChannel@mode+1,w
 14418     02B0  00F2               	movwf	bitWrite8@reg+1
 14419     02B1  0836               	movf	setMagneticChannel@mode,w
 14420     02B2  00F1               	movwf	bitWrite8@reg
 14421     02B3  3007               	movlw	7
 14422     02B4  00F3               	movwf	bitWrite8@position
 14423     02B5  01F4               	clrf	bitWrite8@value
 14424     02B6  0AF4               	incf	bitWrite8@value,f
 14425     02B7  3192  2258  3180   	fcall	_bitWrite8
 14426     02BA                     l13776:
 14427                           
 14428                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 654:         writeRegi
      +                          ster(TMAG5273_REG_SENSOR_CONFIG_1, mode);
 14429     02BA  0140               	movlb	0	; select bank0
 14430     02BB  0836               	movf	setMagneticChannel@mode,w
 14431     02BC  00A6               	movwf	writeRegister@data
 14432     02BD  3002               	movlw	2
 14433     02BE  319F  27F5  3180   	fcall	_writeRegister
 14434                           
 14435                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 655:     } else if (ch
      +                          annelMode == 0X9)
 14436     02C1  2B74               	goto	l13796
 14437     02C2                     l13778:
 14438     02C2  3009               	movlw	9
 14439     02C3  0635               	xorwf	setMagneticChannel@channelMode,w
 14440     02C4  1D03               	btfss	3,2
 14441     02C5  2AC7               	goto	u10581
 14442     02C6  2AC8               	goto	u10580
 14443     02C7                     u10581:
 14444     02C7  2AFD               	goto	l13784
 14445     02C8                     u10580:
 14446     02C8                     l13780:
 14447                           
 14448                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 656:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 657:         bitWrite8(mode, 4, 1)
      +                          ;
 14449     02C8  0837               	movf	setMagneticChannel@mode+1,w
 14450     02C9  00F2               	movwf	bitWrite8@reg+1
 14451     02CA  0836               	movf	setMagneticChannel@mode,w
 14452     02CB  00F1               	movwf	bitWrite8@reg
 14453     02CC  3004               	movlw	4
 14454     02CD  00F3               	movwf	bitWrite8@position
 14455     02CE  01F4               	clrf	bitWrite8@value
 14456     02CF  0AF4               	incf	bitWrite8@value,f
 14457     02D0  3192  2258  3180   	fcall	_bitWrite8
 14458                           
 14459                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 658:         bitWrite8
      +                          (mode, 5, 0);
 14460     02D3  0140               	movlb	0	; select bank0
 14461     02D4  0837               	movf	setMagneticChannel@mode+1,w
 14462     02D5  00F2               	movwf	bitWrite8@reg+1
 14463     02D6  0836               	movf	setMagneticChannel@mode,w
 14464     02D7  00F1               	movwf	bitWrite8@reg
 14465     02D8  3005               	movlw	5
 14466     02D9  00F3               	movwf	bitWrite8@position
 14467     02DA  01F4               	clrf	bitWrite8@value
 14468     02DB  3192  2258  3180   	fcall	_bitWrite8
 14469                           
 14470                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 659:         bitWrite8
      +                          (mode, 6, 0);
 14471     02DE  0140               	movlb	0	; select bank0
 14472     02DF  0837               	movf	setMagneticChannel@mode+1,w
 14473     02E0  00F2               	movwf	bitWrite8@reg+1
 14474     02E1  0836               	movf	setMagneticChannel@mode,w
 14475     02E2  00F1               	movwf	bitWrite8@reg
 14476     02E3  3006               	movlw	6
 14477     02E4  00F3               	movwf	bitWrite8@position
 14478     02E5  01F4               	clrf	bitWrite8@value
 14479     02E6  3192  2258  3180   	fcall	_bitWrite8
 14480                           
 14481                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 660:         bitWrite8
      +                          (mode, 7, 1);
 14482     02E9  0140               	movlb	0	; select bank0
 14483     02EA  0837               	movf	setMagneticChannel@mode+1,w
 14484     02EB  00F2               	movwf	bitWrite8@reg+1
 14485     02EC  0836               	movf	setMagneticChannel@mode,w
 14486     02ED  00F1               	movwf	bitWrite8@reg
 14487     02EE  3007               	movlw	7
 14488     02EF  00F3               	movwf	bitWrite8@position
 14489     02F0  01F4               	clrf	bitWrite8@value
 14490     02F1  0AF4               	incf	bitWrite8@value,f
 14491     02F2  3192  2258  3180   	fcall	_bitWrite8
 14492     02F5                     l13782:
 14493                           
 14494                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 661:         writeRegi
      +                          ster(TMAG5273_REG_SENSOR_CONFIG_1, mode);
 14495     02F5  0140               	movlb	0	; select bank0
 14496     02F6  0836               	movf	setMagneticChannel@mode,w
 14497     02F7  00A6               	movwf	writeRegister@data
 14498     02F8  3002               	movlw	2
 14499     02F9  319F  27F5  3180   	fcall	_writeRegister
 14500                           
 14501                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 662:     } else if (ch
      +                          annelMode == 0XA)
 14502     02FC  2B74               	goto	l13796
 14503     02FD                     l13784:
 14504     02FD  300A               	movlw	10
 14505     02FE  0635               	xorwf	setMagneticChannel@channelMode,w
 14506     02FF  1D03               	btfss	3,2
 14507     0300  2B02               	goto	u10591
 14508     0301  2B03               	goto	u10590
 14509     0302                     u10591:
 14510     0302  2B38               	goto	l13790
 14511     0303                     u10590:
 14512     0303                     l13786:
 14513                           
 14514                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 663:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 664:         bitWrite8(mode, 4, 0)
      +                          ;
 14515     0303  0837               	movf	setMagneticChannel@mode+1,w
 14516     0304  00F2               	movwf	bitWrite8@reg+1
 14517     0305  0836               	movf	setMagneticChannel@mode,w
 14518     0306  00F1               	movwf	bitWrite8@reg
 14519     0307  3004               	movlw	4
 14520     0308  00F3               	movwf	bitWrite8@position
 14521     0309  01F4               	clrf	bitWrite8@value
 14522     030A  3192  2258  3180   	fcall	_bitWrite8
 14523                           
 14524                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 665:         bitWrite8
      +                          (mode, 5, 1);
 14525     030D  0140               	movlb	0	; select bank0
 14526     030E  0837               	movf	setMagneticChannel@mode+1,w
 14527     030F  00F2               	movwf	bitWrite8@reg+1
 14528     0310  0836               	movf	setMagneticChannel@mode,w
 14529     0311  00F1               	movwf	bitWrite8@reg
 14530     0312  3005               	movlw	5
 14531     0313  00F3               	movwf	bitWrite8@position
 14532     0314  01F4               	clrf	bitWrite8@value
 14533     0315  0AF4               	incf	bitWrite8@value,f
 14534     0316  3192  2258  3180   	fcall	_bitWrite8
 14535                           
 14536                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 666:         bitWrite8
      +                          (mode, 6, 0);
 14537     0319  0140               	movlb	0	; select bank0
 14538     031A  0837               	movf	setMagneticChannel@mode+1,w
 14539     031B  00F2               	movwf	bitWrite8@reg+1
 14540     031C  0836               	movf	setMagneticChannel@mode,w
 14541     031D  00F1               	movwf	bitWrite8@reg
 14542     031E  3006               	movlw	6
 14543     031F  00F3               	movwf	bitWrite8@position
 14544     0320  01F4               	clrf	bitWrite8@value
 14545     0321  3192  2258  3180   	fcall	_bitWrite8
 14546                           
 14547                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 667:         bitWrite8
      +                          (mode, 7, 1);
 14548     0324  0140               	movlb	0	; select bank0
 14549     0325  0837               	movf	setMagneticChannel@mode+1,w
 14550     0326  00F2               	movwf	bitWrite8@reg+1
 14551     0327  0836               	movf	setMagneticChannel@mode,w
 14552     0328  00F1               	movwf	bitWrite8@reg
 14553     0329  3007               	movlw	7
 14554     032A  00F3               	movwf	bitWrite8@position
 14555     032B  01F4               	clrf	bitWrite8@value
 14556     032C  0AF4               	incf	bitWrite8@value,f
 14557     032D  3192  2258  3180   	fcall	_bitWrite8
 14558     0330                     l13788:
 14559                           
 14560                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 668:         writeRegi
      +                          ster(TMAG5273_REG_SENSOR_CONFIG_1, mode);
 14561     0330  0140               	movlb	0	; select bank0
 14562     0331  0836               	movf	setMagneticChannel@mode,w
 14563     0332  00A6               	movwf	writeRegister@data
 14564     0333  3002               	movlw	2
 14565     0334  319F  27F5  3180   	fcall	_writeRegister
 14566                           
 14567                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 669:     } else if (ch
      +                          annelMode == 0XB)
 14568     0337  2B74               	goto	l13796
 14569     0338                     l13790:
 14570     0338  300B               	movlw	11
 14571     0339  0635               	xorwf	setMagneticChannel@channelMode,w
 14572     033A  1D03               	btfss	3,2
 14573     033B  2B3D               	goto	u10601
 14574     033C  2B3E               	goto	u10600
 14575     033D                     u10601:
 14576     033D  2B74               	goto	l783
 14577     033E                     u10600:
 14578     033E                     l13792:
 14579                           
 14580                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 670:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 671:         bitWrite8(mode, 4, 1)
      +                          ;
 14581     033E  0837               	movf	setMagneticChannel@mode+1,w
 14582     033F  00F2               	movwf	bitWrite8@reg+1
 14583     0340  0836               	movf	setMagneticChannel@mode,w
 14584     0341  00F1               	movwf	bitWrite8@reg
 14585     0342  3004               	movlw	4
 14586     0343  00F3               	movwf	bitWrite8@position
 14587     0344  01F4               	clrf	bitWrite8@value
 14588     0345  0AF4               	incf	bitWrite8@value,f
 14589     0346  3192  2258  3180   	fcall	_bitWrite8
 14590                           
 14591                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 672:         bitWrite8
      +                          (mode, 5, 1);
 14592     0349  0140               	movlb	0	; select bank0
 14593     034A  0837               	movf	setMagneticChannel@mode+1,w
 14594     034B  00F2               	movwf	bitWrite8@reg+1
 14595     034C  0836               	movf	setMagneticChannel@mode,w
 14596     034D  00F1               	movwf	bitWrite8@reg
 14597     034E  3005               	movlw	5
 14598     034F  00F3               	movwf	bitWrite8@position
 14599     0350  01F4               	clrf	bitWrite8@value
 14600     0351  0AF4               	incf	bitWrite8@value,f
 14601     0352  3192  2258  3180   	fcall	_bitWrite8
 14602                           
 14603                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 673:         bitWrite8
      +                          (mode, 6, 0);
 14604     0355  0140               	movlb	0	; select bank0
 14605     0356  0837               	movf	setMagneticChannel@mode+1,w
 14606     0357  00F2               	movwf	bitWrite8@reg+1
 14607     0358  0836               	movf	setMagneticChannel@mode,w
 14608     0359  00F1               	movwf	bitWrite8@reg
 14609     035A  3006               	movlw	6
 14610     035B  00F3               	movwf	bitWrite8@position
 14611     035C  01F4               	clrf	bitWrite8@value
 14612     035D  3192  2258  3180   	fcall	_bitWrite8
 14613                           
 14614                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 674:         bitWrite8
      +                          (mode, 7, 1);
 14615     0360  0140               	movlb	0	; select bank0
 14616     0361  0837               	movf	setMagneticChannel@mode+1,w
 14617     0362  00F2               	movwf	bitWrite8@reg+1
 14618     0363  0836               	movf	setMagneticChannel@mode,w
 14619     0364  00F1               	movwf	bitWrite8@reg
 14620     0365  3007               	movlw	7
 14621     0366  00F3               	movwf	bitWrite8@position
 14622     0367  01F4               	clrf	bitWrite8@value
 14623     0368  0AF4               	incf	bitWrite8@value,f
 14624     0369  3192  2258  3180   	fcall	_bitWrite8
 14625     036C                     l13794:
 14626                           
 14627                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 675:         writeRegi
      +                          ster(TMAG5273_REG_SENSOR_CONFIG_1, mode);
 14628     036C  0140               	movlb	0	; select bank0
 14629     036D  0836               	movf	setMagneticChannel@mode,w
 14630     036E  00A6               	movwf	writeRegister@data
 14631     036F  3002               	movlw	2
 14632     0370  319F  27F5  3180   	fcall	_writeRegister
 14633     0373  2B74               	goto	l13796
 14634     0374                     l783:
 14635     0374                     l13796:
 14636                           
 14637                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 678:     return getErr
      +                          or();;	Return value of _setMagneticChannel is never used
 14638     0374  318D  2549  3180   	fcall	_getError
 14639     0377                     l789:
 14640     0377  0008               	return
 14641     0378                     __end_of_setMagneticChannel:
 14642                           
 14643                           	psect	text7
 14644     1FF5                     __ptext7:	
 14645 ;; *************** function _writeRegister *****************
 14646 ;; Defined at:
 14647 ;;		line 183 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 14648 ;; Parameters:    Size  Location     Type
 14649 ;;  regAddress      1    wreg     unsigned char 
 14650 ;;  data            1    6[BANK0 ] unsigned char 
 14651 ;; Auto vars:     Size  Location     Type
 14652 ;;  regAddress      1    7[BANK0 ] unsigned char 
 14653 ;; Return value:  Size  Location     Type
 14654 ;;                  1    wreg      unsigned char 
 14655 ;; Registers used:
 14656 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14657 ;; Tracked objects:
 14658 ;;		On entry : 0/0
 14659 ;;		On exit  : 0/0
 14660 ;;		Unchanged: 0/0
 14661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14662 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14663 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14665 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14666 ;;Total ram usage:        2 bytes
 14667 ;; Hardware stack levels used: 1
 14668 ;; Hardware stack levels required when called: 13
 14669 ;; This function calls:
 14670 ;;		_i2c_write1ByteRegister
 14671 ;; This function is called by:
 14672 ;;		_setOperatingMode
 14673 ;;		_setMagneticChannel
 14674 ;;		_setXYAxisRange
 14675 ;;		_setZAxisRange
 14676 ;;		_setTemperatureEn
 14677 ;;		_setupWakeUpAndSleep
 14678 ;;		_setCRCMode
 14679 ;;		_setMagTemp
 14680 ;;		_setConvAvg
 14681 ;;		_setIntThreshold
 14682 ;;		_setLowPower
 14683 ;;		_setGlitchFilter
 14684 ;;		_setTriggerMode
 14685 ;;		_setSleeptime
 14686 ;;		_setMagDir
 14687 ;;		_setMagnitudeGain
 14688 ;;		_setMagneticGain
 14689 ;;		_setMagneticOffset1
 14690 ;;		_setMagneticOffset2
 14691 ;;		_setAngleEn
 14692 ;;		_setXThreshold
 14693 ;;		_setYThreshold
 14694 ;;		_setZThreshold
 14695 ;;		_setTemperatureThreshold
 14696 ;;		_setInterruptResult
 14697 ;;		_setThresholdEn
 14698 ;;		_setIntPinState
 14699 ;;		_setInterruptMode
 14700 ;;		_setMaskInterrupt
 14701 ;;		_setI2CAddress
 14702 ;;		_setI2CAddressEN
 14703 ;; This function uses a non-reentrant model
 14704 ;;
 14705                           
 14706     1FF5                     _writeRegister:	
 14707                           ;psect for function _writeRegister
 14708                           
 14709                           
 14710                           ;incstack = 0
 14711                           ; Regs used in _writeRegister: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14712                           ;writeRegister@regAddress stored from wreg
 14713     1FF5  0140               	movlb	0	; select bank0
 14714     1FF6  00A7               	movwf	writeRegister@regAddress
 14715     1FF7                     l13572:
 14716                           
 14717                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 184:     i2c_write1Byt
      +                          eRegister(0X22, regAddress, data);
 14718     1FF7  0827               	movf	writeRegister@regAddress,w
 14719     1FF8  00A4               	movwf	i2c_write1ByteRegister@reg
 14720     1FF9  0826               	movf	writeRegister@data,w
 14721     1FFA  00A5               	movwf	i2c_write1ByteRegister@data
 14722     1FFB  3022               	movlw	34
 14723     1FFC  3196  26F5  319F   	fcall	_i2c_write1ByteRegister
 14724     1FFF                     l682:
 14725     1FFF  0008               	return
 14726     2000                     __end_of_writeRegister:
 14727                           
 14728                           	psect	text8
 14729     16F5                     __ptext8:	
 14730 ;; *************** function _i2c_write1ByteRegister *****************
 14731 ;; Defined at:
 14732 ;;		line 51 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 14733 ;; Parameters:    Size  Location     Type
 14734 ;;  address         1    wreg     unsigned char 
 14735 ;;  reg             1    4[BANK0 ] unsigned char 
 14736 ;;  data            1    5[BANK0 ] unsigned char 
 14737 ;; Auto vars:     Size  Location     Type
 14738 ;;  address         1   11[COMMON] unsigned char 
 14739 ;; Return value:  Size  Location     Type
 14740 ;;                  1    wreg      void 
 14741 ;; Registers used:
 14742 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14743 ;; Tracked objects:
 14744 ;;		On entry : 0/0
 14745 ;;		On exit  : 0/0
 14746 ;;		Unchanged: 0/0
 14747 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14748 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14749 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14750 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14751 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14752 ;;Total ram usage:        3 bytes
 14753 ;; Hardware stack levels used: 1
 14754 ;; Hardware stack levels required when called: 12
 14755 ;; This function calls:
 14756 ;;		_I2C1_Close
 14757 ;;		_I2C1_MasterWrite
 14758 ;;		_I2C1_Open
 14759 ;;		_I2C1_SetAddressNackCallback
 14760 ;;		_I2C1_SetBuffer
 14761 ;;		_I2C1_SetDataCompleteCallback
 14762 ;; This function is called by:
 14763 ;;		_writeRegister
 14764 ;;		_BMA253_Initialize
 14765 ;; This function uses a non-reentrant model
 14766 ;;
 14767                           
 14768     16F5                     _i2c_write1ByteRegister:	
 14769                           ;psect for function _i2c_write1ByteRegister
 14770                           
 14771                           
 14772                           ;incstack = 0
 14773                           ; Regs used in _i2c_write1ByteRegister: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14774                           ;i2c_write1ByteRegister@address stored from wreg
 14775     16F5  00FB               	movwf	i2c_write1ByteRegister@address
 14776     16F6                     l13398:
 14777     16F6                     l13400:	
 14778                           ;mcc_generated_files/drivers/i2c_simple_master.c: 51: void i2c_write1ByteRegister(i2c1_a
      +                          ddress_t address, uint8_t reg, uint8_t data);mcc_generated_files/drivers/i2c_simple_mast
      +                          er.c: 52: {;mcc_generated_files/drivers/i2c_simple_master.c: 53:     while(!I2C1_Open(ad
      +                          dress));
 14779                           
 14780     16F6  087B               	movf	i2c_write1ByteRegister@address,w
 14781     16F7  3197  275C  3196   	fcall	_I2C1_Open
 14782     16FA  3A00               	xorlw	0
 14783     16FB  1903               	skipnz
 14784     16FC  2EFE               	goto	u10101
 14785     16FD  2EFF               	goto	u10100
 14786     16FE                     u10101:
 14787     16FE  2EF6               	goto	l13400
 14788     16FF                     u10100:
 14789     16FF                     l13402:
 14790                           
 14791                           ;mcc_generated_files/drivers/i2c_simple_master.c: 54:     I2C1_SetDataCompleteCallback(w
      +                          r1RegCompleteHandler,&data);
 14792     16FF  30E8               	movlw	low _wr1RegCompleteHandler
 14793     1700  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 14794     1701  3010               	movlw	high _wr1RegCompleteHandler
 14795     1702  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 14796     1703  3025               	movlw	(low (i2c_write1ByteRegister@data| 0))& (0+255)
 14797     1704  00F7               	movwf	I2C1_SetDataCompleteCallback@ptr
 14798     1705  319F  27C9  3196   	fcall	_I2C1_SetDataCompleteCallback
 14799     1708                     l13404:
 14800                           
 14801                           ;mcc_generated_files/drivers/i2c_simple_master.c: 55:     I2C1_SetBuffer(&reg,1);
 14802     1708  3024               	movlw	low i2c_write1ByteRegister@reg
 14803     1709  00F1               	movwf	I2C1_SetBuffer@buffer
 14804     170A  3000               	movlw	high i2c_write1ByteRegister@reg
 14805     170B  00F2               	movwf	I2C1_SetBuffer@buffer+1
 14806     170C  3001               	movlw	1
 14807     170D  00F3               	movwf	I2C1_SetBuffer@bufferSize
 14808     170E  3000               	movlw	0
 14809     170F  00F4               	movwf	I2C1_SetBuffer@bufferSize+1
 14810     1710  3190  2084  3196   	fcall	_I2C1_SetBuffer
 14811     1713                     l13406:
 14812                           
 14813                           ;mcc_generated_files/drivers/i2c_simple_master.c: 56:     I2C1_SetAddressNackCallback(((
      +                          void*)0),((void*)0));
 14814     1713  3000               	movlw	0
 14815     1714  00F5               	movwf	I2C1_SetAddressNackCallback@cb
 14816     1715  00F6               	movwf	I2C1_SetAddressNackCallback@cb+1
 14817     1716  3000               	movlw	0
 14818     1717  00F7               	movwf	I2C1_SetAddressNackCallback@ptr
 14819     1718  00F8               	movwf	I2C1_SetAddressNackCallback@ptr+1
 14820     1719  319F  27D4  3196   	fcall	_I2C1_SetAddressNackCallback
 14821     171C                     l13408:
 14822                           
 14823                           ;mcc_generated_files/drivers/i2c_simple_master.c: 57:     I2C1_MasterWrite();
 14824     171C  319E  26D1  3196   	fcall	_I2C1_MasterWrite
 14825     171F                     l13410:	
 14826                           ;mcc_generated_files/drivers/i2c_simple_master.c: 58:     while(I2C1_BUSY == I2C1_Close(
      +                          ));
 14827                           
 14828     171F  3192  2287  3196   	fcall	_I2C1_Close
 14829     1722  3A01               	xorlw	1
 14830     1723  1903               	skipnz
 14831     1724  2F26               	goto	u10111
 14832     1725  2F27               	goto	u10110
 14833     1726                     u10111:
 14834     1726  2F1F               	goto	l13410
 14835     1727                     u10110:
 14836     1727                     l510:
 14837     1727  0008               	return
 14838     1728                     __end_of_i2c_write1ByteRegister:
 14839                           
 14840                           	psect	text9
 14841     0D49                     __ptext9:	
 14842 ;; *************** function _getError *****************
 14843 ;; Defined at:
 14844 ;;		line 2313 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 14845 ;; Parameters:    Size  Location     Type
 14846 ;;		None
 14847 ;; Auto vars:     Size  Location     Type
 14848 ;;  statusReg       1   18[BANK0 ] unsigned char 
 14849 ;;  oscillatorEr    1   17[BANK0 ] unsigned char 
 14850 ;;  intPinError     1   16[BANK0 ] unsigned char 
 14851 ;;  otpCrcError     1   15[BANK0 ] unsigned char 
 14852 ;;  undervoltage    1   14[BANK0 ] unsigned char 
 14853 ;; Return value:  Size  Location     Type
 14854 ;;                  1    wreg      char 
 14855 ;; Registers used:
 14856 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14857 ;; Tracked objects:
 14858 ;;		On entry : 0/0
 14859 ;;		On exit  : 0/0
 14860 ;;		Unchanged: 0/0
 14861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14862 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14863 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14864 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14865 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14866 ;;Total ram usage:        7 bytes
 14867 ;; Hardware stack levels used: 1
 14868 ;; Hardware stack levels required when called: 15
 14869 ;; This function calls:
 14870 ;;		_bitRead8
 14871 ;;		_getDeviceStatus
 14872 ;; This function is called by:
 14873 ;;		_begin
 14874 ;;		_setOperatingMode
 14875 ;;		_setMagneticChannel
 14876 ;;		_setXYAxisRange
 14877 ;;		_setZAxisRange
 14878 ;;		_setTemperatureEn
 14879 ;;		_setupWakeUpAndSleep
 14880 ;;		_readWakeUpAndSleepData
 14881 ;;		_setCRCMode
 14882 ;;		_setMagTemp
 14883 ;;		_setConvAvg
 14884 ;;		_setReadMode
 14885 ;;		_setIntThreshold
 14886 ;;		_setLowPower
 14887 ;;		_setGlitchFilter
 14888 ;;		_setTriggerMode
 14889 ;;		_setSleeptime
 14890 ;;		_setMagDir
 14891 ;;		_setMagnitudeGain
 14892 ;;		_setMagneticGain
 14893 ;;		_setMagneticOffset1
 14894 ;;		_setMagneticOffset2
 14895 ;;		_setAngleEn
 14896 ;;		_setXThreshold
 14897 ;;		_setYThreshold
 14898 ;;		_setZThreshold
 14899 ;;		_setTemperatureThreshold
 14900 ;;		_setInterruptResult
 14901 ;;		_setThresholdEn
 14902 ;;		_setIntPinState
 14903 ;;		_setInterruptMode
 14904 ;;		_setMaskInterrupt
 14905 ;;		_setI2CAddress
 14906 ;;		_setI2CAddressEN
 14907 ;;		_setOscillatorError
 14908 ;; This function uses a non-reentrant model
 14909 ;;
 14910                           
 14911     0D49                     _getError:	
 14912                           ;psect for function _getError
 14913                           
 14914     0D49                     l13538:	
 14915                           ;incstack = 0
 14916 ;; hardware stack exceeded
 14917                           ; Regs used in _getError: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14918                           
 14919                           
 14920                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2315:     uint8_t stat
      +                          usReg = getDeviceStatus();
 14921     0D49  319F  2753  318D   	fcall	_getDeviceStatus
 14922     0D4C  0140               	movlb	0	; select bank0
 14923     0D4D  00B2               	movwf	getError@statusReg
 14924     0D4E                     l13540:
 14925                           
 14926                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2316:     uint8_t unde
      +                          rvoltageError = bitRead8(statusReg, 0);
 14927     0D4E  0832               	movf	getError@statusReg,w
 14928     0D4F  00AC               	movwf	??_getError
 14929     0D50  01AD               	clrf	??_getError+1
 14930     0D51  082C               	movf	??_getError,w
 14931     0D52  00F1               	movwf	bitRead8@reg
 14932     0D53  082D               	movf	??_getError+1,w
 14933     0D54  00F2               	movwf	bitRead8@reg+1
 14934     0D55  01F3               	clrf	bitRead8@position
 14935     0D56  3192  2241  318D   	fcall	_bitRead8
 14936     0D59  0140               	movlb	0	; select bank0
 14937     0D5A  00AE               	movwf	getError@undervoltageError
 14938     0D5B                     l13542:
 14939                           
 14940                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2317:     uint8_t otpC
      +                          rcError = bitRead8(statusReg, 1);
 14941     0D5B  0832               	movf	getError@statusReg,w
 14942     0D5C  00AC               	movwf	??_getError
 14943     0D5D  01AD               	clrf	??_getError+1
 14944     0D5E  082C               	movf	??_getError,w
 14945     0D5F  00F1               	movwf	bitRead8@reg
 14946     0D60  082D               	movf	??_getError+1,w
 14947     0D61  00F2               	movwf	bitRead8@reg+1
 14948     0D62  01F3               	clrf	bitRead8@position
 14949     0D63  0AF3               	incf	bitRead8@position,f
 14950     0D64  3192  2241  318D   	fcall	_bitRead8
 14951     0D67  0140               	movlb	0	; select bank0
 14952     0D68  00AF               	movwf	getError@otpCrcError
 14953     0D69                     l13544:
 14954                           
 14955                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2318:     uint8_t intP
      +                          inError = bitRead8(statusReg, 2);
 14956     0D69  0832               	movf	getError@statusReg,w
 14957     0D6A  00AC               	movwf	??_getError
 14958     0D6B  01AD               	clrf	??_getError+1
 14959     0D6C  082C               	movf	??_getError,w
 14960     0D6D  00F1               	movwf	bitRead8@reg
 14961     0D6E  082D               	movf	??_getError+1,w
 14962     0D6F  00F2               	movwf	bitRead8@reg+1
 14963     0D70  3002               	movlw	2
 14964     0D71  00F3               	movwf	bitRead8@position
 14965     0D72  3192  2241  318D   	fcall	_bitRead8
 14966     0D75  0140               	movlb	0	; select bank0
 14967     0D76  00B0               	movwf	getError@intPinError
 14968     0D77                     l13546:
 14969                           
 14970                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2319:     uint8_t osci
      +                          llatorError = bitRead8(statusReg, 3);
 14971     0D77  0832               	movf	getError@statusReg,w
 14972     0D78  00AC               	movwf	??_getError
 14973     0D79  01AD               	clrf	??_getError+1
 14974     0D7A  082C               	movf	??_getError,w
 14975     0D7B  00F1               	movwf	bitRead8@reg
 14976     0D7C  082D               	movf	??_getError+1,w
 14977     0D7D  00F2               	movwf	bitRead8@reg+1
 14978     0D7E  3003               	movlw	3
 14979     0D7F  00F3               	movwf	bitRead8@position
 14980     0D80  3192  2241  318D   	fcall	_bitRead8
 14981     0D83  0140               	movlb	0	; select bank0
 14982     0D84  00B1               	movwf	getError@oscillatorError
 14983     0D85                     l13548:
 14984                           
 14985                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2322:     if ((undervo
      +                          ltageError != 0) && (otpCrcError != 0) && (intPinError != 0) && (oscillatorError != 0)) 
      +                          {
 14986     0D85  082E               	movf	getError@undervoltageError,w
 14987     0D86  1903               	btfsc	3,2
 14988     0D87  2D89               	goto	u10291
 14989     0D88  2D8A               	goto	u10290
 14990     0D89                     u10291:
 14991     0D89  2D9B               	goto	l13562
 14992     0D8A                     u10290:
 14993     0D8A                     l13550:
 14994     0D8A  082F               	movf	getError@otpCrcError,w
 14995     0D8B  1903               	btfsc	3,2
 14996     0D8C  2D8E               	goto	u10301
 14997     0D8D  2D8F               	goto	u10300
 14998     0D8E                     u10301:
 14999     0D8E  2D9B               	goto	l13562
 15000     0D8F                     u10300:
 15001     0D8F                     l13552:
 15002     0D8F  0830               	movf	getError@intPinError,w
 15003     0D90  1903               	btfsc	3,2
 15004     0D91  2D93               	goto	u10311
 15005     0D92  2D94               	goto	u10310
 15006     0D93                     u10311:
 15007     0D93  2D9B               	goto	l13562
 15008     0D94                     u10310:
 15009     0D94                     l13554:
 15010     0D94  0831               	movf	getError@oscillatorError,w
 15011     0D95  1903               	btfsc	3,2
 15012     0D96  2D98               	goto	u10321
 15013     0D97  2D99               	goto	u10320
 15014     0D98                     u10321:
 15015     0D98  2D9B               	goto	l13562
 15016     0D99                     u10320:
 15017     0D99                     l13556:
 15018                           
 15019                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2323:         return -
      +                          1;
 15020     0D99  30FF               	movlw	255
 15021     0D9A  2D9C               	goto	l1183
 15022     0D9B                     l13562:
 15023                           
 15024                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2325:         return 0
      +                          ;
 15025     0D9B  3000               	movlw	0
 15026     0D9C                     l1183:
 15027     0D9C  0008               	return
 15028     0D9D                     __end_of_getError:
 15029                           
 15030                           	psect	text10
 15031     1F53                     __ptext10:	
 15032 ;; *************** function _getDeviceStatus *****************
 15033 ;; Defined at:
 15034 ;;		line 2299 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 15035 ;; Parameters:    Size  Location     Type
 15036 ;;		None
 15037 ;; Auto vars:     Size  Location     Type
 15038 ;;  deviceStatus    1   11[COMMON] unsigned char 
 15039 ;; Return value:  Size  Location     Type
 15040 ;;                  1    wreg      unsigned char 
 15041 ;; Registers used:
 15042 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15043 ;; Tracked objects:
 15044 ;;		On entry : 0/0
 15045 ;;		On exit  : 0/0
 15046 ;;		Unchanged: 0/0
 15047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15048 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15049 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15050 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15051 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15052 ;;Total ram usage:        1 bytes
 15053 ;; Hardware stack levels used: 1
 15054 ;; Hardware stack levels required when called: 14
 15055 ;; This function calls:
 15056 ;;		_readRegister
 15057 ;; This function is called by:
 15058 ;;		_getError
 15059 ;; This function uses a non-reentrant model
 15060 ;;
 15061                           
 15062     1F53                     _getDeviceStatus:	
 15063                           ;psect for function _getDeviceStatus
 15064                           
 15065     1F53                     l13446:	
 15066                           ;incstack = 0
 15067 ;; hardware stack exceeded
 15068                           ; Regs used in _getDeviceStatus: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15069                           
 15070                           
 15071                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2301:     uint8_t devi
      +                          ceStatusReg = readRegister(TMAG5273_REG_DEVICE_STATUS);
 15072     1F53  301C               	movlw	28
 15073     1F54  3190  2025  319F   	fcall	_readRegister
 15074     1F57  00FB               	movwf	getDeviceStatus@deviceStatusReg
 15075     1F58                     l13448:
 15076                           
 15077                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2303:     return devic
      +                          eStatusReg;
 15078     1F58  087B               	movf	getDeviceStatus@deviceStatusReg,w
 15079     1F59                     l1179:
 15080     1F59  0008               	return
 15081     1F5A                     __end_of_getDeviceStatus:
 15082                           
 15083                           	psect	text11
 15084     1258                     __ptext11:	
 15085 ;; *************** function _bitWrite8 *****************
 15086 ;; Defined at:
 15087 ;;		line 2529 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 15088 ;; Parameters:    Size  Location     Type
 15089 ;;  reg             2    1[COMMON] PTR unsigned char 
 15090 ;;		 -> RAM(8192), number(1), 
 15091 ;;  position        1    3[COMMON] unsigned char 
 15092 ;;  value           1    4[COMMON] unsigned char 
 15093 ;; Auto vars:     Size  Location     Type
 15094 ;;  mask            1    6[COMMON] unsigned char 
 15095 ;; Return value:  Size  Location     Type
 15096 ;;                  1    wreg      void 
 15097 ;; Registers used:
 15098 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 15099 ;; Tracked objects:
 15100 ;;		On entry : 0/0
 15101 ;;		On exit  : 0/0
 15102 ;;		Unchanged: 0/0
 15103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15104 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15105 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15106 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15107 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15108 ;;Total ram usage:        6 bytes
 15109 ;; Hardware stack levels used: 1
 15110 ;; Hardware stack levels required when called: 4
 15111 ;; This function calls:
 15112 ;;		Nothing
 15113 ;; This function is called by:
 15114 ;;		_begin
 15115 ;;		_setOperatingMode
 15116 ;;		_setMagneticChannel
 15117 ;;		_setXYAxisRange
 15118 ;;		_setZAxisRange
 15119 ;;		_setTemperatureEn
 15120 ;;		_setCRCMode
 15121 ;;		_setMagTemp
 15122 ;;		_setConvAvg
 15123 ;;		_setReadMode
 15124 ;;		_setIntThreshold
 15125 ;;		_setLowPower
 15126 ;;		_setGlitchFilter
 15127 ;;		_setTriggerMode
 15128 ;;		_setSleeptime
 15129 ;;		_setMagDir
 15130 ;;		_setMagnitudeGain
 15131 ;;		_setAngleEn
 15132 ;;		_setInterruptResult
 15133 ;;		_setThresholdEn
 15134 ;;		_setIntPinState
 15135 ;;		_setMaskInterrupt
 15136 ;;		_setI2CAddressEN
 15137 ;;		_setOscillatorError
 15138 ;; This function uses a non-reentrant model
 15139 ;;
 15140                           
 15141     1258                     _bitWrite8:	
 15142                           ;psect for function _bitWrite8
 15143                           
 15144     1258                     l13532:	
 15145                           ;incstack = 0
 15146                           ; Regs used in _bitWrite8: [wreg+fsr1l+fsr1h+status,2+status,0]
 15147                           
 15148     1258                     l13534:
 15149                           
 15150                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2531:     mask = value
      +                           << position;
 15151     1258  0874               	movf	bitWrite8@value,w
 15152     1259  00F5               	movwf	??_bitWrite8
 15153     125A  0A73               	incf	bitWrite8@position,w
 15154     125B  2A5D               	goto	u10284
 15155     125C                     u10285:
 15156     125C  35F5               	lslf	??_bitWrite8,f
 15157     125D                     u10284:
 15158     125D  0B89               	decfsz	9,f
 15159     125E  2A5C               	goto	u10285
 15160     125F  0875               	movf	??_bitWrite8,w
 15161     1260  00F6               	movwf	bitWrite8@mask
 15162     1261                     l13536:
 15163                           
 15164                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2532:     *reg = *reg 
      +                          | mask;
 15165     1261  0871               	movf	bitWrite8@reg,w
 15166     1262  0086               	movwf	6
 15167     1263  0872               	movf	bitWrite8@reg+1,w
 15168     1264  0087               	movwf	7
 15169     1265  0801               	movf	1,w
 15170     1266  0476               	iorwf	bitWrite8@mask,w
 15171     1267  00F5               	movwf	??_bitWrite8
 15172     1268  0871               	movf	bitWrite8@reg,w
 15173     1269  0086               	movwf	6
 15174     126A  0872               	movf	bitWrite8@reg+1,w
 15175     126B  0087               	movwf	7
 15176     126C  0875               	movf	??_bitWrite8,w
 15177     126D  0081               	movwf	1
 15178     126E                     l1227:
 15179     126E  0008               	return
 15180     126F                     __end_of_bitWrite8:
 15181                           
 15182                           	psect	text12
 15183     129F                     __ptext12:	
 15184 ;; *************** function _isConnected *****************
 15185 ;; Defined at:
 15186 ;;		line 121 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 15187 ;; Parameters:    Size  Location     Type
 15188 ;;		None
 15189 ;; Auto vars:     Size  Location     Type
 15190 ;;		None
 15191 ;; Return value:  Size  Location     Type
 15192 ;;                  1    wreg      char 
 15193 ;; Registers used:
 15194 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15195 ;; Tracked objects:
 15196 ;;		On entry : 0/0
 15197 ;;		On exit  : 0/0
 15198 ;;		Unchanged: 0/0
 15199 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15200 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15201 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15202 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15203 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15204 ;;Total ram usage:        0 bytes
 15205 ;; Hardware stack levels used: 1
 15206 ;; Hardware stack levels required when called: 14
 15207 ;; This function calls:
 15208 ;;		_TMAG5273_GetManufacture
 15209 ;; This function is called by:
 15210 ;;		_begin
 15211 ;; This function uses a non-reentrant model
 15212 ;;
 15213                           
 15214     129F                     _isConnected:	
 15215                           ;psect for function _isConnected
 15216                           
 15217     129F                     l13708:	
 15218                           ;incstack = 0
 15219                           ; Regs used in _isConnected: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15220                           
 15221                           
 15222                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 129:     manufactureId
      +                           = TMAG5273_GetManufacture();
 15223     129F  3192  22E9  3192   	fcall	_TMAG5273_GetManufacture
 15224     12A2  0140               	movlb	0	; select bank0
 15225     12A3  082E               	movf	?_TMAG5273_GetManufacture+1,w
 15226     12A4  0141               	movlb	1	; select bank1
 15227     12A5  00DF               	movwf	(_manufactureId+1)^(0+128)
 15228     12A6  0140               	movlb	0	; select bank0
 15229     12A7  082D               	movf	?_TMAG5273_GetManufacture,w
 15230     12A8  0141               	movlb	1	; select bank1
 15231     12A9  00DE               	movwf	_manufactureId^(0+128)
 15232     12AA                     l13710:
 15233                           
 15234                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 131:     if (manufactu
      +                          reId != 0x5449) {
 15235     12AA  3049               	movlw	73
 15236     12AB  065E               	xorwf	_manufactureId^(0+128),w
 15237     12AC  3054               	movlw	84
 15238     12AD  1903               	skipnz
 15239     12AE  065F               	xorwf	(_manufactureId+1)^(0+128),w
 15240     12AF  1903               	btfsc	3,2
 15241     12B0  2AB2               	goto	u10481
 15242     12B1  2AB3               	goto	u10480
 15243     12B2                     u10481:
 15244     12B2  2AB5               	goto	l13716
 15245     12B3                     u10480:
 15246     12B3                     l13712:
 15247                           
 15248                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 132:         return -1
      +                          ;
 15249     12B3  30FF               	movlw	255
 15250     12B4  2AB6               	goto	l673
 15251     12B5                     l13716:
 15252                           
 15253                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 135:     return 0;
 15254     12B5  3000               	movlw	0
 15255     12B6                     l673:
 15256     12B6  0008               	return
 15257     12B7                     __end_of_isConnected:
 15258                           
 15259                           	psect	text13
 15260     12E9                     __ptext13:	
 15261 ;; *************** function _TMAG5273_GetManufacture *****************
 15262 ;; Defined at:
 15263 ;;		line 2535 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 15264 ;; Parameters:    Size  Location     Type
 15265 ;;		None
 15266 ;; Auto vars:     Size  Location     Type
 15267 ;;  read            2   15[BANK0 ] unsigned short 
 15268 ;; Return value:  Size  Location     Type
 15269 ;;                  2   13[BANK0 ] unsigned short 
 15270 ;; Registers used:
 15271 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15272 ;; Tracked objects:
 15273 ;;		On entry : 0/0
 15274 ;;		On exit  : 0/0
 15275 ;;		Unchanged: 0/0
 15276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15277 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15278 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15280 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15281 ;;Total ram usage:        4 bytes
 15282 ;; Hardware stack levels used: 1
 15283 ;; Hardware stack levels required when called: 13
 15284 ;; This function calls:
 15285 ;;		_i2c_read2ByteRegister
 15286 ;;		_swap
 15287 ;; This function is called by:
 15288 ;;		_isConnected
 15289 ;; This function uses a non-reentrant model
 15290 ;;
 15291                           
 15292     12E9                     _TMAG5273_GetManufacture:	
 15293                           ;psect for function _TMAG5273_GetManufacture
 15294                           
 15295     12E9                     l13566:	
 15296                           ;incstack = 0
 15297                           ; Regs used in _TMAG5273_GetManufacture: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15298                           
 15299                           
 15300                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2537:     uint16_t rea
      +                          d = i2c_read2ByteRegister(0X22, TMAG5273_REG_MANUFACTURER_ID_LSB);
 15301     12E9  300E               	movlw	14
 15302     12EA  0140               	movlb	0	; select bank0
 15303     12EB  00A4               	movwf	i2c_read2ByteRegister@reg
 15304     12EC  3022               	movlw	34
 15305     12ED  3189  21FA  3192   	fcall	_i2c_read2ByteRegister
 15306     12F0  0140               	movlb	0	; select bank0
 15307     12F1  0825               	movf	?_i2c_read2ByteRegister+1,w
 15308     12F2  00B0               	movwf	TMAG5273_GetManufacture@read+1
 15309     12F3  0824               	movf	?_i2c_read2ByteRegister,w
 15310     12F4  00AF               	movwf	TMAG5273_GetManufacture@read
 15311     12F5                     l13568:
 15312                           
 15313                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2538:     return swap(
      +                          read);
 15314     12F5  0830               	movf	TMAG5273_GetManufacture@read+1,w
 15315     12F6  00F2               	movwf	swap@reg+1
 15316     12F7  082F               	movf	TMAG5273_GetManufacture@read,w
 15317     12F8  00F1               	movwf	swap@reg
 15318     12F9  3191  21A8  3192   	fcall	_swap
 15319     12FC  0872               	movf	?_swap+1,w
 15320     12FD  0140               	movlb	0	; select bank0
 15321     12FE  00AE               	movwf	?_TMAG5273_GetManufacture+1
 15322     12FF  0871               	movf	?_swap,w
 15323     1300  00AD               	movwf	?_TMAG5273_GetManufacture
 15324     1301                     l1230:
 15325     1301  0008               	return
 15326     1302                     __end_of_TMAG5273_GetManufacture:
 15327                           
 15328                           	psect	text14
 15329     11A8                     __ptext14:	
 15330 ;; *************** function _swap *****************
 15331 ;; Defined at:
 15332 ;;		line 2541 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 15333 ;; Parameters:    Size  Location     Type
 15334 ;;  reg             2    1[COMMON] unsigned short 
 15335 ;; Auto vars:     Size  Location     Type
 15336 ;;  lowerByte       1    9[COMMON] unsigned char 
 15337 ;;  upperByte       1    8[COMMON] unsigned char 
 15338 ;; Return value:  Size  Location     Type
 15339 ;;                  2    1[COMMON] unsigned short 
 15340 ;; Registers used:
 15341 ;;		wreg, status,2
 15342 ;; Tracked objects:
 15343 ;;		On entry : 0/0
 15344 ;;		On exit  : 0/0
 15345 ;;		Unchanged: 0/0
 15346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15347 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15348 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15349 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15350 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15351 ;;Total ram usage:        9 bytes
 15352 ;; Hardware stack levels used: 1
 15353 ;; Hardware stack levels required when called: 4
 15354 ;; This function calls:
 15355 ;;		Nothing
 15356 ;; This function is called by:
 15357 ;;		_TMAG5273_GetManufacture
 15358 ;; This function uses a non-reentrant model
 15359 ;;
 15360                           
 15361     11A8                     _swap:	
 15362                           ;psect for function _swap
 15363                           
 15364     11A8                     l13452:	
 15365                           ;incstack = 0
 15366                           ; Regs used in _swap: [wreg+status,2]
 15367                           
 15368                           
 15369                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2542:     uint8_t uppe
      +                          rByte;;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2543:     uint8_
      +                          t lowerByte;;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2545:     
      +                          upperByte = ((reg & (0xFF00)) >> 8);
 15370     11A8  0872               	movf	swap@reg+1,w
 15371     11A9  00F8               	movwf	swap@upperByte
 15372     11AA                     l13454:
 15373                           
 15374                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2546:     lowerByte = 
      +                          (uint8_t) reg;
 15375     11AA  0871               	movf	swap@reg,w
 15376     11AB  00F9               	movwf	swap@lowerByte
 15377     11AC                     l13456:
 15378                           
 15379                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2548:     reg = ((int1
      +                          6_t) (lowerByte << 8) | upperByte);
 15380     11AC  0878               	movf	swap@upperByte,w
 15381     11AD  00F3               	movwf	??_swap
 15382     11AE  01F4               	clrf	??_swap+1
 15383     11AF  0879               	movf	swap@lowerByte,w
 15384     11B0  00F5               	movwf	??_swap+2
 15385     11B1  01F6               	clrf	??_swap+3
 15386     11B2  0875               	movf	??_swap+2,w
 15387     11B3  00F6               	movwf	??_swap+3
 15388     11B4  01F5               	clrf	??_swap+2
 15389     11B5  0873               	movf	??_swap,w
 15390     11B6  0475               	iorwf	??_swap+2,w
 15391     11B7  00F1               	movwf	swap@reg
 15392     11B8  0874               	movf	??_swap+1,w
 15393     11B9  0476               	iorwf	??_swap+3,w
 15394     11BA  00F2               	movwf	swap@reg+1
 15395     11BB                     l13458:
 15396     11BB                     l1233:	
 15397                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2550:     return reg;
 15398                           
 15399     11BB  0008               	return
 15400     11BC                     __end_of_swap:
 15401                           
 15402                           	psect	text15
 15403     0800                     __ptext15:	
 15404 ;; *************** function _getTemperatureEN *****************
 15405 ;; Defined at:
 15406 ;;		line 2032 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 15407 ;; Parameters:    Size  Location     Type
 15408 ;;		None
 15409 ;; Auto vars:     Size  Location     Type
 15410 ;;  tempENreg       1   15[BANK0 ] unsigned char 
 15411 ;;  tempEN          1   14[BANK0 ] unsigned char 
 15412 ;; Return value:  Size  Location     Type
 15413 ;;                  1    wreg      unsigned char 
 15414 ;; Registers used:
 15415 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15416 ;; Tracked objects:
 15417 ;;		On entry : 0/0
 15418 ;;		On exit  : 0/0
 15419 ;;		Unchanged: 0/0
 15420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15421 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15422 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15423 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15424 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15425 ;;Total ram usage:        4 bytes
 15426 ;; Hardware stack levels used: 1
 15427 ;; Hardware stack levels required when called: 14
 15428 ;; This function calls:
 15429 ;;		_bitRead8
 15430 ;;		_readRegister
 15431 ;; This function is called by:
 15432 ;;		_begin
 15433 ;; This function uses a non-reentrant model
 15434 ;;
 15435                           
 15436     0800                     _getTemperatureEN:	
 15437                           ;psect for function _getTemperatureEN
 15438                           
 15439     0800                     l14136:	
 15440                           ;incstack = 0
 15441                           ; Regs used in _getTemperatureEN: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15442                           
 15443     0800                     l14138:
 15444                           
 15445                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2034:     tempENreg = 
      +                          readRegister(TMAG5273_REG_T_CONFIG);
 15446     0800  3007               	movlw	7
 15447     0801  3190  2025  3188   	fcall	_readRegister
 15448     0804  0140               	movlb	0	; select bank0
 15449     0805  00AF               	movwf	getTemperatureEN@tempENreg
 15450     0806                     l14140:
 15451                           
 15452                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2036:     uint8_t temp
      +                          EN = bitRead8(tempENreg, 0);
 15453     0806  082F               	movf	getTemperatureEN@tempENreg,w
 15454     0807  00AC               	movwf	??_getTemperatureEN
 15455     0808  01AD               	clrf	??_getTemperatureEN+1
 15456     0809  082C               	movf	??_getTemperatureEN,w
 15457     080A  00F1               	movwf	bitRead8@reg
 15458     080B  082D               	movf	??_getTemperatureEN+1,w
 15459     080C  00F2               	movwf	bitRead8@reg+1
 15460     080D  01F3               	clrf	bitRead8@position
 15461     080E  3192  2241  3188   	fcall	_bitRead8
 15462     0811  0140               	movlb	0	; select bank0
 15463     0812  00AE               	movwf	getTemperatureEN@tempEN
 15464     0813                     l14142:
 15465                           
 15466                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2038:     return tempE
      +                          N;
 15467     0813  082E               	movf	getTemperatureEN@tempEN,w
 15468     0814                     l1123:
 15469     0814  0008               	return
 15470     0815                     __end_of_getTemperatureEN:
 15471                           
 15472                           	psect	text16
 15473     0CA2                     __ptext16:	
 15474 ;; *************** function _getOperatingMode *****************
 15475 ;; Defined at:
 15476 ;;		line 1578 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 15477 ;; Parameters:    Size  Location     Type
 15478 ;;		None
 15479 ;; Auto vars:     Size  Location     Type
 15480 ;;  opMode1         1   16[BANK0 ] unsigned char 
 15481 ;;  opMode0         1   15[BANK0 ] unsigned char 
 15482 ;;  opMode          1   14[BANK0 ] unsigned char 
 15483 ;; Return value:  Size  Location     Type
 15484 ;;                  1    wreg      unsigned char 
 15485 ;; Registers used:
 15486 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15487 ;; Tracked objects:
 15488 ;;		On entry : 0/0
 15489 ;;		On exit  : 0/0
 15490 ;;		Unchanged: 0/0
 15491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15492 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15493 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15494 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15495 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15496 ;;Total ram usage:        5 bytes
 15497 ;; Hardware stack levels used: 1
 15498 ;; Hardware stack levels required when called: 14
 15499 ;; This function calls:
 15500 ;;		_bitRead8
 15501 ;;		_readRegister
 15502 ;; This function is called by:
 15503 ;;		_begin
 15504 ;; This function uses a non-reentrant model
 15505 ;;
 15506                           
 15507     0CA2                     _getOperatingMode:	
 15508                           ;psect for function _getOperatingMode
 15509                           
 15510     0CA2                     l13902:	
 15511                           ;incstack = 0
 15512                           ; Regs used in _getOperatingMode: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15513                           
 15514     0CA2                     l13904:
 15515                           
 15516                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1580:     opMode = rea
      +                          dRegister(TMAG5273_REG_DEVICE_CONFIG_2);
 15517     0CA2  3001               	movlw	1
 15518     0CA3  3190  2025  318C   	fcall	_readRegister
 15519     0CA6  0140               	movlb	0	; select bank0
 15520     0CA7  00AE               	movwf	getOperatingMode@opMode
 15521     0CA8                     l13906:
 15522                           
 15523                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1582:     uint8_t opMo
      +                          de0 = bitRead8(opMode, 0);
 15524     0CA8  082E               	movf	getOperatingMode@opMode,w
 15525     0CA9  00AC               	movwf	??_getOperatingMode
 15526     0CAA  01AD               	clrf	??_getOperatingMode+1
 15527     0CAB  082C               	movf	??_getOperatingMode,w
 15528     0CAC  00F1               	movwf	bitRead8@reg
 15529     0CAD  082D               	movf	??_getOperatingMode+1,w
 15530     0CAE  00F2               	movwf	bitRead8@reg+1
 15531     0CAF  01F3               	clrf	bitRead8@position
 15532     0CB0  3192  2241  318C   	fcall	_bitRead8
 15533     0CB3  0140               	movlb	0	; select bank0
 15534     0CB4  00AF               	movwf	getOperatingMode@opMode0
 15535     0CB5                     l13908:
 15536                           
 15537                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1583:     uint8_t opMo
      +                          de1 = bitRead8(opMode, 1);
 15538     0CB5  082E               	movf	getOperatingMode@opMode,w
 15539     0CB6  00AC               	movwf	??_getOperatingMode
 15540     0CB7  01AD               	clrf	??_getOperatingMode+1
 15541     0CB8  082C               	movf	??_getOperatingMode,w
 15542     0CB9  00F1               	movwf	bitRead8@reg
 15543     0CBA  082D               	movf	??_getOperatingMode+1,w
 15544     0CBB  00F2               	movwf	bitRead8@reg+1
 15545     0CBC  01F3               	clrf	bitRead8@position
 15546     0CBD  0AF3               	incf	bitRead8@position,f
 15547     0CBE  3192  2241  318C   	fcall	_bitRead8
 15548     0CC1  0140               	movlb	0	; select bank0
 15549     0CC2  00B0               	movwf	getOperatingMode@opMode1
 15550     0CC3                     l13910:
 15551                           
 15552                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1585:     if ((opMode0
      +                           == 0) && (opMode1 == 0))
 15553     0CC3  082F               	movf	getOperatingMode@opMode0,w
 15554     0CC4  1D03               	btfss	3,2
 15555     0CC5  2CC7               	goto	u10711
 15556     0CC6  2CC8               	goto	u10710
 15557     0CC7                     u10711:
 15558     0CC7  2CCF               	goto	l13920
 15559     0CC8                     u10710:
 15560     0CC8                     l13912:
 15561     0CC8  0830               	movf	getOperatingMode@opMode1,w
 15562     0CC9  1D03               	btfss	3,2
 15563     0CCA  2CCC               	goto	u10721
 15564     0CCB  2CCD               	goto	u10720
 15565     0CCC                     u10721:
 15566     0CCC  2CCF               	goto	l13920
 15567     0CCD                     u10720:
 15568     0CCD                     l13914:
 15569                           
 15570                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1586:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1588:         return 0;
 15571     0CCD  3000               	movlw	0
 15572     0CCE  2CF4               	goto	l995
 15573     0CCF                     l13920:
 15574     0CCF  032F               	decf	getOperatingMode@opMode0,w
 15575     0CD0  1D03               	btfss	3,2
 15576     0CD1  2CD3               	goto	u10731
 15577     0CD2  2CD4               	goto	u10730
 15578     0CD3                     u10731:
 15579     0CD3  2CDB               	goto	l13930
 15580     0CD4                     u10730:
 15581     0CD4                     l13922:
 15582     0CD4  0830               	movf	getOperatingMode@opMode1,w
 15583     0CD5  1D03               	btfss	3,2
 15584     0CD6  2CD8               	goto	u10741
 15585     0CD7  2CD9               	goto	u10740
 15586     0CD8                     u10741:
 15587     0CD8  2CDB               	goto	l13930
 15588     0CD9                     u10740:
 15589     0CD9                     l13924:
 15590                           
 15591                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1590:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1592:         return 1;
 15592     0CD9  3001               	movlw	1
 15593     0CDA  2CF4               	goto	l995
 15594     0CDB                     l13930:
 15595     0CDB  082F               	movf	getOperatingMode@opMode0,w
 15596     0CDC  1D03               	btfss	3,2
 15597     0CDD  2CDF               	goto	u10751
 15598     0CDE  2CE0               	goto	u10750
 15599     0CDF                     u10751:
 15600     0CDF  2CE7               	goto	l13940
 15601     0CE0                     u10750:
 15602     0CE0                     l13932:
 15603     0CE0  0330               	decf	getOperatingMode@opMode1,w
 15604     0CE1  1D03               	btfss	3,2
 15605     0CE2  2CE4               	goto	u10761
 15606     0CE3  2CE5               	goto	u10760
 15607     0CE4                     u10761:
 15608     0CE4  2CE7               	goto	l13940
 15609     0CE5                     u10760:
 15610     0CE5                     l13934:
 15611                           
 15612                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1594:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1596:         return 2;
 15613     0CE5  3002               	movlw	2
 15614     0CE6  2CF4               	goto	l995
 15615     0CE7                     l13940:
 15616     0CE7  032F               	decf	getOperatingMode@opMode0,w
 15617     0CE8  1D03               	btfss	3,2
 15618     0CE9  2CEB               	goto	u10771
 15619     0CEA  2CEC               	goto	u10770
 15620     0CEB                     u10771:
 15621     0CEB  2CF3               	goto	l998
 15622     0CEC                     u10770:
 15623     0CEC                     l13942:
 15624     0CEC  0330               	decf	getOperatingMode@opMode1,w
 15625     0CED  1D03               	btfss	3,2
 15626     0CEE  2CF0               	goto	u10781
 15627     0CEF  2CF1               	goto	u10780
 15628     0CF0                     u10781:
 15629     0CF0  2CF3               	goto	l998
 15630     0CF1                     u10780:
 15631     0CF1                     l13944:
 15632                           
 15633                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1598:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1600:         return 3;
 15634     0CF1  3003               	movlw	3
 15635     0CF2  2CF4               	goto	l995
 15636     0CF3                     l998:
 15637     0CF3  2CCD               	goto	l13914
 15638     0CF4                     l995:
 15639     0CF4  0008               	return
 15640     0CF5                     __end_of_getOperatingMode:
 15641                           
 15642                           	psect	text17
 15643     0378                     __ptext17:	
 15644 ;; *************** function _getMagneticChannel *****************
 15645 ;; Defined at:
 15646 ;;		line 1622 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 15647 ;; Parameters:    Size  Location     Type
 15648 ;;		None
 15649 ;; Auto vars:     Size  Location     Type
 15650 ;;  magMode7        1   18[BANK0 ] unsigned char 
 15651 ;;  magMode6        1   17[BANK0 ] unsigned char 
 15652 ;;  magMode5        1   16[BANK0 ] unsigned char 
 15653 ;;  magMode4        1   15[BANK0 ] unsigned char 
 15654 ;;  magChannel      1   14[BANK0 ] unsigned char 
 15655 ;; Return value:  Size  Location     Type
 15656 ;;                  1    wreg      unsigned char 
 15657 ;; Registers used:
 15658 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15659 ;; Tracked objects:
 15660 ;;		On entry : 0/0
 15661 ;;		On exit  : 0/0
 15662 ;;		Unchanged: 0/0
 15663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15665 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15666 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15667 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15668 ;;Total ram usage:        7 bytes
 15669 ;; Hardware stack levels used: 1
 15670 ;; Hardware stack levels required when called: 14
 15671 ;; This function calls:
 15672 ;;		_bitRead8
 15673 ;;		_readRegister
 15674 ;; This function is called by:
 15675 ;;		_begin
 15676 ;; This function uses a non-reentrant model
 15677 ;;
 15678                           
 15679     0378                     _getMagneticChannel:	
 15680                           ;psect for function _getMagneticChannel
 15681                           
 15682     0378                     l13952:	
 15683                           ;incstack = 0
 15684                           ; Regs used in _getMagneticChannel: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15685                           
 15686     0378                     l13954:
 15687                           
 15688                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1624:     magChannel =
      +                           readRegister(TMAG5273_REG_SENSOR_CONFIG_1);
 15689     0378  3002               	movlw	2
 15690     0379  3190  2025  3183   	fcall	_readRegister
 15691     037C  0140               	movlb	0	; select bank0
 15692     037D  00AE               	movwf	getMagneticChannel@magChannel
 15693     037E                     l13956:
 15694                           
 15695                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1626:     uint8_t magM
      +                          ode4 = bitRead8(magChannel, 4);
 15696     037E  082E               	movf	getMagneticChannel@magChannel,w
 15697     037F  00AC               	movwf	??_getMagneticChannel
 15698     0380  01AD               	clrf	??_getMagneticChannel+1
 15699     0381  082C               	movf	??_getMagneticChannel,w
 15700     0382  00F1               	movwf	bitRead8@reg
 15701     0383  082D               	movf	??_getMagneticChannel+1,w
 15702     0384  00F2               	movwf	bitRead8@reg+1
 15703     0385  3004               	movlw	4
 15704     0386  00F3               	movwf	bitRead8@position
 15705     0387  3192  2241  3183   	fcall	_bitRead8
 15706     038A  0140               	movlb	0	; select bank0
 15707     038B  00AF               	movwf	getMagneticChannel@magMode4
 15708     038C                     l13958:
 15709                           
 15710                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1627:     uint8_t magM
      +                          ode5 = bitRead8(magChannel, 5);
 15711     038C  082E               	movf	getMagneticChannel@magChannel,w
 15712     038D  00AC               	movwf	??_getMagneticChannel
 15713     038E  01AD               	clrf	??_getMagneticChannel+1
 15714     038F  082C               	movf	??_getMagneticChannel,w
 15715     0390  00F1               	movwf	bitRead8@reg
 15716     0391  082D               	movf	??_getMagneticChannel+1,w
 15717     0392  00F2               	movwf	bitRead8@reg+1
 15718     0393  3005               	movlw	5
 15719     0394  00F3               	movwf	bitRead8@position
 15720     0395  3192  2241  3183   	fcall	_bitRead8
 15721     0398  0140               	movlb	0	; select bank0
 15722     0399  00B0               	movwf	getMagneticChannel@magMode5
 15723     039A                     l13960:
 15724                           
 15725                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1628:     uint8_t magM
      +                          ode6 = bitRead8(magChannel, 6);
 15726     039A  082E               	movf	getMagneticChannel@magChannel,w
 15727     039B  00AC               	movwf	??_getMagneticChannel
 15728     039C  01AD               	clrf	??_getMagneticChannel+1
 15729     039D  082C               	movf	??_getMagneticChannel,w
 15730     039E  00F1               	movwf	bitRead8@reg
 15731     039F  082D               	movf	??_getMagneticChannel+1,w
 15732     03A0  00F2               	movwf	bitRead8@reg+1
 15733     03A1  3006               	movlw	6
 15734     03A2  00F3               	movwf	bitRead8@position
 15735     03A3  3192  2241  3183   	fcall	_bitRead8
 15736     03A6  0140               	movlb	0	; select bank0
 15737     03A7  00B1               	movwf	getMagneticChannel@magMode6
 15738     03A8                     l13962:
 15739                           
 15740                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1629:     uint8_t magM
      +                          ode7 = bitRead8(magChannel, 7);
 15741     03A8  082E               	movf	getMagneticChannel@magChannel,w
 15742     03A9  00AC               	movwf	??_getMagneticChannel
 15743     03AA  01AD               	clrf	??_getMagneticChannel+1
 15744     03AB  082C               	movf	??_getMagneticChannel,w
 15745     03AC  00F1               	movwf	bitRead8@reg
 15746     03AD  082D               	movf	??_getMagneticChannel+1,w
 15747     03AE  00F2               	movwf	bitRead8@reg+1
 15748     03AF  3007               	movlw	7
 15749     03B0  00F3               	movwf	bitRead8@position
 15750     03B1  3192  2241  3183   	fcall	_bitRead8
 15751     03B4  0140               	movlb	0	; select bank0
 15752     03B5  00B2               	movwf	getMagneticChannel@magMode7
 15753     03B6                     l13964:
 15754                           
 15755                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1631:     if ((magMode
      +                          4 == 0) && (magMode5 == 0) && (magMode6 == 0) && (magMode7 == 0))
 15756     03B6  082F               	movf	getMagneticChannel@magMode4,w
 15757     03B7  1D03               	btfss	3,2
 15758     03B8  2BBA               	goto	u10791
 15759     03B9  2BBB               	goto	u10790
 15760     03BA                     u10791:
 15761     03BA  2BCC               	goto	l13978
 15762     03BB                     u10790:
 15763     03BB                     l13966:
 15764     03BB  0830               	movf	getMagneticChannel@magMode5,w
 15765     03BC  1D03               	btfss	3,2
 15766     03BD  2BBF               	goto	u10801
 15767     03BE  2BC0               	goto	u10800
 15768     03BF                     u10801:
 15769     03BF  2BCC               	goto	l13978
 15770     03C0                     u10800:
 15771     03C0                     l13968:
 15772     03C0  0831               	movf	getMagneticChannel@magMode6,w
 15773     03C1  1D03               	btfss	3,2
 15774     03C2  2BC4               	goto	u10811
 15775     03C3  2BC5               	goto	u10810
 15776     03C4                     u10811:
 15777     03C4  2BCC               	goto	l13978
 15778     03C5                     u10810:
 15779     03C5                     l13970:
 15780     03C5  0832               	movf	getMagneticChannel@magMode7,w
 15781     03C6  1D03               	btfss	3,2
 15782     03C7  2BC9               	goto	u10821
 15783     03C8  2BCA               	goto	u10820
 15784     03C9                     u10821:
 15785     03C9  2BCC               	goto	l13978
 15786     03CA                     u10820:
 15787     03CA                     l13972:
 15788                           
 15789                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1632:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1633:         return 0;
 15790     03CA  3000               	movlw	0
 15791     03CB  2CBD               	goto	l1005
 15792     03CC                     l13978:
 15793     03CC  032F               	decf	getMagneticChannel@magMode4,w
 15794     03CD  1D03               	btfss	3,2
 15795     03CE  2BD0               	goto	u10831
 15796     03CF  2BD1               	goto	u10830
 15797     03D0                     u10831:
 15798     03D0  2BE2               	goto	l13992
 15799     03D1                     u10830:
 15800     03D1                     l13980:
 15801     03D1  0830               	movf	getMagneticChannel@magMode5,w
 15802     03D2  1D03               	btfss	3,2
 15803     03D3  2BD5               	goto	u10841
 15804     03D4  2BD6               	goto	u10840
 15805     03D5                     u10841:
 15806     03D5  2BE2               	goto	l13992
 15807     03D6                     u10840:
 15808     03D6                     l13982:
 15809     03D6  0831               	movf	getMagneticChannel@magMode6,w
 15810     03D7  1D03               	btfss	3,2
 15811     03D8  2BDA               	goto	u10851
 15812     03D9  2BDB               	goto	u10850
 15813     03DA                     u10851:
 15814     03DA  2BE2               	goto	l13992
 15815     03DB                     u10850:
 15816     03DB                     l13984:
 15817     03DB  0832               	movf	getMagneticChannel@magMode7,w
 15818     03DC  1D03               	btfss	3,2
 15819     03DD  2BDF               	goto	u10861
 15820     03DE  2BE0               	goto	u10860
 15821     03DF                     u10861:
 15822     03DF  2BE2               	goto	l13992
 15823     03E0                     u10860:
 15824     03E0                     l13986:
 15825                           
 15826                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1635:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1636:         return 1;
 15827     03E0  3001               	movlw	1
 15828     03E1  2CBD               	goto	l1005
 15829     03E2                     l13992:
 15830     03E2  082F               	movf	getMagneticChannel@magMode4,w
 15831     03E3  1D03               	btfss	3,2
 15832     03E4  2BE6               	goto	u10871
 15833     03E5  2BE7               	goto	u10870
 15834     03E6                     u10871:
 15835     03E6  2BF8               	goto	l14006
 15836     03E7                     u10870:
 15837     03E7                     l13994:
 15838     03E7  0330               	decf	getMagneticChannel@magMode5,w
 15839     03E8  1D03               	btfss	3,2
 15840     03E9  2BEB               	goto	u10881
 15841     03EA  2BEC               	goto	u10880
 15842     03EB                     u10881:
 15843     03EB  2BF8               	goto	l14006
 15844     03EC                     u10880:
 15845     03EC                     l13996:
 15846     03EC  0831               	movf	getMagneticChannel@magMode6,w
 15847     03ED  1D03               	btfss	3,2
 15848     03EE  2BF0               	goto	u10891
 15849     03EF  2BF1               	goto	u10890
 15850     03F0                     u10891:
 15851     03F0  2BF8               	goto	l14006
 15852     03F1                     u10890:
 15853     03F1                     l13998:
 15854     03F1  0832               	movf	getMagneticChannel@magMode7,w
 15855     03F2  1D03               	btfss	3,2
 15856     03F3  2BF5               	goto	u10901
 15857     03F4  2BF6               	goto	u10900
 15858     03F5                     u10901:
 15859     03F5  2BF8               	goto	l14006
 15860     03F6                     u10900:
 15861     03F6                     l14000:
 15862                           
 15863                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1638:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1639:         return 2;
 15864     03F6  3002               	movlw	2
 15865     03F7  2CBD               	goto	l1005
 15866     03F8                     l14006:
 15867     03F8  032F               	decf	getMagneticChannel@magMode4,w
 15868     03F9  1D03               	btfss	3,2
 15869     03FA  2BFC               	goto	u10911
 15870     03FB  2BFD               	goto	u10910
 15871     03FC                     u10911:
 15872     03FC  2C0E               	goto	l14020
 15873     03FD                     u10910:
 15874     03FD                     l14008:
 15875     03FD  0330               	decf	getMagneticChannel@magMode5,w
 15876     03FE  1D03               	btfss	3,2
 15877     03FF  2C01               	goto	u10921
 15878     0400  2C02               	goto	u10920
 15879     0401                     u10921:
 15880     0401  2C0E               	goto	l14020
 15881     0402                     u10920:
 15882     0402                     l14010:
 15883     0402  0831               	movf	getMagneticChannel@magMode6,w
 15884     0403  1D03               	btfss	3,2
 15885     0404  2C06               	goto	u10931
 15886     0405  2C07               	goto	u10930
 15887     0406                     u10931:
 15888     0406  2C0E               	goto	l14020
 15889     0407                     u10930:
 15890     0407                     l14012:
 15891     0407  0832               	movf	getMagneticChannel@magMode7,w
 15892     0408  1D03               	btfss	3,2
 15893     0409  2C0B               	goto	u10941
 15894     040A  2C0C               	goto	u10940
 15895     040B                     u10941:
 15896     040B  2C0E               	goto	l14020
 15897     040C                     u10940:
 15898     040C                     l14014:
 15899                           
 15900                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1641:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1642:         return 3;
 15901     040C  3003               	movlw	3
 15902     040D  2CBD               	goto	l1005
 15903     040E                     l14020:
 15904     040E  082F               	movf	getMagneticChannel@magMode4,w
 15905     040F  1D03               	btfss	3,2
 15906     0410  2C12               	goto	u10951
 15907     0411  2C13               	goto	u10950
 15908     0412                     u10951:
 15909     0412  2C24               	goto	l14034
 15910     0413                     u10950:
 15911     0413                     l14022:
 15912     0413  0830               	movf	getMagneticChannel@magMode5,w
 15913     0414  1D03               	btfss	3,2
 15914     0415  2C17               	goto	u10961
 15915     0416  2C18               	goto	u10960
 15916     0417                     u10961:
 15917     0417  2C24               	goto	l14034
 15918     0418                     u10960:
 15919     0418                     l14024:
 15920     0418  0331               	decf	getMagneticChannel@magMode6,w
 15921     0419  1D03               	btfss	3,2
 15922     041A  2C1C               	goto	u10971
 15923     041B  2C1D               	goto	u10970
 15924     041C                     u10971:
 15925     041C  2C24               	goto	l14034
 15926     041D                     u10970:
 15927     041D                     l14026:
 15928     041D  0832               	movf	getMagneticChannel@magMode7,w
 15929     041E  1D03               	btfss	3,2
 15930     041F  2C21               	goto	u10981
 15931     0420  2C22               	goto	u10980
 15932     0421                     u10981:
 15933     0421  2C24               	goto	l14034
 15934     0422                     u10980:
 15935     0422                     l14028:
 15936                           
 15937                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1644:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1645:         return 4;
 15938     0422  3004               	movlw	4
 15939     0423  2CBD               	goto	l1005
 15940     0424                     l14034:
 15941     0424  032F               	decf	getMagneticChannel@magMode4,w
 15942     0425  1D03               	btfss	3,2
 15943     0426  2C28               	goto	u10991
 15944     0427  2C29               	goto	u10990
 15945     0428                     u10991:
 15946     0428  2C3A               	goto	l14048
 15947     0429                     u10990:
 15948     0429                     l14036:
 15949     0429  0830               	movf	getMagneticChannel@magMode5,w
 15950     042A  1D03               	btfss	3,2
 15951     042B  2C2D               	goto	u11001
 15952     042C  2C2E               	goto	u11000
 15953     042D                     u11001:
 15954     042D  2C3A               	goto	l14048
 15955     042E                     u11000:
 15956     042E                     l14038:
 15957     042E  0331               	decf	getMagneticChannel@magMode6,w
 15958     042F  1D03               	btfss	3,2
 15959     0430  2C32               	goto	u11011
 15960     0431  2C33               	goto	u11010
 15961     0432                     u11011:
 15962     0432  2C3A               	goto	l14048
 15963     0433                     u11010:
 15964     0433                     l14040:
 15965     0433  0832               	movf	getMagneticChannel@magMode7,w
 15966     0434  1D03               	btfss	3,2
 15967     0435  2C37               	goto	u11021
 15968     0436  2C38               	goto	u11020
 15969     0437                     u11021:
 15970     0437  2C3A               	goto	l14048
 15971     0438                     u11020:
 15972     0438                     l14042:
 15973                           
 15974                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1647:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1648:         return 5;
 15975     0438  3005               	movlw	5
 15976     0439  2CBD               	goto	l1005
 15977     043A                     l14048:
 15978     043A  082F               	movf	getMagneticChannel@magMode4,w
 15979     043B  1D03               	btfss	3,2
 15980     043C  2C3E               	goto	u11031
 15981     043D  2C3F               	goto	u11030
 15982     043E                     u11031:
 15983     043E  2C50               	goto	l14062
 15984     043F                     u11030:
 15985     043F                     l14050:
 15986     043F  0330               	decf	getMagneticChannel@magMode5,w
 15987     0440  1D03               	btfss	3,2
 15988     0441  2C43               	goto	u11041
 15989     0442  2C44               	goto	u11040
 15990     0443                     u11041:
 15991     0443  2C50               	goto	l14062
 15992     0444                     u11040:
 15993     0444                     l14052:
 15994     0444  0331               	decf	getMagneticChannel@magMode6,w
 15995     0445  1D03               	btfss	3,2
 15996     0446  2C48               	goto	u11051
 15997     0447  2C49               	goto	u11050
 15998     0448                     u11051:
 15999     0448  2C50               	goto	l14062
 16000     0449                     u11050:
 16001     0449                     l14054:
 16002     0449  0832               	movf	getMagneticChannel@magMode7,w
 16003     044A  1D03               	btfss	3,2
 16004     044B  2C4D               	goto	u11061
 16005     044C  2C4E               	goto	u11060
 16006     044D                     u11061:
 16007     044D  2C50               	goto	l14062
 16008     044E                     u11060:
 16009     044E                     l14056:
 16010                           
 16011                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1650:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1651:         return 6;
 16012     044E  3006               	movlw	6
 16013     044F  2CBD               	goto	l1005
 16014     0450                     l14062:
 16015     0450  032F               	decf	getMagneticChannel@magMode4,w
 16016     0451  1D03               	btfss	3,2
 16017     0452  2C54               	goto	u11071
 16018     0453  2C55               	goto	u11070
 16019     0454                     u11071:
 16020     0454  2C66               	goto	l14076
 16021     0455                     u11070:
 16022     0455                     l14064:
 16023     0455  0330               	decf	getMagneticChannel@magMode5,w
 16024     0456  1D03               	btfss	3,2
 16025     0457  2C59               	goto	u11081
 16026     0458  2C5A               	goto	u11080
 16027     0459                     u11081:
 16028     0459  2C66               	goto	l14076
 16029     045A                     u11080:
 16030     045A                     l14066:
 16031     045A  0331               	decf	getMagneticChannel@magMode6,w
 16032     045B  1D03               	btfss	3,2
 16033     045C  2C5E               	goto	u11091
 16034     045D  2C5F               	goto	u11090
 16035     045E                     u11091:
 16036     045E  2C66               	goto	l14076
 16037     045F                     u11090:
 16038     045F                     l14068:
 16039     045F  0832               	movf	getMagneticChannel@magMode7,w
 16040     0460  1D03               	btfss	3,2
 16041     0461  2C63               	goto	u11101
 16042     0462  2C64               	goto	u11100
 16043     0463                     u11101:
 16044     0463  2C66               	goto	l14076
 16045     0464                     u11100:
 16046     0464                     l14070:
 16047                           
 16048                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1653:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1654:         return 7;
 16049     0464  3007               	movlw	7
 16050     0465  2CBD               	goto	l1005
 16051     0466                     l14076:
 16052     0466  082F               	movf	getMagneticChannel@magMode4,w
 16053     0467  1D03               	btfss	3,2
 16054     0468  2C6A               	goto	u11111
 16055     0469  2C6B               	goto	u11110
 16056     046A                     u11111:
 16057     046A  2C7C               	goto	l14090
 16058     046B                     u11110:
 16059     046B                     l14078:
 16060     046B  0830               	movf	getMagneticChannel@magMode5,w
 16061     046C  1D03               	btfss	3,2
 16062     046D  2C6F               	goto	u11121
 16063     046E  2C70               	goto	u11120
 16064     046F                     u11121:
 16065     046F  2C7C               	goto	l14090
 16066     0470                     u11120:
 16067     0470                     l14080:
 16068     0470  0831               	movf	getMagneticChannel@magMode6,w
 16069     0471  1D03               	btfss	3,2
 16070     0472  2C74               	goto	u11131
 16071     0473  2C75               	goto	u11130
 16072     0474                     u11131:
 16073     0474  2C7C               	goto	l14090
 16074     0475                     u11130:
 16075     0475                     l14082:
 16076     0475  0332               	decf	getMagneticChannel@magMode7,w
 16077     0476  1D03               	btfss	3,2
 16078     0477  2C79               	goto	u11141
 16079     0478  2C7A               	goto	u11140
 16080     0479                     u11141:
 16081     0479  2C7C               	goto	l14090
 16082     047A                     u11140:
 16083     047A                     l14084:
 16084                           
 16085                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1656:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1657:         return 8;
 16086     047A  3008               	movlw	8
 16087     047B  2CBD               	goto	l1005
 16088     047C                     l14090:
 16089     047C  032F               	decf	getMagneticChannel@magMode4,w
 16090     047D  1D03               	btfss	3,2
 16091     047E  2C80               	goto	u11151
 16092     047F  2C81               	goto	u11150
 16093     0480                     u11151:
 16094     0480  2C92               	goto	l14104
 16095     0481                     u11150:
 16096     0481                     l14092:
 16097     0481  0830               	movf	getMagneticChannel@magMode5,w
 16098     0482  1D03               	btfss	3,2
 16099     0483  2C85               	goto	u11161
 16100     0484  2C86               	goto	u11160
 16101     0485                     u11161:
 16102     0485  2C92               	goto	l14104
 16103     0486                     u11160:
 16104     0486                     l14094:
 16105     0486  0831               	movf	getMagneticChannel@magMode6,w
 16106     0487  1D03               	btfss	3,2
 16107     0488  2C8A               	goto	u11171
 16108     0489  2C8B               	goto	u11170
 16109     048A                     u11171:
 16110     048A  2C92               	goto	l14104
 16111     048B                     u11170:
 16112     048B                     l14096:
 16113     048B  0332               	decf	getMagneticChannel@magMode7,w
 16114     048C  1D03               	btfss	3,2
 16115     048D  2C8F               	goto	u11181
 16116     048E  2C90               	goto	u11180
 16117     048F                     u11181:
 16118     048F  2C92               	goto	l14104
 16119     0490                     u11180:
 16120     0490                     l14098:
 16121                           
 16122                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1659:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1660:         return 9;
 16123     0490  3009               	movlw	9
 16124     0491  2CBD               	goto	l1005
 16125     0492                     l14104:
 16126     0492  082F               	movf	getMagneticChannel@magMode4,w
 16127     0493  1D03               	btfss	3,2
 16128     0494  2C96               	goto	u11191
 16129     0495  2C97               	goto	u11190
 16130     0496                     u11191:
 16131     0496  2CA8               	goto	l14118
 16132     0497                     u11190:
 16133     0497                     l14106:
 16134     0497  0330               	decf	getMagneticChannel@magMode5,w
 16135     0498  1D03               	btfss	3,2
 16136     0499  2C9B               	goto	u11201
 16137     049A  2C9C               	goto	u11200
 16138     049B                     u11201:
 16139     049B  2CA8               	goto	l14118
 16140     049C                     u11200:
 16141     049C                     l14108:
 16142     049C  0831               	movf	getMagneticChannel@magMode6,w
 16143     049D  1D03               	btfss	3,2
 16144     049E  2CA0               	goto	u11211
 16145     049F  2CA1               	goto	u11210
 16146     04A0                     u11211:
 16147     04A0  2CA8               	goto	l14118
 16148     04A1                     u11210:
 16149     04A1                     l14110:
 16150     04A1  0332               	decf	getMagneticChannel@magMode7,w
 16151     04A2  1D03               	btfss	3,2
 16152     04A3  2CA5               	goto	u11221
 16153     04A4  2CA6               	goto	u11220
 16154     04A5                     u11221:
 16155     04A5  2CA8               	goto	l14118
 16156     04A6                     u11220:
 16157     04A6                     l14112:
 16158                           
 16159                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1662:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1663:         return 10;
 16160     04A6  300A               	movlw	10
 16161     04A7  2CBD               	goto	l1005
 16162     04A8                     l14118:
 16163     04A8  032F               	decf	getMagneticChannel@magMode4,w
 16164     04A9  1D03               	btfss	3,2
 16165     04AA  2CAC               	goto	u11231
 16166     04AB  2CAD               	goto	u11230
 16167     04AC                     u11231:
 16168     04AC  2BCA               	goto	l13972
 16169     04AD                     u11230:
 16170     04AD                     l14120:
 16171     04AD  0330               	decf	getMagneticChannel@magMode5,w
 16172     04AE  1D03               	btfss	3,2
 16173     04AF  2CB1               	goto	u11241
 16174     04B0  2CB2               	goto	u11240
 16175     04B1                     u11241:
 16176     04B1  2BCA               	goto	l13972
 16177     04B2                     u11240:
 16178     04B2                     l14122:
 16179     04B2  0831               	movf	getMagneticChannel@magMode6,w
 16180     04B3  1D03               	btfss	3,2
 16181     04B4  2CB6               	goto	u11251
 16182     04B5  2CB7               	goto	u11250
 16183     04B6                     u11251:
 16184     04B6  2BCA               	goto	l13972
 16185     04B7                     u11250:
 16186     04B7                     l14124:
 16187     04B7  0332               	decf	getMagneticChannel@magMode7,w
 16188     04B8  1D03               	btfss	3,2
 16189     04B9  2CBB               	goto	u11261
 16190     04BA  2CBC               	goto	u11260
 16191     04BB                     u11261:
 16192     04BB  2BCA               	goto	l13972
 16193     04BC                     u11260:
 16194     04BC                     l14126:
 16195                           
 16196                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1665:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1666:         return 11;
 16197     04BC  300B               	movlw	11
 16198     04BD                     l1005:
 16199     04BD  0008               	return
 16200     04BE                     __end_of_getMagneticChannel:
 16201                           
 16202                           	psect	text18
 16203     1214                     __ptext18:	
 16204 ;; *************** function _getLowPower *****************
 16205 ;; Defined at:
 16206 ;;		line 1527 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 16207 ;; Parameters:    Size  Location     Type
 16208 ;;		None
 16209 ;; Auto vars:     Size  Location     Type
 16210 ;;  lowPowerMode    1   15[BANK0 ] unsigned char 
 16211 ;;  lowPowerMode    1   14[BANK0 ] unsigned char 
 16212 ;; Return value:  Size  Location     Type
 16213 ;;                  1    wreg      unsigned char 
 16214 ;; Registers used:
 16215 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16216 ;; Tracked objects:
 16217 ;;		On entry : 0/0
 16218 ;;		On exit  : 0/0
 16219 ;;		Unchanged: 0/0
 16220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16221 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16222 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16223 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16224 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16225 ;;Total ram usage:        4 bytes
 16226 ;; Hardware stack levels used: 1
 16227 ;; Hardware stack levels required when called: 14
 16228 ;; This function calls:
 16229 ;;		_bitRead8
 16230 ;;		_readRegister
 16231 ;; This function is called by:
 16232 ;;		_begin
 16233 ;; This function uses a non-reentrant model
 16234 ;;
 16235                           
 16236     1214                     _getLowPower:	
 16237                           ;psect for function _getLowPower
 16238                           
 16239     1214                     l13892:	
 16240                           ;incstack = 0
 16241                           ; Regs used in _getLowPower: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16242                           
 16243     1214                     l13894:
 16244                           
 16245                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1529:     lowPowerMode
      +                           = readRegister(TMAG5273_REG_DEVICE_CONFIG_2);
 16246     1214  3001               	movlw	1
 16247     1215  3190  2025  3192   	fcall	_readRegister
 16248     1218  0140               	movlb	0	; select bank0
 16249     1219  00AF               	movwf	getLowPower@lowPowerMode
 16250     121A                     l13896:
 16251                           
 16252                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1531:     uint8_t lowP
      +                          owerModeBit = bitRead8(lowPowerMode, 4);
 16253     121A  082F               	movf	getLowPower@lowPowerMode,w
 16254     121B  00AC               	movwf	??_getLowPower
 16255     121C  01AD               	clrf	??_getLowPower+1
 16256     121D  082C               	movf	??_getLowPower,w
 16257     121E  00F1               	movwf	bitRead8@reg
 16258     121F  082D               	movf	??_getLowPower+1,w
 16259     1220  00F2               	movwf	bitRead8@reg+1
 16260     1221  3004               	movlw	4
 16261     1222  00F3               	movwf	bitRead8@position
 16262     1223  3192  2241  3192   	fcall	_bitRead8
 16263     1226  0140               	movlb	0	; select bank0
 16264     1227  00AE               	movwf	getLowPower@lowPowerModeBit
 16265     1228                     l13898:
 16266                           
 16267                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1533:     return lowPo
      +                          werModeBit;
 16268     1228  082E               	movf	getLowPower@lowPowerModeBit,w
 16269     1229                     l985:
 16270     1229  0008               	return
 16271     122A                     __end_of_getLowPower:
 16272                           
 16273                           	psect	text19
 16274     0CF5                     __ptext19:	
 16275 ;; *************** function _getAngleEn *****************
 16276 ;; Defined at:
 16277 ;;		line 1883 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 16278 ;; Parameters:    Size  Location     Type
 16279 ;;		None
 16280 ;; Auto vars:     Size  Location     Type
 16281 ;;  angleDir3       1   16[BANK0 ] unsigned char 
 16282 ;;  angleDir2       1   15[BANK0 ] unsigned char 
 16283 ;;  angleReg        1   14[BANK0 ] unsigned char 
 16284 ;; Return value:  Size  Location     Type
 16285 ;;                  1    wreg      unsigned char 
 16286 ;; Registers used:
 16287 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16288 ;; Tracked objects:
 16289 ;;		On entry : 0/0
 16290 ;;		On exit  : 0/0
 16291 ;;		Unchanged: 0/0
 16292 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16293 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16294 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16295 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16296 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16297 ;;Total ram usage:        5 bytes
 16298 ;; Hardware stack levels used: 1
 16299 ;; Hardware stack levels required when called: 14
 16300 ;; This function calls:
 16301 ;;		_bitRead8
 16302 ;;		_readRegister
 16303 ;; This function is called by:
 16304 ;;		_begin
 16305 ;;		_setMagneticOffset2
 16306 ;;		_getMagneticOffset2
 16307 ;; This function uses a non-reentrant model
 16308 ;;
 16309                           
 16310     0CF5                     _getAngleEn:	
 16311                           ;psect for function _getAngleEn
 16312                           
 16313     0CF5                     l14146:	
 16314                           ;incstack = 0
 16315                           ; Regs used in _getAngleEn: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16316                           
 16317     0CF5                     l14148:
 16318                           
 16319                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1885:     angleReg = r
      +                          eadRegister(TMAG5273_REG_SENSOR_CONFIG_2);
 16320     0CF5  3003               	movlw	3
 16321     0CF6  3190  2025  318C   	fcall	_readRegister
 16322     0CF9  0140               	movlb	0	; select bank0
 16323     0CFA  00AE               	movwf	getAngleEn@angleReg
 16324     0CFB                     l14150:
 16325                           
 16326                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1887:     uint8_t angl
      +                          eDir2 = bitRead8(angleReg, 2);
 16327     0CFB  082E               	movf	getAngleEn@angleReg,w
 16328     0CFC  00AC               	movwf	??_getAngleEn
 16329     0CFD  01AD               	clrf	??_getAngleEn+1
 16330     0CFE  082C               	movf	??_getAngleEn,w
 16331     0CFF  00F1               	movwf	bitRead8@reg
 16332     0D00  082D               	movf	??_getAngleEn+1,w
 16333     0D01  00F2               	movwf	bitRead8@reg+1
 16334     0D02  3002               	movlw	2
 16335     0D03  00F3               	movwf	bitRead8@position
 16336     0D04  3192  2241  318C   	fcall	_bitRead8
 16337     0D07  0140               	movlb	0	; select bank0
 16338     0D08  00AF               	movwf	getAngleEn@angleDir2
 16339     0D09                     l14152:
 16340                           
 16341                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1888:     uint8_t angl
      +                          eDir3 = bitRead8(angleReg, 3);
 16342     0D09  082E               	movf	getAngleEn@angleReg,w
 16343     0D0A  00AC               	movwf	??_getAngleEn
 16344     0D0B  01AD               	clrf	??_getAngleEn+1
 16345     0D0C  082C               	movf	??_getAngleEn,w
 16346     0D0D  00F1               	movwf	bitRead8@reg
 16347     0D0E  082D               	movf	??_getAngleEn+1,w
 16348     0D0F  00F2               	movwf	bitRead8@reg+1
 16349     0D10  3003               	movlw	3
 16350     0D11  00F3               	movwf	bitRead8@position
 16351     0D12  3192  2241  318C   	fcall	_bitRead8
 16352     0D15  0140               	movlb	0	; select bank0
 16353     0D16  00B0               	movwf	getAngleEn@angleDir3
 16354     0D17                     l14154:
 16355                           
 16356                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1890:     if ((angleDi
      +                          r2 == 0) && (angleDir3 == 0))
 16357     0D17  082F               	movf	getAngleEn@angleDir2,w
 16358     0D18  1D03               	btfss	3,2
 16359     0D19  2D1B               	goto	u11271
 16360     0D1A  2D1C               	goto	u11270
 16361     0D1B                     u11271:
 16362     0D1B  2D23               	goto	l14164
 16363     0D1C                     u11270:
 16364     0D1C                     l14156:
 16365     0D1C  0830               	movf	getAngleEn@angleDir3,w
 16366     0D1D  1D03               	btfss	3,2
 16367     0D1E  2D20               	goto	u11281
 16368     0D1F  2D21               	goto	u11280
 16369     0D20                     u11281:
 16370     0D20  2D23               	goto	l14164
 16371     0D21                     u11280:
 16372     0D21                     l14158:
 16373                           
 16374                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1891:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1893:         return 0;
 16375     0D21  3000               	movlw	0
 16376     0D22  2D48               	goto	l1090
 16377     0D23                     l14164:
 16378     0D23  032F               	decf	getAngleEn@angleDir2,w
 16379     0D24  1D03               	btfss	3,2
 16380     0D25  2D27               	goto	u11291
 16381     0D26  2D28               	goto	u11290
 16382     0D27                     u11291:
 16383     0D27  2D2F               	goto	l14174
 16384     0D28                     u11290:
 16385     0D28                     l14166:
 16386     0D28  0830               	movf	getAngleEn@angleDir3,w
 16387     0D29  1D03               	btfss	3,2
 16388     0D2A  2D2C               	goto	u11301
 16389     0D2B  2D2D               	goto	u11300
 16390     0D2C                     u11301:
 16391     0D2C  2D2F               	goto	l14174
 16392     0D2D                     u11300:
 16393     0D2D                     l14168:
 16394                           
 16395                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1895:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1897:         return 1;
 16396     0D2D  3001               	movlw	1
 16397     0D2E  2D48               	goto	l1090
 16398     0D2F                     l14174:
 16399     0D2F  082F               	movf	getAngleEn@angleDir2,w
 16400     0D30  1D03               	btfss	3,2
 16401     0D31  2D33               	goto	u11311
 16402     0D32  2D34               	goto	u11310
 16403     0D33                     u11311:
 16404     0D33  2D3B               	goto	l14184
 16405     0D34                     u11310:
 16406     0D34                     l14176:
 16407     0D34  0330               	decf	getAngleEn@angleDir3,w
 16408     0D35  1D03               	btfss	3,2
 16409     0D36  2D38               	goto	u11321
 16410     0D37  2D39               	goto	u11320
 16411     0D38                     u11321:
 16412     0D38  2D3B               	goto	l14184
 16413     0D39                     u11320:
 16414     0D39                     l14178:
 16415                           
 16416                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1899:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1901:         return 2;
 16417     0D39  3002               	movlw	2
 16418     0D3A  2D48               	goto	l1090
 16419     0D3B                     l14184:
 16420     0D3B  032F               	decf	getAngleEn@angleDir2,w
 16421     0D3C  1D03               	btfss	3,2
 16422     0D3D  2D3F               	goto	u11331
 16423     0D3E  2D40               	goto	u11330
 16424     0D3F                     u11331:
 16425     0D3F  2D47               	goto	l1093
 16426     0D40                     u11330:
 16427     0D40                     l14186:
 16428     0D40  0330               	decf	getAngleEn@angleDir3,w
 16429     0D41  1D03               	btfss	3,2
 16430     0D42  2D44               	goto	u11341
 16431     0D43  2D45               	goto	u11340
 16432     0D44                     u11341:
 16433     0D44  2D47               	goto	l1093
 16434     0D45                     u11340:
 16435     0D45                     l14188:
 16436                           
 16437                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1903:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1905:         return 3;
 16438     0D45  3003               	movlw	3
 16439     0D46  2D48               	goto	l1090
 16440     0D47                     l1093:
 16441     0D47  2D21               	goto	l14158
 16442     0D48                     l1090:
 16443     0D48  0008               	return
 16444     0D49                     __end_of_getAngleEn:
 16445                           
 16446                           	psect	text20
 16447     1025                     __ptext20:	
 16448 ;; *************** function _readRegister *****************
 16449 ;; Defined at:
 16450 ;;		line 172 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 16451 ;; Parameters:    Size  Location     Type
 16452 ;;  regAddress      1    wreg     unsigned char 
 16453 ;; Auto vars:     Size  Location     Type
 16454 ;;  regAddress      1   10[BANK0 ] unsigned char 
 16455 ;;  regVal          1   11[BANK0 ] unsigned char 
 16456 ;; Return value:  Size  Location     Type
 16457 ;;                  1    wreg      unsigned char 
 16458 ;; Registers used:
 16459 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16460 ;; Tracked objects:
 16461 ;;		On entry : 0/0
 16462 ;;		On exit  : 0/0
 16463 ;;		Unchanged: 0/0
 16464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16465 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16466 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16468 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16469 ;;Total ram usage:        2 bytes
 16470 ;; Hardware stack levels used: 1
 16471 ;; Hardware stack levels required when called: 13
 16472 ;; This function calls:
 16473 ;;		_i2c_read1ByteRegister
 16474 ;; This function is called by:
 16475 ;;		_setOperatingMode
 16476 ;;		_setMagneticChannel
 16477 ;;		_setXYAxisRange
 16478 ;;		_setZAxisRange
 16479 ;;		_setTemperatureEn
 16480 ;;		_getLowPower
 16481 ;;		_getOperatingMode
 16482 ;;		_getMagneticChannel
 16483 ;;		_getAngleEn
 16484 ;;		_getTemperatureEN
 16485 ;;		_getDeviceStatus
 16486 ;;		_setCRCMode
 16487 ;;		_setMagTemp
 16488 ;;		_setConvAvg
 16489 ;;		_setReadMode
 16490 ;;		_setIntThreshold
 16491 ;;		_setLowPower
 16492 ;;		_setGlitchFilter
 16493 ;;		_setTriggerMode
 16494 ;;		_setSleeptime
 16495 ;;		_setMagDir
 16496 ;;		_setMagnitudeGain
 16497 ;;		_setAngleEn
 16498 ;;		_setInterruptResult
 16499 ;;		_setThresholdEn
 16500 ;;		_setIntPinState
 16501 ;;		_setInterruptMode
 16502 ;;		_setMaskInterrupt
 16503 ;;		_setI2CAddressEN
 16504 ;;		_setOscillatorError
 16505 ;;		_getCRCMode
 16506 ;;		_getMagTemp
 16507 ;;		_getConvAvg
 16508 ;;		_getReadMode
 16509 ;;		_getIntThreshold
 16510 ;;		_getGlitchFiler
 16511 ;;		_getTriggerMode
 16512 ;;		_getSleeptime
 16513 ;;		_getMagDir
 16514 ;;		_getMagnitudeChannelSelect
 16515 ;;		_getMagneticGain
 16516 ;;		_getMagneticOffset1
 16517 ;;		_getMagneticOffset2
 16518 ;;		_getXYAxisRange
 16519 ;;		_getZAxisRange
 16520 ;;		_getXThreshold
 16521 ;;		_getYThreshold
 16522 ;;		_getZThreshold
 16523 ;;		_getTemperatureThreshold
 16524 ;;		_getInterruptResult
 16525 ;;		_getThresholdEn
 16526 ;;		_getIntPinState
 16527 ;;		_getInterruptMode
 16528 ;;		_getMaskInt
 16529 ;;		_getSetCount
 16530 ;;		_getPOR
 16531 ;;		_getDiagStatus
 16532 ;;		_getResultStatus
 16533 ;;		_getI2CAddress
 16534 ;;		_getDeviceID
 16535 ;;		_getInterruptPinStatus
 16536 ;;		_getXData
 16537 ;;		_getYData
 16538 ;;		_getZData
 16539 ;;		_getAngleResult
 16540 ;;		_getMagnitudeResult
 16541 ;; This function uses a non-reentrant model
 16542 ;;
 16543                           
 16544     1025                     _readRegister:	
 16545                           ;psect for function _readRegister
 16546                           
 16547                           
 16548                           ;incstack = 0
 16549                           ; Regs used in _readRegister: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16550                           ;readRegister@regAddress stored from wreg
 16551     1025  0140               	movlb	0	; select bank0
 16552     1026  00AA               	movwf	readRegister@regAddress
 16553     1027                     l13346:
 16554                           
 16555                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 173:     uint8_t regVa
      +                          l;;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 174:     regVal = i2
      +                          c_read1ByteRegister(0X22, regAddress);
 16556     1027  082A               	movf	readRegister@regAddress,w
 16557     1028  00A4               	movwf	i2c_read1ByteRegister@reg
 16558     1029  3022               	movlw	34
 16559     102A  318B  23B3  3190   	fcall	_i2c_read1ByteRegister
 16560     102D  0140               	movlb	0	; select bank0
 16561     102E  00AB               	movwf	readRegister@regVal
 16562     102F                     l13348:
 16563                           
 16564                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 175:     return regVal
      +                          ;
 16565     102F  082B               	movf	readRegister@regVal,w
 16566     1030                     l679:
 16567     1030  0008               	return
 16568     1031                     __end_of_readRegister:
 16569                           
 16570                           	psect	text21
 16571     1241                     __ptext21:	
 16572 ;; *************** function _bitRead8 *****************
 16573 ;; Defined at:
 16574 ;;		line 2519 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 16575 ;; Parameters:    Size  Location     Type
 16576 ;;  reg             2    1[COMMON] PTR unsigned char 
 16577 ;;		 -> RAM(8192), number(1), 
 16578 ;;  position        1    3[COMMON] unsigned char 
 16579 ;; Auto vars:     Size  Location     Type
 16580 ;;  mask            1    5[COMMON] unsigned char 
 16581 ;; Return value:  Size  Location     Type
 16582 ;;                  1    wreg      unsigned char 
 16583 ;; Registers used:
 16584 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 16585 ;; Tracked objects:
 16586 ;;		On entry : 0/0
 16587 ;;		On exit  : 0/0
 16588 ;;		Unchanged: 0/0
 16589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16590 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16591 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16592 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16593 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16594 ;;Total ram usage:        5 bytes
 16595 ;; Hardware stack levels used: 1
 16596 ;; Hardware stack levels required when called: 4
 16597 ;; This function calls:
 16598 ;;		Nothing
 16599 ;; This function is called by:
 16600 ;;		_begin
 16601 ;;		_getLowPower
 16602 ;;		_getOperatingMode
 16603 ;;		_getMagneticChannel
 16604 ;;		_getAngleEn
 16605 ;;		_getTemperatureEN
 16606 ;;		_getError
 16607 ;;		_getCRCMode
 16608 ;;		_getMagTemp
 16609 ;;		_getConvAvg
 16610 ;;		_getReadMode
 16611 ;;		_getIntThreshold
 16612 ;;		_getGlitchFiler
 16613 ;;		_getTriggerMode
 16614 ;;		_getSleeptime
 16615 ;;		_getMagDir
 16616 ;;		_getMagnitudeChannelSelect
 16617 ;;		_getXYAxisRange
 16618 ;;		_getZAxisRange
 16619 ;;		_getInterruptResult
 16620 ;;		_getThresholdEn
 16621 ;;		_getIntPinState
 16622 ;;		_getInterruptMode
 16623 ;;		_getMaskInt
 16624 ;;		_getPOR
 16625 ;;		_getDiagStatus
 16626 ;;		_getResultStatus
 16627 ;;		_getDeviceID
 16628 ;;		_getInterruptPinStatus
 16629 ;; This function uses a non-reentrant model
 16630 ;;
 16631                           
 16632     1241                     _bitRead8:	
 16633                           ;psect for function _bitRead8
 16634                           
 16635     1241                     l13432:	
 16636                           ;incstack = 0
 16637                           ; Regs used in _bitRead8: [wreg+fsr1l+fsr1h+status,2+status,0]
 16638                           
 16639                           
 16640                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2520:     uint8_t mask
      +                           = (1 << position) & *reg;
 16641     1241  0871               	movf	bitRead8@reg,w
 16642     1242  0086               	movwf	6
 16643     1243  0872               	movf	bitRead8@reg+1,w
 16644     1244  0087               	movwf	7
 16645     1245  3001               	movlw	1
 16646     1246  00F4               	movwf	??_bitRead8
 16647     1247  0A73               	incf	bitRead8@position,w
 16648     1248  2A4A               	goto	u10164
 16649     1249                     u10165:
 16650     1249  35F4               	lslf	??_bitRead8,f
 16651     124A                     u10164:
 16652     124A  0B89               	decfsz	9,f
 16653     124B  2A49               	goto	u10165
 16654     124C  0874               	movf	??_bitRead8,w
 16655     124D  0501               	andwf	1,w
 16656     124E  00F5               	movwf	bitRead8@mask
 16657     124F                     l13434:
 16658                           
 16659                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2522:     if (mask == 
      +                          0) {
 16660     124F  0875               	movf	bitRead8@mask,w
 16661     1250  1D03               	btfss	3,2
 16662     1251  2A53               	goto	u10171
 16663     1252  2A54               	goto	u10170
 16664     1253                     u10171:
 16665     1253  2A56               	goto	l13442
 16666     1254                     u10170:
 16667     1254                     l13436:
 16668                           
 16669                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2523:         return 0
      +                          ;
 16670     1254  3000               	movlw	0
 16671     1255  2A57               	goto	l1223
 16672     1256                     l13442:
 16673                           
 16674                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2525:         return 1
      +                          ;
 16675     1256  3001               	movlw	1
 16676     1257                     l1223:
 16677     1257  0008               	return
 16678     1258                     __end_of_bitRead8:
 16679                           
 16680                           	psect	text22
 16681     1EDB                     __ptext22:	
 16682 ;; *************** function _TMR0_HasOverflowOccured *****************
 16683 ;; Defined at:
 16684 ;;		line 127 in file "mcc_generated_files/tmr0.c"
 16685 ;; Parameters:    Size  Location     Type
 16686 ;;		None
 16687 ;; Auto vars:     Size  Location     Type
 16688 ;;		None
 16689 ;; Return value:  Size  Location     Type
 16690 ;;                  1    wreg      _Bool 
 16691 ;; Registers used:
 16692 ;;		wreg, status,2, status,0
 16693 ;; Tracked objects:
 16694 ;;		On entry : 0/0
 16695 ;;		On exit  : 0/0
 16696 ;;		Unchanged: 0/0
 16697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16698 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16699 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16701 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16702 ;;Total ram usage:        0 bytes
 16703 ;; Hardware stack levels used: 1
 16704 ;; Hardware stack levels required when called: 4
 16705 ;; This function calls:
 16706 ;;		Nothing
 16707 ;; This function is called by:
 16708 ;;		_main
 16709 ;; This function uses a non-reentrant model
 16710 ;;
 16711                           
 16712     1EDB                     _TMR0_HasOverflowOccured:	
 16713                           ;psect for function _TMR0_HasOverflowOccured
 16714                           
 16715     1EDB                     l14674:	
 16716                           ;incstack = 0
 16717                           ; Regs used in _TMR0_HasOverflowOccured: [wreg+status,2+status,0]
 16718                           
 16719                           
 16720                           ;mcc_generated_files/tmr0.c: 130:     return(PIR0bits.TMR0IF);
 16721     1EDB  014E               	movlb	14	; select bank14
 16722     1EDC  0E0C               	swapf	12,w	;volatile
 16723     1EDD  0C89               	rrf	9,f
 16724     1EDE  3901               	andlw	1
 16725     1EDF                     l2146:
 16726     1EDF  0008               	return
 16727     1EE0                     __end_of_TMR0_HasOverflowOccured:
 16728                           
 16729                           	psect	text23
 16730     11FE                     __ptext23:	
 16731 ;; *************** function _SYSTEM_Initialize *****************
 16732 ;; Defined at:
 16733 ;;		line 50 in file "mcc_generated_files/mcc.c"
 16734 ;; Parameters:    Size  Location     Type
 16735 ;;		None
 16736 ;; Auto vars:     Size  Location     Type
 16737 ;;		None
 16738 ;; Return value:  Size  Location     Type
 16739 ;;                  1    wreg      void 
 16740 ;; Registers used:
 16741 ;;		wreg, status,2, status,0, pclath, cstack
 16742 ;; Tracked objects:
 16743 ;;		On entry : 0/0
 16744 ;;		On exit  : 0/0
 16745 ;;		Unchanged: 0/0
 16746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16747 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16748 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16749 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16750 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16751 ;;Total ram usage:        0 bytes
 16752 ;; Hardware stack levels used: 1
 16753 ;; Hardware stack levels required when called: 6
 16754 ;; This function calls:
 16755 ;;		_EUSART1_Initialize
 16756 ;;		_EUSART2_Initialize
 16757 ;;		_I2C1_Initialize
 16758 ;;		_OSCILLATOR_Initialize
 16759 ;;		_PIN_MANAGER_Initialize
 16760 ;;		_PMD_Initialize
 16761 ;;		_TMR0_Initialize
 16762 ;; This function is called by:
 16763 ;;		_main
 16764 ;; This function uses a non-reentrant model
 16765 ;;
 16766                           
 16767     11FE                     _SYSTEM_Initialize:	
 16768                           ;psect for function _SYSTEM_Initialize
 16769                           
 16770     11FE                     l14660:	
 16771                           ;incstack = 0
 16772                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 16773                           
 16774                           
 16775                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
 16776     11FE  319F  27BF  3191   	fcall	_PMD_Initialize
 16777     1201                     l14662:
 16778                           
 16779                           ;mcc_generated_files/mcc.c: 53:     I2C1_Initialize();
 16780     1201  319F  278E  3191   	fcall	_I2C1_Initialize
 16781     1204                     l14664:
 16782                           
 16783                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 16784     1204  318A  22D1  3191   	fcall	_PIN_MANAGER_Initialize
 16785     1207                     l14666:
 16786                           
 16787                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 16788     1207  319F  27B5  3191   	fcall	_OSCILLATOR_Initialize
 16789     120A                     l14668:
 16790                           
 16791                           ;mcc_generated_files/mcc.c: 56:     TMR0_Initialize();
 16792     120A  3191  2194  3191   	fcall	_TMR0_Initialize
 16793     120D                     l14670:
 16794                           
 16795                           ;mcc_generated_files/mcc.c: 57:     EUSART1_Initialize();
 16796     120D  3189  213D  3191   	fcall	_EUSART1_Initialize
 16797     1210                     l14672:
 16798                           
 16799                           ;mcc_generated_files/mcc.c: 58:     EUSART2_Initialize();
 16800     1210  3189  217C  3191   	fcall	_EUSART2_Initialize
 16801     1213                     l2006:
 16802     1213  0008               	return
 16803     1214                     __end_of_SYSTEM_Initialize:
 16804                           
 16805                           	psect	text24
 16806     1194                     __ptext24:	
 16807 ;; *************** function _TMR0_Initialize *****************
 16808 ;; Defined at:
 16809 ;;		line 65 in file "mcc_generated_files/tmr0.c"
 16810 ;; Parameters:    Size  Location     Type
 16811 ;;		None
 16812 ;; Auto vars:     Size  Location     Type
 16813 ;;		None
 16814 ;; Return value:  Size  Location     Type
 16815 ;;                  1    wreg      void 
 16816 ;; Registers used:
 16817 ;;		wreg
 16818 ;; Tracked objects:
 16819 ;;		On entry : 0/0
 16820 ;;		On exit  : 0/0
 16821 ;;		Unchanged: 0/0
 16822 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16823 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16824 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16826 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16827 ;;Total ram usage:        0 bytes
 16828 ;; Hardware stack levels used: 1
 16829 ;; Hardware stack levels required when called: 4
 16830 ;; This function calls:
 16831 ;;		Nothing
 16832 ;; This function is called by:
 16833 ;;		_SYSTEM_Initialize
 16834 ;; This function uses a non-reentrant model
 16835 ;;
 16836                           
 16837     1194                     _TMR0_Initialize:	
 16838                           ;psect for function _TMR0_Initialize
 16839                           
 16840     1194                     l14368:	
 16841                           ;incstack = 0
 16842                           ; Regs used in _TMR0_Initialize: [wreg]
 16843                           
 16844                           
 16845                           ;mcc_generated_files/tmr0.c: 70:     T0CON1 = 0x47;
 16846     1194  3047               	movlw	71
 16847     1195  014B               	movlb	11	; select bank11
 16848     1196  009F               	movwf	31	;volatile
 16849                           
 16850                           ;mcc_generated_files/tmr0.c: 73:     TMR0H = 0x0B;
 16851     1197  300B               	movlw	11
 16852     1198  009D               	movwf	29	;volatile
 16853                           
 16854                           ;mcc_generated_files/tmr0.c: 76:     TMR0L = 0xDC;
 16855     1199  30DC               	movlw	220
 16856     119A  009C               	movwf	28	;volatile
 16857                           
 16858                           ;mcc_generated_files/tmr0.c: 79:     timer0ReloadVal16bit = (TMR0H << 8) | TMR0L;
 16859     119B  081D               	movf	29,w	;volatile
 16860     119C  0140               	movlb	0	; select bank0
 16861     119D  00CE               	movwf	_timer0ReloadVal16bit+1	;volatile
 16862     119E  014B               	movlb	11	; select bank11
 16863     119F  081C               	movf	28,w	;volatile
 16864     11A0  0140               	movlb	0	; select bank0
 16865     11A1  00CD               	movwf	_timer0ReloadVal16bit	;volatile
 16866     11A2                     l14370:
 16867                           
 16868                           ;mcc_generated_files/tmr0.c: 82:     PIR0bits.TMR0IF = 0;
 16869     11A2  014E               	movlb	14	; select bank14
 16870     11A3  128C               	bcf	12,5	;volatile
 16871                           
 16872                           ;mcc_generated_files/tmr0.c: 85:     T0CON0 = 0x90;
 16873     11A4  3090               	movlw	144
 16874     11A5  014B               	movlb	11	; select bank11
 16875     11A6  009E               	movwf	30	;volatile
 16876     11A7                     l2128:
 16877     11A7  0008               	return
 16878     11A8                     __end_of_TMR0_Initialize:
 16879                           
 16880                           	psect	text25
 16881     1FBF                     __ptext25:	
 16882 ;; *************** function _PMD_Initialize *****************
 16883 ;; Defined at:
 16884 ;;		line 77 in file "mcc_generated_files/mcc.c"
 16885 ;; Parameters:    Size  Location     Type
 16886 ;;		None
 16887 ;; Auto vars:     Size  Location     Type
 16888 ;;		None
 16889 ;; Return value:  Size  Location     Type
 16890 ;;                  1    wreg      void 
 16891 ;; Registers used:
 16892 ;;		status,2
 16893 ;; Tracked objects:
 16894 ;;		On entry : 0/0
 16895 ;;		On exit  : 0/0
 16896 ;;		Unchanged: 0/0
 16897 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16898 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16899 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16901 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16902 ;;Total ram usage:        0 bytes
 16903 ;; Hardware stack levels used: 1
 16904 ;; Hardware stack levels required when called: 4
 16905 ;; This function calls:
 16906 ;;		Nothing
 16907 ;; This function is called by:
 16908 ;;		_SYSTEM_Initialize
 16909 ;; This function uses a non-reentrant model
 16910 ;;
 16911                           
 16912     1FBF                     _PMD_Initialize:	
 16913                           ;psect for function _PMD_Initialize
 16914                           
 16915     1FBF                     l14282:	
 16916                           ;incstack = 0
 16917                           ; Regs used in _PMD_Initialize: [status,2]
 16918                           
 16919                           
 16920                           ;mcc_generated_files/mcc.c: 80:     PMD0 = 0x00;
 16921     1FBF  014F               	movlb	15	; select bank15
 16922     1FC0  0196               	clrf	22	;volatile
 16923                           
 16924                           ;mcc_generated_files/mcc.c: 82:     PMD1 = 0x00;
 16925     1FC1  0197               	clrf	23	;volatile
 16926                           
 16927                           ;mcc_generated_files/mcc.c: 84:     PMD2 = 0x00;
 16928     1FC2  0198               	clrf	24	;volatile
 16929                           
 16930                           ;mcc_generated_files/mcc.c: 86:     PMD3 = 0x00;
 16931     1FC3  0199               	clrf	25	;volatile
 16932                           
 16933                           ;mcc_generated_files/mcc.c: 88:     PMD4 = 0x00;
 16934     1FC4  019A               	clrf	26	;volatile
 16935                           
 16936                           ;mcc_generated_files/mcc.c: 90:     PMD5 = 0x00;
 16937     1FC5  019B               	clrf	27	;volatile
 16938                           
 16939                           ;mcc_generated_files/mcc.c: 92:     PMD6 = 0x00;
 16940     1FC6  019C               	clrf	28	;volatile
 16941                           
 16942                           ;mcc_generated_files/mcc.c: 94:     PMD7 = 0x00;
 16943     1FC7  019D               	clrf	29	;volatile
 16944     1FC8                     l2012:
 16945     1FC8  0008               	return
 16946     1FC9                     __end_of_PMD_Initialize:
 16947                           
 16948                           	psect	text26
 16949     0AD1                     __ptext26:	
 16950 ;; *************** function _PIN_MANAGER_Initialize *****************
 16951 ;; Defined at:
 16952 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 16953 ;; Parameters:    Size  Location     Type
 16954 ;;		None
 16955 ;; Auto vars:     Size  Location     Type
 16956 ;;		None
 16957 ;; Return value:  Size  Location     Type
 16958 ;;                  1    wreg      void 
 16959 ;; Registers used:
 16960 ;;		wreg, status,2, status,0, pclath, cstack
 16961 ;; Tracked objects:
 16962 ;;		On entry : 0/0
 16963 ;;		On exit  : 0/0
 16964 ;;		Unchanged: 0/0
 16965 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16966 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16967 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16968 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16969 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16970 ;;Total ram usage:        0 bytes
 16971 ;; Hardware stack levels used: 1
 16972 ;; Hardware stack levels required when called: 5
 16973 ;; This function calls:
 16974 ;;		_IOCAF6_SetInterruptHandler
 16975 ;; This function is called by:
 16976 ;;		_SYSTEM_Initialize
 16977 ;; This function uses a non-reentrant model
 16978 ;;
 16979                           
 16980     0AD1                     _PIN_MANAGER_Initialize:	
 16981                           ;psect for function _PIN_MANAGER_Initialize
 16982                           
 16983     0AD1                     l14292:	
 16984                           ;incstack = 0
 16985                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0+pclath+cstack]
 16986                           
 16987                           
 16988                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x00;
 16989     0AD1  0140               	movlb	0	; select bank0
 16990     0AD2  019C               	clrf	28	;volatile
 16991     0AD3                     l14294:
 16992                           
 16993                           ;mcc_generated_files/pin_manager.c: 63:     LATA = 0x31;
 16994     0AD3  3031               	movlw	49
 16995     0AD4  0098               	movwf	24	;volatile
 16996     0AD5                     l14296:
 16997                           
 16998                           ;mcc_generated_files/pin_manager.c: 64:     LATB = 0x00;
 16999     0AD5  0199               	clrf	25	;volatile
 17000                           
 17001                           ;mcc_generated_files/pin_manager.c: 65:     LATC = 0xC1;
 17002     0AD6  30C1               	movlw	193
 17003     0AD7  009A               	movwf	26	;volatile
 17004                           
 17005                           ;mcc_generated_files/pin_manager.c: 70:     TRISE = 0x08;
 17006     0AD8  3008               	movlw	8
 17007     0AD9  0096               	movwf	22	;volatile
 17008                           
 17009                           ;mcc_generated_files/pin_manager.c: 71:     TRISA = 0xDE;
 17010     0ADA  30DE               	movlw	222
 17011     0ADB  0092               	movwf	18	;volatile
 17012                           
 17013                           ;mcc_generated_files/pin_manager.c: 72:     TRISB = 0xEF;
 17014     0ADC  30EF               	movlw	239
 17015     0ADD  0093               	movwf	19	;volatile
 17016                           
 17017                           ;mcc_generated_files/pin_manager.c: 73:     TRISC = 0x25;
 17018     0ADE  3025               	movlw	37
 17019     0ADF  0094               	movwf	20	;volatile
 17020     0AE0                     l14298:
 17021                           
 17022                           ;mcc_generated_files/pin_manager.c: 78:     ANSELC = 0x00;
 17023     0AE0  017E               	movlb	62	; select bank62
 17024     0AE1  01CE               	clrf	78	;volatile
 17025     0AE2                     l14300:
 17026                           
 17027                           ;mcc_generated_files/pin_manager.c: 79:     ANSELB = 0xC9;
 17028     0AE2  30C9               	movlw	201
 17029     0AE3  00C3               	movwf	67	;volatile
 17030     0AE4                     l14302:
 17031                           
 17032                           ;mcc_generated_files/pin_manager.c: 80:     ANSELA = 0x0E;
 17033     0AE4  300E               	movlw	14
 17034     0AE5  00B8               	movwf	56	;volatile
 17035     0AE6                     l14304:
 17036                           
 17037                           ;mcc_generated_files/pin_manager.c: 85:     WPUE = 0x00;
 17038     0AE6  01E5               	clrf	101	;volatile
 17039     0AE7                     l14306:
 17040                           
 17041                           ;mcc_generated_files/pin_manager.c: 86:     WPUB = 0x00;
 17042     0AE7  01C4               	clrf	68	;volatile
 17043     0AE8                     l14308:
 17044                           
 17045                           ;mcc_generated_files/pin_manager.c: 87:     WPUA = 0x00;
 17046     0AE8  01B9               	clrf	57	;volatile
 17047     0AE9                     l14310:
 17048                           
 17049                           ;mcc_generated_files/pin_manager.c: 88:     WPUC = 0x00;
 17050     0AE9  01CF               	clrf	79	;volatile
 17051     0AEA                     l14312:
 17052                           
 17053                           ;mcc_generated_files/pin_manager.c: 93:     ODCONE = 0x00;
 17054     0AEA  01E6               	clrf	102	;volatile
 17055     0AEB                     l14314:
 17056                           
 17057                           ;mcc_generated_files/pin_manager.c: 94:     ODCONA = 0x00;
 17058     0AEB  01BA               	clrf	58	;volatile
 17059     0AEC                     l14316:
 17060                           
 17061                           ;mcc_generated_files/pin_manager.c: 95:     ODCONB = 0x00;
 17062     0AEC  01C5               	clrf	69	;volatile
 17063     0AED                     l14318:
 17064                           
 17065                           ;mcc_generated_files/pin_manager.c: 96:     ODCONC = 0x00;
 17066     0AED  01D0               	clrf	80	;volatile
 17067     0AEE                     l14320:
 17068                           
 17069                           ;mcc_generated_files/pin_manager.c: 101:     SLRCONA = 0xFF;
 17070     0AEE  30FF               	movlw	255
 17071     0AEF  00BB               	movwf	59	;volatile
 17072     0AF0                     l14322:
 17073                           
 17074                           ;mcc_generated_files/pin_manager.c: 102:     SLRCONB = 0xFF;
 17075     0AF0  30FF               	movlw	255
 17076     0AF1  00C6               	movwf	70	;volatile
 17077     0AF2                     l14324:
 17078                           
 17079                           ;mcc_generated_files/pin_manager.c: 103:     SLRCONC = 0xFF;
 17080     0AF2  30FF               	movlw	255
 17081     0AF3  00D1               	movwf	81	;volatile
 17082     0AF4                     l14326:
 17083                           
 17084                           ;mcc_generated_files/pin_manager.c: 108:     INLVLA = 0x3F;
 17085     0AF4  303F               	movlw	63
 17086     0AF5  00BC               	movwf	60	;volatile
 17087     0AF6                     l14328:
 17088                           
 17089                           ;mcc_generated_files/pin_manager.c: 109:     INLVLB = 0x3F;
 17090     0AF6  303F               	movlw	63
 17091     0AF7  00C7               	movwf	71	;volatile
 17092     0AF8                     l14330:
 17093                           
 17094                           ;mcc_generated_files/pin_manager.c: 110:     INLVLC = 0x3F;
 17095     0AF8  303F               	movlw	63
 17096     0AF9  00D2               	movwf	82	;volatile
 17097     0AFA                     l14332:
 17098                           
 17099                           ;mcc_generated_files/pin_manager.c: 117:     IOCAFbits.IOCAF6 = 0;
 17100     0AFA  133F               	bcf	63,6	;volatile
 17101     0AFB                     l14334:
 17102                           
 17103                           ;mcc_generated_files/pin_manager.c: 119:     IOCANbits.IOCAN6 = 0;
 17104     0AFB  133E               	bcf	62,6	;volatile
 17105     0AFC                     l14336:
 17106                           
 17107                           ;mcc_generated_files/pin_manager.c: 121:     IOCAPbits.IOCAP6 = 1;
 17108     0AFC  173D               	bsf	61,6	;volatile
 17109     0AFD                     l14338:
 17110                           
 17111                           ;mcc_generated_files/pin_manager.c: 126:     IOCAF6_SetInterruptHandler(IOCAF6_DefaultIn
      +                          terruptHandler);
 17112     0AFD  3000               	movlw	low _IOCAF6_DefaultInterruptHandler
 17113     0AFE  00F1               	movwf	IOCAF6_SetInterruptHandler@InterruptHandler
 17114     0AFF  3010               	movlw	high _IOCAF6_DefaultInterruptHandler
 17115     0B00  00F2               	movwf	IOCAF6_SetInterruptHandler@InterruptHandler+1
 17116     0B01  319F  273A  318A   	fcall	_IOCAF6_SetInterruptHandler
 17117     0B04                     l14340:
 17118                           
 17119                           ;mcc_generated_files/pin_manager.c: 129:     PIE0bits.IOCIE = 1;
 17120     0B04  014E               	movlb	14	; select bank14
 17121     0B05  1616               	bsf	22,4	;volatile
 17122     0B06                     l14342:
 17123                           
 17124                           ;mcc_generated_files/pin_manager.c: 132:     SSP1CLKPPS = 0x09;
 17125     0B06  3009               	movlw	9
 17126     0B07  017D               	movlb	61	; select bank61
 17127     0B08  00C5               	movwf	69	;volatile
 17128     0B09                     l14344:
 17129                           
 17130                           ;mcc_generated_files/pin_manager.c: 133:     RB1PPS = 0x13;
 17131     0B09  3013               	movlw	19
 17132     0B0A  017E               	movlb	62	; select bank62
 17133     0B0B  0099               	movwf	25	;volatile
 17134     0B0C                     l14346:
 17135                           
 17136                           ;mcc_generated_files/pin_manager.c: 134:     RB2PPS = 0x14;
 17137     0B0C  3014               	movlw	20
 17138     0B0D  009A               	movwf	26	;volatile
 17139     0B0E                     l14348:
 17140                           
 17141                           ;mcc_generated_files/pin_manager.c: 135:     RC4PPS = 0x25;
 17142     0B0E  3025               	movlw	37
 17143     0B0F  00A4               	movwf	36	;volatile
 17144     0B10                     l14350:
 17145                           
 17146                           ;mcc_generated_files/pin_manager.c: 136:     RB4PPS = 0x0F;
 17147     0B10  300F               	movlw	15
 17148     0B11  009C               	movwf	28	;volatile
 17149     0B12                     l14352:
 17150                           
 17151                           ;mcc_generated_files/pin_manager.c: 137:     RX2DTPPS = 0x15;
 17152     0B12  3015               	movlw	21
 17153     0B13  017D               	movlb	61	; select bank61
 17154     0B14  00CD               	movwf	77	;volatile
 17155     0B15                     l14354:
 17156                           
 17157                           ;mcc_generated_files/pin_manager.c: 138:     SSP1DATPPS = 0x0A;
 17158     0B15  300A               	movlw	10
 17159     0B16  00C6               	movwf	70	;volatile
 17160     0B17                     l14356:
 17161                           
 17162                           ;mcc_generated_files/pin_manager.c: 139:     RX1DTPPS = 0x0D;
 17163     0B17  300D               	movlw	13
 17164     0B18  00CB               	movwf	75	;volatile
 17165     0B19                     l2097:
 17166     0B19  0008               	return
 17167     0B1A                     __end_of_PIN_MANAGER_Initialize:
 17168                           
 17169                           	psect	text27
 17170     1F3A                     __ptext27:	
 17171 ;; *************** function _IOCAF6_SetInterruptHandler *****************
 17172 ;; Defined at:
 17173 ;;		line 169 in file "mcc_generated_files/pin_manager.c"
 17174 ;; Parameters:    Size  Location     Type
 17175 ;;  InterruptHan    2    1[COMMON] PTR FTN()void 
 17176 ;;		 -> IOCAF6_DefaultInterruptHandler(1), 
 17177 ;; Auto vars:     Size  Location     Type
 17178 ;;		None
 17179 ;; Return value:  Size  Location     Type
 17180 ;;                  1    wreg      void 
 17181 ;; Registers used:
 17182 ;;		wreg
 17183 ;; Tracked objects:
 17184 ;;		On entry : 0/0
 17185 ;;		On exit  : 0/0
 17186 ;;		Unchanged: 0/0
 17187 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17188 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17191 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17192 ;;Total ram usage:        2 bytes
 17193 ;; Hardware stack levels used: 1
 17194 ;; Hardware stack levels required when called: 4
 17195 ;; This function calls:
 17196 ;;		Nothing
 17197 ;; This function is called by:
 17198 ;;		_PIN_MANAGER_Initialize
 17199 ;; This function uses a non-reentrant model
 17200 ;;
 17201                           
 17202     1F3A                     _IOCAF6_SetInterruptHandler:	
 17203                           ;psect for function _IOCAF6_SetInterruptHandler
 17204                           
 17205     1F3A                     l13628:	
 17206                           ;incstack = 0
 17207                           ; Regs used in _IOCAF6_SetInterruptHandler: [wreg]
 17208                           
 17209                           
 17210                           ;mcc_generated_files/pin_manager.c: 170:     IOCAF6_InterruptHandler = InterruptHandler;
 17211     1F3A  0872               	movf	IOCAF6_SetInterruptHandler@InterruptHandler+1,w
 17212     1F3B  0141               	movlb	1	; select bank1
 17213     1F3C  00EB               	movwf	(_IOCAF6_InterruptHandler+1)^(0+128)
 17214     1F3D  0871               	movf	IOCAF6_SetInterruptHandler@InterruptHandler,w
 17215     1F3E  00EA               	movwf	_IOCAF6_InterruptHandler^(0+128)
 17216     1F3F                     l2108:
 17217     1F3F  0008               	return
 17218     1F40                     __end_of_IOCAF6_SetInterruptHandler:
 17219                           
 17220                           	psect	text28
 17221     1FB5                     __ptext28:	
 17222 ;; *************** function _OSCILLATOR_Initialize *****************
 17223 ;; Defined at:
 17224 ;;		line 61 in file "mcc_generated_files/mcc.c"
 17225 ;; Parameters:    Size  Location     Type
 17226 ;;		None
 17227 ;; Auto vars:     Size  Location     Type
 17228 ;;		None
 17229 ;; Return value:  Size  Location     Type
 17230 ;;                  1    wreg      void 
 17231 ;; Registers used:
 17232 ;;		wreg, status,2
 17233 ;; Tracked objects:
 17234 ;;		On entry : 0/0
 17235 ;;		On exit  : 0/0
 17236 ;;		Unchanged: 0/0
 17237 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17238 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17239 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17241 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17242 ;;Total ram usage:        0 bytes
 17243 ;; Hardware stack levels used: 1
 17244 ;; Hardware stack levels required when called: 4
 17245 ;; This function calls:
 17246 ;;		Nothing
 17247 ;; This function is called by:
 17248 ;;		_SYSTEM_Initialize
 17249 ;; This function uses a non-reentrant model
 17250 ;;
 17251                           
 17252     1FB5                     _OSCILLATOR_Initialize:	
 17253                           ;psect for function _OSCILLATOR_Initialize
 17254                           
 17255     1FB5                     l14358:	
 17256                           ;incstack = 0
 17257                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 17258                           
 17259                           
 17260                           ;mcc_generated_files/mcc.c: 64:     OSCCON1 = 0x60;
 17261     1FB5  3060               	movlw	96
 17262     1FB6  0151               	movlb	17	; select bank17
 17263     1FB7  008D               	movwf	13	;volatile
 17264     1FB8                     l14360:
 17265                           
 17266                           ;mcc_generated_files/mcc.c: 66:     OSCCON3 = 0x00;
 17267     1FB8  018F               	clrf	15	;volatile
 17268     1FB9                     l14362:
 17269                           
 17270                           ;mcc_generated_files/mcc.c: 68:     OSCEN = 0x00;
 17271     1FB9  0191               	clrf	17	;volatile
 17272                           
 17273                           ;mcc_generated_files/mcc.c: 70:     OSCFRQ = 0x06;
 17274     1FBA  3006               	movlw	6
 17275     1FBB  0093               	movwf	19	;volatile
 17276     1FBC                     l14364:
 17277                           
 17278                           ;mcc_generated_files/mcc.c: 72:     OSCSTAT = 0x00;
 17279     1FBC  0190               	clrf	16	;volatile
 17280     1FBD                     l14366:
 17281                           
 17282                           ;mcc_generated_files/mcc.c: 74:     OSCTUNE = 0x00;
 17283     1FBD  0192               	clrf	18	;volatile
 17284     1FBE                     l2009:
 17285     1FBE  0008               	return
 17286     1FBF                     __end_of_OSCILLATOR_Initialize:
 17287                           
 17288                           	psect	text29
 17289     1F8E                     __ptext29:	
 17290 ;; *************** function _I2C1_Initialize *****************
 17291 ;; Defined at:
 17292 ;;		line 167 in file "mcc_generated_files/i2c1_master.c"
 17293 ;; Parameters:    Size  Location     Type
 17294 ;;		None
 17295 ;; Auto vars:     Size  Location     Type
 17296 ;;		None
 17297 ;; Return value:  Size  Location     Type
 17298 ;;                  1    wreg      void 
 17299 ;; Registers used:
 17300 ;;		wreg, status,2
 17301 ;; Tracked objects:
 17302 ;;		On entry : 0/0
 17303 ;;		On exit  : 0/0
 17304 ;;		Unchanged: 0/0
 17305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17307 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17309 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17310 ;;Total ram usage:        0 bytes
 17311 ;; Hardware stack levels used: 1
 17312 ;; Hardware stack levels required when called: 4
 17313 ;; This function calls:
 17314 ;;		Nothing
 17315 ;; This function is called by:
 17316 ;;		_SYSTEM_Initialize
 17317 ;; This function uses a non-reentrant model
 17318 ;;
 17319                           
 17320     1F8E                     _I2C1_Initialize:	
 17321                           ;psect for function _I2C1_Initialize
 17322                           
 17323     1F8E                     l14284:	
 17324                           ;incstack = 0
 17325                           ; Regs used in _I2C1_Initialize: [wreg+status,2]
 17326                           
 17327                           
 17328                           ;mcc_generated_files/i2c1_master.c: 169:     SSP1STAT = 0x00;
 17329     1F8E  0143               	movlb	3	; select bank3
 17330     1F8F  018F               	clrf	15	;volatile
 17331     1F90                     l14286:
 17332                           
 17333                           ;mcc_generated_files/i2c1_master.c: 170:     SSP1CON1 = 0x08;
 17334     1F90  3008               	movlw	8
 17335     1F91  0090               	movwf	16	;volatile
 17336     1F92                     l14288:
 17337                           
 17338                           ;mcc_generated_files/i2c1_master.c: 171:     SSP1CON2 = 0x00;
 17339     1F92  0191               	clrf	17	;volatile
 17340                           
 17341                           ;mcc_generated_files/i2c1_master.c: 172:     SSP1ADD = 0x4F;
 17342     1F93  304F               	movlw	79
 17343     1F94  008D               	movwf	13	;volatile
 17344     1F95                     l14290:
 17345                           
 17346                           ;mcc_generated_files/i2c1_master.c: 173:     SSP1CON1bits.SSPEN = 0;
 17347     1F95  1290               	bcf	16,5	;volatile
 17348     1F96                     l2396:
 17349     1F96  0008               	return
 17350     1F97                     __end_of_I2C1_Initialize:
 17351                           
 17352                           	psect	text30
 17353     097C                     __ptext30:	
 17354 ;; *************** function _EUSART2_Initialize *****************
 17355 ;; Defined at:
 17356 ;;		line 88 in file "mcc_generated_files/eusart2.c"
 17357 ;; Parameters:    Size  Location     Type
 17358 ;;		None
 17359 ;; Auto vars:     Size  Location     Type
 17360 ;;		None
 17361 ;; Return value:  Size  Location     Type
 17362 ;;                  1    wreg      void 
 17363 ;; Registers used:
 17364 ;;		wreg, status,2, status,0, pclath, cstack
 17365 ;; Tracked objects:
 17366 ;;		On entry : 0/0
 17367 ;;		On exit  : 0/0
 17368 ;;		Unchanged: 0/0
 17369 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17370 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17371 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17373 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17374 ;;Total ram usage:        0 bytes
 17375 ;; Hardware stack levels used: 1
 17376 ;; Hardware stack levels required when called: 5
 17377 ;; This function calls:
 17378 ;;		_EUSART2_SetErrorHandler
 17379 ;;		_EUSART2_SetFramingErrorHandler
 17380 ;;		_EUSART2_SetOverrunErrorHandler
 17381 ;;		_EUSART2_SetRxInterruptHandler
 17382 ;;		_EUSART2_SetTxInterruptHandler
 17383 ;; This function is called by:
 17384 ;;		_SYSTEM_Initialize
 17385 ;; This function uses a non-reentrant model
 17386 ;;
 17387                           
 17388     097C                     _EUSART2_Initialize:	
 17389                           ;psect for function _EUSART2_Initialize
 17390                           
 17391     097C                     l14218:	
 17392                           ;incstack = 0
 17393                           ; Regs used in _EUSART2_Initialize: [wreg+status,2+status,0+pclath+cstack]
 17394                           
 17395                           
 17396                           ;mcc_generated_files/eusart2.c: 91:     PIE3bits.RC2IE = 0;
 17397     097C  014E               	movlb	14	; select bank14
 17398     097D  1399               	bcf	25,7	;volatile
 17399     097E                     l14220:
 17400                           
 17401                           ;mcc_generated_files/eusart2.c: 92:     EUSART2_SetRxInterruptHandler(EUSART2_Receive_IS
      +                          R);
 17402     097E  304D               	movlw	low _EUSART2_Receive_ISR
 17403     097F  00F1               	movwf	EUSART2_SetRxInterruptHandler@interruptHandler
 17404     0980  3008               	movlw	high _EUSART2_Receive_ISR
 17405     0981  00F2               	movwf	EUSART2_SetRxInterruptHandler@interruptHandler+1
 17406     0982  319F  272E  3189   	fcall	_EUSART2_SetRxInterruptHandler
 17407     0985                     l14222:
 17408                           
 17409                           ;mcc_generated_files/eusart2.c: 93:     PIE3bits.TX2IE = 0;
 17410     0985  014E               	movlb	14	; select bank14
 17411     0986  1319               	bcf	25,6	;volatile
 17412                           
 17413                           ;mcc_generated_files/eusart2.c: 94:     EUSART2_SetTxInterruptHandler(EUSART2_Transmit_I
      +                          SR);
 17414     0987  30E4               	movlw	low _EUSART2_Transmit_ISR
 17415     0988  00F1               	movwf	EUSART2_SetTxInterruptHandler@interruptHandler
 17416     0989  3013               	movlw	high _EUSART2_Transmit_ISR
 17417     098A  00F2               	movwf	EUSART2_SetTxInterruptHandler@interruptHandler+1
 17418     098B  319F  2734  3189   	fcall	_EUSART2_SetTxInterruptHandler
 17419     098E                     l14224:
 17420                           
 17421                           ;mcc_generated_files/eusart2.c: 98:     BAUD2CON = 0x08;
 17422     098E  3008               	movlw	8
 17423     098F  0154               	movlb	20	; select bank20
 17424     0990  009F               	movwf	31	;volatile
 17425     0991                     l14226:
 17426                           
 17427                           ;mcc_generated_files/eusart2.c: 101:     RC2STA = 0x90;
 17428     0991  3090               	movlw	144
 17429     0992  009D               	movwf	29	;volatile
 17430     0993                     l14228:
 17431                           
 17432                           ;mcc_generated_files/eusart2.c: 104:     TX2STA = 0x24;
 17433     0993  3024               	movlw	36
 17434     0994  009E               	movwf	30	;volatile
 17435     0995                     l14230:
 17436                           
 17437                           ;mcc_generated_files/eusart2.c: 107:     SP2BRGL = 0x40;
 17438     0995  3040               	movlw	64
 17439     0996  009B               	movwf	27	;volatile
 17440     0997                     l14232:
 17441                           
 17442                           ;mcc_generated_files/eusart2.c: 110:     SP2BRGH = 0x03;
 17443     0997  3003               	movlw	3
 17444     0998  009C               	movwf	28	;volatile
 17445     0999                     l14234:
 17446                           
 17447                           ;mcc_generated_files/eusart2.c: 113:     EUSART2_SetFramingErrorHandler(EUSART2_DefaultF
      +                          ramingErrorHandler);
 17448     0999  305F               	movlw	low _EUSART2_DefaultFramingErrorHandler
 17449     099A  00F1               	movwf	EUSART2_SetFramingErrorHandler@interruptHandler
 17450     099B  301E               	movlw	high _EUSART2_DefaultFramingErrorHandler
 17451     099C  00F2               	movwf	EUSART2_SetFramingErrorHandler@interruptHandler+1
 17452     099D  319F  2722  3189   	fcall	_EUSART2_SetFramingErrorHandler
 17453     09A0                     l14236:
 17454                           
 17455                           ;mcc_generated_files/eusart2.c: 114:     EUSART2_SetOverrunErrorHandler(EUSART2_DefaultO
      +                          verrunErrorHandler);
 17456     09A0  308B               	movlw	low _EUSART2_DefaultOverrunErrorHandler
 17457     09A1  00F1               	movwf	EUSART2_SetOverrunErrorHandler@interruptHandler
 17458     09A2  301E               	movlw	high _EUSART2_DefaultOverrunErrorHandler
 17459     09A3  00F2               	movwf	EUSART2_SetOverrunErrorHandler@interruptHandler+1
 17460     09A4  319F  2728  3189   	fcall	_EUSART2_SetOverrunErrorHandler
 17461     09A7                     l14238:
 17462                           
 17463                           ;mcc_generated_files/eusart2.c: 115:     EUSART2_SetErrorHandler(EUSART2_DefaultErrorHan
      +                          dler);
 17464     09A7  3087               	movlw	low _EUSART2_DefaultErrorHandler
 17465     09A8  00F1               	movwf	EUSART2_SetErrorHandler@interruptHandler
 17466     09A9  301E               	movlw	high _EUSART2_DefaultErrorHandler
 17467     09AA  00F2               	movwf	EUSART2_SetErrorHandler@interruptHandler+1
 17468     09AB  319F  271C  3189   	fcall	_EUSART2_SetErrorHandler
 17469     09AE                     l14240:
 17470                           
 17471                           ;mcc_generated_files/eusart2.c: 117:     eusart2RxLastError.status = 0;
 17472     09AE  0141               	movlb	1	; select bank1
 17473     09AF  01E7               	clrf	_eusart2RxLastError^(0+128)	;volatile
 17474     09B0                     l14242:
 17475                           
 17476                           ;mcc_generated_files/eusart2.c: 120:     eusart2TxHead = 0;
 17477     09B0  0140               	movlb	0	; select bank0
 17478     09B1  01DC               	clrf	_eusart2TxHead	;volatile
 17479     09B2                     l14244:
 17480                           
 17481                           ;mcc_generated_files/eusart2.c: 121:     eusart2TxTail = 0;
 17482     09B2  01DB               	clrf	_eusart2TxTail	;volatile
 17483     09B3                     l14246:
 17484                           
 17485                           ;mcc_generated_files/eusart2.c: 122:     eusart2TxBufferRemaining = sizeof(eusart2TxBuff
      +                          er);
 17486     09B3  3008               	movlw	8
 17487     09B4  00DA               	movwf	_eusart2TxBufferRemaining	;volatile
 17488                           
 17489                           ;mcc_generated_files/eusart2.c: 124:     eusart2RxHead = 0;
 17490     09B5  01FC               	clrf	_eusart2RxHead	;volatile
 17491                           
 17492                           ;mcc_generated_files/eusart2.c: 125:     eusart2RxTail = 0;
 17493     09B6  01D9               	clrf	_eusart2RxTail	;volatile
 17494                           
 17495                           ;mcc_generated_files/eusart2.c: 126:     eusart2RxCount = 0;
 17496     09B7  01D8               	clrf	_eusart2RxCount	;volatile
 17497     09B8                     l14248:
 17498                           
 17499                           ;mcc_generated_files/eusart2.c: 129:     PIE3bits.RC2IE = 1;
 17500     09B8  014E               	movlb	14	; select bank14
 17501     09B9  1799               	bsf	25,7	;volatile
 17502     09BA                     l1705:
 17503     09BA  0008               	return
 17504     09BB                     __end_of_EUSART2_Initialize:
 17505                           
 17506                           	psect	text31
 17507     1F34                     __ptext31:	
 17508 ;; *************** function _EUSART2_SetTxInterruptHandler *****************
 17509 ;; Defined at:
 17510 ;;		line 276 in file "mcc_generated_files/eusart2.c"
 17511 ;; Parameters:    Size  Location     Type
 17512 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 17513 ;;		 -> EUSART2_Transmit_ISR(1), EUSART1_Transmit_ISR(1), 
 17514 ;; Auto vars:     Size  Location     Type
 17515 ;;		None
 17516 ;; Return value:  Size  Location     Type
 17517 ;;                  1    wreg      void 
 17518 ;; Registers used:
 17519 ;;		wreg
 17520 ;; Tracked objects:
 17521 ;;		On entry : 0/0
 17522 ;;		On exit  : 0/0
 17523 ;;		Unchanged: 0/0
 17524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17525 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17526 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17528 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17529 ;;Total ram usage:        2 bytes
 17530 ;; Hardware stack levels used: 1
 17531 ;; Hardware stack levels required when called: 4
 17532 ;; This function calls:
 17533 ;;		Nothing
 17534 ;; This function is called by:
 17535 ;;		_EUSART2_Initialize
 17536 ;; This function uses a non-reentrant model
 17537 ;;
 17538                           
 17539     1F34                     _EUSART2_SetTxInterruptHandler:	
 17540                           ;psect for function _EUSART2_SetTxInterruptHandler
 17541                           
 17542     1F34                     l13610:	
 17543                           ;incstack = 0
 17544                           ; Regs used in _EUSART2_SetTxInterruptHandler: [wreg]
 17545                           
 17546                           
 17547                           ;mcc_generated_files/eusart2.c: 277:     EUSART2_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
 17548     1F34  0872               	movf	EUSART2_SetTxInterruptHandler@interruptHandler+1,w
 17549     1F35  0141               	movlb	1	; select bank1
 17550     1F36  00ED               	movwf	(_EUSART2_TxDefaultInterruptHandler+1)^(0+128)
 17551     1F37  0871               	movf	EUSART2_SetTxInterruptHandler@interruptHandler,w
 17552     1F38  00EC               	movwf	_EUSART2_TxDefaultInterruptHandler^(0+128)
 17553     1F39                     l1771:
 17554     1F39  0008               	return
 17555     1F3A                     __end_of_EUSART2_SetTxInterruptHandler:
 17556                           
 17557                           	psect	text32
 17558     1F2E                     __ptext32:	
 17559 ;; *************** function _EUSART2_SetRxInterruptHandler *****************
 17560 ;; Defined at:
 17561 ;;		line 280 in file "mcc_generated_files/eusart2.c"
 17562 ;; Parameters:    Size  Location     Type
 17563 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 17564 ;;		 -> EUSART2_Receive_ISR(1), EUSART1_Receive_ISR(1), 
 17565 ;; Auto vars:     Size  Location     Type
 17566 ;;		None
 17567 ;; Return value:  Size  Location     Type
 17568 ;;                  1    wreg      void 
 17569 ;; Registers used:
 17570 ;;		wreg
 17571 ;; Tracked objects:
 17572 ;;		On entry : 0/0
 17573 ;;		On exit  : 0/0
 17574 ;;		Unchanged: 0/0
 17575 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17576 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17577 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17578 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17579 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17580 ;;Total ram usage:        2 bytes
 17581 ;; Hardware stack levels used: 1
 17582 ;; Hardware stack levels required when called: 4
 17583 ;; This function calls:
 17584 ;;		Nothing
 17585 ;; This function is called by:
 17586 ;;		_EUSART2_Initialize
 17587 ;; This function uses a non-reentrant model
 17588 ;;
 17589                           
 17590     1F2E                     _EUSART2_SetRxInterruptHandler:	
 17591                           ;psect for function _EUSART2_SetRxInterruptHandler
 17592                           
 17593     1F2E                     l13608:	
 17594                           ;incstack = 0
 17595                           ; Regs used in _EUSART2_SetRxInterruptHandler: [wreg]
 17596                           
 17597                           
 17598                           ;mcc_generated_files/eusart2.c: 281:     EUSART2_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
 17599     1F2E  0872               	movf	EUSART2_SetRxInterruptHandler@interruptHandler+1,w
 17600     1F2F  0142               	movlb	2	; select bank2
 17601     1F30  00E5               	movwf	(_EUSART2_RxDefaultInterruptHandler+1)^(0+256)
 17602     1F31  0871               	movf	EUSART2_SetRxInterruptHandler@interruptHandler,w
 17603     1F32  00E4               	movwf	_EUSART2_RxDefaultInterruptHandler^(0+256)
 17604     1F33                     l1774:
 17605     1F33  0008               	return
 17606     1F34                     __end_of_EUSART2_SetRxInterruptHandler:
 17607                           
 17608                           	psect	text33
 17609     1F28                     __ptext33:	
 17610 ;; *************** function _EUSART2_SetOverrunErrorHandler *****************
 17611 ;; Defined at:
 17612 ;;		line 268 in file "mcc_generated_files/eusart2.c"
 17613 ;; Parameters:    Size  Location     Type
 17614 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 17615 ;;		 -> EUSART2_DefaultOverrunErrorHandler(1), 
 17616 ;; Auto vars:     Size  Location     Type
 17617 ;;		None
 17618 ;; Return value:  Size  Location     Type
 17619 ;;                  1    wreg      void 
 17620 ;; Registers used:
 17621 ;;		wreg
 17622 ;; Tracked objects:
 17623 ;;		On entry : 0/0
 17624 ;;		On exit  : 0/0
 17625 ;;		Unchanged: 0/0
 17626 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17627 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17628 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17630 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17631 ;;Total ram usage:        2 bytes
 17632 ;; Hardware stack levels used: 1
 17633 ;; Hardware stack levels required when called: 4
 17634 ;; This function calls:
 17635 ;;		Nothing
 17636 ;; This function is called by:
 17637 ;;		_EUSART2_Initialize
 17638 ;; This function uses a non-reentrant model
 17639 ;;
 17640                           
 17641     1F28                     _EUSART2_SetOverrunErrorHandler:	
 17642                           ;psect for function _EUSART2_SetOverrunErrorHandler
 17643                           
 17644     1F28                     l13614:	
 17645                           ;incstack = 0
 17646                           ; Regs used in _EUSART2_SetOverrunErrorHandler: [wreg]
 17647                           
 17648                           
 17649                           ;mcc_generated_files/eusart2.c: 269:     EUSART2_OverrunErrorHandler = interruptHandler;
 17650     1F28  0872               	movf	EUSART2_SetOverrunErrorHandler@interruptHandler+1,w
 17651     1F29  0142               	movlb	2	; select bank2
 17652     1F2A  00E1               	movwf	(_EUSART2_OverrunErrorHandler+1)^(0+256)
 17653     1F2B  0871               	movf	EUSART2_SetOverrunErrorHandler@interruptHandler,w
 17654     1F2C  00E0               	movwf	_EUSART2_OverrunErrorHandler^(0+256)
 17655     1F2D                     l1765:
 17656     1F2D  0008               	return
 17657     1F2E                     __end_of_EUSART2_SetOverrunErrorHandler:
 17658                           
 17659                           	psect	text34
 17660     1F22                     __ptext34:	
 17661 ;; *************** function _EUSART2_SetFramingErrorHandler *****************
 17662 ;; Defined at:
 17663 ;;		line 264 in file "mcc_generated_files/eusart2.c"
 17664 ;; Parameters:    Size  Location     Type
 17665 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 17666 ;;		 -> EUSART2_DefaultFramingErrorHandler(1), 
 17667 ;; Auto vars:     Size  Location     Type
 17668 ;;		None
 17669 ;; Return value:  Size  Location     Type
 17670 ;;                  1    wreg      void 
 17671 ;; Registers used:
 17672 ;;		wreg
 17673 ;; Tracked objects:
 17674 ;;		On entry : 0/0
 17675 ;;		On exit  : 0/0
 17676 ;;		Unchanged: 0/0
 17677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17678 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17679 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17680 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17681 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17682 ;;Total ram usage:        2 bytes
 17683 ;; Hardware stack levels used: 1
 17684 ;; Hardware stack levels required when called: 4
 17685 ;; This function calls:
 17686 ;;		Nothing
 17687 ;; This function is called by:
 17688 ;;		_EUSART2_Initialize
 17689 ;; This function uses a non-reentrant model
 17690 ;;
 17691                           
 17692     1F22                     _EUSART2_SetFramingErrorHandler:	
 17693                           ;psect for function _EUSART2_SetFramingErrorHandler
 17694                           
 17695     1F22                     l13612:	
 17696                           ;incstack = 0
 17697                           ; Regs used in _EUSART2_SetFramingErrorHandler: [wreg]
 17698                           
 17699                           
 17700                           ;mcc_generated_files/eusart2.c: 265:     EUSART2_FramingErrorHandler = interruptHandler;
 17701     1F22  0872               	movf	EUSART2_SetFramingErrorHandler@interruptHandler+1,w
 17702     1F23  0142               	movlb	2	; select bank2
 17703     1F24  00E3               	movwf	(_EUSART2_FramingErrorHandler+1)^(0+256)
 17704     1F25  0871               	movf	EUSART2_SetFramingErrorHandler@interruptHandler,w
 17705     1F26  00E2               	movwf	_EUSART2_FramingErrorHandler^(0+256)
 17706     1F27                     l1762:
 17707     1F27  0008               	return
 17708     1F28                     __end_of_EUSART2_SetFramingErrorHandler:
 17709                           
 17710                           	psect	text35
 17711     1F1C                     __ptext35:	
 17712 ;; *************** function _EUSART2_SetErrorHandler *****************
 17713 ;; Defined at:
 17714 ;;		line 272 in file "mcc_generated_files/eusart2.c"
 17715 ;; Parameters:    Size  Location     Type
 17716 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 17717 ;;		 -> EUSART2_DefaultErrorHandler(1), 
 17718 ;; Auto vars:     Size  Location     Type
 17719 ;;		None
 17720 ;; Return value:  Size  Location     Type
 17721 ;;                  1    wreg      void 
 17722 ;; Registers used:
 17723 ;;		wreg
 17724 ;; Tracked objects:
 17725 ;;		On entry : 0/0
 17726 ;;		On exit  : 0/0
 17727 ;;		Unchanged: 0/0
 17728 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17729 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17730 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17731 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17732 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17733 ;;Total ram usage:        2 bytes
 17734 ;; Hardware stack levels used: 1
 17735 ;; Hardware stack levels required when called: 4
 17736 ;; This function calls:
 17737 ;;		Nothing
 17738 ;; This function is called by:
 17739 ;;		_EUSART2_Initialize
 17740 ;; This function uses a non-reentrant model
 17741 ;;
 17742                           
 17743     1F1C                     _EUSART2_SetErrorHandler:	
 17744                           ;psect for function _EUSART2_SetErrorHandler
 17745                           
 17746     1F1C                     l13616:	
 17747                           ;incstack = 0
 17748                           ; Regs used in _EUSART2_SetErrorHandler: [wreg]
 17749                           
 17750                           
 17751                           ;mcc_generated_files/eusart2.c: 273:     EUSART2_ErrorHandler = interruptHandler;
 17752     1F1C  0872               	movf	EUSART2_SetErrorHandler@interruptHandler+1,w
 17753     1F1D  0142               	movlb	2	; select bank2
 17754     1F1E  00DF               	movwf	(_EUSART2_ErrorHandler+1)^(0+256)
 17755     1F1F  0871               	movf	EUSART2_SetErrorHandler@interruptHandler,w
 17756     1F20  00DE               	movwf	_EUSART2_ErrorHandler^(0+256)
 17757     1F21                     l1768:
 17758     1F21  0008               	return
 17759     1F22                     __end_of_EUSART2_SetErrorHandler:
 17760                           
 17761                           	psect	text36
 17762     093D                     __ptext36:	
 17763 ;; *************** function _EUSART1_Initialize *****************
 17764 ;; Defined at:
 17765 ;;		line 88 in file "mcc_generated_files/eusart1.c"
 17766 ;; Parameters:    Size  Location     Type
 17767 ;;		None
 17768 ;; Auto vars:     Size  Location     Type
 17769 ;;		None
 17770 ;; Return value:  Size  Location     Type
 17771 ;;                  1    wreg      void 
 17772 ;; Registers used:
 17773 ;;		wreg, status,2, status,0, pclath, cstack
 17774 ;; Tracked objects:
 17775 ;;		On entry : 0/0
 17776 ;;		On exit  : 0/0
 17777 ;;		Unchanged: 0/0
 17778 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17779 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17780 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17782 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17783 ;;Total ram usage:        0 bytes
 17784 ;; Hardware stack levels used: 1
 17785 ;; Hardware stack levels required when called: 5
 17786 ;; This function calls:
 17787 ;;		_EUSART1_SetErrorHandler
 17788 ;;		_EUSART1_SetFramingErrorHandler
 17789 ;;		_EUSART1_SetOverrunErrorHandler
 17790 ;;		_EUSART1_SetRxInterruptHandler
 17791 ;;		_EUSART1_SetTxInterruptHandler
 17792 ;; This function is called by:
 17793 ;;		_SYSTEM_Initialize
 17794 ;; This function uses a non-reentrant model
 17795 ;;
 17796                           
 17797     093D                     _EUSART1_Initialize:	
 17798                           ;psect for function _EUSART1_Initialize
 17799                           
 17800     093D                     l14250:	
 17801                           ;incstack = 0
 17802                           ; Regs used in _EUSART1_Initialize: [wreg+status,2+status,0+pclath+cstack]
 17803                           
 17804                           
 17805                           ;mcc_generated_files/eusart1.c: 91:     PIE3bits.RC1IE = 0;
 17806     093D  014E               	movlb	14	; select bank14
 17807     093E  1299               	bcf	25,5	;volatile
 17808     093F                     l14252:
 17809                           
 17810                           ;mcc_generated_files/eusart1.c: 92:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
 17811     093F  3086               	movlw	low _EUSART1_Receive_ISR
 17812     0940  00F1               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler
 17813     0941  3008               	movlw	high _EUSART1_Receive_ISR
 17814     0942  00F2               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler+1
 17815     0943  319F  2710  3189   	fcall	_EUSART1_SetRxInterruptHandler
 17816     0946                     l14254:
 17817                           
 17818                           ;mcc_generated_files/eusart1.c: 93:     PIE3bits.TX1IE = 0;
 17819     0946  014E               	movlb	14	; select bank14
 17820     0947  1219               	bcf	25,4	;volatile
 17821                           
 17822                           ;mcc_generated_files/eusart1.c: 94:     EUSART1_SetTxInterruptHandler(EUSART1_Transmit_I
      +                          SR);
 17823     0948  3006               	movlw	low _EUSART1_Transmit_ISR
 17824     0949  00F1               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler
 17825     094A  3014               	movlw	high _EUSART1_Transmit_ISR
 17826     094B  00F2               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler+1
 17827     094C  319F  2716  3189   	fcall	_EUSART1_SetTxInterruptHandler
 17828     094F                     l14256:
 17829                           
 17830                           ;mcc_generated_files/eusart1.c: 98:     BAUD1CON = 0x08;
 17831     094F  3008               	movlw	8
 17832     0950  0142               	movlb	2	; select bank2
 17833     0951  009F               	movwf	31	;volatile
 17834     0952                     l14258:
 17835                           
 17836                           ;mcc_generated_files/eusart1.c: 101:     RC1STA = 0x90;
 17837     0952  3090               	movlw	144
 17838     0953  009D               	movwf	29	;volatile
 17839     0954                     l14260:
 17840                           
 17841                           ;mcc_generated_files/eusart1.c: 104:     TX1STA = 0x24;
 17842     0954  3024               	movlw	36
 17843     0955  009E               	movwf	30	;volatile
 17844     0956                     l14262:
 17845                           
 17846                           ;mcc_generated_files/eusart1.c: 107:     SP1BRGL = 0x40;
 17847     0956  3040               	movlw	64
 17848     0957  009B               	movwf	27	;volatile
 17849     0958                     l14264:
 17850                           
 17851                           ;mcc_generated_files/eusart1.c: 110:     SP1BRGH = 0x03;
 17852     0958  3003               	movlw	3
 17853     0959  009C               	movwf	28	;volatile
 17854     095A                     l14266:
 17855                           
 17856                           ;mcc_generated_files/eusart1.c: 113:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
 17857     095A  305E               	movlw	low _EUSART1_DefaultFramingErrorHandler
 17858     095B  00F1               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler
 17859     095C  301E               	movlw	high _EUSART1_DefaultFramingErrorHandler
 17860     095D  00F2               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler+1
 17861     095E  319F  2704  3189   	fcall	_EUSART1_SetFramingErrorHandler
 17862     0961                     l14268:
 17863                           
 17864                           ;mcc_generated_files/eusart1.c: 114:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
 17865     0961  3083               	movlw	low _EUSART1_DefaultOverrunErrorHandler
 17866     0962  00F1               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler
 17867     0963  301E               	movlw	high _EUSART1_DefaultOverrunErrorHandler
 17868     0964  00F2               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler+1
 17869     0965  319F  270A  3189   	fcall	_EUSART1_SetOverrunErrorHandler
 17870     0968                     l14270:
 17871                           
 17872                           ;mcc_generated_files/eusart1.c: 115:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
 17873     0968  307F               	movlw	low _EUSART1_DefaultErrorHandler
 17874     0969  00F1               	movwf	EUSART1_SetErrorHandler@interruptHandler
 17875     096A  301E               	movlw	high _EUSART1_DefaultErrorHandler
 17876     096B  00F2               	movwf	EUSART1_SetErrorHandler@interruptHandler+1
 17877     096C  319E  26FE  3189   	fcall	_EUSART1_SetErrorHandler
 17878     096F                     l14272:
 17879                           
 17880                           ;mcc_generated_files/eusart1.c: 117:     eusart1RxLastError.status = 0;
 17881     096F  0141               	movlb	1	; select bank1
 17882     0970  01E6               	clrf	_eusart1RxLastError^(0+128)	;volatile
 17883     0971                     l14274:
 17884                           
 17885                           ;mcc_generated_files/eusart1.c: 120:     eusart1TxHead = 0;
 17886     0971  0140               	movlb	0	; select bank0
 17887     0972  01D7               	clrf	_eusart1TxHead	;volatile
 17888     0973                     l14276:
 17889                           
 17890                           ;mcc_generated_files/eusart1.c: 121:     eusart1TxTail = 0;
 17891     0973  01D6               	clrf	_eusart1TxTail	;volatile
 17892     0974                     l14278:
 17893                           
 17894                           ;mcc_generated_files/eusart1.c: 122:     eusart1TxBufferRemaining = sizeof(eusart1TxBuff
      +                          er);
 17895     0974  3008               	movlw	8
 17896     0975  00D5               	movwf	_eusart1TxBufferRemaining	;volatile
 17897                           
 17898                           ;mcc_generated_files/eusart1.c: 124:     eusart1RxHead = 0;
 17899     0976  01D4               	clrf	_eusart1RxHead	;volatile
 17900                           
 17901                           ;mcc_generated_files/eusart1.c: 125:     eusart1RxTail = 0;
 17902     0977  01D3               	clrf	_eusart1RxTail	;volatile
 17903                           
 17904                           ;mcc_generated_files/eusart1.c: 126:     eusart1RxCount = 0;
 17905     0978  01D2               	clrf	_eusart1RxCount	;volatile
 17906     0979                     l14280:
 17907                           
 17908                           ;mcc_generated_files/eusart1.c: 129:     PIE3bits.RC1IE = 1;
 17909     0979  014E               	movlb	14	; select bank14
 17910     097A  1699               	bsf	25,5	;volatile
 17911     097B                     l1849:
 17912     097B  0008               	return
 17913     097C                     __end_of_EUSART1_Initialize:
 17914                           
 17915                           	psect	text37
 17916     1F16                     __ptext37:	
 17917 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
 17918 ;; Defined at:
 17919 ;;		line 285 in file "mcc_generated_files/eusart1.c"
 17920 ;; Parameters:    Size  Location     Type
 17921 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 17922 ;;		 -> EUSART2_Transmit_ISR(1), EUSART1_Transmit_ISR(1), 
 17923 ;; Auto vars:     Size  Location     Type
 17924 ;;		None
 17925 ;; Return value:  Size  Location     Type
 17926 ;;                  1    wreg      void 
 17927 ;; Registers used:
 17928 ;;		wreg
 17929 ;; Tracked objects:
 17930 ;;		On entry : 0/0
 17931 ;;		On exit  : 0/0
 17932 ;;		Unchanged: 0/0
 17933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17934 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17935 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17937 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17938 ;;Total ram usage:        2 bytes
 17939 ;; Hardware stack levels used: 1
 17940 ;; Hardware stack levels required when called: 4
 17941 ;; This function calls:
 17942 ;;		Nothing
 17943 ;; This function is called by:
 17944 ;;		_EUSART1_Initialize
 17945 ;; This function uses a non-reentrant model
 17946 ;;
 17947                           
 17948     1F16                     _EUSART1_SetTxInterruptHandler:	
 17949                           ;psect for function _EUSART1_SetTxInterruptHandler
 17950                           
 17951     1F16                     l13620:	
 17952                           ;incstack = 0
 17953                           ; Regs used in _EUSART1_SetTxInterruptHandler: [wreg]
 17954                           
 17955                           
 17956                           ;mcc_generated_files/eusart1.c: 286:     EUSART1_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
 17957     1F16  0872               	movf	EUSART1_SetTxInterruptHandler@interruptHandler+1,w
 17958     1F17  0142               	movlb	2	; select bank2
 17959     1F18  00DD               	movwf	(_EUSART1_TxDefaultInterruptHandler+1)^(0+256)
 17960     1F19  0871               	movf	EUSART1_SetTxInterruptHandler@interruptHandler,w
 17961     1F1A  00DC               	movwf	_EUSART1_TxDefaultInterruptHandler^(0+256)
 17962     1F1B                     l1921:
 17963     1F1B  0008               	return
 17964     1F1C                     __end_of_EUSART1_SetTxInterruptHandler:
 17965                           
 17966                           	psect	text38
 17967     1F10                     __ptext38:	
 17968 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
 17969 ;; Defined at:
 17970 ;;		line 289 in file "mcc_generated_files/eusart1.c"
 17971 ;; Parameters:    Size  Location     Type
 17972 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 17973 ;;		 -> EUSART2_Receive_ISR(1), EUSART1_Receive_ISR(1), 
 17974 ;; Auto vars:     Size  Location     Type
 17975 ;;		None
 17976 ;; Return value:  Size  Location     Type
 17977 ;;                  1    wreg      void 
 17978 ;; Registers used:
 17979 ;;		wreg
 17980 ;; Tracked objects:
 17981 ;;		On entry : 0/0
 17982 ;;		On exit  : 0/0
 17983 ;;		Unchanged: 0/0
 17984 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17985 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17986 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17987 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17988 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17989 ;;Total ram usage:        2 bytes
 17990 ;; Hardware stack levels used: 1
 17991 ;; Hardware stack levels required when called: 4
 17992 ;; This function calls:
 17993 ;;		Nothing
 17994 ;; This function is called by:
 17995 ;;		_EUSART1_Initialize
 17996 ;; This function uses a non-reentrant model
 17997 ;;
 17998                           
 17999     1F10                     _EUSART1_SetRxInterruptHandler:	
 18000                           ;psect for function _EUSART1_SetRxInterruptHandler
 18001                           
 18002     1F10                     l13618:	
 18003                           ;incstack = 0
 18004                           ; Regs used in _EUSART1_SetRxInterruptHandler: [wreg]
 18005                           
 18006                           
 18007                           ;mcc_generated_files/eusart1.c: 290:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
 18008     1F10  0872               	movf	EUSART1_SetRxInterruptHandler@interruptHandler+1,w
 18009     1F11  0142               	movlb	2	; select bank2
 18010     1F12  00DB               	movwf	(_EUSART1_RxDefaultInterruptHandler+1)^(0+256)
 18011     1F13  0871               	movf	EUSART1_SetRxInterruptHandler@interruptHandler,w
 18012     1F14  00DA               	movwf	_EUSART1_RxDefaultInterruptHandler^(0+256)
 18013     1F15                     l1924:
 18014     1F15  0008               	return
 18015     1F16                     __end_of_EUSART1_SetRxInterruptHandler:
 18016                           
 18017                           	psect	text39
 18018     1F0A                     __ptext39:	
 18019 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
 18020 ;; Defined at:
 18021 ;;		line 277 in file "mcc_generated_files/eusart1.c"
 18022 ;; Parameters:    Size  Location     Type
 18023 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 18024 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
 18025 ;; Auto vars:     Size  Location     Type
 18026 ;;		None
 18027 ;; Return value:  Size  Location     Type
 18028 ;;                  1    wreg      void 
 18029 ;; Registers used:
 18030 ;;		wreg
 18031 ;; Tracked objects:
 18032 ;;		On entry : 0/0
 18033 ;;		On exit  : 0/0
 18034 ;;		Unchanged: 0/0
 18035 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18036 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18037 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18039 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18040 ;;Total ram usage:        2 bytes
 18041 ;; Hardware stack levels used: 1
 18042 ;; Hardware stack levels required when called: 4
 18043 ;; This function calls:
 18044 ;;		Nothing
 18045 ;; This function is called by:
 18046 ;;		_EUSART1_Initialize
 18047 ;; This function uses a non-reentrant model
 18048 ;;
 18049                           
 18050     1F0A                     _EUSART1_SetOverrunErrorHandler:	
 18051                           ;psect for function _EUSART1_SetOverrunErrorHandler
 18052                           
 18053     1F0A                     l13624:	
 18054                           ;incstack = 0
 18055                           ; Regs used in _EUSART1_SetOverrunErrorHandler: [wreg]
 18056                           
 18057                           
 18058                           ;mcc_generated_files/eusart1.c: 278:     EUSART1_OverrunErrorHandler = interruptHandler;
 18059     1F0A  0872               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler+1,w
 18060     1F0B  0142               	movlb	2	; select bank2
 18061     1F0C  00D7               	movwf	(_EUSART1_OverrunErrorHandler+1)^(0+256)
 18062     1F0D  0871               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler,w
 18063     1F0E  00D6               	movwf	_EUSART1_OverrunErrorHandler^(0+256)
 18064     1F0F                     l1915:
 18065     1F0F  0008               	return
 18066     1F10                     __end_of_EUSART1_SetOverrunErrorHandler:
 18067                           
 18068                           	psect	text40
 18069     1F04                     __ptext40:	
 18070 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
 18071 ;; Defined at:
 18072 ;;		line 273 in file "mcc_generated_files/eusart1.c"
 18073 ;; Parameters:    Size  Location     Type
 18074 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 18075 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
 18076 ;; Auto vars:     Size  Location     Type
 18077 ;;		None
 18078 ;; Return value:  Size  Location     Type
 18079 ;;                  1    wreg      void 
 18080 ;; Registers used:
 18081 ;;		wreg
 18082 ;; Tracked objects:
 18083 ;;		On entry : 0/0
 18084 ;;		On exit  : 0/0
 18085 ;;		Unchanged: 0/0
 18086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18087 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18088 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18090 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18091 ;;Total ram usage:        2 bytes
 18092 ;; Hardware stack levels used: 1
 18093 ;; Hardware stack levels required when called: 4
 18094 ;; This function calls:
 18095 ;;		Nothing
 18096 ;; This function is called by:
 18097 ;;		_EUSART1_Initialize
 18098 ;; This function uses a non-reentrant model
 18099 ;;
 18100                           
 18101     1F04                     _EUSART1_SetFramingErrorHandler:	
 18102                           ;psect for function _EUSART1_SetFramingErrorHandler
 18103                           
 18104     1F04                     l13622:	
 18105                           ;incstack = 0
 18106                           ; Regs used in _EUSART1_SetFramingErrorHandler: [wreg]
 18107                           
 18108                           
 18109                           ;mcc_generated_files/eusart1.c: 274:     EUSART1_FramingErrorHandler = interruptHandler;
 18110     1F04  0872               	movf	EUSART1_SetFramingErrorHandler@interruptHandler+1,w
 18111     1F05  0142               	movlb	2	; select bank2
 18112     1F06  00D9               	movwf	(_EUSART1_FramingErrorHandler+1)^(0+256)
 18113     1F07  0871               	movf	EUSART1_SetFramingErrorHandler@interruptHandler,w
 18114     1F08  00D8               	movwf	_EUSART1_FramingErrorHandler^(0+256)
 18115     1F09                     l1912:
 18116     1F09  0008               	return
 18117     1F0A                     __end_of_EUSART1_SetFramingErrorHandler:
 18118                           
 18119                           	psect	text41
 18120     1EFE                     __ptext41:	
 18121 ;; *************** function _EUSART1_SetErrorHandler *****************
 18122 ;; Defined at:
 18123 ;;		line 281 in file "mcc_generated_files/eusart1.c"
 18124 ;; Parameters:    Size  Location     Type
 18125 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 18126 ;;		 -> EUSART1_DefaultErrorHandler(1), 
 18127 ;; Auto vars:     Size  Location     Type
 18128 ;;		None
 18129 ;; Return value:  Size  Location     Type
 18130 ;;                  1    wreg      void 
 18131 ;; Registers used:
 18132 ;;		wreg
 18133 ;; Tracked objects:
 18134 ;;		On entry : 0/0
 18135 ;;		On exit  : 0/0
 18136 ;;		Unchanged: 0/0
 18137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18138 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18139 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18140 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18141 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18142 ;;Total ram usage:        2 bytes
 18143 ;; Hardware stack levels used: 1
 18144 ;; Hardware stack levels required when called: 4
 18145 ;; This function calls:
 18146 ;;		Nothing
 18147 ;; This function is called by:
 18148 ;;		_EUSART1_Initialize
 18149 ;; This function uses a non-reentrant model
 18150 ;;
 18151                           
 18152     1EFE                     _EUSART1_SetErrorHandler:	
 18153                           ;psect for function _EUSART1_SetErrorHandler
 18154                           
 18155     1EFE                     l13626:	
 18156                           ;incstack = 0
 18157                           ; Regs used in _EUSART1_SetErrorHandler: [wreg]
 18158                           
 18159                           
 18160                           ;mcc_generated_files/eusart1.c: 282:     EUSART1_ErrorHandler = interruptHandler;
 18161     1EFE  0872               	movf	EUSART1_SetErrorHandler@interruptHandler+1,w
 18162     1EFF  0142               	movlb	2	; select bank2
 18163     1F00  00D5               	movwf	(_EUSART1_ErrorHandler+1)^(0+256)
 18164     1F01  0871               	movf	EUSART1_SetErrorHandler@interruptHandler,w
 18165     1F02  00D4               	movwf	_EUSART1_ErrorHandler^(0+256)
 18166     1F03                     l1918:
 18167     1F03  0008               	return
 18168     1F04                     __end_of_EUSART1_SetErrorHandler:
 18169                           
 18170                           	psect	text42
 18171     11E8                     __ptext42:	
 18172 ;; *************** function _RN487X_SetAsyncMessageHandler *****************
 18173 ;; Defined at:
 18174 ;;		line 328 in file "mcc_generated_files/rn487x/rn487x.c"
 18175 ;; Parameters:    Size  Location     Type
 18176 ;;  pBuffer         1    wreg     PTR unsigned char 
 18177 ;;		 -> statusBuffer@main$F4234(80), statusBuffer(80), 
 18178 ;;  len             1    1[COMMON] unsigned char 
 18179 ;; Auto vars:     Size  Location     Type
 18180 ;;  pBuffer         1    2[COMMON] PTR unsigned char 
 18181 ;;		 -> statusBuffer@main$F4234(80), statusBuffer(80), 
 18182 ;; Return value:  Size  Location     Type
 18183 ;;                  1    wreg      _Bool 
 18184 ;; Registers used:
 18185 ;;		wreg, status,2, status,0
 18186 ;; Tracked objects:
 18187 ;;		On entry : 0/0
 18188 ;;		On exit  : 0/0
 18189 ;;		Unchanged: 0/0
 18190 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18191 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18192 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18194 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18195 ;;Total ram usage:        2 bytes
 18196 ;; Hardware stack levels used: 1
 18197 ;; Hardware stack levels required when called: 4
 18198 ;; This function calls:
 18199 ;;		Nothing
 18200 ;; This function is called by:
 18201 ;;		_main
 18202 ;;		_RN487X_Example_Initialized
 18203 ;; This function uses a non-reentrant model
 18204 ;;
 18205                           
 18206     11E8                     _RN487X_SetAsyncMessageHandler:	
 18207                           ;psect for function _RN487X_SetAsyncMessageHandler
 18208                           
 18209                           
 18210                           ;incstack = 0
 18211                           ; Regs used in _RN487X_SetAsyncMessageHandler: [wreg+status,2+status,0]
 18212                           ;RN487X_SetAsyncMessageHandler@pBuffer stored from wreg
 18213     11E8  00F2               	movwf	RN487X_SetAsyncMessageHandler@pBuffer
 18214     11E9                     l14622:
 18215                           
 18216                           ;mcc_generated_files/rn487x/rn487x.c: 328: _Bool RN487X_SetAsyncMessageHandler(char* pBu
      +                          ffer, uint8_t len);mcc_generated_files/rn487x/rn487x.c: 329: {;mcc_generated_files/rn487
      +                          x/rn487x.c: 330:     if ((pBuffer != ((void*)0)) && (len > 1))
 18217     11E9  0872               	movf	RN487X_SetAsyncMessageHandler@pBuffer,w
 18218     11EA  1903               	btfsc	3,2
 18219     11EB  29ED               	goto	u11621
 18220     11EC  29EE               	goto	u11620
 18221     11ED                     u11621:
 18222     11ED  29FC               	goto	l14636
 18223     11EE                     u11620:
 18224     11EE                     l14624:
 18225     11EE  3002               	movlw	2
 18226     11EF  0271               	subwf	RN487X_SetAsyncMessageHandler@len,w
 18227     11F0  1C03               	skipc
 18228     11F1  29F3               	goto	u11631
 18229     11F2  29F4               	goto	u11630
 18230     11F3                     u11631:
 18231     11F3  29FC               	goto	l14636
 18232     11F4                     u11630:
 18233     11F4                     l14626:
 18234                           
 18235                           ;mcc_generated_files/rn487x/rn487x.c: 331:     {;mcc_generated_files/rn487x/rn487x.c: 33
      +                          2:       asyncBuffer = pBuffer;
 18236     11F4  0872               	movf	RN487X_SetAsyncMessageHandler@pBuffer,w
 18237     11F5  0140               	movlb	0	; select bank0
 18238     11F6  00E2               	movwf	_asyncBuffer
 18239     11F7                     l14628:
 18240                           
 18241                           ;mcc_generated_files/rn487x/rn487x.c: 333:       asyncBufferSize = len - 1;
 18242     11F7  0871               	movf	RN487X_SetAsyncMessageHandler@len,w
 18243     11F8  3EFF               	addlw	255
 18244     11F9  00E1               	movwf	_asyncBufferSize
 18245     11FA                     l14630:
 18246                           
 18247                           ;mcc_generated_files/rn487x/rn487x.c: 334:       return 1;
 18248     11FA  3001               	movlw	1
 18249     11FB  29FD               	goto	l1606
 18250     11FC                     l14636:
 18251                           
 18252                           ;mcc_generated_files/rn487x/rn487x.c: 337:     {;mcc_generated_files/rn487x/rn487x.c: 33
      +                          8:         return 0;
 18253     11FC  3000               	movlw	0
 18254     11FD                     l1606:
 18255     11FD  0008               	return
 18256     11FE                     __end_of_RN487X_SetAsyncMessageHandler:
 18257                           
 18258                           	psect	text43
 18259     1019                     __ptext43:	
 18260 ;; *************** function _RN487X_Read *****************
 18261 ;; Defined at:
 18262 ;;		line 356 in file "mcc_generated_files/rn487x/rn487x.c"
 18263 ;; Parameters:    Size  Location     Type
 18264 ;;		None
 18265 ;; Auto vars:     Size  Location     Type
 18266 ;;		None
 18267 ;; Return value:  Size  Location     Type
 18268 ;;                  1    wreg      unsigned char 
 18269 ;; Registers used:
 18270 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18271 ;; Tracked objects:
 18272 ;;		On entry : 0/0
 18273 ;;		On exit  : 0/0
 18274 ;;		Unchanged: 0/0
 18275 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18276 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18277 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18278 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18279 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18280 ;;Total ram usage:        0 bytes
 18281 ;; Hardware stack levels used: 1
 18282 ;; Hardware stack levels required when called: 9
 18283 ;; This function calls:
 18284 ;;		_RN487X_DataReady
 18285 ;; This function is called by:
 18286 ;;		_main
 18287 ;;		_RN487X_Example_TransparentUart
 18288 ;; This function uses a non-reentrant model
 18289 ;;
 18290                           
 18291     1019                     _RN487X_Read:	
 18292                           ;psect for function _RN487X_Read
 18293                           
 18294     1019                     l14644:	
 18295                           ;incstack = 0
 18296                           ; Regs used in _RN487X_Read: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18297                           
 18298     1019                     l14646:	
 18299                           ;mcc_generated_files/rn487x/rn487x.c: 358:     while(RN487X_DataReady() == 0);
 18300                           
 18301     1019  3193  2389  3190   	fcall	_RN487X_DataReady
 18302     101C  3A00               	xorlw	0
 18303     101D  1903               	skipnz
 18304     101E  2820               	goto	u11641
 18305     101F  2821               	goto	u11640
 18306     1020                     u11641:
 18307     1020  2819               	goto	l14646
 18308     1021                     u11640:
 18309     1021                     l14648:
 18310                           
 18311                           ;mcc_generated_files/rn487x/rn487x.c: 359:     dataReady = 0;
 18312     1021  0140               	movlb	0	; select bank0
 18313     1022  01DE               	clrf	_dataReady
 18314     1023                     l14650:
 18315                           
 18316                           ;mcc_generated_files/rn487x/rn487x.c: 360:     return peek;
 18317     1023  085F               	movf	_peek,w
 18318     1024                     l1618:
 18319     1024  0008               	return
 18320     1025                     __end_of_RN487X_Read:
 18321                           
 18322                           	psect	text44
 18323     1389                     __ptext44:	
 18324 ;; *************** function _RN487X_DataReady *****************
 18325 ;; Defined at:
 18326 ;;		line 342 in file "mcc_generated_files/rn487x/rn487x.c"
 18327 ;; Parameters:    Size  Location     Type
 18328 ;;		None
 18329 ;; Auto vars:     Size  Location     Type
 18330 ;;		None
 18331 ;; Return value:  Size  Location     Type
 18332 ;;                  1    wreg      _Bool 
 18333 ;; Registers used:
 18334 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18335 ;; Tracked objects:
 18336 ;;		On entry : 0/0
 18337 ;;		On exit  : 0/0
 18338 ;;		Unchanged: 0/0
 18339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18340 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18341 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18343 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18344 ;;Total ram usage:        0 bytes
 18345 ;; Hardware stack levels used: 1
 18346 ;; Hardware stack levels required when called: 8
 18347 ;; This function calls:
 18348 ;;		_RN487X_FilterData
 18349 ;;		_RN487X_is_rx_ready
 18350 ;; This function is called by:
 18351 ;;		_RN487X_Read
 18352 ;;		_main
 18353 ;;		_RN487X_Example_TransparentUart
 18354 ;; This function uses a non-reentrant model
 18355 ;;
 18356                           
 18357     1389                     _RN487X_DataReady:	
 18358                           ;psect for function _RN487X_DataReady
 18359                           
 18360     1389                     l14196:	
 18361                           ;incstack = 0
 18362                           ; Regs used in _RN487X_DataReady: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18363                           
 18364                           
 18365                           ;mcc_generated_files/rn487x/rn487x.c: 344:     if (dataReady)
 18366     1389  0140               	movlb	0	; select bank0
 18367     138A  085E               	movf	_dataReady,w
 18368     138B  1903               	btfsc	3,2
 18369     138C  2B8E               	goto	u11351
 18370     138D  2B8F               	goto	u11350
 18371     138E                     u11351:
 18372     138E  2B91               	goto	l14202
 18373     138F                     u11350:
 18374     138F                     l14198:
 18375                           
 18376                           ;mcc_generated_files/rn487x/rn487x.c: 345:     {;mcc_generated_files/rn487x/rn487x.c: 34
      +                          6:         return 1;
 18377     138F  3001               	movlw	1
 18378     1390  2BA4               	goto	l1611
 18379     1391                     l14202:
 18380                           
 18381                           ;mcc_generated_files/rn487x/rn487x.c: 349:     if (RN487X.DataReady())
 18382     1391  306E               	movlw	low ((_RN487X+6)| (0+32768))
 18383     1392  0084               	movwf	4
 18384     1393  3098               	movlw	high ((_RN487X+6)| (0+32768))
 18385     1394  0085               	movwf	5
 18386     1395  3F01               	moviw [1]fsr0
 18387     1396  008A               	movwf	10
 18388     1397  3F00               	moviw [0]fsr0
 18389     1398  000A               	callw
 18390     1399  3193               	pagesel	$
 18391     139A  3A00               	xorlw	0
 18392     139B  1903               	skipnz
 18393     139C  2B9E               	goto	u11361
 18394     139D  2B9F               	goto	u11360
 18395     139E                     u11361:
 18396     139E  2BA3               	goto	l14208
 18397     139F                     u11360:
 18398     139F                     l14204:
 18399                           
 18400                           ;mcc_generated_files/rn487x/rn487x.c: 350:     {;mcc_generated_files/rn487x/rn487x.c: 35
      +                          1:         return RN487X_FilterData();
 18401     139F  318B  231A  3193   	fcall	_RN487X_FilterData
 18402     13A2  2BA4               	goto	l1611
 18403     13A3                     l14208:
 18404                           
 18405                           ;mcc_generated_files/rn487x/rn487x.c: 353:     return 0;
 18406     13A3  3000               	movlw	0
 18407     13A4                     l1611:
 18408     13A4  0008               	return
 18409     13A5                     __end_of_RN487X_DataReady:
 18410                           
 18411                           	psect	text45
 18412     0B1A                     __ptext45:	
 18413 ;; *************** function _RN487X_FilterData *****************
 18414 ;; Defined at:
 18415 ;;		line 363 in file "mcc_generated_files/rn487x/rn487x.c"
 18416 ;; Parameters:    Size  Location     Type
 18417 ;;		None
 18418 ;; Auto vars:     Size  Location     Type
 18419 ;;  readChar        1   36[BANK0 ] unsigned char 
 18420 ;; Return value:  Size  Location     Type
 18421 ;;                  1    wreg      _Bool 
 18422 ;; Registers used:
 18423 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18424 ;; Tracked objects:
 18425 ;;		On entry : 0/0
 18426 ;;		On exit  : 0/0
 18427 ;;		Unchanged: 0/0
 18428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18429 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18430 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18431 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18432 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18433 ;;Total ram usage:        2 bytes
 18434 ;; Hardware stack levels used: 1
 18435 ;; Hardware stack levels required when called: 7
 18436 ;; This function calls:
 18437 ;;		_RN487X_MessageHandler
 18438 ;;		_RN487X_Read@rn487x_interface$F1835
 18439 ;; This function is called by:
 18440 ;;		_RN487X_DataReady
 18441 ;; This function uses a non-reentrant model
 18442 ;;
 18443                           
 18444     0B1A                     _RN487X_FilterData:	
 18445                           ;psect for function _RN487X_FilterData
 18446                           
 18447     0B1A                     l13580:	
 18448                           ;incstack = 0
 18449                           ; Regs used in _RN487X_FilterData: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18450                           
 18451                           
 18452                           ;mcc_generated_files/rn487x/rn487x.c: 365:     static _Bool asyncBuffering = 0;;mcc_gene
      +                          rated_files/rn487x/rn487x.c: 367:     uint8_t readChar = RN487X.Read();
 18453     0B1A  306A               	movlw	low ((_RN487X+2)| (0+32768))
 18454     0B1B  0084               	movwf	4
 18455     0B1C  3098               	movlw	high ((_RN487X+2)| (0+32768))
 18456     0B1D  0085               	movwf	5
 18457     0B1E  3F01               	moviw [1]fsr0
 18458     0B1F  008A               	movwf	10
 18459     0B20  3F00               	moviw [0]fsr0
 18460     0B21  000A               	callw
 18461     0B22  318B               	pagesel	$
 18462     0B23  0140               	movlb	0	; select bank0
 18463     0B24  00C4               	movwf	RN487X_FilterData@readChar
 18464     0B25                     l13582:
 18465                           
 18466                           ;mcc_generated_files/rn487x/rn487x.c: 369:     if(asyncBuffering == 1)
 18467     0B25  035D               	decf	RN487X_FilterData@asyncBuffering,w
 18468     0B26  1D03               	btfss	3,2
 18469     0B27  2B29               	goto	u10331
 18470     0B28  2B2A               	goto	u10330
 18471     0B29                     u10331:
 18472     0B29  2B54               	goto	l13598
 18473     0B2A                     u10330:
 18474     0B2A                     l13584:
 18475                           
 18476                           ;mcc_generated_files/rn487x/rn487x.c: 370:     {;mcc_generated_files/rn487x/rn487x.c: 37
      +                          1:         if(readChar == ('%'))
 18477     0B2A  3025               	movlw	37
 18478     0B2B  0644               	xorwf	RN487X_FilterData@readChar,w
 18479     0B2C  1D03               	btfss	3,2
 18480     0B2D  2B2F               	goto	u10341
 18481     0B2E  2B30               	goto	u10340
 18482     0B2F                     u10341:
 18483     0B2F  2B42               	goto	l13592
 18484     0B30                     u10340:
 18485     0B30                     l13586:
 18486                           
 18487                           ;mcc_generated_files/rn487x/rn487x.c: 372:         {;mcc_generated_files/rn487x/rn487x.c
      +                          : 373:             asyncBuffering = 0;
 18488     0B30  01DD               	clrf	RN487X_FilterData@asyncBuffering
 18489     0B31                     l13588:
 18490                           
 18491                           ;mcc_generated_files/rn487x/rn487x.c: 374:             *pHead = '\0';
 18492     0B31  0860               	movf	_pHead,w
 18493     0B32  0086               	movwf	6
 18494     0B33  3003               	movlw	3	; select bank6/7
 18495     0B34  0087               	movwf	7
 18496     0B35  0181               	clrf	1
 18497     0B36                     l13590:
 18498                           
 18499                           ;mcc_generated_files/rn487x/rn487x.c: 375:             RN487X.AsyncHandler(asyncBuffer);
 18500     0B36  0862               	movf	_asyncBuffer,w
 18501     0B37  00FB               	movwf	RN487X_MessageHandler@message
 18502     0B38  3078               	movlw	low ((_RN487X+16)| (0+32768))
 18503     0B39  0084               	movwf	4
 18504     0B3A  3098               	movlw	high ((_RN487X+16)| (0+32768))
 18505     0B3B  0085               	movwf	5
 18506     0B3C  3F01               	moviw [1]fsr0
 18507     0B3D  008A               	movwf	10
 18508     0B3E  3F00               	moviw [0]fsr0
 18509     0B3F  000A               	callw
 18510     0B40  318B               	pagesel	$
 18511                           
 18512                           ;mcc_generated_files/rn487x/rn487x.c: 376:         }
 18513     0B41  2B63               	goto	l1627
 18514     0B42                     l13592:
 18515     0B42  0862               	movf	_asyncBuffer,w
 18516     0B43  0761               	addwf	_asyncBufferSize,w
 18517     0B44  0260               	subwf	_pHead,w
 18518     0B45  1803               	skipnc
 18519     0B46  2B48               	goto	u10351
 18520     0B47  2B49               	goto	u10350
 18521     0B48                     u10351:
 18522     0B48  2B63               	goto	l1627
 18523     0B49                     u10350:
 18524     0B49                     l13594:
 18525                           
 18526                           ;mcc_generated_files/rn487x/rn487x.c: 378:         {;mcc_generated_files/rn487x/rn487x.c
      +                          : 379:             *pHead++ = readChar;
 18527     0B49  0860               	movf	_pHead,w
 18528     0B4A  0086               	movwf	6
 18529     0B4B  3003               	movlw	3	; select bank6/7
 18530     0B4C  0087               	movwf	7
 18531     0B4D  0844               	movf	RN487X_FilterData@readChar,w
 18532     0B4E  0081               	movwf	1
 18533     0B4F                     l13596:
 18534     0B4F  3001               	movlw	1
 18535     0B50  00C3               	movwf	??_RN487X_FilterData
 18536     0B51  0843               	movf	??_RN487X_FilterData,w
 18537     0B52  07E0               	addwf	_pHead,f
 18538     0B53  2B63               	goto	l1627
 18539     0B54                     l13598:
 18540                           
 18541                           ;mcc_generated_files/rn487x/rn487x.c: 383:     {;mcc_generated_files/rn487x/rn487x.c: 38
      +                          4:         if (readChar == ('%'))
 18542     0B54  3025               	movlw	37
 18543     0B55  0644               	xorwf	RN487X_FilterData@readChar,w
 18544     0B56  1D03               	btfss	3,2
 18545     0B57  2B59               	goto	u10361
 18546     0B58  2B5A               	goto	u10360
 18547     0B59                     u10361:
 18548     0B59  2B5F               	goto	l1628
 18549     0B5A                     u10360:
 18550     0B5A                     l13600:
 18551                           
 18552                           ;mcc_generated_files/rn487x/rn487x.c: 385:         {;mcc_generated_files/rn487x/rn487x.c
      +                          : 386:             asyncBuffering = 1;
 18553     0B5A  01DD               	clrf	RN487X_FilterData@asyncBuffering
 18554     0B5B  0ADD               	incf	RN487X_FilterData@asyncBuffering,f
 18555     0B5C                     l13602:
 18556                           
 18557                           ;mcc_generated_files/rn487x/rn487x.c: 387:             pHead = asyncBuffer;
 18558     0B5C  0862               	movf	_asyncBuffer,w
 18559     0B5D  00E0               	movwf	_pHead
 18560                           
 18561                           ;mcc_generated_files/rn487x/rn487x.c: 388:         }
 18562     0B5E  2B63               	goto	l1627
 18563     0B5F                     l1628:	
 18564                           ;mcc_generated_files/rn487x/rn487x.c: 389:         else
 18565                           
 18566                           
 18567                           ;mcc_generated_files/rn487x/rn487x.c: 390:         {;mcc_generated_files/rn487x/rn487x.c
      +                          : 391:             dataReady = 1;
 18568     0B5F  01DE               	clrf	_dataReady
 18569     0B60  0ADE               	incf	_dataReady,f
 18570     0B61                     l13604:
 18571                           
 18572                           ;mcc_generated_files/rn487x/rn487x.c: 392:             peek = readChar;
 18573     0B61  0844               	movf	RN487X_FilterData@readChar,w
 18574     0B62  00DF               	movwf	_peek
 18575     0B63                     l1627:	
 18576                           ;mcc_generated_files/rn487x/rn487x.c: 394:     }
 18577                           
 18578                           
 18579                           ;mcc_generated_files/rn487x/rn487x.c: 395:     return dataReady;
 18580     0B63  0140               	movlb	0	; select bank0
 18581     0B64  085E               	movf	_dataReady,w
 18582     0B65                     l1630:
 18583     0B65  0008               	return
 18584     0B66                     __end_of_RN487X_FilterData:
 18585                           
 18586                           	psect	text46
 18587     17C9                     __ptext46:	
 18588 ;; *************** function _RN487X_MessageHandler *****************
 18589 ;; Defined at:
 18590 ;;		line 368 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 18591 ;; Parameters:    Size  Location     Type
 18592 ;;  message         1   11[COMMON] PTR unsigned char 
 18593 ;;		 -> statusBuffer@main$F4234(80), statusBuffer(80), NULL(0), 
 18594 ;; Auto vars:     Size  Location     Type
 18595 ;;  messageType     1   34[BANK0 ] enum E12962
 18596 ;; Return value:  Size  Location     Type
 18597 ;;                  1    wreg      void 
 18598 ;; Registers used:
 18599 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18600 ;; Tracked objects:
 18601 ;;		On entry : 0/0
 18602 ;;		On exit  : 0/0
 18603 ;;		Unchanged: 0/0
 18604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18605 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18606 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18608 ;;      Totals:         1       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18609 ;;Total ram usage:        2 bytes
 18610 ;; Hardware stack levels used: 1
 18611 ;; Hardware stack levels required when called: 6
 18612 ;; This function calls:
 18613 ;;		_rn487x_PrintIndicatorCharacters
 18614 ;;		_rn487x_PrintMessage
 18615 ;;		_rn487x_PrintMessageEnd
 18616 ;;		_rn487x_PrintMessageStart
 18617 ;;		_strstr
 18618 ;; This function is called by:
 18619 ;;		_RN487X_FilterData
 18620 ;; This function uses a non-reentrant model
 18621 ;;
 18622                           
 18623     17C9                     _RN487X_MessageHandler:	
 18624                           ;psect for function _RN487X_MessageHandler
 18625                           
 18626     17C9                     l13474:	
 18627                           ;incstack = 0
 18628                           ; Regs used in _RN487X_MessageHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18629                           
 18630                           
 18631                           ;mcc_generated_files/rn487x/rn487x_interface.c: 368: static void RN487X_MessageHandler(c
      +                          har* message);mcc_generated_files/rn487x/rn487x_interface.c: 369: {;mcc_generated_files/
      +                          rn487x/rn487x_interface.c: 370:     RN487X_MESSAGE_TYPE messageType;;mcc_generated_files
      +                          /rn487x/rn487x_interface.c: 371:     rn487x_PrintMessageStart();
 18632     17C9  3195  25DF  3197   	fcall	_rn487x_PrintMessageStart
 18633                           
 18634                           ;mcc_generated_files/rn487x/rn487x_interface.c: 372:     if (strstr(message, "DISCONNECT
      +                          "))
 18635     17CC  3091               	movlw	low (STR_2| (0+32768))
 18636     17CD  00F7               	movwf	strstr@n
 18637     17CE  3098               	movlw	high (STR_2| (0+32768))
 18638     17CF  00F8               	movwf	strstr@n+1
 18639     17D0  087B               	movf	RN487X_MessageHandler@message,w
 18640     17D1  318B  2366  3197   	fcall	_strstr
 18641     17D4  3A00               	xorlw	0
 18642     17D5  1903               	skipnz
 18643     17D6  2FD8               	goto	u10181
 18644     17D7  2FD9               	goto	u10180
 18645     17D8                     u10181:
 18646     17D8  2FDD               	goto	l13478
 18647     17D9                     u10180:
 18648     17D9                     l13476:
 18649                           
 18650                           ;mcc_generated_files/rn487x/rn487x_interface.c: 373:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 374:         messageType = DISCONNECT_MSG;
 18651     17D9  0140               	movlb	0	; select bank0
 18652     17DA  01C2               	clrf	RN487X_MessageHandler@messageType
 18653                           
 18654                           ;mcc_generated_files/rn487x/rn487x_interface.c: 375:         connected = 0;
 18655     17DB  01E3               	clrf	_connected
 18656                           
 18657                           ;mcc_generated_files/rn487x/rn487x_interface.c: 376:     }
 18658     17DC  2FF3               	goto	l13484
 18659     17DD                     l13478:
 18660     17DD  307A               	movlw	low (STR_4| (0+32768))
 18661     17DE  00F7               	movwf	strstr@n
 18662     17DF  3098               	movlw	high (STR_4| (0+32768))
 18663     17E0  00F8               	movwf	strstr@n+1
 18664     17E1  087B               	movf	RN487X_MessageHandler@message,w
 18665     17E2  318B  2366  3197   	fcall	_strstr
 18666     17E5  3A00               	xorlw	0
 18667     17E6  1903               	skipnz
 18668     17E7  2FE9               	goto	u10191
 18669     17E8  2FEA               	goto	u10190
 18670     17E9                     u10191:
 18671     17E9  2FF0               	goto	l13482
 18672     17EA                     u10190:
 18673     17EA                     l13480:
 18674                           
 18675                           ;mcc_generated_files/rn487x/rn487x_interface.c: 378:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 379:         messageType = STREAM_OPEN_MSG;
 18676     17EA  0140               	movlb	0	; select bank0
 18677     17EB  01C2               	clrf	RN487X_MessageHandler@messageType
 18678     17EC  0AC2               	incf	RN487X_MessageHandler@messageType,f
 18679                           
 18680                           ;mcc_generated_files/rn487x/rn487x_interface.c: 380:         connected = 1;
 18681     17ED  01E3               	clrf	_connected
 18682     17EE  0AE3               	incf	_connected,f
 18683                           
 18684                           ;mcc_generated_files/rn487x/rn487x_interface.c: 381:     }
 18685     17EF  2FF3               	goto	l13484
 18686     17F0                     l13482:
 18687                           
 18688                           ;mcc_generated_files/rn487x/rn487x_interface.c: 383:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 384:         messageType = GENERAL_MSG;
 18689     17F0  3002               	movlw	2
 18690     17F1  0140               	movlb	0	; select bank0
 18691     17F2  00C2               	movwf	RN487X_MessageHandler@messageType
 18692     17F3                     l13484:
 18693                           
 18694                           ;mcc_generated_files/rn487x/rn487x_interface.c: 386:     rn487x_PrintMessage(message);
 18695     17F3  087B               	movf	RN487X_MessageHandler@message,w
 18696     17F4  3197  2792  3197   	fcall	_rn487x_PrintMessage
 18697     17F7                     l13486:
 18698                           
 18699                           ;mcc_generated_files/rn487x/rn487x_interface.c: 387:     rn487x_PrintMessageEnd();
 18700     17F7  318C  2401  3197   	fcall	_rn487x_PrintMessageEnd
 18701     17FA                     l13488:
 18702                           
 18703                           ;mcc_generated_files/rn487x/rn487x_interface.c: 388:     rn487x_PrintIndicatorCharacters
      +                          (messageType);
 18704     17FA  0140               	movlb	0	; select bank0
 18705     17FB  0842               	movf	RN487X_MessageHandler@messageType,w
 18706     17FC  3194  2429  3197   	fcall	_rn487x_PrintIndicatorCharacters
 18707     17FF                     l1509:
 18708     17FF  0008               	return
 18709     1800                     __end_of_RN487X_MessageHandler:
 18710                           
 18711                           	psect	text47
 18712     0B66                     __ptext47:	
 18713 ;; *************** function _strstr *****************
 18714 ;; Defined at:
 18715 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\strstr.c"
 18716 ;; Parameters:    Size  Location     Type
 18717 ;;  h               1    wreg     PTR const unsigned char 
 18718 ;;		 -> statusBuffer@main$F4234(80), statusBuffer(80), NULL(0), 
 18719 ;;  n               2    7[COMMON] PTR const unsigned char 
 18720 ;;		 -> STR_5(12), STR_3(11), 
 18721 ;; Auto vars:     Size  Location     Type
 18722 ;;  h               1    2[BANK0 ] PTR const unsigned char 
 18723 ;;		 -> statusBuffer@main$F4234(80), statusBuffer(80), NULL(0), 
 18724 ;;  nl              2    0[BANK0 ] unsigned int 
 18725 ;; Return value:  Size  Location     Type
 18726 ;;                  1    wreg      PTR unsigned char 
 18727 ;; Registers used:
 18728 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18729 ;; Tracked objects:
 18730 ;;		On entry : 0/0
 18731 ;;		On exit  : 0/0
 18732 ;;		Unchanged: 0/0
 18733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18734 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18735 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18736 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18737 ;;      Totals:         4       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18738 ;;Total ram usage:        7 bytes
 18739 ;; Hardware stack levels used: 1
 18740 ;; Hardware stack levels required when called: 5
 18741 ;; This function calls:
 18742 ;;		_strchr
 18743 ;;		_strlen
 18744 ;;		_strncmp
 18745 ;; This function is called by:
 18746 ;;		_RN487X_MessageHandler
 18747 ;; This function uses a non-reentrant model
 18748 ;;
 18749                           
 18750     0B66                     _strstr:	
 18751                           ;psect for function _strstr
 18752                           
 18753                           
 18754                           ;incstack = 0
 18755                           ; Regs used in _strstr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18756                           ;strstr@h stored from wreg
 18757     0B66  0140               	movlb	0	; select bank0
 18758     0B67  00A2               	movwf	strstr@h
 18759     0B68                     l13378:
 18760     0B68  0877               	movf	strstr@n,w
 18761     0B69  0478               	iorwf	strstr@n+1,w
 18762     0B6A  1903               	btfsc	3,2
 18763     0B6B  2B6D               	goto	u10061
 18764     0B6C  2B6E               	goto	u10060
 18765     0B6D                     u10061:
 18766     0B6D  2BB1               	goto	l13394
 18767     0B6E                     u10060:
 18768     0B6E                     l13380:
 18769     0B6E  0878               	movf	strstr@n+1,w
 18770     0B6F  00F2               	movwf	strlen@s+1
 18771     0B70  0877               	movf	strstr@n,w
 18772     0B71  00F1               	movwf	strlen@s
 18773     0B72  3192  22B7  318B   	fcall	_strlen
 18774     0B75  0872               	movf	?_strlen+1,w
 18775     0B76  0140               	movlb	0	; select bank0
 18776     0B77  00A1               	movwf	strstr@nl+1
 18777     0B78  0871               	movf	?_strlen,w
 18778     0B79  00A0               	movwf	strstr@nl
 18779     0B7A  2BA3               	goto	l13390
 18780     0B7B                     l13382:
 18781     0B7B  0878               	movf	strstr@n+1,w
 18782     0B7C  00F2               	movwf	strncmp@r+1
 18783     0B7D  0877               	movf	strstr@n,w
 18784     0B7E  00F1               	movwf	strncmp@r
 18785     0B7F  0821               	movf	strstr@nl+1,w
 18786     0B80  00F4               	movwf	strncmp@n+1
 18787     0B81  0820               	movf	strstr@nl,w
 18788     0B82  00F3               	movwf	strncmp@n
 18789     0B83  0822               	movf	strstr@h,w
 18790     0B84  318C  244F  318B   	fcall	_strncmp
 18791     0B87  0871               	movf	?_strncmp,w
 18792     0B88  0472               	iorwf	?_strncmp+1,w
 18793     0B89  1D03               	btfss	3,2
 18794     0B8A  2B8C               	goto	u10071
 18795     0B8B  2B8D               	goto	u10070
 18796     0B8C                     u10071:
 18797     0B8C  2B90               	goto	l13388
 18798     0B8D                     u10070:
 18799     0B8D                     l13384:
 18800     0B8D  0140               	movlb	0	; select bank0
 18801     0B8E  0822               	movf	strstr@h,w
 18802     0B8F  2BB2               	goto	l3352
 18803     0B90                     l13388:
 18804     0B90  0877               	movf	strstr@n,w
 18805     0B91  0084               	movwf	4
 18806     0B92  0878               	movf	strstr@n+1,w
 18807     0B93  0085               	movwf	5
 18808     0B94  0800               	movf	0,w	;code access
 18809     0B95  00F9               	movwf	??_strstr
 18810     0B96  01FA               	clrf	??_strstr+1
 18811     0B97  0879               	movf	??_strstr,w
 18812     0B98  00F1               	movwf	strchr@c
 18813     0B99  087A               	movf	??_strstr+1,w
 18814     0B9A  00F2               	movwf	strchr@c+1
 18815     0B9B  0140               	movlb	0	; select bank0
 18816     0B9C  0822               	movf	strstr@h,w
 18817     0B9D  3E01               	addlw	1
 18818     0B9E  3192  22D0  318B   	fcall	_strchr
 18819     0BA1  0140               	movlb	0	; select bank0
 18820     0BA2  00A2               	movwf	strstr@h
 18821     0BA3                     l13390:
 18822     0BA3  0822               	movf	strstr@h,w
 18823     0BA4  1903               	btfsc	3,2
 18824     0BA5  2BA7               	goto	u10081
 18825     0BA6  2BA8               	goto	u10080
 18826     0BA7                     u10081:
 18827     0BA7  2BB1               	goto	l13394
 18828     0BA8                     u10080:
 18829     0BA8                     l13392:
 18830     0BA8  0822               	movf	strstr@h,w
 18831     0BA9  0086               	movwf	6
 18832     0BAA  3003               	movlw	3	; select bank6/7
 18833     0BAB  0087               	movwf	7
 18834     0BAC  0801               	movf	1,w
 18835     0BAD  1D03               	btfss	3,2
 18836     0BAE  2BB0               	goto	u10091
 18837     0BAF  2BB1               	goto	u10090
 18838     0BB0                     u10091:
 18839     0BB0  2B7B               	goto	l13382
 18840     0BB1                     u10090:
 18841     0BB1                     l13394:
 18842     0BB1  3000               	movlw	0
 18843     0BB2                     l3352:
 18844     0BB2  0008               	return
 18845     0BB3                     __end_of_strstr:
 18846                           
 18847                           	psect	text48
 18848     0C4F                     __ptext48:	
 18849 ;; *************** function _strncmp *****************
 18850 ;; Defined at:
 18851 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\strncmp.c"
 18852 ;; Parameters:    Size  Location     Type
 18853 ;;  l               1    wreg     PTR const unsigned char 
 18854 ;;		 -> statusBuffer@main$F4234(80), statusBuffer(80), NULL(0), 
 18855 ;;  r               2    1[COMMON] PTR const unsigned char 
 18856 ;;		 -> STR_5(12), STR_3(11), 
 18857 ;;  n               2    3[COMMON] unsigned int 
 18858 ;; Auto vars:     Size  Location     Type
 18859 ;;  l               1    6[COMMON] PTR const unsigned char 
 18860 ;;		 -> statusBuffer@main$F4234(80), statusBuffer(80), NULL(0), 
 18861 ;; Return value:  Size  Location     Type
 18862 ;;                  2    1[COMMON] int 
 18863 ;; Registers used:
 18864 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
 18865 ;; Tracked objects:
 18866 ;;		On entry : 0/0
 18867 ;;		On exit  : 0/0
 18868 ;;		Unchanged: 0/0
 18869 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18870 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18871 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18872 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18873 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18874 ;;Total ram usage:        6 bytes
 18875 ;; Hardware stack levels used: 1
 18876 ;; Hardware stack levels required when called: 4
 18877 ;; This function calls:
 18878 ;;		Nothing
 18879 ;; This function is called by:
 18880 ;;		_strstr
 18881 ;; This function uses a non-reentrant model
 18882 ;;
 18883                           
 18884     0C4F                     _strncmp:	
 18885                           ;psect for function _strncmp
 18886                           
 18887                           
 18888                           ;incstack = 0
 18889                           ; Regs used in _strncmp: [wreg-fsr1h+status,2+status,0+pclath]
 18890                           ;strncmp@l stored from wreg
 18891     0C4F  00F6               	movwf	strncmp@l
 18892     0C50                     l13232:
 18893     0C50  3001               	movlw	1
 18894     0C51  02F3               	subwf	strncmp@n,f
 18895     0C52  3000               	movlw	0
 18896     0C53  3BF4               	subwfb	strncmp@n+1,f
 18897     0C54  0A73               	incf	strncmp@n,w
 18898     0C55  1D03               	skipz
 18899     0C56  2C5B               	goto	u9921
 18900     0C57  0A74               	incf	strncmp@n+1,w
 18901     0C58  1D03               	btfss	3,2
 18902     0C59  2C5B               	goto	u9921
 18903     0C5A  2C5C               	goto	u9920
 18904     0C5B                     u9921:
 18905     0C5B  2C6B               	goto	l13244
 18906     0C5C                     u9920:
 18907     0C5C                     l13234:
 18908     0C5C  01F1               	clrf	?_strncmp
 18909     0C5D  01F2               	clrf	?_strncmp+1
 18910     0C5E  2CA1               	goto	l3365
 18911     0C5F                     l13238:
 18912     0C5F  3001               	movlw	1
 18913     0C60  00F5               	movwf	??_strncmp
 18914     0C61  0875               	movf	??_strncmp,w
 18915     0C62  07F6               	addwf	strncmp@l,f
 18916     0C63                     l13240:
 18917     0C63  3001               	movlw	1
 18918     0C64  07F1               	addwf	strncmp@r,f
 18919     0C65  3000               	movlw	0
 18920     0C66  3DF2               	addwfc	strncmp@r+1,f
 18921     0C67                     l13242:
 18922     0C67  3001               	movlw	1
 18923     0C68  02F3               	subwf	strncmp@n,f
 18924     0C69  3000               	movlw	0
 18925     0C6A  3BF4               	subwfb	strncmp@n+1,f
 18926     0C6B                     l13244:
 18927     0C6B  0876               	movf	strncmp@l,w
 18928     0C6C  0086               	movwf	6
 18929     0C6D  3003               	movlw	3	; select bank6/7
 18930     0C6E  0087               	movwf	7
 18931     0C6F  0801               	movf	1,w
 18932     0C70  1903               	btfsc	3,2
 18933     0C71  2C73               	goto	u9931
 18934     0C72  2C74               	goto	u9930
 18935     0C73                     u9931:
 18936     0C73  2C93               	goto	l13252
 18937     0C74                     u9930:
 18938     0C74                     l13246:
 18939     0C74  0871               	movf	strncmp@r,w
 18940     0C75  0084               	movwf	4
 18941     0C76  0872               	movf	strncmp@r+1,w
 18942     0C77  0085               	movwf	5
 18943     0C78  0012               	moviw fsr0++
 18944     0C79  1903               	btfsc	3,2
 18945     0C7A  2C7C               	goto	u9941
 18946     0C7B  2C7D               	goto	u9940
 18947     0C7C                     u9941:
 18948     0C7C  2C93               	goto	l13252
 18949     0C7D                     u9940:
 18950     0C7D                     l13248:
 18951     0C7D  0873               	movf	strncmp@n,w
 18952     0C7E  0474               	iorwf	strncmp@n+1,w
 18953     0C7F  1903               	btfsc	3,2
 18954     0C80  2C82               	goto	u9951
 18955     0C81  2C83               	goto	u9950
 18956     0C82                     u9951:
 18957     0C82  2C93               	goto	l13252
 18958     0C83                     u9950:
 18959     0C83                     l13250:
 18960     0C83  0871               	movf	strncmp@r,w
 18961     0C84  0084               	movwf	4
 18962     0C85  0872               	movf	strncmp@r+1,w
 18963     0C86  0085               	movwf	5
 18964     0C87  0800               	movf	0,w	;code access
 18965     0C88  00F5               	movwf	??_strncmp
 18966     0C89  0876               	movf	strncmp@l,w
 18967     0C8A  0086               	movwf	6
 18968     0C8B  3003               	movlw	3	; select bank6/7
 18969     0C8C  0087               	movwf	7
 18970     0C8D  0801               	movf	1,w
 18971     0C8E  0675               	xorwf	??_strncmp,w
 18972     0C8F  1903               	skipnz
 18973     0C90  2C92               	goto	u9961
 18974     0C91  2C93               	goto	u9960
 18975     0C92                     u9961:
 18976     0C92  2C5F               	goto	l13238
 18977     0C93                     u9960:
 18978     0C93                     l13252:
 18979     0C93  0876               	movf	strncmp@l,w
 18980     0C94  0086               	movwf	6
 18981     0C95  3003               	movlw	3	; select bank6/7
 18982     0C96  0087               	movwf	7
 18983     0C97  0871               	movf	strncmp@r,w
 18984     0C98  0084               	movwf	4
 18985     0C99  0872               	movf	strncmp@r+1,w
 18986     0C9A  0085               	movwf	5
 18987     0C9B  0800               	movf	0,w	;code access
 18988     0C9C  0201               	subwf	1,w
 18989     0C9D  00F1               	movwf	?_strncmp
 18990     0C9E  01F2               	clrf	?_strncmp+1
 18991     0C9F  1C03               	skipc
 18992     0CA0  03F2               	decf	?_strncmp+1,f
 18993     0CA1                     l3365:
 18994     0CA1  0008               	return
 18995     0CA2                     __end_of_strncmp:
 18996                           
 18997                           	psect	text49
 18998     12D0                     __ptext49:	
 18999 ;; *************** function _strchr *****************
 19000 ;; Defined at:
 19001 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\strchr.c"
 19002 ;; Parameters:    Size  Location     Type
 19003 ;;  s               1    wreg     PTR const unsigned char 
 19004 ;;		 -> statusBuffer@main$F4234(80), statusBuffer(80), NULL(0), 
 19005 ;;  c               2    1[COMMON] int 
 19006 ;; Auto vars:     Size  Location     Type
 19007 ;;  s               1    3[COMMON] PTR const unsigned char 
 19008 ;;		 -> statusBuffer@main$F4234(80), statusBuffer(80), NULL(0), 
 19009 ;; Return value:  Size  Location     Type
 19010 ;;                  1    wreg      PTR unsigned char 
 19011 ;; Registers used:
 19012 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 19013 ;; Tracked objects:
 19014 ;;		On entry : 0/0
 19015 ;;		On exit  : 0/0
 19016 ;;		Unchanged: 0/0
 19017 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19018 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19019 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19021 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19022 ;;Total ram usage:        3 bytes
 19023 ;; Hardware stack levels used: 1
 19024 ;; Hardware stack levels required when called: 4
 19025 ;; This function calls:
 19026 ;;		Nothing
 19027 ;; This function is called by:
 19028 ;;		_strstr
 19029 ;; This function uses a non-reentrant model
 19030 ;;
 19031                           
 19032     12D0                     _strchr:	
 19033                           ;psect for function _strchr
 19034                           
 19035                           
 19036                           ;incstack = 0
 19037                           ; Regs used in _strchr: [wreg+fsr1l+fsr1h+status,2+status,0]
 19038                           ;strchr@s stored from wreg
 19039     12D0  00F3               	movwf	strchr@s
 19040     12D1                     l3358:
 19041     12D1                     l13256:
 19042     12D1  0873               	movf	strchr@s,w
 19043     12D2  0086               	movwf	6
 19044     12D3  3003               	movlw	3	; select bank6/7
 19045     12D4  0087               	movwf	7
 19046     12D5  0801               	movf	1,w
 19047     12D6  0671               	xorwf	strchr@c,w
 19048     12D7  1D03               	skipz
 19049     12D8  2ADA               	goto	u9971
 19050     12D9  2ADB               	goto	u9970
 19051     12DA                     u9971:
 19052     12DA  2ADD               	goto	l13262
 19053     12DB                     u9970:
 19054     12DB                     l13258:
 19055     12DB  0873               	movf	strchr@s,w
 19056     12DC  2AE8               	goto	l3360
 19057     12DD                     l13262:
 19058     12DD  0873               	movf	strchr@s,w
 19059     12DE  0086               	movwf	6
 19060     12DF  3003               	movlw	3	; select bank6/7
 19061     12E0  0087               	movwf	7
 19062     12E1  0AF3               	incf	strchr@s,f
 19063     12E2  0801               	movf	1,w
 19064     12E3  1D03               	btfss	3,2
 19065     12E4  2AE6               	goto	u9981
 19066     12E5  2AE7               	goto	u9980
 19067     12E6                     u9981:
 19068     12E6  2AD1               	goto	l3358
 19069     12E7                     u9980:
 19070     12E7                     l13264:
 19071     12E7  3000               	movlw	0
 19072     12E8                     l3360:
 19073     12E8  0008               	return
 19074     12E9                     __end_of_strchr:
 19075                           
 19076                           	psect	text50
 19077     15DF                     __ptext50:	
 19078 ;; *************** function _rn487x_PrintMessageStart *****************
 19079 ;; Defined at:
 19080 ;;		line 323 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 19081 ;; Parameters:    Size  Location     Type
 19082 ;;		None
 19083 ;; Auto vars:     Size  Location     Type
 19084 ;;		None
 19085 ;; Return value:  Size  Location     Type
 19086 ;;                  1    wreg      void 
 19087 ;; Registers used:
 19088 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19089 ;; Tracked objects:
 19090 ;;		On entry : 0/0
 19091 ;;		On exit  : 0/0
 19092 ;;		Unchanged: 0/0
 19093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19094 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19095 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19097 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19098 ;;Total ram usage:        0 bytes
 19099 ;; Hardware stack levels used: 1
 19100 ;; Hardware stack levels required when called: 5
 19101 ;; This function calls:
 19102 ;;		_EUSART1_Write
 19103 ;;		_EUSART2_Write
 19104 ;; This function is called by:
 19105 ;;		_RN487X_MessageHandler
 19106 ;; This function uses a non-reentrant model
 19107 ;;
 19108                           
 19109     15DF                     _rn487x_PrintMessageStart:	
 19110                           ;psect for function _rn487x_PrintMessageStart
 19111                           
 19112     15DF                     l13356:	
 19113                           ;incstack = 0
 19114                           ; Regs used in _rn487x_PrintMessageStart: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19115                           
 19116                           
 19117                           ;mcc_generated_files/rn487x/rn487x_interface.c: 325:     uart[UART_CDC].Write('<');
 19118     15DF  303C               	movlw	60
 19119     15E0  00F1               	movwf	EUSART2_Write@txData
 19120     15E1  3002               	movlw	low ((_uart+2)| (0+32768))
 19121     15E2  0084               	movwf	4
 19122     15E3  3098               	movlw	high ((_uart+2)| (0+32768))
 19123     15E4  0085               	movwf	5
 19124     15E5  3F01               	moviw [1]fsr0
 19125     15E6  008A               	movwf	10
 19126     15E7  3F00               	moviw [0]fsr0
 19127     15E8  000A               	callw
 19128     15E9  3195               	pagesel	$
 19129                           
 19130                           ;mcc_generated_files/rn487x/rn487x_interface.c: 326:     uart[UART_CDC].Write('<');
 19131     15EA  303C               	movlw	60
 19132     15EB  00F1               	movwf	EUSART2_Write@txData
 19133     15EC  3002               	movlw	low ((_uart+2)| (0+32768))
 19134     15ED  0084               	movwf	4
 19135     15EE  3098               	movlw	high ((_uart+2)| (0+32768))
 19136     15EF  0085               	movwf	5
 19137     15F0  3F01               	moviw [1]fsr0
 19138     15F1  008A               	movwf	10
 19139     15F2  3F00               	moviw [0]fsr0
 19140     15F3  000A               	callw
 19141     15F4  3195               	pagesel	$
 19142                           
 19143                           ;mcc_generated_files/rn487x/rn487x_interface.c: 327:     uart[UART_CDC].Write('<');
 19144     15F5  303C               	movlw	60
 19145     15F6  00F1               	movwf	EUSART2_Write@txData
 19146     15F7  3002               	movlw	low ((_uart+2)| (0+32768))
 19147     15F8  0084               	movwf	4
 19148     15F9  3098               	movlw	high ((_uart+2)| (0+32768))
 19149     15FA  0085               	movwf	5
 19150     15FB  3F01               	moviw [1]fsr0
 19151     15FC  008A               	movwf	10
 19152     15FD  3F00               	moviw [0]fsr0
 19153     15FE  000A               	callw
 19154     15FF  3195               	pagesel	$
 19155                           
 19156                           ;mcc_generated_files/rn487x/rn487x_interface.c: 328:     uart[UART_CDC].Write(' ');
 19157     1600  3020               	movlw	32
 19158     1601  00F1               	movwf	EUSART2_Write@txData
 19159     1602  3002               	movlw	low ((_uart+2)| (0+32768))
 19160     1603  0084               	movwf	4
 19161     1604  3098               	movlw	high ((_uart+2)| (0+32768))
 19162     1605  0085               	movwf	5
 19163     1606  3F01               	moviw [1]fsr0
 19164     1607  008A               	movwf	10
 19165     1608  3F00               	moviw [0]fsr0
 19166     1609  000A               	callw
 19167     160A  3195               	pagesel	$
 19168     160B                     l1486:
 19169     160B  0008               	return
 19170     160C                     __end_of_rn487x_PrintMessageStart:
 19171                           
 19172                           	psect	text51
 19173     0C01                     __ptext51:	
 19174 ;; *************** function _rn487x_PrintMessageEnd *****************
 19175 ;; Defined at:
 19176 ;;		line 331 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 19177 ;; Parameters:    Size  Location     Type
 19178 ;;		None
 19179 ;; Auto vars:     Size  Location     Type
 19180 ;;		None
 19181 ;; Return value:  Size  Location     Type
 19182 ;;                  1    wreg      void 
 19183 ;; Registers used:
 19184 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19185 ;; Tracked objects:
 19186 ;;		On entry : 0/0
 19187 ;;		On exit  : 0/0
 19188 ;;		Unchanged: 0/0
 19189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19191 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19193 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19194 ;;Total ram usage:        0 bytes
 19195 ;; Hardware stack levels used: 1
 19196 ;; Hardware stack levels required when called: 5
 19197 ;; This function calls:
 19198 ;;		_EUSART1_Write
 19199 ;;		_EUSART2_Write
 19200 ;; This function is called by:
 19201 ;;		_RN487X_MessageHandler
 19202 ;; This function uses a non-reentrant model
 19203 ;;
 19204                           
 19205     0C01                     _rn487x_PrintMessageEnd:	
 19206                           ;psect for function _rn487x_PrintMessageEnd
 19207                           
 19208     0C01                     l13358:	
 19209                           ;incstack = 0
 19210                           ; Regs used in _rn487x_PrintMessageEnd: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19211                           
 19212                           
 19213                           ;mcc_generated_files/rn487x/rn487x_interface.c: 333:     uart[UART_CDC].Write(' ');
 19214     0C01  3020               	movlw	32
 19215     0C02  00F1               	movwf	EUSART2_Write@txData
 19216     0C03  3002               	movlw	low ((_uart+2)| (0+32768))
 19217     0C04  0084               	movwf	4
 19218     0C05  3098               	movlw	high ((_uart+2)| (0+32768))
 19219     0C06  0085               	movwf	5
 19220     0C07  3F01               	moviw [1]fsr0
 19221     0C08  008A               	movwf	10
 19222     0C09  3F00               	moviw [0]fsr0
 19223     0C0A  000A               	callw
 19224     0C0B  318C               	pagesel	$
 19225                           
 19226                           ;mcc_generated_files/rn487x/rn487x_interface.c: 334:     uart[UART_CDC].Write('>');
 19227     0C0C  303E               	movlw	62
 19228     0C0D  00F1               	movwf	EUSART2_Write@txData
 19229     0C0E  3002               	movlw	low ((_uart+2)| (0+32768))
 19230     0C0F  0084               	movwf	4
 19231     0C10  3098               	movlw	high ((_uart+2)| (0+32768))
 19232     0C11  0085               	movwf	5
 19233     0C12  3F01               	moviw [1]fsr0
 19234     0C13  008A               	movwf	10
 19235     0C14  3F00               	moviw [0]fsr0
 19236     0C15  000A               	callw
 19237     0C16  318C               	pagesel	$
 19238                           
 19239                           ;mcc_generated_files/rn487x/rn487x_interface.c: 335:     uart[UART_CDC].Write('>');
 19240     0C17  303E               	movlw	62
 19241     0C18  00F1               	movwf	EUSART2_Write@txData
 19242     0C19  3002               	movlw	low ((_uart+2)| (0+32768))
 19243     0C1A  0084               	movwf	4
 19244     0C1B  3098               	movlw	high ((_uart+2)| (0+32768))
 19245     0C1C  0085               	movwf	5
 19246     0C1D  3F01               	moviw [1]fsr0
 19247     0C1E  008A               	movwf	10
 19248     0C1F  3F00               	moviw [0]fsr0
 19249     0C20  000A               	callw
 19250     0C21  318C               	pagesel	$
 19251                           
 19252                           ;mcc_generated_files/rn487x/rn487x_interface.c: 336:     uart[UART_CDC].Write('>');
 19253     0C22  303E               	movlw	62
 19254     0C23  00F1               	movwf	EUSART2_Write@txData
 19255     0C24  3002               	movlw	low ((_uart+2)| (0+32768))
 19256     0C25  0084               	movwf	4
 19257     0C26  3098               	movlw	high ((_uart+2)| (0+32768))
 19258     0C27  0085               	movwf	5
 19259     0C28  3F01               	moviw [1]fsr0
 19260     0C29  008A               	movwf	10
 19261     0C2A  3F00               	moviw [0]fsr0
 19262     0C2B  000A               	callw
 19263     0C2C  318C               	pagesel	$
 19264                           
 19265                           ;mcc_generated_files/rn487x/rn487x_interface.c: 337:     uart[UART_CDC].Write(' ');
 19266     0C2D  3020               	movlw	32
 19267     0C2E  00F1               	movwf	EUSART2_Write@txData
 19268     0C2F  3002               	movlw	low ((_uart+2)| (0+32768))
 19269     0C30  0084               	movwf	4
 19270     0C31  3098               	movlw	high ((_uart+2)| (0+32768))
 19271     0C32  0085               	movwf	5
 19272     0C33  3F01               	moviw [1]fsr0
 19273     0C34  008A               	movwf	10
 19274     0C35  3F00               	moviw [0]fsr0
 19275     0C36  000A               	callw
 19276     0C37  318C               	pagesel	$
 19277                           
 19278                           ;mcc_generated_files/rn487x/rn487x_interface.c: 338:     uart[UART_CDC].Write('\r');
 19279     0C38  300D               	movlw	13
 19280     0C39  00F1               	movwf	EUSART2_Write@txData
 19281     0C3A  3002               	movlw	low ((_uart+2)| (0+32768))
 19282     0C3B  0084               	movwf	4
 19283     0C3C  3098               	movlw	high ((_uart+2)| (0+32768))
 19284     0C3D  0085               	movwf	5
 19285     0C3E  3F01               	moviw [1]fsr0
 19286     0C3F  008A               	movwf	10
 19287     0C40  3F00               	moviw [0]fsr0
 19288     0C41  000A               	callw
 19289     0C42  318C               	pagesel	$
 19290                           
 19291                           ;mcc_generated_files/rn487x/rn487x_interface.c: 339:     uart[UART_CDC].Write('\n');
 19292     0C43  300A               	movlw	10
 19293     0C44  00F1               	movwf	EUSART2_Write@txData
 19294     0C45  3002               	movlw	low ((_uart+2)| (0+32768))
 19295     0C46  0084               	movwf	4
 19296     0C47  3098               	movlw	high ((_uart+2)| (0+32768))
 19297     0C48  0085               	movwf	5
 19298     0C49  3F01               	moviw [1]fsr0
 19299     0C4A  008A               	movwf	10
 19300     0C4B  3F00               	moviw [0]fsr0
 19301     0C4C  000A               	callw
 19302     0C4D  318C               	pagesel	$
 19303     0C4E                     l1489:
 19304     0C4E  0008               	return
 19305     0C4F                     __end_of_rn487x_PrintMessageEnd:
 19306                           
 19307                           	psect	text52
 19308     1792                     __ptext52:	
 19309 ;; *************** function _rn487x_PrintMessage *****************
 19310 ;; Defined at:
 19311 ;;		line 358 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 19312 ;; Parameters:    Size  Location     Type
 19313 ;;  passedMessag    1    wreg     PTR unsigned char 
 19314 ;;		 -> statusBuffer@main$F4234(80), statusBuffer(80), NULL(0), 
 19315 ;; Auto vars:     Size  Location     Type
 19316 ;;  passedMessag    1   32[BANK0 ] PTR unsigned char 
 19317 ;;		 -> statusBuffer@main$F4234(80), statusBuffer(80), NULL(0), 
 19318 ;;  messageIndex    1   33[BANK0 ] unsigned char 
 19319 ;;  printCharact   32    0[BANK0 ] unsigned char [32]
 19320 ;; Return value:  Size  Location     Type
 19321 ;;                  1    wreg      void 
 19322 ;; Registers used:
 19323 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19324 ;; Tracked objects:
 19325 ;;		On entry : 0/0
 19326 ;;		On exit  : 0/0
 19327 ;;		Unchanged: 0/0
 19328 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19329 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19330 ;;      Locals:         0      34       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19331 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19332 ;;      Totals:         2      34       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19333 ;;Total ram usage:       36 bytes
 19334 ;; Hardware stack levels used: 1
 19335 ;; Hardware stack levels required when called: 5
 19336 ;; This function calls:
 19337 ;;		_EUSART1_Write
 19338 ;;		_EUSART2_Write
 19339 ;;		_strcpy
 19340 ;;		_strlen
 19341 ;; This function is called by:
 19342 ;;		_RN487X_MessageHandler
 19343 ;; This function uses a non-reentrant model
 19344 ;;
 19345                           
 19346     1792                     _rn487x_PrintMessage:	
 19347                           ;psect for function _rn487x_PrintMessage
 19348                           
 19349                           
 19350                           ;incstack = 0
 19351                           ; Regs used in _rn487x_PrintMessage: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19352                           ;rn487x_PrintMessage@passedMessage stored from wreg
 19353     1792  0140               	movlb	0	; select bank0
 19354     1793  00C0               	movwf	rn487x_PrintMessage@passedMessage
 19355     1794                     l13368:
 19356                           
 19357                           ;mcc_generated_files/rn487x/rn487x_interface.c: 358: static __attribute__((inline)) void
      +                           rn487x_PrintMessage(char* passedMessage);mcc_generated_files/rn487x/rn487x_interface.c:
      +                           359: {;mcc_generated_files/rn487x/rn487x_interface.c: 360:     char printCharacter [(32
      +                          )];;mcc_generated_files/rn487x/rn487x_interface.c: 361:     strcpy(printCharacter, passe
      +                          dMessage);
 19358     1794  0840               	movf	rn487x_PrintMessage@passedMessage,w
 19359     1795  00F1               	movwf	strcpy@src
 19360     1796  3020               	movlw	(low (rn487x_PrintMessage@printCharacter| 0))& (0+255)
 19361     1797  3191  2180  3197   	fcall	_strcpy
 19362     179A                     l13370:
 19363                           
 19364                           ;mcc_generated_files/rn487x/rn487x_interface.c: 362:     for (uint8_t messageIndex = 0; 
      +                          messageIndex < strlen(passedMessage); messageIndex++)
 19365     179A  0140               	movlb	0	; select bank0
 19366     179B  01C1               	clrf	rn487x_PrintMessage@messageIndex
 19367     179C  2FB1               	goto	l13376
 19368     179D                     l13372:
 19369                           
 19370                           ;mcc_generated_files/rn487x/rn487x_interface.c: 363:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 364:         uart[UART_CDC].Write(printCharacter[messageIndex]);
 19371     179D  0841               	movf	rn487x_PrintMessage@messageIndex,w
 19372     179E  3E20               	addlw	(low (rn487x_PrintMessage@printCharacter| 0))& (0+255)
 19373     179F  0086               	movwf	6
 19374     17A0  0187               	clrf	7
 19375     17A1  0801               	movf	1,w
 19376     17A2  00F1               	movwf	EUSART2_Write@txData
 19377     17A3  3002               	movlw	low ((_uart+2)| (0+32768))
 19378     17A4  0084               	movwf	4
 19379     17A5  3098               	movlw	high ((_uart+2)| (0+32768))
 19380     17A6  0085               	movwf	5
 19381     17A7  3F01               	moviw [1]fsr0
 19382     17A8  008A               	movwf	10
 19383     17A9  3F00               	moviw [0]fsr0
 19384     17AA  000A               	callw
 19385     17AB  3197               	pagesel	$
 19386     17AC                     l13374:
 19387                           
 19388                           ;mcc_generated_files/rn487x/rn487x_interface.c: 365:     }
 19389     17AC  3001               	movlw	1
 19390     17AD  00F6               	movwf	??_rn487x_PrintMessage
 19391     17AE  0876               	movf	??_rn487x_PrintMessage,w
 19392     17AF  0140               	movlb	0	; select bank0
 19393     17B0  07C1               	addwf	rn487x_PrintMessage@messageIndex,f
 19394     17B1                     l13376:
 19395     17B1  0840               	movf	rn487x_PrintMessage@passedMessage,w
 19396     17B2  00F1               	movwf	strlen@s
 19397     17B3  39FF               	andlw	255
 19398     17B4  1D03               	skipz
 19399     17B5  3003               	movlw	3
 19400     17B6  00F2               	movwf	strlen@s+1
 19401     17B7  3192  22B7  3197   	fcall	_strlen
 19402     17BA  0140               	movlb	0	; select bank0
 19403     17BB  0841               	movf	rn487x_PrintMessage@messageIndex,w
 19404     17BC  00F6               	movwf	??_rn487x_PrintMessage
 19405     17BD  01F7               	clrf	??_rn487x_PrintMessage+1
 19406     17BE  0872               	movf	?_strlen+1,w
 19407     17BF  0277               	subwf	??_rn487x_PrintMessage+1,w
 19408     17C0  1D03               	skipz
 19409     17C1  2FC4               	goto	u10055
 19410     17C2  0871               	movf	?_strlen,w
 19411     17C3  0276               	subwf	??_rn487x_PrintMessage,w
 19412     17C4                     u10055:
 19413     17C4  1C03               	skipc
 19414     17C5  2FC7               	goto	u10051
 19415     17C6  2FC8               	goto	u10050
 19416     17C7                     u10051:
 19417     17C7  2F9D               	goto	l13372
 19418     17C8                     u10050:
 19419     17C8                     l1502:
 19420     17C8  0008               	return
 19421     17C9                     __end_of_rn487x_PrintMessage:
 19422                           
 19423                           	psect	text53
 19424     1180                     __ptext53:	
 19425 ;; *************** function _strcpy *****************
 19426 ;; Defined at:
 19427 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\strcpy.c"
 19428 ;; Parameters:    Size  Location     Type
 19429 ;;  dest            1    wreg     PTR unsigned char 
 19430 ;;		 -> rn487x_PrintMessage@printCharacter(32), 
 19431 ;;  src             1    1[COMMON] PTR const unsigned char 
 19432 ;;		 -> statusBuffer@main$F4234(80), statusBuffer(80), NULL(0), 
 19433 ;; Auto vars:     Size  Location     Type
 19434 ;;  dest            1    3[COMMON] PTR unsigned char 
 19435 ;;		 -> rn487x_PrintMessage@printCharacter(32), 
 19436 ;;  d               1    2[COMMON] PTR unsigned char 
 19437 ;;		 -> rn487x_PrintMessage@printCharacter(32), 
 19438 ;; Return value:  Size  Location     Type
 19439 ;;                  1    wreg      PTR unsigned char 
 19440 ;; Registers used:
 19441 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 19442 ;; Tracked objects:
 19443 ;;		On entry : 0/0
 19444 ;;		On exit  : 0/0
 19445 ;;		Unchanged: 0/0
 19446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19447 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19448 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19450 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19451 ;;Total ram usage:        3 bytes
 19452 ;; Hardware stack levels used: 1
 19453 ;; Hardware stack levels required when called: 4
 19454 ;; This function calls:
 19455 ;;		Nothing
 19456 ;; This function is called by:
 19457 ;;		_rn487x_PrintMessage
 19458 ;; This function uses a non-reentrant model
 19459 ;;
 19460                           
 19461     1180                     _strcpy:	
 19462                           ;psect for function _strcpy
 19463                           
 19464                           
 19465                           ;incstack = 0
 19466                           ; Regs used in _strcpy: [wreg-fsr1h+status,2+status,0]
 19467                           ;strcpy@dest stored from wreg
 19468     1180  00F3               	movwf	strcpy@dest
 19469     1181                     l13166:
 19470     1181  0873               	movf	strcpy@dest,w
 19471     1182  00F2               	movwf	strcpy@d
 19472     1183                     l13168:
 19473     1183  0872               	movf	strcpy@d,w
 19474     1184  0086               	movwf	6
 19475     1185  0187               	clrf	7
 19476     1186  0AF2               	incf	strcpy@d,f
 19477     1187  0871               	movf	strcpy@src,w
 19478     1188  0084               	movwf	4
 19479     1189  3003               	movlw	3	; select bank6/7
 19480     118A  0085               	movwf	5
 19481     118B  0AF1               	incf	strcpy@src,f
 19482     118C  0800               	movf	0,w
 19483     118D  3FC0               	movwi [0]fsr1
 19484     118E  0889               	movf	9,f
 19485     118F  1D03               	btfss	3,2
 19486     1190  2992               	goto	u9831
 19487     1191  2993               	goto	u9830
 19488     1192                     u9831:
 19489     1192  2983               	goto	l13168
 19490     1193                     u9830:
 19491     1193                     l3333:
 19492     1193  0008               	return
 19493     1194                     __end_of_strcpy:
 19494                           
 19495                           	psect	text54
 19496     1429                     __ptext54:	
 19497 ;; *************** function _rn487x_PrintIndicatorCharacters *****************
 19498 ;; Defined at:
 19499 ;;		line 342 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 19500 ;; Parameters:    Size  Location     Type
 19501 ;;  messageType     1    wreg     enum E12962
 19502 ;; Auto vars:     Size  Location     Type
 19503 ;;  messageType     1    3[COMMON] enum E12962
 19504 ;; Return value:  Size  Location     Type
 19505 ;;                  1    wreg      void 
 19506 ;; Registers used:
 19507 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19508 ;; Tracked objects:
 19509 ;;		On entry : 0/0
 19510 ;;		On exit  : 0/0
 19511 ;;		Unchanged: 0/0
 19512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19513 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19514 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19516 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19517 ;;Total ram usage:        1 bytes
 19518 ;; Hardware stack levels used: 1
 19519 ;; Hardware stack levels required when called: 5
 19520 ;; This function calls:
 19521 ;;		_EUSART1_Write
 19522 ;;		_EUSART2_Write
 19523 ;; This function is called by:
 19524 ;;		_RN487X_MessageHandler
 19525 ;; This function uses a non-reentrant model
 19526 ;;
 19527                           
 19528     1429                     _rn487x_PrintIndicatorCharacters:	
 19529                           ;psect for function _rn487x_PrintIndicatorCharacters
 19530                           
 19531                           
 19532                           ;incstack = 0
 19533                           ; Regs used in _rn487x_PrintIndicatorCharacters: [wreg-fsr1h+status,2+status,0+pclath+cs
      +                          tack]
 19534                           ;rn487x_PrintIndicatorCharacters@messageType stored from wreg
 19535     1429  00F3               	movwf	rn487x_PrintIndicatorCharacters@messageType
 19536     142A                     l13360:
 19537                           
 19538                           ;mcc_generated_files/rn487x/rn487x_interface.c: 342: static __attribute__((inline)) void
      +                           rn487x_PrintIndicatorCharacters(RN487X_MESSAGE_TYPE messageType);mcc_generated_files/rn
      +                          487x/rn487x_interface.c: 343: {;mcc_generated_files/rn487x/rn487x_interface.c: 344:     
      +                          if (DISCONNECT_MSG == messageType)
 19539     142A  0873               	movf	rn487x_PrintIndicatorCharacters@messageType,w
 19540     142B  1D03               	btfss	3,2
 19541     142C  2C2E               	goto	u10031
 19542     142D  2C2F               	goto	u10030
 19543     142E                     u10031:
 19544     142E  2C3B               	goto	l13364
 19545     142F                     u10030:
 19546     142F                     l13362:
 19547                           
 19548                           ;mcc_generated_files/rn487x/rn487x_interface.c: 345:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 346:         uart[UART_CDC].Write('[');
 19549     142F  305B               	movlw	91
 19550     1430  00F1               	movwf	EUSART2_Write@txData
 19551     1431  3002               	movlw	low ((_uart+2)| (0+32768))
 19552     1432  0084               	movwf	4
 19553     1433  3098               	movlw	high ((_uart+2)| (0+32768))
 19554     1434  0085               	movwf	5
 19555     1435  3F01               	moviw [1]fsr0
 19556     1436  008A               	movwf	10
 19557     1437  3F00               	moviw [0]fsr0
 19558     1438  000A               	callw
 19559     1439  3194               	pagesel	$
 19560                           
 19561                           ;mcc_generated_files/rn487x/rn487x_interface.c: 347:     }
 19562     143A  2C4B               	goto	l1496
 19563     143B                     l13364:
 19564     143B  0373               	decf	rn487x_PrintIndicatorCharacters@messageType,w
 19565     143C  1D03               	btfss	3,2
 19566     143D  2C3F               	goto	u10041
 19567     143E  2C40               	goto	u10040
 19568     143F                     u10041:
 19569     143F  2C4B               	goto	l1496
 19570     1440                     u10040:
 19571     1440                     l13366:
 19572                           
 19573                           ;mcc_generated_files/rn487x/rn487x_interface.c: 349:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 350:         uart[UART_CDC].Write(']');
 19574     1440  305D               	movlw	93
 19575     1441  00F1               	movwf	EUSART2_Write@txData
 19576     1442  3002               	movlw	low ((_uart+2)| (0+32768))
 19577     1443  0084               	movwf	4
 19578     1444  3098               	movlw	high ((_uart+2)| (0+32768))
 19579     1445  0085               	movwf	5
 19580     1446  3F01               	moviw [1]fsr0
 19581     1447  008A               	movwf	10
 19582     1448  3F00               	moviw [0]fsr0
 19583     1449  000A               	callw
 19584     144A  3194               	pagesel	$
 19585     144B                     l1496:	
 19586                           ;mcc_generated_files/rn487x/rn487x_interface.c: 351:     }
 19587                           
 19588     144B  0008               	return
 19589     144C                     __end_of_rn487x_PrintIndicatorCharacters:
 19590                           
 19591                           	psect	text55
 19592     07FD                     __ptext55:	
 19593 ;; *************** function _RN487X_IsConnected *****************
 19594 ;; Defined at:
 19595 ;;		line 243 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 19596 ;; Parameters:    Size  Location     Type
 19597 ;;		None
 19598 ;; Auto vars:     Size  Location     Type
 19599 ;;		None
 19600 ;; Return value:  Size  Location     Type
 19601 ;;                  1    wreg      _Bool 
 19602 ;; Registers used:
 19603 ;;		wreg
 19604 ;; Tracked objects:
 19605 ;;		On entry : 0/0
 19606 ;;		On exit  : 0/0
 19607 ;;		Unchanged: 0/0
 19608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19609 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19610 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19612 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19613 ;;Total ram usage:        0 bytes
 19614 ;; Hardware stack levels used: 1
 19615 ;; Hardware stack levels required when called: 4
 19616 ;; This function calls:
 19617 ;;		Nothing
 19618 ;; This function is called by:
 19619 ;;		_main
 19620 ;;		_RN487X_Example_TransparentUart
 19621 ;; This function uses a non-reentrant model
 19622 ;;
 19623                           
 19624     07FD                     _RN487X_IsConnected:	
 19625                           ;psect for function _RN487X_IsConnected
 19626                           
 19627     07FD                     l14640:	
 19628                           ;incstack = 0
 19629                           ; Regs used in _RN487X_IsConnected: [wreg]
 19630                           
 19631                           
 19632                           ;mcc_generated_files/rn487x/rn487x_interface.c: 245:     return connected;
 19633     07FD  0140               	movlb	0	; select bank0
 19634     07FE  0863               	movf	_connected,w
 19635     07FF                     l1437:
 19636     07FF  0008               	return
 19637     0800                     __end_of_RN487X_IsConnected:
 19638                           
 19639                           	psect	text56
 19640     0DF3                     __ptext56:	
 19641 ;; *************** function _RN487X_Init *****************
 19642 ;; Defined at:
 19643 ;;		line 54 in file "mcc_generated_files/rn487x/rn487x.c"
 19644 ;; Parameters:    Size  Location     Type
 19645 ;;		None
 19646 ;; Auto vars:     Size  Location     Type
 19647 ;;		None
 19648 ;; Return value:  Size  Location     Type
 19649 ;;                  1    wreg      _Bool 
 19650 ;; Registers used:
 19651 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19652 ;; Tracked objects:
 19653 ;;		On entry : 0/0
 19654 ;;		On exit  : 0/0
 19655 ;;		Unchanged: 0/0
 19656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19657 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19658 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19660 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19661 ;;Total ram usage:        0 bytes
 19662 ;; Hardware stack levels used: 1
 19663 ;; Hardware stack levels required when called: 6
 19664 ;; This function calls:
 19665 ;;		_RN487X_Delay
 19666 ;;		_RN487X_IndicateRx
 19667 ;;		_RN487X_Read@rn487x_interface$F1835
 19668 ;;		_RN487X_Reset
 19669 ;;		_RN487X_SetSystemMode
 19670 ;;		_RN487X_is_rx_ready
 19671 ;; This function is called by:
 19672 ;;		_main
 19673 ;; This function uses a non-reentrant model
 19674 ;;
 19675                           
 19676     0DF3                     _RN487X_Init:	
 19677                           ;psect for function _RN487X_Init
 19678                           
 19679     0DF3                     l14654:	
 19680                           ;incstack = 0
 19681                           ; Regs used in _RN487X_Init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19682                           
 19683                           
 19684                           ;mcc_generated_files/rn487x/rn487x.c: 57:     RN487X.SetSystemMode(APPLICATION_MODE);
 19685     0DF3  01F1               	clrf	RN487X_SetSystemMode@mode
 19686     0DF4  0AF1               	incf	RN487X_SetSystemMode@mode,f
 19687     0DF5  3074               	movlw	low ((_RN487X+12)| (0+32768))
 19688     0DF6  0084               	movwf	4
 19689     0DF7  3098               	movlw	high ((_RN487X+12)| (0+32768))
 19690     0DF8  0085               	movwf	5
 19691     0DF9  3F01               	moviw [1]fsr0
 19692     0DFA  008A               	movwf	10
 19693     0DFB  3F00               	moviw [0]fsr0
 19694     0DFC  000A               	callw
 19695     0DFD  318D               	pagesel	$
 19696                           
 19697                           ;mcc_generated_files/rn487x/rn487x.c: 59:     RN487X.ResetModule(1);
 19698     0DFE  01F1               	clrf	RN487X_Reset@value
 19699     0DFF  0AF1               	incf	RN487X_Reset@value,f
 19700     0E00  3072               	movlw	low ((_RN487X+10)| (0+32768))
 19701     0E01  0084               	movwf	4
 19702     0E02  3098               	movlw	high ((_RN487X+10)| (0+32768))
 19703     0E03  0085               	movwf	5
 19704     0E04  3F01               	moviw [1]fsr0
 19705     0E05  008A               	movwf	10
 19706     0E06  3F00               	moviw [0]fsr0
 19707     0E07  000A               	callw
 19708     0E08  318D               	pagesel	$
 19709                           
 19710                           ;mcc_generated_files/rn487x/rn487x.c: 61:     RN487X.DelayMs((1));
 19711     0E09  3001               	movlw	1
 19712     0E0A  00F4               	movwf	RN487X_Delay@delayCount
 19713     0E0B  3000               	movlw	0
 19714     0E0C  00F5               	movwf	RN487X_Delay@delayCount+1
 19715     0E0D  3076               	movlw	low ((_RN487X+14)| (0+32768))
 19716     0E0E  0084               	movwf	4
 19717     0E0F  3098               	movlw	high ((_RN487X+14)| (0+32768))
 19718     0E10  0085               	movwf	5
 19719     0E11  3F01               	moviw [1]fsr0
 19720     0E12  008A               	movwf	10
 19721     0E13  3F00               	moviw [0]fsr0
 19722     0E14  000A               	callw
 19723     0E15  318D               	pagesel	$
 19724                           
 19725                           ;mcc_generated_files/rn487x/rn487x.c: 63:     RN487X.ResetModule(0);
 19726     0E16  01F1               	clrf	RN487X_Reset@value
 19727     0E17  3072               	movlw	low ((_RN487X+10)| (0+32768))
 19728     0E18  0084               	movwf	4
 19729     0E19  3098               	movlw	high ((_RN487X+10)| (0+32768))
 19730     0E1A  0085               	movwf	5
 19731     0E1B  3F01               	moviw [1]fsr0
 19732     0E1C  008A               	movwf	10
 19733     0E1D  3F00               	moviw [0]fsr0
 19734     0E1E  000A               	callw
 19735     0E1F  318D               	pagesel	$
 19736                           
 19737                           ;mcc_generated_files/rn487x/rn487x.c: 66:     RN487X.IndicateRx(1);
 19738     0E20  01F1               	clrf	RN487X_IndicateRx@value
 19739     0E21  0AF1               	incf	RN487X_IndicateRx@value,f
 19740     0E22  3070               	movlw	low ((_RN487X+8)| (0+32768))
 19741     0E23  0084               	movwf	4
 19742     0E24  3098               	movlw	high ((_RN487X+8)| (0+32768))
 19743     0E25  0085               	movwf	5
 19744     0E26  3F01               	moviw [1]fsr0
 19745     0E27  008A               	movwf	10
 19746     0E28  3F00               	moviw [0]fsr0
 19747     0E29  000A               	callw
 19748     0E2A  318D               	pagesel	$
 19749                           
 19750                           ;mcc_generated_files/rn487x/rn487x.c: 68:     RN487X.DelayMs((200));
 19751     0E2B  30C8               	movlw	200
 19752     0E2C  00F4               	movwf	RN487X_Delay@delayCount
 19753     0E2D  3000               	movlw	0
 19754     0E2E  00F5               	movwf	RN487X_Delay@delayCount+1
 19755     0E2F  3076               	movlw	low ((_RN487X+14)| (0+32768))
 19756     0E30  0084               	movwf	4
 19757     0E31  3098               	movlw	high ((_RN487X+14)| (0+32768))
 19758     0E32  0085               	movwf	5
 19759     0E33  3F01               	moviw [1]fsr0
 19760     0E34  008A               	movwf	10
 19761     0E35  3F00               	moviw [0]fsr0
 19762     0E36  000A               	callw
 19763     0E37  318D               	pagesel	$
 19764                           
 19765                           ;mcc_generated_files/rn487x/rn487x.c: 71:     while (RN487X.DataReady())
 19766     0E38  2E42               	goto	l14658
 19767     0E39                     l14656:
 19768                           
 19769                           ;mcc_generated_files/rn487x/rn487x.c: 72:     {;mcc_generated_files/rn487x/rn487x.c: 73:
      +                                   RN487X.Read();
 19770     0E39  306A               	movlw	low ((_RN487X+2)| (0+32768))
 19771     0E3A  0084               	movwf	4
 19772     0E3B  3098               	movlw	high ((_RN487X+2)| (0+32768))
 19773     0E3C  0085               	movwf	5
 19774     0E3D  3F01               	moviw [1]fsr0
 19775     0E3E  008A               	movwf	10
 19776     0E3F  3F00               	moviw [0]fsr0
 19777     0E40  000A               	callw
 19778     0E41  318D               	pagesel	$
 19779     0E42                     l14658:
 19780                           
 19781                           ;mcc_generated_files/rn487x/rn487x.c: 71:     while (RN487X.DataReady())
 19782     0E42  306E               	movlw	low ((_RN487X+6)| (0+32768))
 19783     0E43  0084               	movwf	4
 19784     0E44  3098               	movlw	high ((_RN487X+6)| (0+32768))
 19785     0E45  0085               	movwf	5
 19786     0E46  3F01               	moviw [1]fsr0
 19787     0E47  008A               	movwf	10
 19788     0E48  3F00               	moviw [0]fsr0
 19789     0E49  000A               	callw
 19790     0E4A  318D               	pagesel	$
 19791     0E4B  3A00               	xorlw	0
 19792     0E4C  1D03               	skipz
 19793     0E4D  2E4F               	goto	u11651
 19794     0E4E  2E50               	goto	u11650
 19795     0E4F                     u11651:
 19796     0E4F  2E39               	goto	l14656
 19797     0E50                     u11650:
 19798     0E50                     l1533:
 19799     0E50  0008               	return
 19800     0E51                     __end_of_RN487X_Init:
 19801                           
 19802                           	psect	text57
 19803     1FAB                     __ptext57:	
 19804 ;; *************** function _RN487X_is_rx_ready *****************
 19805 ;; Defined at:
 19806 ;;		line 267 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 19807 ;; Parameters:    Size  Location     Type
 19808 ;;		None
 19809 ;; Auto vars:     Size  Location     Type
 19810 ;;		None
 19811 ;; Return value:  Size  Location     Type
 19812 ;;                  1    wreg      _Bool 
 19813 ;; Registers used:
 19814 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 19815 ;; Tracked objects:
 19816 ;;		On entry : 0/0
 19817 ;;		On exit  : 0/0
 19818 ;;		Unchanged: 0/0
 19819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19820 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19821 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19823 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19824 ;;Total ram usage:        0 bytes
 19825 ;; Hardware stack levels used: 1
 19826 ;; Hardware stack levels required when called: 5
 19827 ;; This function calls:
 19828 ;;		_EUSART1_is_rx_ready
 19829 ;;		_EUSART2_is_rx_ready
 19830 ;; This function is called by:
 19831 ;;		_RN487X_DataReady
 19832 ;;		_RN487X_Init
 19833 ;; This function uses a non-reentrant model
 19834 ;;
 19835                           
 19836     1FAB                     _RN487X_is_rx_ready:	
 19837                           ;psect for function _RN487X_is_rx_ready
 19838                           
 19839     1FAB                     l13576:	
 19840                           ;incstack = 0
 19841                           ; Regs used in _RN487X_is_rx_ready: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 19842                           
 19843                           
 19844                           ;mcc_generated_files/rn487x/rn487x_interface.c: 269:     return uart[UART_BLE].DataReady
      +                          ();
 19845     1FAB  301A               	movlw	low ((_uart+26)| (0+32768))
 19846     1FAC  0084               	movwf	4
 19847     1FAD  3098               	movlw	high ((_uart+26)| (0+32768))
 19848     1FAE  0085               	movwf	5
 19849     1FAF  3F01               	moviw [1]fsr0
 19850     1FB0  008A               	movwf	10
 19851     1FB1  3F00               	moviw [0]fsr0
 19852     1FB2  000A               	callw
 19853     1FB3  319F               	pagesel	$
 19854     1FB4                     l1449:
 19855     1FB4  0008               	return
 19856     1FB5                     __end_of_RN487X_is_rx_ready:
 19857                           
 19858                           	psect	text58
 19859     1F85                     __ptext58:	
 19860 ;; *************** function _EUSART1_is_rx_ready *****************
 19861 ;; Defined at:
 19862 ;;		line 137 in file "mcc_generated_files/eusart1.c"
 19863 ;; Parameters:    Size  Location     Type
 19864 ;;		None
 19865 ;; Auto vars:     Size  Location     Type
 19866 ;;		None
 19867 ;; Return value:  Size  Location     Type
 19868 ;;                  1    wreg      _Bool 
 19869 ;; Registers used:
 19870 ;;		wreg, status,2, status,0
 19871 ;; Tracked objects:
 19872 ;;		On entry : 0/0
 19873 ;;		On exit  : 0/0
 19874 ;;		Unchanged: 0/0
 19875 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19876 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19879 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19880 ;;Total ram usage:        0 bytes
 19881 ;; Hardware stack levels used: 1
 19882 ;; Hardware stack levels required when called: 4
 19883 ;; This function calls:
 19884 ;;		Nothing
 19885 ;; This function is called by:
 19886 ;;		_RN487X_is_rx_ready
 19887 ;;		_RN487X_Example_TransparentUart
 19888 ;;		_main
 19889 ;; This function uses a non-reentrant model
 19890 ;;
 19891                           
 19892     1F85                     _EUSART1_is_rx_ready:	
 19893                           ;psect for function _EUSART1_is_rx_ready
 19894                           
 19895     1F85                     l13494:	
 19896                           ;incstack = 0
 19897                           ; Regs used in _EUSART1_is_rx_ready: [wreg+status,2+status,0]
 19898                           
 19899                           
 19900                           ;mcc_generated_files/eusart1.c: 139:     return (eusart1RxCount ? 1 : 0);
 19901     1F85  0140               	movlb	0	; select bank0
 19902     1F86  0852               	movf	_eusart1RxCount,w	;volatile
 19903     1F87  1D03               	btfss	3,2
 19904     1F88  2F8A               	goto	u10221
 19905     1F89  2F8C               	goto	u10220
 19906     1F8A                     u10221:
 19907     1F8A  3001               	movlw	1
 19908     1F8B  2F8D               	goto	u10230
 19909     1F8C                     u10220:
 19910     1F8C  3000               	movlw	0
 19911     1F8D                     u10230:
 19912     1F8D                     l1855:
 19913     1F8D  0008               	return
 19914     1F8E                     __end_of_EUSART1_is_rx_ready:
 19915                           
 19916                           	psect	text59
 19917     1F7C                     __ptext59:	
 19918 ;; *************** function _EUSART2_is_rx_ready *****************
 19919 ;; Defined at:
 19920 ;;		line 137 in file "mcc_generated_files/eusart2.c"
 19921 ;; Parameters:    Size  Location     Type
 19922 ;;		None
 19923 ;; Auto vars:     Size  Location     Type
 19924 ;;		None
 19925 ;; Return value:  Size  Location     Type
 19926 ;;                  1    wreg      _Bool 
 19927 ;; Registers used:
 19928 ;;		wreg, status,2, status,0
 19929 ;; Tracked objects:
 19930 ;;		On entry : 0/0
 19931 ;;		On exit  : 0/0
 19932 ;;		Unchanged: 0/0
 19933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19934 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19935 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19937 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19938 ;;Total ram usage:        0 bytes
 19939 ;; Hardware stack levels used: 1
 19940 ;; Hardware stack levels required when called: 4
 19941 ;; This function calls:
 19942 ;;		Nothing
 19943 ;; This function is called by:
 19944 ;;		_RN487X_is_rx_ready
 19945 ;;		_RN487X_Example_TransparentUart
 19946 ;;		_main
 19947 ;; This function uses a non-reentrant model
 19948 ;;
 19949                           
 19950     1F7C                     _EUSART2_is_rx_ready:	
 19951                           ;psect for function _EUSART2_is_rx_ready
 19952                           
 19953     1F7C                     l13490:	
 19954                           ;incstack = 0
 19955                           ; Regs used in _EUSART2_is_rx_ready: [wreg+status,2+status,0]
 19956                           
 19957                           
 19958                           ;mcc_generated_files/eusart2.c: 139:     return (eusart2RxCount ? 1 : 0);
 19959     1F7C  0140               	movlb	0	; select bank0
 19960     1F7D  0858               	movf	_eusart2RxCount,w	;volatile
 19961     1F7E  1D03               	btfss	3,2
 19962     1F7F  2F81               	goto	u10201
 19963     1F80  2F83               	goto	u10200
 19964     1F81                     u10201:
 19965     1F81  3001               	movlw	1
 19966     1F82  2F84               	goto	u10210
 19967     1F83                     u10200:
 19968     1F83  3000               	movlw	0
 19969     1F84                     u10210:
 19970     1F84                     l1711:
 19971     1F84  0008               	return
 19972     1F85                     __end_of_EUSART2_is_rx_ready:
 19973                           
 19974                           	psect	text60
 19975     100D                     __ptext60:	
 19976 ;; *************** function _RN487X_SetSystemMode *****************
 19977 ;; Defined at:
 19978 ;;		line 301 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 19979 ;; Parameters:    Size  Location     Type
 19980 ;;  mode            1    1[COMMON] enum E204
 19981 ;; Auto vars:     Size  Location     Type
 19982 ;;		None
 19983 ;; Return value:  Size  Location     Type
 19984 ;;                  1    wreg      void 
 19985 ;; Registers used:
 19986 ;;		wreg, status,2, status,0
 19987 ;; Tracked objects:
 19988 ;;		On entry : 0/0
 19989 ;;		On exit  : 0/0
 19990 ;;		Unchanged: 0/0
 19991 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19992 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19993 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19995 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19996 ;;Total ram usage:        1 bytes
 19997 ;; Hardware stack levels used: 1
 19998 ;; Hardware stack levels required when called: 4
 19999 ;; This function calls:
 20000 ;;		Nothing
 20001 ;; This function is called by:
 20002 ;;		_RN487X_Init
 20003 ;; This function uses a non-reentrant model
 20004 ;;
 20005                           
 20006     100D                     _RN487X_SetSystemMode:	
 20007                           ;psect for function _RN487X_SetSystemMode
 20008                           
 20009     100D                     l1473:	
 20010                           ;incstack = 0
 20011                           ; Regs used in _RN487X_SetSystemMode: [wreg+status,2+status,0]
 20012                           ;mcc_generated_files/rn487x/rn487x_interface.c: 301: static void RN487X_SetSystemMode(RN
      +                          487X_SYSTEM_MODES_t mode);mcc_generated_files/rn487x/rn487x_interface.c: 302: {;mcc_gene
      +                          rated_files/rn487x/rn487x_interface.c: 304:     do { TRISAbits.TRISA7 = 0; } while(0);
 20013                           
 20014     100D  0140               	movlb	0	; select bank0
 20015     100E  1392               	bcf	18,7	;volatile
 20016     100F                     l14216:
 20017                           
 20018                           ;mcc_generated_files/rn487x/rn487x_interface.c: 306:     if (APPLICATION_MODE == mode)
 20019     100F  0371               	decf	RN487X_SetSystemMode@mode,w
 20020     1010  1D03               	btfss	3,2
 20021     1011  2813               	goto	u11391
 20022     1012  2814               	goto	u11390
 20023     1013                     u11391:
 20024     1013  2816               	goto	l1479
 20025     1014                     u11390:
 20026     1014                     l1476:	
 20027                           ;mcc_generated_files/rn487x/rn487x_interface.c: 307:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 308:         do { LATAbits.LATA7 = 1; } while(0);
 20028                           
 20029     1014  1798               	bsf	24,7	;volatile
 20030     1015  2817               	goto	l1481
 20031     1016                     l1479:	
 20032                           ;mcc_generated_files/rn487x/rn487x_interface.c: 311:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 312:         do { LATAbits.LATA7 = 0; } while(0);
 20033                           
 20034     1016  1398               	bcf	24,7	;volatile
 20035     1017                     l1481:	
 20036                           ;mcc_generated_files/rn487x/rn487x_interface.c: 316:     do { TRISAbits.TRISA7 = 1; } wh
      +                          ile(0);
 20037                           
 20038     1017  1792               	bsf	18,7	;volatile
 20039     1018                     l1483:
 20040     1018  0008               	return
 20041     1019                     __end_of_RN487X_SetSystemMode:
 20042                           
 20043                           	psect	text61
 20044     1FEA                     __ptext61:	
 20045 ;; *************** function _RN487X_Reset *****************
 20046 ;; Defined at:
 20047 ;;		line 277 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 20048 ;; Parameters:    Size  Location     Type
 20049 ;;  value           1    1[COMMON] _Bool 
 20050 ;; Auto vars:     Size  Location     Type
 20051 ;;		None
 20052 ;; Return value:  Size  Location     Type
 20053 ;;                  1    wreg      void 
 20054 ;; Registers used:
 20055 ;;		wreg, status,2, status,0
 20056 ;; Tracked objects:
 20057 ;;		On entry : 0/0
 20058 ;;		On exit  : 0/0
 20059 ;;		Unchanged: 0/0
 20060 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20061 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20062 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20063 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20064 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20065 ;;Total ram usage:        1 bytes
 20066 ;; Hardware stack levels used: 1
 20067 ;; Hardware stack levels required when called: 4
 20068 ;; This function calls:
 20069 ;;		Nothing
 20070 ;; This function is called by:
 20071 ;;		_RN487X_Init
 20072 ;; This function uses a non-reentrant model
 20073 ;;
 20074                           
 20075     1FEA                     _RN487X_Reset:	
 20076                           ;psect for function _RN487X_Reset
 20077                           
 20078     1FEA                     l14212:	
 20079                           ;incstack = 0
 20080                           ; Regs used in _RN487X_Reset: [wreg+status,2+status,0]
 20081                           
 20082                           
 20083                           ;mcc_generated_files/rn487x/rn487x_interface.c: 277: static void RN487X_Reset(_Bool valu
      +                          e);mcc_generated_files/rn487x/rn487x_interface.c: 278: {;mcc_generated_files/rn487x/rn48
      +                          7x_interface.c: 279:     if (1 == value)
 20084     1FEA  0371               	decf	RN487X_Reset@value,w
 20085     1FEB  1D03               	btfss	3,2
 20086     1FEC  2FEE               	goto	u11371
 20087     1FED  2FEF               	goto	u11370
 20088     1FEE                     u11371:
 20089     1FEE  2FF2               	goto	l1459
 20090     1FEF                     u11370:
 20091     1FEF                     l1456:	
 20092                           ;mcc_generated_files/rn487x/rn487x_interface.c: 280:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 281:         do { LATAbits.LATA0 = 0; } while(0);
 20093                           
 20094     1FEF  0140               	movlb	0	; select bank0
 20095     1FF0  1018               	bcf	24,0	;volatile
 20096     1FF1  2FF4               	goto	l1461
 20097     1FF2                     l1459:	
 20098                           ;mcc_generated_files/rn487x/rn487x_interface.c: 284:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 285:         do { LATAbits.LATA0 = 1; } while(0);
 20099                           
 20100     1FF2  0140               	movlb	0	; select bank0
 20101     1FF3  1418               	bsf	24,0	;volatile
 20102     1FF4                     l1461:
 20103     1FF4  0008               	return
 20104     1FF5                     __end_of_RN487X_Reset:
 20105                           
 20106                           	psect	text62
 20107     1FDF                     __ptext62:	
 20108 ;; *************** function _RN487X_IndicateRx *****************
 20109 ;; Defined at:
 20110 ;;		line 289 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 20111 ;; Parameters:    Size  Location     Type
 20112 ;;  value           1    1[COMMON] _Bool 
 20113 ;; Auto vars:     Size  Location     Type
 20114 ;;		None
 20115 ;; Return value:  Size  Location     Type
 20116 ;;                  1    wreg      void 
 20117 ;; Registers used:
 20118 ;;		wreg, status,2, status,0
 20119 ;; Tracked objects:
 20120 ;;		On entry : 0/0
 20121 ;;		On exit  : 0/0
 20122 ;;		Unchanged: 0/0
 20123 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20124 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20125 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20126 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20127 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20128 ;;Total ram usage:        1 bytes
 20129 ;; Hardware stack levels used: 1
 20130 ;; Hardware stack levels required when called: 4
 20131 ;; This function calls:
 20132 ;;		Nothing
 20133 ;; This function is called by:
 20134 ;;		_RN487X_Init
 20135 ;; This function uses a non-reentrant model
 20136 ;;
 20137                           
 20138     1FDF                     _RN487X_IndicateRx:	
 20139                           ;psect for function _RN487X_IndicateRx
 20140                           
 20141     1FDF                     l14214:	
 20142                           ;incstack = 0
 20143                           ; Regs used in _RN487X_IndicateRx: [wreg+status,2+status,0]
 20144                           
 20145                           
 20146                           ;mcc_generated_files/rn487x/rn487x_interface.c: 289: static void RN487X_IndicateRx(_Bool
      +                           value);mcc_generated_files/rn487x/rn487x_interface.c: 290: {;mcc_generated_files/rn487x
      +                          /rn487x_interface.c: 291:     if (1 == value)
 20147     1FDF  0371               	decf	RN487X_IndicateRx@value,w
 20148     1FE0  1D03               	btfss	3,2
 20149     1FE1  2FE3               	goto	u11381
 20150     1FE2  2FE4               	goto	u11380
 20151     1FE3                     u11381:
 20152     1FE3  2FE7               	goto	l1468
 20153     1FE4                     u11380:
 20154     1FE4                     l1465:	
 20155                           ;mcc_generated_files/rn487x/rn487x_interface.c: 292:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 293:         do { LATCbits.LATC6 = 0; } while(0);
 20156                           
 20157     1FE4  0140               	movlb	0	; select bank0
 20158     1FE5  131A               	bcf	26,6	;volatile
 20159     1FE6  2FE9               	goto	l1470
 20160     1FE7                     l1468:	
 20161                           ;mcc_generated_files/rn487x/rn487x_interface.c: 296:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 297:         do { LATCbits.LATC6 = 1; } while(0);
 20162                           
 20163     1FE7  0140               	movlb	0	; select bank0
 20164     1FE8  171A               	bsf	26,6	;volatile
 20165     1FE9                     l1470:
 20166     1FE9  0008               	return
 20167     1FEA                     __end_of_RN487X_IndicateRx:
 20168                           
 20169                           	psect	text63
 20170     11D2                     __ptext63:	
 20171 ;; *************** function _LIGHTBLUE_TemperatureSensor *****************
 20172 ;; Defined at:
 20173 ;;		line 311 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 20174 ;; Parameters:    Size  Location     Type
 20175 ;;		None
 20176 ;; Auto vars:     Size  Location     Type
 20177 ;;  payload         5   22[BANK0 ] unsigned char [5]
 20178 ;;  temperature     2   27[BANK0 ] short 
 20179 ;;  read            1    0        unsigned char 
 20180 ;; Return value:  Size  Location     Type
 20181 ;;                  1    wreg      void 
 20182 ;; Registers used:
 20183 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20184 ;; Tracked objects:
 20185 ;;		On entry : 0/0
 20186 ;;		On exit  : 0/0
 20187 ;;		Unchanged: 0/0
 20188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20189 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20190 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20191 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20192 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20193 ;;Total ram usage:        7 bytes
 20194 ;; Hardware stack levels used: 1
 20195 ;; Hardware stack levels required when called: 15
 20196 ;; This function calls:
 20197 ;;		_LIGHTBLUE_SendPacket
 20198 ;;		_LIGHTBLUE_SplitWord
 20199 ;;		_TMAG5273_GetTemperatureValue
 20200 ;; This function is called by:
 20201 ;;		_main
 20202 ;; This function uses a non-reentrant model
 20203 ;;
 20204                           
 20205     11D2                     _LIGHTBLUE_TemperatureSensor:	
 20206                           ;psect for function _LIGHTBLUE_TemperatureSensor
 20207                           
 20208     11D2                     l14374:	
 20209                           ;incstack = 0
 20210                           ; Regs used in _LIGHTBLUE_TemperatureSensor: [wreg-fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 20211                           
 20212                           
 20213                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 312:     char payload[5];;mcc_gene
      +                          rated_files/application/LIGHTBLUE_service.c: 313:     int16_t temperature;;mcc_generated
      +                          _files/application/LIGHTBLUE_service.c: 314:     uint8_t read;;mcc_generated_files/appli
      +                          cation/LIGHTBLUE_service.c: 316:     *payload = '\0';
 20214     11D2  0140               	movlb	0	; select bank0
 20215     11D3  01B6               	clrf	LIGHTBLUE_TemperatureSensor@payload
 20216     11D4                     l14376:
 20217                           
 20218                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 318:     TMAG5273_GetTemperatureVa
      +                          lue(&temperature);
 20219     11D4  303B               	movlw	(low (LIGHTBLUE_TemperatureSensor@temperature| 0))& (0+255)
 20220     11D5  3190  2067  3191   	fcall	_TMAG5273_GetTemperatureValue
 20221     11D8                     l14378:
 20222                           
 20223                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 321:     LIGHTBLUE_SplitWord(paylo
      +                          ad, temperature);
 20224     11D8  0140               	movlb	0	; select bank0
 20225     11D9  083C               	movf	LIGHTBLUE_TemperatureSensor@temperature+1,w
 20226     11DA  00FA               	movwf	LIGHTBLUE_SplitWord@value+1
 20227     11DB  083B               	movf	LIGHTBLUE_TemperatureSensor@temperature,w
 20228     11DC  00F9               	movwf	LIGHTBLUE_SplitWord@value
 20229     11DD  3036               	movlw	(low (LIGHTBLUE_TemperatureSensor@payload| 0))& (0+255)
 20230     11DE  3190  2059  3191   	fcall	_LIGHTBLUE_SplitWord
 20231     11E1                     l14380:
 20232                           
 20233                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 323:     LIGHTBLUE_SendPacket(TEMP
      +                          ERATURE_DATA_ID, payload);
 20234     11E1  3036               	movlw	(low (LIGHTBLUE_TemperatureSensor@payload| 0))& (0+255)
 20235     11E2  00F7               	movwf	LIGHTBLUE_SendPacket@payload
 20236     11E3  3054               	movlw	84
 20237     11E4  318E  26D9  3191   	fcall	_LIGHTBLUE_SendPacket
 20238     11E7                     l124:
 20239     11E7  0008               	return
 20240     11E8                     __end_of_LIGHTBLUE_TemperatureSensor:
 20241                           
 20242                           	psect	text64
 20243     1067                     __ptext64:	
 20244 ;; *************** function _TMAG5273_GetTemperatureValue *****************
 20245 ;; Defined at:
 20246 ;;		line 2558 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 20247 ;; Parameters:    Size  Location     Type
 20248 ;;  temperature     1    wreg     PTR short 
 20249 ;;		 -> LIGHTBLUE_TemperatureSensor@temperature(2), 
 20250 ;; Auto vars:     Size  Location     Type
 20251 ;;  temperature     1   11[COMMON] PTR short 
 20252 ;;		 -> LIGHTBLUE_TemperatureSensor@temperature(2), 
 20253 ;; Return value:  Size  Location     Type
 20254 ;;                  1    wreg      void 
 20255 ;; Registers used:
 20256 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20257 ;; Tracked objects:
 20258 ;;		On entry : 0/0
 20259 ;;		On exit  : 0/0
 20260 ;;		Unchanged: 0/0
 20261 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20262 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20263 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20265 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20266 ;;Total ram usage:        1 bytes
 20267 ;; Hardware stack levels used: 1
 20268 ;; Hardware stack levels required when called: 14
 20269 ;; This function calls:
 20270 ;;		_TMAG5273_CalcMeasurement
 20271 ;; This function is called by:
 20272 ;;		_LIGHTBLUE_TemperatureSensor
 20273 ;; This function uses a non-reentrant model
 20274 ;;
 20275                           
 20276     1067                     _TMAG5273_GetTemperatureValue:	
 20277                           ;psect for function _TMAG5273_GetTemperatureValue
 20278                           
 20279                           
 20280                           ;incstack = 0
 20281                           ; Regs used in _TMAG5273_GetTemperatureValue: [wreg-fsr1h+status,2+status,0+pclath+cstac
      +                          k]
 20282                           ;TMAG5273_GetTemperatureValue@temperature stored from wreg
 20283     1067  00FB               	movwf	TMAG5273_GetTemperatureValue@temperature
 20284     1068                     l13646:
 20285                           
 20286                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2559:     *temperature
      +                           = TMAG5273_CalcMeasurement(TMAG5273_REG_T_MSB_RESULT);
 20287     1068  3010               	movlw	16
 20288     1069  3193  23A5  3190   	fcall	_TMAG5273_CalcMeasurement
 20289     106C  087B               	movf	TMAG5273_GetTemperatureValue@temperature,w
 20290     106D  0086               	movwf	6
 20291     106E  0187               	clrf	7
 20292     106F  0140               	movlb	0	; select bank0
 20293     1070  082D               	movf	?_TMAG5273_CalcMeasurement,w
 20294     1071  3FC0               	movwi [0]fsr1
 20295     1072  082E               	movf	?_TMAG5273_CalcMeasurement+1,w
 20296     1073  3FC1               	movwi [1]fsr1
 20297     1074                     l1239:
 20298     1074  0008               	return
 20299     1075                     __end_of_TMAG5273_GetTemperatureValue:
 20300                           
 20301                           	psect	text65
 20302     071A                     __ptext65:	
 20303 ;; *************** function _LIGHTBLUE_SendSerialData *****************
 20304 ;; Defined at:
 20305 ;;		line 385 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 20306 ;; Parameters:    Size  Location     Type
 20307 ;;  serialData      1    wreg     PTR unsigned char 
 20308 ;;		 -> lightBlueSerial(80), 
 20309 ;; Auto vars:     Size  Location     Type
 20310 ;;  serialData      1    9[COMMON] PTR unsigned char 
 20311 ;;		 -> lightBlueSerial(80), 
 20312 ;;  length          1    8[COMMON] unsigned char 
 20313 ;; Return value:  Size  Location     Type
 20314 ;;                  1    wreg      void 
 20315 ;; Registers used:
 20316 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20317 ;; Tracked objects:
 20318 ;;		On entry : 0/0
 20319 ;;		On exit  : 0/0
 20320 ;;		Unchanged: 0/0
 20321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20322 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20323 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20324 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20325 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20326 ;;Total ram usage:        3 bytes
 20327 ;; Hardware stack levels used: 1
 20328 ;; Hardware stack levels required when called: 6
 20329 ;; This function calls:
 20330 ;;		_RN487X_Write
 20331 ;;		_strlen
 20332 ;; This function is called by:
 20333 ;;		_main
 20334 ;; This function uses a non-reentrant model
 20335 ;;
 20336                           
 20337     071A                     _LIGHTBLUE_SendSerialData:	
 20338                           ;psect for function _LIGHTBLUE_SendSerialData
 20339                           
 20340                           
 20341                           ;incstack = 0
 20342                           ; Regs used in _LIGHTBLUE_SendSerialData: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 20343                           ;LIGHTBLUE_SendSerialData@serialData stored from wreg
 20344     071A  00F9               	movwf	LIGHTBLUE_SendSerialData@serialData
 20345     071B                     l14428:
 20346                           
 20347                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 386:     uint8_t length = strlen(s
      +                          erialData) * 2;
 20348     071B  0879               	movf	LIGHTBLUE_SendSerialData@serialData,w
 20349     071C  00F1               	movwf	strlen@s
 20350     071D  3002               	movlw	2
 20351     071E  00F2               	movwf	strlen@s+1
 20352     071F  3192  22B7  3187   	fcall	_strlen
 20353     0722  0871               	movf	?_strlen,w
 20354     0723  0709               	addwf	9,w
 20355     0724  00F8               	movwf	LIGHTBLUE_SendSerialData@length
 20356     0725                     l14430:
 20357                           
 20358                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 388:     RN487X.Write(('['));
 20359     0725  305B               	movlw	91
 20360     0726  00F6               	movwf	RN487X_Write@txData
 20361     0727  3068               	movlw	low (_RN487X| (0+32768))
 20362     0728  0084               	movwf	4
 20363     0729  3098               	movlw	high (_RN487X| (0+32768))
 20364     072A  0085               	movwf	5
 20365     072B  3F01               	moviw [1]fsr0
 20366     072C  008A               	movwf	10
 20367     072D  3F00               	moviw [0]fsr0
 20368     072E  000A               	callw
 20369     072F  3187               	pagesel	$
 20370     0730                     l14432:
 20371                           
 20372                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 389:     RN487X.Write((_hex[(seque
      +                          nceNumber++) & 0xF]));
 20373     0730  0140               	movlb	0	; select bank0
 20374     0731  086D               	movf	_sequenceNumber,w
 20375     0732  390F               	andlw	15
 20376     0733  3EA0               	addlw	(low (__hex| (0+256)))& (0+255)
 20377     0734  0086               	movwf	6
 20378     0735  3001               	movlw	1	; select bank3/4
 20379     0736  0087               	movwf	7
 20380     0737  0801               	movf	1,w
 20381     0738  00F6               	movwf	RN487X_Write@txData
 20382     0739  3068               	movlw	low (_RN487X| (0+32768))
 20383     073A  0084               	movwf	4
 20384     073B  3098               	movlw	high (_RN487X| (0+32768))
 20385     073C  0085               	movwf	5
 20386     073D  3F01               	moviw [1]fsr0
 20387     073E  008A               	movwf	10
 20388     073F  3F00               	moviw [0]fsr0
 20389     0740  000A               	callw
 20390     0741  3187               	pagesel	$
 20391     0742                     l14434:
 20392     0742  3001               	movlw	1
 20393     0743  00F7               	movwf	??_LIGHTBLUE_SendSerialData
 20394     0744  0877               	movf	??_LIGHTBLUE_SendSerialData,w
 20395     0745  0140               	movlb	0	; select bank0
 20396     0746  07ED               	addwf	_sequenceNumber,f
 20397     0747                     l14436:
 20398                           
 20399                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 390:     RN487X.Write(SERIAL_DATA_
      +                          ID);
 20400     0747  3053               	movlw	83
 20401     0748  00F6               	movwf	RN487X_Write@txData
 20402     0749  3068               	movlw	low (_RN487X| (0+32768))
 20403     074A  0084               	movwf	4
 20404     074B  3098               	movlw	high (_RN487X| (0+32768))
 20405     074C  0085               	movwf	5
 20406     074D  3F01               	moviw [1]fsr0
 20407     074E  008A               	movwf	10
 20408     074F  3F00               	moviw [0]fsr0
 20409     0750  000A               	callw
 20410     0751  3187               	pagesel	$
 20411     0752                     l14438:
 20412                           
 20413                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 391:     RN487X.Write((_hex[(lengt
      +                          h >> 4) & 0xF]));
 20414     0752  0878               	movf	LIGHTBLUE_SendSerialData@length,w
 20415     0753  00F7               	movwf	??_LIGHTBLUE_SendSerialData
 20416     0754  3004               	movlw	4
 20417     0755                     u11415:
 20418     0755  36F7               	lsrf	??_LIGHTBLUE_SendSerialData,f
 20419     0756  0B89               	decfsz	9,f
 20420     0757  2F55               	goto	u11415
 20421     0758  0877               	movf	??_LIGHTBLUE_SendSerialData,w
 20422     0759  390F               	andlw	15
 20423     075A  3EA0               	addlw	(low (__hex| (0+256)))& (0+255)
 20424     075B  0086               	movwf	6
 20425     075C  3001               	movlw	1	; select bank3/4
 20426     075D  0087               	movwf	7
 20427     075E  0801               	movf	1,w
 20428     075F  00F6               	movwf	RN487X_Write@txData
 20429     0760  3068               	movlw	low (_RN487X| (0+32768))
 20430     0761  0084               	movwf	4
 20431     0762  3098               	movlw	high (_RN487X| (0+32768))
 20432     0763  0085               	movwf	5
 20433     0764  3F01               	moviw [1]fsr0
 20434     0765  008A               	movwf	10
 20435     0766  3F00               	moviw [0]fsr0
 20436     0767  000A               	callw
 20437     0768  3187               	pagesel	$
 20438     0769                     l14440:
 20439                           
 20440                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 392:     RN487X.Write((_hex[(lengt
      +                          h) & 0xF]));
 20441     0769  0878               	movf	LIGHTBLUE_SendSerialData@length,w
 20442     076A  390F               	andlw	15
 20443     076B  3EA0               	addlw	(low (__hex| (0+256)))& (0+255)
 20444     076C  0086               	movwf	6
 20445     076D  3001               	movlw	1	; select bank3/4
 20446     076E  0087               	movwf	7
 20447     076F  0801               	movf	1,w
 20448     0770  00F6               	movwf	RN487X_Write@txData
 20449     0771  3068               	movlw	low (_RN487X| (0+32768))
 20450     0772  0084               	movwf	4
 20451     0773  3098               	movlw	high (_RN487X| (0+32768))
 20452     0774  0085               	movwf	5
 20453     0775  3F01               	moviw [1]fsr0
 20454     0776  008A               	movwf	10
 20455     0777  3F00               	moviw [0]fsr0
 20456     0778  000A               	callw
 20457     0779  3187               	pagesel	$
 20458                           
 20459                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 393:     while (*serialData) {
 20460     077A  2FAF               	goto	l14446
 20461     077B                     l14442:
 20462                           
 20463                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 394:         RN487X.Write((_hex[(*
      +                          serialData >> 4) & 0xF]));
 20464     077B  0879               	movf	LIGHTBLUE_SendSerialData@serialData,w
 20465     077C  0086               	movwf	6
 20466     077D  3002               	movlw	2	; select bank4/5
 20467     077E  0087               	movwf	7
 20468     077F  0801               	movf	1,w
 20469     0780  00F7               	movwf	??_LIGHTBLUE_SendSerialData
 20470     0781  3004               	movlw	4
 20471     0782                     u11425:
 20472     0782  36F7               	lsrf	??_LIGHTBLUE_SendSerialData,f
 20473     0783  0B89               	decfsz	9,f
 20474     0784  2F82               	goto	u11425
 20475     0785  0877               	movf	??_LIGHTBLUE_SendSerialData,w
 20476     0786  390F               	andlw	15
 20477     0787  3EA0               	addlw	(low (__hex| (0+256)))& (0+255)
 20478     0788  0086               	movwf	6
 20479     0789  3001               	movlw	1	; select bank3/4
 20480     078A  0087               	movwf	7
 20481     078B  0801               	movf	1,w
 20482     078C  00F6               	movwf	RN487X_Write@txData
 20483     078D  3068               	movlw	low (_RN487X| (0+32768))
 20484     078E  0084               	movwf	4
 20485     078F  3098               	movlw	high (_RN487X| (0+32768))
 20486     0790  0085               	movwf	5
 20487     0791  3F01               	moviw [1]fsr0
 20488     0792  008A               	movwf	10
 20489     0793  3F00               	moviw [0]fsr0
 20490     0794  000A               	callw
 20491     0795  3187               	pagesel	$
 20492                           
 20493                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 395:         RN487X.Write((_hex[(*
      +                          serialData++) & 0xF]));
 20494     0796  0879               	movf	LIGHTBLUE_SendSerialData@serialData,w
 20495     0797  0086               	movwf	6
 20496     0798  3002               	movlw	2	; select bank4/5
 20497     0799  0087               	movwf	7
 20498     079A  0801               	movf	1,w
 20499     079B  390F               	andlw	15
 20500     079C  3EA0               	addlw	(low (__hex| (0+256)))& (0+255)
 20501     079D  0086               	movwf	6
 20502     079E  3001               	movlw	1	; select bank3/4
 20503     079F  0087               	movwf	7
 20504     07A0  0801               	movf	1,w
 20505     07A1  00F6               	movwf	RN487X_Write@txData
 20506     07A2  3068               	movlw	low (_RN487X| (0+32768))
 20507     07A3  0084               	movwf	4
 20508     07A4  3098               	movlw	high (_RN487X| (0+32768))
 20509     07A5  0085               	movwf	5
 20510     07A6  3F01               	moviw [1]fsr0
 20511     07A7  008A               	movwf	10
 20512     07A8  3F00               	moviw [0]fsr0
 20513     07A9  000A               	callw
 20514     07AA  3187               	pagesel	$
 20515     07AB                     l14444:
 20516     07AB  3001               	movlw	1
 20517     07AC  00F7               	movwf	??_LIGHTBLUE_SendSerialData
 20518     07AD  0877               	movf	??_LIGHTBLUE_SendSerialData,w
 20519     07AE  07F9               	addwf	LIGHTBLUE_SendSerialData@serialData,f
 20520     07AF                     l14446:
 20521                           
 20522                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 393:     while (*serialData) {
 20523     07AF  0879               	movf	LIGHTBLUE_SendSerialData@serialData,w
 20524     07B0  0086               	movwf	6
 20525     07B1  3002               	movlw	2	; select bank4/5
 20526     07B2  0087               	movwf	7
 20527     07B3  0801               	movf	1,w
 20528     07B4  1D03               	btfss	3,2
 20529     07B5  2FB7               	goto	u11431
 20530     07B6  2FB8               	goto	u11430
 20531     07B7                     u11431:
 20532     07B7  2F7B               	goto	l14442
 20533     07B8                     u11430:
 20534     07B8                     l14448:
 20535                           
 20536                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 397:     RN487X.Write((']'));
 20537     07B8  305D               	movlw	93
 20538     07B9  00F6               	movwf	RN487X_Write@txData
 20539     07BA  3068               	movlw	low (_RN487X| (0+32768))
 20540     07BB  0084               	movwf	4
 20541     07BC  3098               	movlw	high (_RN487X| (0+32768))
 20542     07BD  0085               	movwf	5
 20543     07BE  3F01               	moviw [1]fsr0
 20544     07BF  008A               	movwf	10
 20545     07C0  3F00               	moviw [0]fsr0
 20546     07C1  000A               	callw
 20547     07C2  3187               	pagesel	$
 20548     07C3                     l145:
 20549     07C3  0008               	return
 20550     07C4                     __end_of_LIGHTBLUE_SendSerialData:
 20551                           
 20552                           	psect	text66
 20553     1728                     __ptext66:	
 20554 ;; *************** function _LIGHTBLUE_SendProtocolVersion *****************
 20555 ;; Defined at:
 20556 ;;		line 370 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 20557 ;; Parameters:    Size  Location     Type
 20558 ;;		None
 20559 ;; Auto vars:     Size  Location     Type
 20560 ;;  payload        19    2[BANK0 ] unsigned char [19]
 20561 ;;  dataIndex       1   22[BANK0 ] unsigned char 
 20562 ;;  value           1   21[BANK0 ] unsigned char 
 20563 ;; Return value:  Size  Location     Type
 20564 ;;                  1    wreg      void 
 20565 ;; Registers used:
 20566 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20567 ;; Tracked objects:
 20568 ;;		On entry : 0/0
 20569 ;;		On exit  : 0/0
 20570 ;;		Unchanged: 0/0
 20571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20572 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20573 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20574 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20575 ;;      Totals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20576 ;;Total ram usage:       23 bytes
 20577 ;; Hardware stack levels used: 1
 20578 ;; Hardware stack levels required when called: 7
 20579 ;; This function calls:
 20580 ;;		_LIGHTBLUE_SendPacket
 20581 ;;		_LIGHTBLUE_SplitByte
 20582 ;;		_strlen
 20583 ;; This function is called by:
 20584 ;;		_main
 20585 ;; This function uses a non-reentrant model
 20586 ;;
 20587                           
 20588     1728                     _LIGHTBLUE_SendProtocolVersion:	
 20589                           ;psect for function _LIGHTBLUE_SendProtocolVersion
 20590                           
 20591     1728                     l14416:	
 20592                           ;incstack = 0
 20593                           ; Regs used in _LIGHTBLUE_SendProtocolVersion: [wreg-fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 20594                           
 20595                           
 20596                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 371:     char payload[19];;mcc_gen
      +                          erated_files/application/LIGHTBLUE_service.c: 372:     uint8_t value;;mcc_generated_file
      +                          s/application/LIGHTBLUE_service.c: 373:     uint8_t dataIndex;;mcc_generated_files/appli
      +                          cation/LIGHTBLUE_service.c: 375:     *payload = '\0';
 20597     1728  0140               	movlb	0	; select bank0
 20598     1729  01A2               	clrf	LIGHTBLUE_SendProtocolVersion@payload
 20599                           
 20600                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 377:     for (dataIndex = 0; dataI
      +                          ndex < strlen(protocol_version_number); dataIndex++) {
 20601     172A  01B6               	clrf	LIGHTBLUE_SendProtocolVersion@dataIndex
 20602     172B  2F40               	goto	l14424
 20603     172C                     l14418:
 20604                           
 20605                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 378:         value = protocol_vers
      +                          ion_number[dataIndex];
 20606     172C  0836               	movf	LIGHTBLUE_SendProtocolVersion@dataIndex,w
 20607     172D  3E00               	addlw	low (STR_1| (0+32768))
 20608     172E  0084               	movwf	4
 20609     172F  30A0               	movlw	high (STR_1| (0+32768))
 20610     1730  1803               	skipnc
 20611     1731  3E01               	addlw	1
 20612     1732  0085               	movwf	5
 20613     1733  0800               	movf	0,w	;code access
 20614     1734  00B5               	movwf	LIGHTBLUE_SendProtocolVersion@value
 20615     1735                     l14420:
 20616                           
 20617                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 379:         LIGHTBLUE_SplitByte(p
      +                          ayload, value);
 20618     1735  0835               	movf	LIGHTBLUE_SendProtocolVersion@value,w
 20619     1736  00F6               	movwf	LIGHTBLUE_SplitByte@value
 20620     1737  3022               	movlw	(low (LIGHTBLUE_SendProtocolVersion@payload| 0))& (0+255)
 20621     1738  3196  26C4  3197   	fcall	_LIGHTBLUE_SplitByte
 20622     173B                     l14422:
 20623                           
 20624                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 380:     }
 20625     173B  3001               	movlw	1
 20626     173C  0140               	movlb	0	; select bank0
 20627     173D  00A0               	movwf	??_LIGHTBLUE_SendProtocolVersion
 20628     173E  0820               	movf	??_LIGHTBLUE_SendProtocolVersion,w
 20629     173F  07B6               	addwf	LIGHTBLUE_SendProtocolVersion@dataIndex,f
 20630     1740                     l14424:
 20631     1740  3000               	movlw	low (STR_1| (0+32768))
 20632     1741  00F1               	movwf	strlen@s
 20633     1742  30A0               	movlw	high (STR_1| (0+32768))
 20634     1743  00F2               	movwf	strlen@s+1
 20635     1744  3192  22B7  3197   	fcall	_strlen
 20636     1747  0140               	movlb	0	; select bank0
 20637     1748  0836               	movf	LIGHTBLUE_SendProtocolVersion@dataIndex,w
 20638     1749  00A0               	movwf	??_LIGHTBLUE_SendProtocolVersion
 20639     174A  01A1               	clrf	??_LIGHTBLUE_SendProtocolVersion+1
 20640     174B  0872               	movf	?_strlen+1,w
 20641     174C  0221               	subwf	??_LIGHTBLUE_SendProtocolVersion+1,w
 20642     174D  1D03               	skipz
 20643     174E  2F51               	goto	u11405
 20644     174F  0871               	movf	?_strlen,w
 20645     1750  0220               	subwf	??_LIGHTBLUE_SendProtocolVersion,w
 20646     1751                     u11405:
 20647     1751  1C03               	skipc
 20648     1752  2F54               	goto	u11401
 20649     1753  2F55               	goto	u11400
 20650     1754                     u11401:
 20651     1754  2F2C               	goto	l14418
 20652     1755                     u11400:
 20653     1755                     l14426:
 20654                           
 20655                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 382:     LIGHTBLUE_SendPacket(PROT
      +                          OCOL_VERSION_ID, payload);
 20656     1755  3022               	movlw	(low (LIGHTBLUE_SendProtocolVersion@payload| 0))& (0+255)
 20657     1756  00F7               	movwf	LIGHTBLUE_SendPacket@payload
 20658     1757  3056               	movlw	86
 20659     1758  318E  26D9  3197   	fcall	_LIGHTBLUE_SendPacket
 20660     175B                     l139:
 20661     175B  0008               	return
 20662     175C                     __end_of_LIGHTBLUE_SendProtocolVersion:
 20663                           
 20664                           	psect	text67
 20665     116D                     __ptext67:	
 20666 ;; *************** function _LIGHTBLUE_PushButton *****************
 20667 ;; Defined at:
 20668 ;;		line 342 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 20669 ;; Parameters:    Size  Location     Type
 20670 ;;		None
 20671 ;; Auto vars:     Size  Location     Type
 20672 ;;  payload         3    1[BANK0 ] unsigned char [3]
 20673 ;;  button          1    0[BANK0 ] unsigned char 
 20674 ;; Return value:  Size  Location     Type
 20675 ;;                  1    wreg      void 
 20676 ;; Registers used:
 20677 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20678 ;; Tracked objects:
 20679 ;;		On entry : 0/0
 20680 ;;		On exit  : 0/0
 20681 ;;		Unchanged: 0/0
 20682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20683 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20684 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20686 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20687 ;;Total ram usage:        4 bytes
 20688 ;; Hardware stack levels used: 1
 20689 ;; Hardware stack levels required when called: 7
 20690 ;; This function calls:
 20691 ;;		_LIGHTBLUE_GetButtonValue
 20692 ;;		_LIGHTBLUE_SendPacket
 20693 ;;		_LIGHTBLUE_SplitByte
 20694 ;; This function is called by:
 20695 ;;		_main
 20696 ;; This function uses a non-reentrant model
 20697 ;;
 20698                           
 20699     116D                     _LIGHTBLUE_PushButton:	
 20700                           ;psect for function _LIGHTBLUE_PushButton
 20701                           
 20702     116D                     l14394:	
 20703                           ;incstack = 0
 20704                           ; Regs used in _LIGHTBLUE_PushButton: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 20705                           
 20706                           
 20707                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 343:     char payload[3];;mcc_gene
      +                          rated_files/application/LIGHTBLUE_service.c: 344:     uint8_t button = LIGHTBLUE_GetButt
      +                          onValue();
 20708     116D  319E  26F8  3191   	fcall	_LIGHTBLUE_GetButtonValue
 20709     1170  0140               	movlb	0	; select bank0
 20710     1171  00A0               	movwf	LIGHTBLUE_PushButton@button
 20711     1172                     l14396:
 20712                           
 20713                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 346:     *payload = '\0';
 20714     1172  01A1               	clrf	LIGHTBLUE_PushButton@payload
 20715     1173                     l14398:
 20716                           
 20717                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 347:     LIGHTBLUE_SplitByte(paylo
      +                          ad, button);
 20718     1173  0820               	movf	LIGHTBLUE_PushButton@button,w
 20719     1174  00F6               	movwf	LIGHTBLUE_SplitByte@value
 20720     1175  3021               	movlw	(low (LIGHTBLUE_PushButton@payload| 0))& (0+255)
 20721     1176  3196  26C4  3191   	fcall	_LIGHTBLUE_SplitByte
 20722     1179                     l14400:
 20723                           
 20724                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 349:     LIGHTBLUE_SendPacket(BUTT
      +                          ON_STATE_ID, payload);
 20725     1179  3021               	movlw	(low (LIGHTBLUE_PushButton@payload| 0))& (0+255)
 20726     117A  00F7               	movwf	LIGHTBLUE_SendPacket@payload
 20727     117B  3050               	movlw	80
 20728     117C  318E  26D9  3191   	fcall	_LIGHTBLUE_SendPacket
 20729     117F                     l130:
 20730     117F  0008               	return
 20731     1180                     __end_of_LIGHTBLUE_PushButton:
 20732                           
 20733                           	psect	text68
 20734     1EF8                     __ptext68:	
 20735 ;; *************** function _LIGHTBLUE_GetButtonValue *****************
 20736 ;; Defined at:
 20737 ;;		line 475 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 20738 ;; Parameters:    Size  Location     Type
 20739 ;;		None
 20740 ;; Auto vars:     Size  Location     Type
 20741 ;;		None
 20742 ;; Return value:  Size  Location     Type
 20743 ;;                  1    wreg      unsigned char 
 20744 ;; Registers used:
 20745 ;;		wreg, status,2, status,0
 20746 ;; Tracked objects:
 20747 ;;		On entry : 0/0
 20748 ;;		On exit  : 0/0
 20749 ;;		Unchanged: 0/0
 20750 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20751 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20752 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20754 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20755 ;;Total ram usage:        0 bytes
 20756 ;; Hardware stack levels used: 1
 20757 ;; Hardware stack levels required when called: 4
 20758 ;; This function calls:
 20759 ;;		Nothing
 20760 ;; This function is called by:
 20761 ;;		_LIGHTBLUE_PushButton
 20762 ;; This function uses a non-reentrant model
 20763 ;;
 20764                           
 20765     1EF8                     _LIGHTBLUE_GetButtonValue:	
 20766                           ;psect for function _LIGHTBLUE_GetButtonValue
 20767                           
 20768     1EF8                     l13668:	
 20769                           ;incstack = 0
 20770                           ; Regs used in _LIGHTBLUE_GetButtonValue: [wreg+status,2+status,0]
 20771                           
 20772                           
 20773                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 476:     return (0x01) - PORTAbits
      +                          .RA7;
 20774     1EF8  0140               	movlb	0	; select bank0
 20775     1EF9  0D0C               	rlf	12,w	;volatile
 20776     1EFA  0D0C               	rlf	12,w	;volatile
 20777     1EFB  3901               	andlw	1
 20778     1EFC  3C01               	sublw	1
 20779     1EFD                     l202:
 20780     1EFD  0008               	return
 20781     1EFE                     __end_of_LIGHTBLUE_GetButtonValue:
 20782                           
 20783                           	psect	text69
 20784     04BE                     __ptext69:	
 20785 ;; *************** function _LIGHTBLUE_ParseIncomingPacket *****************
 20786 ;; Defined at:
 20787 ;;		line 400 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 20788 ;; Parameters:    Size  Location     Type
 20789 ;;  receivedByte    1    wreg     unsigned char 
 20790 ;; Auto vars:     Size  Location     Type
 20791 ;;  receivedByte    1   19[BANK0 ] unsigned char 
 20792 ;; Return value:  Size  Location     Type
 20793 ;;                  1    wreg      void 
 20794 ;; Registers used:
 20795 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20796 ;; Tracked objects:
 20797 ;;		On entry : 0/0
 20798 ;;		On exit  : 0/0
 20799 ;;		Unchanged: 0/0
 20800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20802 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20803 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20804 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20805 ;;Total ram usage:        9 bytes
 20806 ;; Hardware stack levels used: 1
 20807 ;; Hardware stack levels required when called: 11
 20808 ;; This function calls:
 20809 ;;		_LIGHTBLUE_PerformAction
 20810 ;; This function is called by:
 20811 ;;		_main
 20812 ;; This function uses a non-reentrant model
 20813 ;;
 20814                           
 20815     04BE                     _LIGHTBLUE_ParseIncomingPacket:	
 20816                           ;psect for function _LIGHTBLUE_ParseIncomingPacket
 20817                           
 20818                           
 20819                           ;incstack = 0
 20820                           ; Regs used in _LIGHTBLUE_ParseIncomingPacket: [wreg-fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 20821                           ;LIGHTBLUE_ParseIncomingPacket@receivedByte stored from wreg
 20822     04BE  0140               	movlb	0	; select bank0
 20823     04BF  00B3               	movwf	LIGHTBLUE_ParseIncomingPacket@receivedByte
 20824     04C0                     l14450:
 20825                           
 20826                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 401:     static PACKET_PARSER_STAT
      +                          E_t parserState = IDLE;;mcc_generated_files/application/LIGHTBLUE_service.c: 402:     st
      +                          atic uint8_t length = 0;;mcc_generated_files/application/LIGHTBLUE_service.c: 403:     s
      +                          tatic uint16_t data = 0;;mcc_generated_files/application/LIGHTBLUE_service.c: 404:     s
      +                          tatic char packetID = '\0';;mcc_generated_files/application/LIGHTBLUE_service.c: 406:   
      +                            switch (parserState) {
 20827     04C0  2D75               	goto	l14510
 20828     04C1                     l14452:
 20829                           
 20830                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 409:             parserState = PAC
      +                          KET_ID;
 20831     04C1  3002               	movlw	2
 20832     04C2  00EC               	movwf	LIGHTBLUE_ParseIncomingPacket@parserState
 20833                           
 20834                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 410:             break;
 20835     04C3  2D94               	goto	l187
 20836     04C4                     l14454:
 20837                           
 20838                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 412:             packetID = receiv
      +                          edByte;
 20839     04C4  0833               	movf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 20840     04C5  00EA               	movwf	LIGHTBLUE_ParseIncomingPacket@packetID
 20841                           
 20842                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 413:             parserState = PAY
      +                          LOAD_SIZE_0;
 20843     04C6  3003               	movlw	3
 20844     04C7  00EC               	movwf	LIGHTBLUE_ParseIncomingPacket@parserState
 20845                           
 20846                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 414:             break;
 20847     04C8  2D94               	goto	l187
 20848     04C9                     l14456:
 20849                           
 20850                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 416:             length = (((recei
      +                          vedByte) <= '9') ? (receivedByte) - '0' : (receivedByte & 0x5f) - 'A' + 10);
 20851     04C9  303A               	movlw	58
 20852     04CA  0233               	subwf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 20853     04CB  1C03               	skipc
 20854     04CC  2CCE               	goto	u11441
 20855     04CD  2CCF               	goto	u11440
 20856     04CE                     u11441:
 20857     04CE  2CD8               	goto	l14460
 20858     04CF                     u11440:
 20859     04CF                     l14458:
 20860     04CF  0833               	movf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 20861     04D0  395F               	andlw	95
 20862     04D1  3EC9               	addlw	201
 20863     04D2  00AD               	movwf	_LIGHTBLUE_ParseIncomingPacket$431
 20864     04D3  30FF               	movlw	255
 20865     04D4  1803               	skipnc
 20866     04D5  3000               	movlw	0
 20867     04D6  00AE               	movwf	_LIGHTBLUE_ParseIncomingPacket$431+1
 20868     04D7  2CDF               	goto	l164
 20869     04D8                     l14460:
 20870     04D8  0833               	movf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 20871     04D9  3ED0               	addlw	208
 20872     04DA  00AD               	movwf	_LIGHTBLUE_ParseIncomingPacket$431
 20873     04DB  30FF               	movlw	255
 20874     04DC  1803               	skipnc
 20875     04DD  3000               	movlw	0
 20876     04DE  00AE               	movwf	_LIGHTBLUE_ParseIncomingPacket$431+1
 20877     04DF                     l164:
 20878     04DF  082D               	movf	_LIGHTBLUE_ParseIncomingPacket$431,w
 20879     04E0  00EB               	movwf	LIGHTBLUE_ParseIncomingPacket@length
 20880                           
 20881                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 417:             parserState = PAY
      +                          LOAD_SIZE_1;
 20882     04E1  3004               	movlw	4
 20883     04E2  00EC               	movwf	LIGHTBLUE_ParseIncomingPacket@parserState
 20884                           
 20885                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 418:             break;
 20886     04E3  2D94               	goto	l187
 20887     04E4                     l14462:
 20888                           
 20889                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 420:             length = (length 
      +                          << 4) + (((receivedByte) <= '9') ? (receivedByte) - '0' : (receivedByte & 0x5f) - 'A' + 
      +                          10);
 20890     04E4  303A               	movlw	58
 20891     04E5  0233               	subwf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 20892     04E6  1C03               	skipc
 20893     04E7  2CE9               	goto	u11451
 20894     04E8  2CEA               	goto	u11450
 20895     04E9                     u11451:
 20896     04E9  2CF3               	goto	l14466
 20897     04EA                     u11450:
 20898     04EA                     l14464:
 20899     04EA  0833               	movf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 20900     04EB  395F               	andlw	95
 20901     04EC  3EC9               	addlw	201
 20902     04ED  00AF               	movwf	_LIGHTBLUE_ParseIncomingPacket$432
 20903     04EE  30FF               	movlw	255
 20904     04EF  1803               	skipnc
 20905     04F0  3000               	movlw	0
 20906     04F1  00B0               	movwf	_LIGHTBLUE_ParseIncomingPacket$432+1
 20907     04F2  2CFA               	goto	l14468
 20908     04F3                     l14466:
 20909     04F3  0833               	movf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 20910     04F4  3ED0               	addlw	208
 20911     04F5  00AF               	movwf	_LIGHTBLUE_ParseIncomingPacket$432
 20912     04F6  30FF               	movlw	255
 20913     04F7  1803               	skipnc
 20914     04F8  3000               	movlw	0
 20915     04F9  00B0               	movwf	_LIGHTBLUE_ParseIncomingPacket$432+1
 20916     04FA                     l14468:
 20917     04FA  086B               	movf	LIGHTBLUE_ParseIncomingPacket@length,w
 20918     04FB  00AB               	movwf	??_LIGHTBLUE_ParseIncomingPacket
 20919     04FC  3003               	movlw	3
 20920     04FD                     u11465:
 20921     04FD  35AB               	lslf	??_LIGHTBLUE_ParseIncomingPacket,f
 20922     04FE  3EFF               	addlw	-1
 20923     04FF  1D03               	skipz
 20924     0500  2CFD               	goto	u11465
 20925     0501  352B               	lslf	??_LIGHTBLUE_ParseIncomingPacket,w
 20926     0502  072F               	addwf	_LIGHTBLUE_ParseIncomingPacket$432,w
 20927     0503  00EB               	movwf	LIGHTBLUE_ParseIncomingPacket@length
 20928     0504                     l14470:
 20929                           
 20930                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 421:             parserState = PAY
      +                          LOAD_0;
 20931     0504  3005               	movlw	5
 20932     0505  00EC               	movwf	LIGHTBLUE_ParseIncomingPacket@parserState
 20933                           
 20934                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 422:             break;
 20935     0506  2D94               	goto	l187
 20936     0507                     l14472:
 20937                           
 20938                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 424:             data = (((receive
      +                          dByte) <= '9') ? (receivedByte) - '0' : (receivedByte & 0x5f) - 'A' + 10);
 20939     0507  303A               	movlw	58
 20940     0508  0233               	subwf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 20941     0509  1C03               	skipc
 20942     050A  2D0C               	goto	u11471
 20943     050B  2D0D               	goto	u11470
 20944     050C                     u11471:
 20945     050C  2D17               	goto	l14476
 20946     050D                     u11470:
 20947     050D                     l14474:
 20948     050D  0833               	movf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 20949     050E  395F               	andlw	95
 20950     050F  3EC9               	addlw	201
 20951     0510  0141               	movlb	1	; select bank1
 20952     0511  00E4               	movwf	LIGHTBLUE_ParseIncomingPacket@data^(0+128)
 20953     0512  30FF               	movlw	255
 20954     0513  1803               	skipnc
 20955     0514  3000               	movlw	0
 20956     0515  00E5               	movwf	(LIGHTBLUE_ParseIncomingPacket@data^(0+128)+1)
 20957     0516  2D1F               	goto	l14478
 20958     0517                     l14476:
 20959     0517  0833               	movf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 20960     0518  3ED0               	addlw	208
 20961     0519  0141               	movlb	1	; select bank1
 20962     051A  00E4               	movwf	LIGHTBLUE_ParseIncomingPacket@data^(0+128)
 20963     051B  30FF               	movlw	255
 20964     051C  1803               	skipnc
 20965     051D  3000               	movlw	0
 20966     051E  00E5               	movwf	(LIGHTBLUE_ParseIncomingPacket@data^(0+128)+1)
 20967     051F                     l14478:
 20968                           
 20969                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 425:             length--;
 20970     051F  3001               	movlw	1
 20971     0520  0140               	movlb	0	; select bank0
 20972     0521  02EB               	subwf	LIGHTBLUE_ParseIncomingPacket@length,f
 20973     0522                     l14480:
 20974                           
 20975                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 426:             if (length == 0) 
      +                          {
 20976     0522  086B               	movf	LIGHTBLUE_ParseIncomingPacket@length,w
 20977     0523  1D03               	btfss	3,2
 20978     0524  2D26               	goto	u11481
 20979     0525  2D27               	goto	u11480
 20980     0526                     u11481:
 20981     0526  2D29               	goto	l14484
 20982     0527                     u11480:
 20983     0527                     l14482:
 20984                           
 20985                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 427:                 parserState =
      +                           IDLE;
 20986     0527  01EC               	clrf	LIGHTBLUE_ParseIncomingPacket@parserState
 20987                           
 20988                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 428:             } else {
 20989     0528  2D94               	goto	l187
 20990     0529                     l14484:
 20991                           
 20992                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 429:                 parserState =
      +                           PAYLOAD_1;
 20993     0529  3006               	movlw	6
 20994     052A  00EC               	movwf	LIGHTBLUE_ParseIncomingPacket@parserState
 20995     052B  2D94               	goto	l187
 20996     052C                     l14486:
 20997                           
 20998                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 433:             data = (data << 4
      +                          ) + (((receivedByte) <= '9') ? (receivedByte) - '0' : (receivedByte & 0x5f) - 'A' + 10);
 20999     052C  303A               	movlw	58
 21000     052D  0233               	subwf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 21001     052E  1C03               	skipc
 21002     052F  2D31               	goto	u11491
 21003     0530  2D32               	goto	u11490
 21004     0531                     u11491:
 21005     0531  2D3B               	goto	l14490
 21006     0532                     u11490:
 21007     0532                     l14488:
 21008     0532  0833               	movf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 21009     0533  395F               	andlw	95
 21010     0534  3EC9               	addlw	201
 21011     0535  00B1               	movwf	_LIGHTBLUE_ParseIncomingPacket$433
 21012     0536  30FF               	movlw	255
 21013     0537  1803               	skipnc
 21014     0538  3000               	movlw	0
 21015     0539  00B2               	movwf	_LIGHTBLUE_ParseIncomingPacket$433+1
 21016     053A  2D42               	goto	l14492
 21017     053B                     l14490:
 21018     053B  0833               	movf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 21019     053C  3ED0               	addlw	208
 21020     053D  00B1               	movwf	_LIGHTBLUE_ParseIncomingPacket$433
 21021     053E  30FF               	movlw	255
 21022     053F  1803               	skipnc
 21023     0540  3000               	movlw	0
 21024     0541  00B2               	movwf	_LIGHTBLUE_ParseIncomingPacket$433+1
 21025     0542                     l14492:
 21026     0542  0141               	movlb	1	; select bank1
 21027     0543  0865               	movf	(LIGHTBLUE_ParseIncomingPacket@data+1)^(0+128),w
 21028     0544  0140               	movlb	0	; select bank0
 21029     0545  00AC               	movwf	??_LIGHTBLUE_ParseIncomingPacket+1
 21030     0546  0141               	movlb	1	; select bank1
 21031     0547  0864               	movf	LIGHTBLUE_ParseIncomingPacket@data^(0+128),w
 21032     0548  0140               	movlb	0	; select bank0
 21033     0549  00AB               	movwf	??_LIGHTBLUE_ParseIncomingPacket
 21034     054A  0EAB               	swapf	??_LIGHTBLUE_ParseIncomingPacket,f
 21035     054B  0EAC               	swapf	??_LIGHTBLUE_ParseIncomingPacket+1,f
 21036     054C  30F0               	movlw	240
 21037     054D  05AC               	andwf	??_LIGHTBLUE_ParseIncomingPacket+1,f
 21038     054E  082B               	movf	??_LIGHTBLUE_ParseIncomingPacket,w
 21039     054F  390F               	andlw	15
 21040     0550  04AC               	iorwf	??_LIGHTBLUE_ParseIncomingPacket+1,f
 21041     0551  30F0               	movlw	240
 21042     0552  05AB               	andwf	??_LIGHTBLUE_ParseIncomingPacket,f
 21043     0553  0831               	movf	_LIGHTBLUE_ParseIncomingPacket$433,w
 21044     0554  072B               	addwf	??_LIGHTBLUE_ParseIncomingPacket,w
 21045     0555  0141               	movlb	1	; select bank1
 21046     0556  00E4               	movwf	LIGHTBLUE_ParseIncomingPacket@data^(0+128)
 21047     0557  0140               	movlb	0	; select bank0
 21048     0558  0832               	movf	_LIGHTBLUE_ParseIncomingPacket$433+1,w
 21049     0559  3D2C               	addwfc	??_LIGHTBLUE_ParseIncomingPacket+1,w
 21050     055A  0141               	movlb	1	; select bank1
 21051     055B  00E5               	movwf	(LIGHTBLUE_ParseIncomingPacket@data+1)^(0+128)
 21052     055C                     l14494:
 21053                           
 21054                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 434:             LIGHTBLUE_Perform
      +                          Action(packetID, data);
 21055     055C  0864               	movf	LIGHTBLUE_ParseIncomingPacket@data^(0+128),w
 21056     055D  0140               	movlb	0	; select bank0
 21057     055E  00A7               	movwf	LIGHTBLUE_PerformAction@data
 21058     055F  086A               	movf	LIGHTBLUE_ParseIncomingPacket@packetID,w
 21059     0560  3188  2015  3184   	fcall	_LIGHTBLUE_PerformAction
 21060     0563                     l14496:
 21061                           
 21062                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 435:             length--;
 21063     0563  3001               	movlw	1
 21064     0564  0140               	movlb	0	; select bank0
 21065     0565  02EB               	subwf	LIGHTBLUE_ParseIncomingPacket@length,f
 21066     0566                     l14498:
 21067                           
 21068                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 436:             if (length == 0) 
      +                          {
 21069     0566  086B               	movf	LIGHTBLUE_ParseIncomingPacket@length,w
 21070     0567  1D03               	btfss	3,2
 21071     0568  2D6A               	goto	u11501
 21072     0569  2D6B               	goto	u11500
 21073     056A                     u11501:
 21074     056A  2D04               	goto	l14470
 21075     056B                     u11500:
 21076     056B  2D27               	goto	l14482
 21077     056C                     l14504:
 21078                           
 21079                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 444:             if (receivedByte 
      +                          == ('[')) {
 21080     056C  305B               	movlw	91
 21081     056D  0633               	xorwf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 21082     056E  1D03               	btfss	3,2
 21083     056F  2D71               	goto	u11511
 21084     0570  2D72               	goto	u11510
 21085     0571                     u11511:
 21086     0571  2D94               	goto	l187
 21087     0572                     u11510:
 21088     0572                     l14506:
 21089                           
 21090                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 445:                 parserState =
      +                           SEQUENCE_NUMBER;
 21091     0572  01EC               	clrf	LIGHTBLUE_ParseIncomingPacket@parserState
 21092     0573  0AEC               	incf	LIGHTBLUE_ParseIncomingPacket@parserState,f
 21093     0574  2D94               	goto	l187
 21094     0575                     l14510:
 21095     0575  086C               	movf	LIGHTBLUE_ParseIncomingPacket@parserState,w
 21096     0576  00AB               	movwf	??_LIGHTBLUE_ParseIncomingPacket
 21097     0577  01AC               	clrf	??_LIGHTBLUE_ParseIncomingPacket+1
 21098                           
 21099                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 21100                           ; Switch size 1, requested type "simple"
 21101                           ; Number of cases is 1, Range of values is 0 to 0
 21102                           ; switch strategies available:
 21103                           ; Name         Instructions Cycles
 21104                           ; simple_byte            4     3 (average)
 21105                           ; direct_byte            8     6 (fixed)
 21106                           ; jumptable            260     6 (fixed)
 21107                           ;	Chosen strategy is simple_byte
 21108     0578  082C               	movf	??_LIGHTBLUE_ParseIncomingPacket+1,w
 21109     0579  3A00               	xorlw	0	; case 0
 21110     057A  1903               	skipnz
 21111     057B  2D7D               	goto	l16626
 21112     057C  2D6C               	goto	l14504
 21113     057D                     l16626:
 21114                           
 21115                           ; Switch size 1, requested type "simple"
 21116                           ; Number of cases is 7, Range of values is 0 to 6
 21117                           ; switch strategies available:
 21118                           ; Name         Instructions Cycles
 21119                           ; direct_byte           20     6 (fixed)
 21120                           ; simple_byte           22    12 (average)
 21121                           ; jumptable            260     6 (fixed)
 21122                           ;	Chosen strategy is simple_byte
 21123     057D  082B               	movf	??_LIGHTBLUE_ParseIncomingPacket,w
 21124     057E  3A00               	xorlw	0	; case 0
 21125     057F  1903               	skipnz
 21126     0580  2D6C               	goto	l14504
 21127     0581  3A01               	xorlw	1	; case 1
 21128     0582  1903               	skipnz
 21129     0583  2CC1               	goto	l14452
 21130     0584  3A03               	xorlw	3	; case 2
 21131     0585  1903               	skipnz
 21132     0586  2CC4               	goto	l14454
 21133     0587  3A01               	xorlw	1	; case 3
 21134     0588  1903               	skipnz
 21135     0589  2CC9               	goto	l14456
 21136     058A  3A07               	xorlw	7	; case 4
 21137     058B  1903               	skipnz
 21138     058C  2CE4               	goto	l14462
 21139     058D  3A01               	xorlw	1	; case 5
 21140     058E  1903               	skipnz
 21141     058F  2D07               	goto	l14472
 21142     0590  3A03               	xorlw	3	; case 6
 21143     0591  1903               	skipnz
 21144     0592  2D2C               	goto	l14486
 21145     0593  2D6C               	goto	l14504
 21146     0594                     l187:
 21147     0594  0008               	return
 21148     0595                     __end_of_LIGHTBLUE_ParseIncomingPacket:
 21149                           
 21150                           	psect	text70
 21151     0815                     __ptext70:	
 21152 ;; *************** function _LIGHTBLUE_PerformAction *****************
 21153 ;; Defined at:
 21154 ;;		line 499 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 21155 ;; Parameters:    Size  Location     Type
 21156 ;;  id              1    wreg     unsigned char 
 21157 ;;  data            1    7[BANK0 ] unsigned char 
 21158 ;; Auto vars:     Size  Location     Type
 21159 ;;  id              1    9[BANK0 ] unsigned char 
 21160 ;;  led             1   10[BANK0 ] unsigned char 
 21161 ;; Return value:  Size  Location     Type
 21162 ;;                  1    wreg      void 
 21163 ;; Registers used:
 21164 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21165 ;; Tracked objects:
 21166 ;;		On entry : 0/0
 21167 ;;		On exit  : 0/0
 21168 ;;		Unchanged: 0/0
 21169 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21170 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21171 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21172 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21173 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21174 ;;Total ram usage:        4 bytes
 21175 ;; Hardware stack levels used: 1
 21176 ;; Hardware stack levels required when called: 10
 21177 ;; This function calls:
 21178 ;;		_EUSART1_Write
 21179 ;;		_EUSART2_Write
 21180 ;;		_LIGHTBLUE_SetErrorLedValue
 21181 ;; This function is called by:
 21182 ;;		_LIGHTBLUE_ParseIncomingPacket
 21183 ;; This function uses a non-reentrant model
 21184 ;;
 21185                           
 21186     0815                     _LIGHTBLUE_PerformAction:	
 21187                           ;psect for function _LIGHTBLUE_PerformAction
 21188                           
 21189                           
 21190                           ;incstack = 0
 21191                           ; Regs used in _LIGHTBLUE_PerformAction: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 21192                           ;LIGHTBLUE_PerformAction@id stored from wreg
 21193     0815  0140               	movlb	0	; select bank0
 21194     0816  00A9               	movwf	LIGHTBLUE_PerformAction@id
 21195     0817                     l13680:
 21196                           
 21197                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 500:     uint8_t led;;mcc_generate
      +                          d_files/application/LIGHTBLUE_service.c: 502:     switch (id) {
 21198     0817  2844               	goto	l13692
 21199     0818                     l13682:
 21200                           
 21201                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 504:             led = (data >> 4)
      +                           & (0x01);
 21202     0818  0827               	movf	LIGHTBLUE_PerformAction@data,w
 21203     0819  00A8               	movwf	??_LIGHTBLUE_PerformAction
 21204     081A  3004               	movlw	4
 21205     081B                     u10415:
 21206     081B  36A8               	lsrf	??_LIGHTBLUE_PerformAction,f
 21207     081C  0B89               	decfsz	9,f
 21208     081D  281B               	goto	u10415
 21209     081E  0828               	movf	??_LIGHTBLUE_PerformAction,w
 21210     081F  3901               	andlw	1
 21211     0820  00AA               	movwf	LIGHTBLUE_PerformAction@led
 21212                           
 21213                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 505:             if (led == (0x00)
      +                          ) {
 21214     0821  082A               	movf	LIGHTBLUE_PerformAction@led,w
 21215     0822  1D03               	btfss	3,2
 21216     0823  2825               	goto	u10421
 21217     0824  2826               	goto	u10420
 21218     0825                     u10421:
 21219     0825  282E               	goto	l13686
 21220     0826                     u10420:
 21221     0826                     l13684:
 21222                           
 21223                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 506:                 if ((data & (
      +                          0x01)) == (0x00)) {
 21224     0826  1827               	btfsc	LIGHTBLUE_PerformAction@data,0
 21225     0827  2829               	goto	u10431
 21226     0828  282A               	goto	u10430
 21227     0829                     u10431:
 21228     0829  282C               	goto	l224
 21229     082A                     u10430:
 21230     082A                     l221:	
 21231                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 507:                     do { LATA
      +                          bits.LATA5 = 1; } while(0);
 21232                           
 21233     082A  1698               	bsf	24,5	;volatile
 21234     082B  284C               	goto	l230
 21235     082C                     l224:	
 21236                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 509:                     do { LATA
      +                          bits.LATA5 = 0; } while(0);
 21237                           
 21238     082C  1298               	bcf	24,5	;volatile
 21239     082D  284C               	goto	l230
 21240     082E                     l13686:
 21241                           
 21242                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 512:                 LIGHTBLUE_Set
      +                          ErrorLedValue(data & (0x01));
 21243     082E  1827               	btfsc	LIGHTBLUE_PerformAction@data,0
 21244     082F  2831               	goto	u10441
 21245     0830  2833               	goto	u10440
 21246     0831                     u10441:
 21247     0831  3001               	movlw	1
 21248     0832  2834               	goto	u10450
 21249     0833                     u10440:
 21250     0833  3000               	movlw	0
 21251     0834                     u10450:
 21252     0834  3190  2093  3188   	fcall	_LIGHTBLUE_SetErrorLedValue
 21253     0837  284C               	goto	l230
 21254     0838                     l13688:
 21255                           
 21256                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 516:             uart[UART_CDC].Wr
      +                          ite(data);
 21257     0838  0827               	movf	LIGHTBLUE_PerformAction@data,w
 21258     0839  00F1               	movwf	EUSART2_Write@txData
 21259     083A  3002               	movlw	low ((_uart+2)| (0+32768))
 21260     083B  0084               	movwf	4
 21261     083C  3098               	movlw	high ((_uart+2)| (0+32768))
 21262     083D  0085               	movwf	5
 21263     083E  3F01               	moviw [1]fsr0
 21264     083F  008A               	movwf	10
 21265     0840  3F00               	moviw [0]fsr0
 21266     0841  000A               	callw
 21267     0842  3188               	pagesel	$
 21268                           
 21269                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 517:             break;
 21270     0843  284C               	goto	l230
 21271     0844                     l13692:
 21272     0844  0829               	movf	LIGHTBLUE_PerformAction@id,w
 21273                           
 21274                           ; Switch size 1, requested type "simple"
 21275                           ; Number of cases is 2, Range of values is 76 to 83
 21276                           ; switch strategies available:
 21277                           ; Name         Instructions Cycles
 21278                           ; simple_byte            7     4 (average)
 21279                           ; direct_byte           25     9 (fixed)
 21280                           ; jumptable            263     9 (fixed)
 21281                           ;	Chosen strategy is simple_byte
 21282     0845  3A4C               	xorlw	76	; case 76
 21283     0846  1903               	skipnz
 21284     0847  2818               	goto	l13682
 21285     0848  3A1F               	xorlw	31	; case 83
 21286     0849  1903               	skipnz
 21287     084A  2838               	goto	l13688
 21288     084B  284C               	goto	l230
 21289     084C                     l230:
 21290     084C  0008               	return
 21291     084D                     __end_of_LIGHTBLUE_PerformAction:
 21292                           
 21293                           	psect	text71
 21294     1093                     __ptext71:	
 21295 ;; *************** function _LIGHTBLUE_SetErrorLedValue *****************
 21296 ;; Defined at:
 21297 ;;		line 487 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 21298 ;; Parameters:    Size  Location     Type
 21299 ;;  value           1    wreg     _Bool 
 21300 ;; Auto vars:     Size  Location     Type
 21301 ;;  value           1    6[BANK0 ] _Bool 
 21302 ;; Return value:  Size  Location     Type
 21303 ;;                  1    wreg      void 
 21304 ;; Registers used:
 21305 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21306 ;; Tracked objects:
 21307 ;;		On entry : 0/0
 21308 ;;		On exit  : 0/0
 21309 ;;		Unchanged: 0/0
 21310 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21312 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21313 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21314 ;;      Totals:         1       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21315 ;;Total ram usage:        2 bytes
 21316 ;; Hardware stack levels used: 1
 21317 ;; Hardware stack levels required when called: 9
 21318 ;; This function calls:
 21319 ;;		_LIGHTBLUE_UpdateErrorLed
 21320 ;; This function is called by:
 21321 ;;		_LIGHTBLUE_PerformAction
 21322 ;; This function uses a non-reentrant model
 21323 ;;
 21324                           
 21325     1093                     _LIGHTBLUE_SetErrorLedValue:	
 21326                           ;psect for function _LIGHTBLUE_SetErrorLedValue
 21327                           
 21328                           
 21329                           ;incstack = 0
 21330                           ; Regs used in _LIGHTBLUE_SetErrorLedValue: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 21331                           ;LIGHTBLUE_SetErrorLedValue@value stored from wreg
 21332     1093  0140               	movlb	0	; select bank0
 21333     1094  00A6               	movwf	LIGHTBLUE_SetErrorLedValue@value
 21334     1095                     l13528:
 21335                           
 21336                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 488:     (bitMap.ioStateBitMap.p2_
      +                          2_state) = (0x01) - value;
 21337     1095  3001               	movlw	1
 21338     1096  00FB               	movwf	??_LIGHTBLUE_SetErrorLedValue
 21339     1097  0826               	movf	LIGHTBLUE_SetErrorLedValue@value,w
 21340     1098  02FB               	subwf	??_LIGHTBLUE_SetErrorLedValue,f
 21341     1099  0850               	movf	_bitMap+1,w	;volatile
 21342     109A  067B               	xorwf	??_LIGHTBLUE_SetErrorLedValue,w
 21343     109B  39FE               	andlw	-2
 21344     109C  067B               	xorwf	??_LIGHTBLUE_SetErrorLedValue,w
 21345     109D  00D0               	movwf	_bitMap+1	;volatile
 21346     109E                     l13530:
 21347                           
 21348                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 489:     LIGHTBLUE_UpdateErrorLed(
      +                          );
 21349     109E  3193  236D  3190   	fcall	_LIGHTBLUE_UpdateErrorLed
 21350     10A1                     l211:
 21351     10A1  0008               	return
 21352     10A2                     __end_of_LIGHTBLUE_SetErrorLedValue:
 21353                           
 21354                           	psect	text72
 21355     136D                     __ptext72:	
 21356 ;; *************** function _LIGHTBLUE_UpdateErrorLed *****************
 21357 ;; Defined at:
 21358 ;;		line 492 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 21359 ;; Parameters:    Size  Location     Type
 21360 ;;		None
 21361 ;; Auto vars:     Size  Location     Type
 21362 ;;		None
 21363 ;; Return value:  Size  Location     Type
 21364 ;;                  1    wreg      void 
 21365 ;; Registers used:
 21366 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21367 ;; Tracked objects:
 21368 ;;		On entry : 0/0
 21369 ;;		On exit  : 0/0
 21370 ;;		Unchanged: 0/0
 21371 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21372 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21373 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21375 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21376 ;;Total ram usage:        0 bytes
 21377 ;; Hardware stack levels used: 1
 21378 ;; Hardware stack levels required when called: 8
 21379 ;; This function calls:
 21380 ;;		_RN487X_Delay
 21381 ;;		_RN487X_EnterCmdMode
 21382 ;;		_RN487X_EnterDataMode
 21383 ;;		_RN487X_SetOutputs
 21384 ;; This function is called by:
 21385 ;;		_LIGHTBLUE_SetErrorLedValue
 21386 ;; This function uses a non-reentrant model
 21387 ;;
 21388                           
 21389     136D                     _LIGHTBLUE_UpdateErrorLed:	
 21390                           ;psect for function _LIGHTBLUE_UpdateErrorLed
 21391                           
 21392     136D                     l13424:	
 21393                           ;incstack = 0
 21394                           ; Regs used in _LIGHTBLUE_UpdateErrorLed: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 21395                           
 21396                           
 21397                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 493:     RN487X_EnterCmdMode();
 21398     136D  3192  222A  3193   	fcall	_RN487X_EnterCmdMode
 21399     1370                     l13426:
 21400                           
 21401                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 494:     RN487X.DelayMs((20));
 21402     1370  3014               	movlw	20
 21403     1371  00F4               	movwf	RN487X_Delay@delayCount
 21404     1372  3000               	movlw	0
 21405     1373  00F5               	movwf	RN487X_Delay@delayCount+1
 21406     1374  3076               	movlw	low ((_RN487X+14)| (0+32768))
 21407     1375  0084               	movwf	4
 21408     1376  3098               	movlw	high ((_RN487X+14)| (0+32768))
 21409     1377  0085               	movwf	5
 21410     1378  3F01               	moviw [1]fsr0
 21411     1379  008A               	movwf	10
 21412     137A  3F00               	moviw [0]fsr0
 21413     137B  000A               	callw
 21414     137C  3193               	pagesel	$
 21415     137D                     l13428:
 21416                           
 21417                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 495:     RN487X_SetOutputs(bitMap)
      +                          ;
 21418     137D  0140               	movlb	0	; select bank0
 21419     137E  0850               	movf	_bitMap+1,w	;volatile
 21420     137F  00A1               	movwf	RN487X_SetOutputs@bitMap+1
 21421     1380  084F               	movf	_bitMap,w	;volatile
 21422     1381  00A0               	movwf	RN487X_SetOutputs@bitMap
 21423     1382  318A  2240  3193   	fcall	_RN487X_SetOutputs
 21424     1385                     l13430:
 21425                           
 21426                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 496:     RN487X_EnterDataMode();
 21427     1385  3193  2352  3193   	fcall	_RN487X_EnterDataMode
 21428     1388                     l214:
 21429     1388  0008               	return
 21430     1389                     __end_of_LIGHTBLUE_UpdateErrorLed:
 21431                           
 21432                           	psect	text73
 21433     0A40                     __ptext73:	
 21434 ;; *************** function _RN487X_SetOutputs *****************
 21435 ;; Defined at:
 21436 ;;		line 223 in file "mcc_generated_files/rn487x/rn487x.c"
 21437 ;; Parameters:    Size  Location     Type
 21438 ;;  bitMap          2    0[BANK0 ] struct .
 21439 ;; Auto vars:     Size  Location     Type
 21440 ;;  stateHighNib    1    5[BANK0 ] unsigned char 
 21441 ;;  ioHighNibble    1    4[BANK0 ] unsigned char 
 21442 ;;  stateLowNibb    1    3[BANK0 ] unsigned char 
 21443 ;;  ioLowNibble     1    2[BANK0 ] unsigned char 
 21444 ;; Return value:  Size  Location     Type
 21445 ;;                  1    wreg      _Bool 
 21446 ;; Registers used:
 21447 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21448 ;; Tracked objects:
 21449 ;;		On entry : 0/0
 21450 ;;		On exit  : 0/0
 21451 ;;		Unchanged: 0/0
 21452 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21453 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21454 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21455 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21456 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21457 ;;Total ram usage:        6 bytes
 21458 ;; Hardware stack levels used: 1
 21459 ;; Hardware stack levels required when called: 7
 21460 ;; This function calls:
 21461 ;;		_RN487X_ReadDefaultResponse
 21462 ;;		_RN487X_SendCmd
 21463 ;; This function is called by:
 21464 ;;		_LIGHTBLUE_UpdateErrorLed
 21465 ;; This function uses a non-reentrant model
 21466 ;;
 21467                           
 21468     0A40                     _RN487X_SetOutputs:	
 21469                           ;psect for function _RN487X_SetOutputs
 21470                           
 21471     0A40                     l13294:	
 21472                           ;incstack = 0
 21473                           ; Regs used in _RN487X_SetOutputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 21474                           
 21475                           
 21476                           ;mcc_generated_files/rn487x/rn487x.c: 226:     char ioLowNibble = '0';
 21477     0A40  3030               	movlw	48
 21478     0A41  0140               	movlb	0	; select bank0
 21479     0A42  00A2               	movwf	RN487X_SetOutputs@ioLowNibble
 21480                           
 21481                           ;mcc_generated_files/rn487x/rn487x.c: 227:     char stateHighNibble = '0';
 21482     0A43  3030               	movlw	48
 21483     0A44  00A5               	movwf	RN487X_SetOutputs@stateHighNibble
 21484                           
 21485                           ;mcc_generated_files/rn487x/rn487x.c: 228:     char stateLowNibble = '0';
 21486     0A45  3030               	movlw	48
 21487     0A46  00A3               	movwf	RN487X_SetOutputs@stateLowNibble
 21488     0A47                     l13296:
 21489                           
 21490                           ;mcc_generated_files/rn487x/rn487x.c: 231:     if (bitMap.ioBitMap.p1_3)
 21491     0A47  1E20               	btfss	RN487X_SetOutputs@bitMap,4
 21492     0A48  2A4A               	goto	u10011
 21493     0A49  2A4B               	goto	u10010
 21494     0A4A                     u10011:
 21495     0A4A  2A4E               	goto	l13300
 21496     0A4B                     u10010:
 21497     0A4B                     l13298:
 21498                           
 21499                           ;mcc_generated_files/rn487x/rn487x.c: 232:     {;mcc_generated_files/rn487x/rn487x.c: 23
      +                          3:         ioHighNibble = '1';
 21500     0A4B  3031               	movlw	49
 21501     0A4C  00A4               	movwf	RN487X_SetOutputs@ioHighNibble
 21502                           
 21503                           ;mcc_generated_files/rn487x/rn487x.c: 234:     }
 21504     0A4D  2A50               	goto	l13302
 21505     0A4E                     l13300:
 21506                           
 21507                           ;mcc_generated_files/rn487x/rn487x.c: 236:     {;mcc_generated_files/rn487x/rn487x.c: 23
      +                          7:         ioHighNibble = '0';
 21508     0A4E  3030               	movlw	48
 21509     0A4F  00A4               	movwf	RN487X_SetOutputs@ioHighNibble
 21510     0A50                     l13302:
 21511                           
 21512                           ;mcc_generated_files/rn487x/rn487x.c: 239:     ioLowNibble = ( (0x0F & bitMap.ioBitMap.g
      +                          pioBitMap) + '0');
 21513     0A50  0820               	movf	RN487X_SetOutputs@bitMap,w
 21514     0A51  390F               	andlw	15
 21515     0A52  3E30               	addlw	48
 21516     0A53  00A2               	movwf	RN487X_SetOutputs@ioLowNibble
 21517     0A54                     l13304:
 21518                           
 21519                           ;mcc_generated_files/rn487x/rn487x.c: 242:     if (bitMap.ioStateBitMap.p1_3_state)
 21520     0A54  1E21               	btfss	RN487X_SetOutputs@bitMap+1,4
 21521     0A55  2A57               	goto	u10021
 21522     0A56  2A58               	goto	u10020
 21523     0A57                     u10021:
 21524     0A57  2A5B               	goto	l13308
 21525     0A58                     u10020:
 21526     0A58                     l13306:
 21527                           
 21528                           ;mcc_generated_files/rn487x/rn487x.c: 243:     {;mcc_generated_files/rn487x/rn487x.c: 24
      +                          4:         stateHighNibble = '1';
 21529     0A58  3031               	movlw	49
 21530     0A59  00A5               	movwf	RN487X_SetOutputs@stateHighNibble
 21531                           
 21532                           ;mcc_generated_files/rn487x/rn487x.c: 245:     }
 21533     0A5A  2A5D               	goto	l13310
 21534     0A5B                     l13308:
 21535                           
 21536                           ;mcc_generated_files/rn487x/rn487x.c: 247:     {;mcc_generated_files/rn487x/rn487x.c: 24
      +                          8:         stateHighNibble = '0';
 21537     0A5B  3030               	movlw	48
 21538     0A5C  00A5               	movwf	RN487X_SetOutputs@stateHighNibble
 21539     0A5D                     l13310:
 21540                           
 21541                           ;mcc_generated_files/rn487x/rn487x.c: 250:     stateLowNibble = ( (0x0F & bitMap.ioState
      +                          BitMap.gpioStateBitMap) + '0');
 21542     0A5D  0821               	movf	RN487X_SetOutputs@bitMap+1,w
 21543     0A5E  390F               	andlw	15
 21544     0A5F  3E30               	addlw	48
 21545     0A60  00A3               	movwf	RN487X_SetOutputs@stateLowNibble
 21546     0A61                     l13312:
 21547                           
 21548                           ;mcc_generated_files/rn487x/rn487x.c: 252:     cmdBuf[0] = '|';
 21549     0A61  307C               	movlw	124
 21550     0A62  0144               	movlb	4	; select bank4
 21551     0A63  00A0               	movwf	_cmdBuf^(0+512)
 21552     0A64                     l13314:
 21553                           
 21554                           ;mcc_generated_files/rn487x/rn487x.c: 253:     cmdBuf[1] = 'O';
 21555     0A64  304F               	movlw	79
 21556     0A65  00A1               	movwf	(_cmdBuf^(0+512)+1)
 21557     0A66                     l13316:
 21558                           
 21559                           ;mcc_generated_files/rn487x/rn487x.c: 254:     cmdBuf[2] = ',';
 21560     0A66  302C               	movlw	44
 21561     0A67  00A2               	movwf	(_cmdBuf^(0+512)+2)
 21562     0A68                     l13318:
 21563                           
 21564                           ;mcc_generated_files/rn487x/rn487x.c: 255:     cmdBuf[3] = ioHighNibble;
 21565     0A68  0140               	movlb	0	; select bank0
 21566     0A69  0824               	movf	RN487X_SetOutputs@ioHighNibble,w
 21567     0A6A  0144               	movlb	4	; select bank4
 21568     0A6B  00A3               	movwf	(_cmdBuf^(0+512)+3)
 21569     0A6C                     l13320:
 21570                           
 21571                           ;mcc_generated_files/rn487x/rn487x.c: 256:     cmdBuf[4] = ioLowNibble;
 21572     0A6C  0140               	movlb	0	; select bank0
 21573     0A6D  0822               	movf	RN487X_SetOutputs@ioLowNibble,w
 21574     0A6E  0144               	movlb	4	; select bank4
 21575     0A6F  00A4               	movwf	(_cmdBuf^(0+512)+4)
 21576     0A70                     l13322:
 21577                           
 21578                           ;mcc_generated_files/rn487x/rn487x.c: 257:     cmdBuf[5] = ',';
 21579     0A70  302C               	movlw	44
 21580     0A71  00A5               	movwf	(_cmdBuf^(0+512)+5)
 21581     0A72                     l13324:
 21582                           
 21583                           ;mcc_generated_files/rn487x/rn487x.c: 258:     cmdBuf[6] = stateHighNibble;
 21584     0A72  0140               	movlb	0	; select bank0
 21585     0A73  0825               	movf	RN487X_SetOutputs@stateHighNibble,w
 21586     0A74  0144               	movlb	4	; select bank4
 21587     0A75  00A6               	movwf	(_cmdBuf^(0+512)+6)
 21588     0A76                     l13326:
 21589                           
 21590                           ;mcc_generated_files/rn487x/rn487x.c: 259:     cmdBuf[7] = stateLowNibble;
 21591     0A76  0140               	movlb	0	; select bank0
 21592     0A77  0823               	movf	RN487X_SetOutputs@stateLowNibble,w
 21593     0A78  0144               	movlb	4	; select bank4
 21594     0A79  00A7               	movwf	(_cmdBuf^(0+512)+7)
 21595     0A7A                     l13328:
 21596                           
 21597                           ;mcc_generated_files/rn487x/rn487x.c: 260:     cmdBuf[8] = '\r';
 21598     0A7A  300D               	movlw	13
 21599     0A7B  00A8               	movwf	(_cmdBuf^(0+512)+8)
 21600     0A7C                     l13330:
 21601                           
 21602                           ;mcc_generated_files/rn487x/rn487x.c: 261:     cmdBuf[9] = '\n';
 21603     0A7C  300A               	movlw	10
 21604     0A7D  00A9               	movwf	(_cmdBuf^(0+512)+9)
 21605     0A7E                     l13332:
 21606                           
 21607                           ;mcc_generated_files/rn487x/rn487x.c: 263:     RN487X_SendCmd(cmdBuf, 10);
 21608     0A7E  300A               	movlw	10
 21609     0A7F  00F7               	movwf	RN487X_SendCmd@cmdLen
 21610     0A80  3020               	movlw	(low (_cmdBuf| (0+512)))& (0+255)
 21611     0A81  3196  2696  318A   	fcall	_RN487X_SendCmd
 21612     0A84                     l13334:
 21613                           
 21614                           ;mcc_generated_files/rn487x/rn487x.c: 264:     return RN487X_ReadDefaultResponse();;	Ret
      +                          urn value of _RN487X_SetOutputs is never used
 21615     0A84  318E  2651  318A   	fcall	_RN487X_ReadDefaultResponse
 21616     0A87                     l1587:
 21617     0A87  0008               	return
 21618     0A88                     __end_of_RN487X_SetOutputs:
 21619                           
 21620                           	psect	text74
 21621     0E51                     __ptext74:	
 21622 ;; *************** function _RN487X_ReadDefaultResponse *****************
 21623 ;; Defined at:
 21624 ;;		line 125 in file "mcc_generated_files/rn487x/rn487x.c"
 21625 ;; Parameters:    Size  Location     Type
 21626 ;;		None
 21627 ;; Auto vars:     Size  Location     Type
 21628 ;;  resp            3    3[COMMON] unsigned char [3]
 21629 ;;  status          1    6[COMMON] _Bool 
 21630 ;; Return value:  Size  Location     Type
 21631 ;;                  1    wreg      _Bool 
 21632 ;; Registers used:
 21633 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21634 ;; Tracked objects:
 21635 ;;		On entry : 0/0
 21636 ;;		On exit  : 0/0
 21637 ;;		Unchanged: 0/0
 21638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21639 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21640 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21641 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21642 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21643 ;;Total ram usage:        4 bytes
 21644 ;; Hardware stack levels used: 1
 21645 ;; Hardware stack levels required when called: 6
 21646 ;; This function calls:
 21647 ;;		_RN487X_Read@rn487x_interface$F1835
 21648 ;; This function is called by:
 21649 ;;		_RN487X_SetOutputs
 21650 ;;		_RN487X_Disconnect
 21651 ;; This function uses a non-reentrant model
 21652 ;;
 21653                           
 21654     0E51                     _RN487X_ReadDefaultResponse:	
 21655                           ;psect for function _RN487X_ReadDefaultResponse
 21656                           
 21657     0E51                     l13198:	
 21658                           ;incstack = 0
 21659                           ; Regs used in _RN487X_ReadDefaultResponse: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 21660                           
 21661                           
 21662                           ;mcc_generated_files/rn487x/rn487x.c: 127:     uint8_t resp[3];;mcc_generated_files/rn48
      +                          7x/rn487x.c: 128:     _Bool status = 0;
 21663     0E51  01F6               	clrf	RN487X_ReadDefaultResponse@status
 21664     0E52                     l13200:
 21665                           
 21666                           ;mcc_generated_files/rn487x/rn487x.c: 130:     resp[0] = RN487X.Read();
 21667     0E52  306A               	movlw	low ((_RN487X+2)| (0+32768))
 21668     0E53  0084               	movwf	4
 21669     0E54  3098               	movlw	high ((_RN487X+2)| (0+32768))
 21670     0E55  0085               	movwf	5
 21671     0E56  3F01               	moviw [1]fsr0
 21672     0E57  008A               	movwf	10
 21673     0E58  3F00               	moviw [0]fsr0
 21674     0E59  000A               	callw
 21675     0E5A  318E               	pagesel	$
 21676     0E5B  00F3               	movwf	RN487X_ReadDefaultResponse@resp
 21677     0E5C                     l13202:
 21678                           
 21679                           ;mcc_generated_files/rn487x/rn487x.c: 131:     resp[1] = RN487X.Read();
 21680     0E5C  306A               	movlw	low ((_RN487X+2)| (0+32768))
 21681     0E5D  0084               	movwf	4
 21682     0E5E  3098               	movlw	high ((_RN487X+2)| (0+32768))
 21683     0E5F  0085               	movwf	5
 21684     0E60  3F01               	moviw [1]fsr0
 21685     0E61  008A               	movwf	10
 21686     0E62  3F00               	moviw [0]fsr0
 21687     0E63  000A               	callw
 21688     0E64  318E               	pagesel	$
 21689     0E65  00F4               	movwf	RN487X_ReadDefaultResponse@resp+1
 21690     0E66                     l13204:
 21691                           
 21692                           ;mcc_generated_files/rn487x/rn487x.c: 132:     resp[2] = RN487X.Read();
 21693     0E66  306A               	movlw	low ((_RN487X+2)| (0+32768))
 21694     0E67  0084               	movwf	4
 21695     0E68  3098               	movlw	high ((_RN487X+2)| (0+32768))
 21696     0E69  0085               	movwf	5
 21697     0E6A  3F01               	moviw [1]fsr0
 21698     0E6B  008A               	movwf	10
 21699     0E6C  3F00               	moviw [0]fsr0
 21700     0E6D  000A               	callw
 21701     0E6E  318E               	pagesel	$
 21702     0E6F  00F5               	movwf	RN487X_ReadDefaultResponse@resp+2
 21703                           
 21704                           ;mcc_generated_files/rn487x/rn487x.c: 134:     switch (resp[0])
 21705     0E70  2E90               	goto	l13224
 21706     0E71                     l13206:
 21707                           
 21708                           ;mcc_generated_files/rn487x/rn487x.c: 137:         {;mcc_generated_files/rn487x/rn487x.c
      +                          : 138:             if ((resp[1] == 'O') && (resp[2] == 'K'))
 21709     0E71  304F               	movlw	79
 21710     0E72  0674               	xorwf	RN487X_ReadDefaultResponse@resp+1,w
 21711     0E73  1D03               	btfss	3,2
 21712     0E74  2E76               	goto	u9881
 21713     0E75  2E77               	goto	u9880
 21714     0E76                     u9881:
 21715     0E76  2E98               	goto	l13226
 21716     0E77                     u9880:
 21717     0E77                     l13208:
 21718     0E77  304B               	movlw	75
 21719     0E78  0675               	xorwf	RN487X_ReadDefaultResponse@resp+2,w
 21720     0E79  1D03               	btfss	3,2
 21721     0E7A  2E7C               	goto	u9891
 21722     0E7B  2E7D               	goto	u9890
 21723     0E7C                     u9891:
 21724     0E7C  2E98               	goto	l13226
 21725     0E7D                     u9890:
 21726     0E7D                     l13210:
 21727                           
 21728                           ;mcc_generated_files/rn487x/rn487x.c: 139:                 status = 1;
 21729     0E7D  01F6               	clrf	RN487X_ReadDefaultResponse@status
 21730     0E7E  0AF6               	incf	RN487X_ReadDefaultResponse@status,f
 21731     0E7F  2E98               	goto	l13226
 21732     0E80                     l13212:
 21733                           
 21734                           ;mcc_generated_files/rn487x/rn487x.c: 144:         {;mcc_generated_files/rn487x/rn487x.c
      +                          : 145:             if ((resp[1] == 'r') && (resp[2] == 'r'))
 21735     0E80  3072               	movlw	114
 21736     0E81  0674               	xorwf	RN487X_ReadDefaultResponse@resp+1,w
 21737     0E82  1D03               	btfss	3,2
 21738     0E83  2E85               	goto	u9901
 21739     0E84  2E86               	goto	u9900
 21740     0E85                     u9901:
 21741     0E85  2E98               	goto	l13226
 21742     0E86                     u9900:
 21743     0E86                     l13214:
 21744     0E86  3072               	movlw	114
 21745     0E87  0675               	xorwf	RN487X_ReadDefaultResponse@resp+2,w
 21746     0E88  1D03               	btfss	3,2
 21747     0E89  2E8B               	goto	u9911
 21748     0E8A  2E8C               	goto	u9910
 21749     0E8B                     u9911:
 21750     0E8B  2E98               	goto	l13226
 21751     0E8C                     u9910:
 21752     0E8C                     l13216:
 21753                           
 21754                           ;mcc_generated_files/rn487x/rn487x.c: 146:                 status = 0;
 21755     0E8C  01F6               	clrf	RN487X_ReadDefaultResponse@status
 21756     0E8D  2E98               	goto	l13226
 21757     0E8E                     l13218:
 21758                           
 21759                           ;mcc_generated_files/rn487x/rn487x.c: 151:         {;mcc_generated_files/rn487x/rn487x.c
      +                          : 152:             return status;
 21760     0E8E  3000               	movlw	0
 21761     0E8F  2ED8               	goto	l1562
 21762     0E90                     l13224:
 21763     0E90  0873               	movf	RN487X_ReadDefaultResponse@resp,w
 21764                           
 21765                           ; Switch size 1, requested type "simple"
 21766                           ; Number of cases is 2, Range of values is 65 to 69
 21767                           ; switch strategies available:
 21768                           ; Name         Instructions Cycles
 21769                           ; simple_byte            7     4 (average)
 21770                           ; direct_byte           19     9 (fixed)
 21771                           ; jumptable            263     9 (fixed)
 21772                           ;	Chosen strategy is simple_byte
 21773     0E91  3A41               	xorlw	65	; case 65
 21774     0E92  1903               	skipnz
 21775     0E93  2E71               	goto	l13206
 21776     0E94  3A04               	xorlw	4	; case 69
 21777     0E95  1903               	skipnz
 21778     0E96  2E80               	goto	l13212
 21779     0E97  2E8E               	goto	l13218
 21780     0E98                     l13226:
 21781                           
 21782                           ;mcc_generated_files/rn487x/rn487x.c: 157:     RN487X.Read();
 21783     0E98  306A               	movlw	low ((_RN487X+2)| (0+32768))
 21784     0E99  0084               	movwf	4
 21785     0E9A  3098               	movlw	high ((_RN487X+2)| (0+32768))
 21786     0E9B  0085               	movwf	5
 21787     0E9C  3F01               	moviw [1]fsr0
 21788     0E9D  008A               	movwf	10
 21789     0E9E  3F00               	moviw [0]fsr0
 21790     0E9F  000A               	callw
 21791     0EA0  318E               	pagesel	$
 21792                           
 21793                           ;mcc_generated_files/rn487x/rn487x.c: 158:     RN487X.Read();
 21794     0EA1  306A               	movlw	low ((_RN487X+2)| (0+32768))
 21795     0EA2  0084               	movwf	4
 21796     0EA3  3098               	movlw	high ((_RN487X+2)| (0+32768))
 21797     0EA4  0085               	movwf	5
 21798     0EA5  3F01               	moviw [1]fsr0
 21799     0EA6  008A               	movwf	10
 21800     0EA7  3F00               	moviw [0]fsr0
 21801     0EA8  000A               	callw
 21802     0EA9  318E               	pagesel	$
 21803                           
 21804                           ;mcc_generated_files/rn487x/rn487x.c: 161:     RN487X.Read();
 21805     0EAA  306A               	movlw	low ((_RN487X+2)| (0+32768))
 21806     0EAB  0084               	movwf	4
 21807     0EAC  3098               	movlw	high ((_RN487X+2)| (0+32768))
 21808     0EAD  0085               	movwf	5
 21809     0EAE  3F01               	moviw [1]fsr0
 21810     0EAF  008A               	movwf	10
 21811     0EB0  3F00               	moviw [0]fsr0
 21812     0EB1  000A               	callw
 21813     0EB2  318E               	pagesel	$
 21814                           
 21815                           ;mcc_generated_files/rn487x/rn487x.c: 162:     RN487X.Read();
 21816     0EB3  306A               	movlw	low ((_RN487X+2)| (0+32768))
 21817     0EB4  0084               	movwf	4
 21818     0EB5  3098               	movlw	high ((_RN487X+2)| (0+32768))
 21819     0EB6  0085               	movwf	5
 21820     0EB7  3F01               	moviw [1]fsr0
 21821     0EB8  008A               	movwf	10
 21822     0EB9  3F00               	moviw [0]fsr0
 21823     0EBA  000A               	callw
 21824     0EBB  318E               	pagesel	$
 21825                           
 21826                           ;mcc_generated_files/rn487x/rn487x.c: 163:     RN487X.Read();
 21827     0EBC  306A               	movlw	low ((_RN487X+2)| (0+32768))
 21828     0EBD  0084               	movwf	4
 21829     0EBE  3098               	movlw	high ((_RN487X+2)| (0+32768))
 21830     0EBF  0085               	movwf	5
 21831     0EC0  3F01               	moviw [1]fsr0
 21832     0EC1  008A               	movwf	10
 21833     0EC2  3F00               	moviw [0]fsr0
 21834     0EC3  000A               	callw
 21835     0EC4  318E               	pagesel	$
 21836                           
 21837                           ;mcc_generated_files/rn487x/rn487x.c: 164:     RN487X.Read();
 21838     0EC5  306A               	movlw	low ((_RN487X+2)| (0+32768))
 21839     0EC6  0084               	movwf	4
 21840     0EC7  3098               	movlw	high ((_RN487X+2)| (0+32768))
 21841     0EC8  0085               	movwf	5
 21842     0EC9  3F01               	moviw [1]fsr0
 21843     0ECA  008A               	movwf	10
 21844     0ECB  3F00               	moviw [0]fsr0
 21845     0ECC  000A               	callw
 21846     0ECD  318E               	pagesel	$
 21847                           
 21848                           ;mcc_generated_files/rn487x/rn487x.c: 165:     RN487X.Read();
 21849     0ECE  306A               	movlw	low ((_RN487X+2)| (0+32768))
 21850     0ECF  0084               	movwf	4
 21851     0ED0  3098               	movlw	high ((_RN487X+2)| (0+32768))
 21852     0ED1  0085               	movwf	5
 21853     0ED2  3F01               	moviw [1]fsr0
 21854     0ED3  008A               	movwf	10
 21855     0ED4  3F00               	moviw [0]fsr0
 21856     0ED5  000A               	callw
 21857     0ED6  318E               	pagesel	$
 21858     0ED7                     l13228:
 21859                           
 21860                           ;mcc_generated_files/rn487x/rn487x.c: 167:     return status;
 21861     0ED7  0876               	movf	RN487X_ReadDefaultResponse@status,w
 21862     0ED8                     l1562:
 21863     0ED8  0008               	return
 21864     0ED9                     __end_of_RN487X_ReadDefaultResponse:
 21865                           
 21866                           	psect	text75
 21867     1352                     __ptext75:	
 21868 ;; *************** function _RN487X_EnterDataMode *****************
 21869 ;; Defined at:
 21870 ;;		line 208 in file "mcc_generated_files/rn487x/rn487x.c"
 21871 ;; Parameters:    Size  Location     Type
 21872 ;;		None
 21873 ;; Auto vars:     Size  Location     Type
 21874 ;;		None
 21875 ;; Return value:  Size  Location     Type
 21876 ;;                  1    wreg      _Bool 
 21877 ;; Registers used:
 21878 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21879 ;; Tracked objects:
 21880 ;;		On entry : 0/0
 21881 ;;		On exit  : 0/0
 21882 ;;		Unchanged: 0/0
 21883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21884 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21885 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21887 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21888 ;;Total ram usage:        0 bytes
 21889 ;; Hardware stack levels used: 1
 21890 ;; Hardware stack levels required when called: 7
 21891 ;; This function calls:
 21892 ;;		_RN487X_ReadMsg
 21893 ;;		_RN487X_SendCmd
 21894 ;; This function is called by:
 21895 ;;		_LIGHTBLUE_UpdateErrorLed
 21896 ;; This function uses a non-reentrant model
 21897 ;;
 21898                           
 21899     1352                     _RN487X_EnterDataMode:	
 21900                           ;psect for function _RN487X_EnterDataMode
 21901                           
 21902     1352                     l13338:	
 21903                           ;incstack = 0
 21904                           ; Regs used in _RN487X_EnterDataMode: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 21905                           
 21906                           
 21907                           ;mcc_generated_files/rn487x/rn487x.c: 210:     const uint8_t cmdPrompt[] = {'E', 'N', 'D
      +                          ', '\r', '\n'};;mcc_generated_files/rn487x/rn487x.c: 212:     cmdBuf[0] = '-';
 21908     1352  302D               	movlw	45
 21909     1353  0144               	movlb	4	; select bank4
 21910     1354  00A0               	movwf	_cmdBuf^(0+512)
 21911                           
 21912                           ;mcc_generated_files/rn487x/rn487x.c: 213:     cmdBuf[1] = '-';
 21913     1355  302D               	movlw	45
 21914     1356  00A1               	movwf	(_cmdBuf^(0+512)+1)
 21915                           
 21916                           ;mcc_generated_files/rn487x/rn487x.c: 214:     cmdBuf[2] = '-';
 21917     1357  302D               	movlw	45
 21918     1358  00A2               	movwf	(_cmdBuf^(0+512)+2)
 21919                           
 21920                           ;mcc_generated_files/rn487x/rn487x.c: 215:     cmdBuf[3] = '\r';
 21921     1359  300D               	movlw	13
 21922     135A  00A3               	movwf	(_cmdBuf^(0+512)+3)
 21923                           
 21924                           ;mcc_generated_files/rn487x/rn487x.c: 216:     cmdBuf[4] = '\n';
 21925     135B  300A               	movlw	10
 21926     135C  00A4               	movwf	(_cmdBuf^(0+512)+4)
 21927     135D                     l13340:
 21928                           
 21929                           ;mcc_generated_files/rn487x/rn487x.c: 218:     RN487X_SendCmd(cmdBuf, 5);
 21930     135D  3005               	movlw	5
 21931     135E  00F7               	movwf	RN487X_SendCmd@cmdLen
 21932     135F  3020               	movlw	(low (_cmdBuf| (0+512)))& (0+255)
 21933     1360  3196  2696  3193   	fcall	_RN487X_SendCmd
 21934     1363                     l13342:
 21935                           
 21936                           ;mcc_generated_files/rn487x/rn487x.c: 220:     return RN487X_ReadMsg(cmdPrompt, sizeof (
      +                          cmdPrompt));;	Return value of _RN487X_EnterDataMode is never used
 21937     1363  3006               	movlw	low (RN487X_EnterDataMode@cmdPrompt| (0+32768))
 21938     1364  00F3               	movwf	RN487X_ReadMsg@expectedMsg
 21939     1365  30A0               	movlw	high (RN487X_EnterDataMode@cmdPrompt| (0+32768))
 21940     1366  00F4               	movwf	RN487X_ReadMsg@expectedMsg+1
 21941     1367  3005               	movlw	5
 21942     1368  00F5               	movwf	RN487X_ReadMsg@msgLen
 21943     1369  3195  2587  3193   	fcall	_RN487X_ReadMsg
 21944     136C                     l1580:
 21945     136C  0008               	return
 21946     136D                     __end_of_RN487X_EnterDataMode:
 21947                           
 21948                           	psect	text76
 21949     122A                     __ptext76:	
 21950 ;; *************** function _RN487X_EnterCmdMode *****************
 21951 ;; Defined at:
 21952 ;;		line 195 in file "mcc_generated_files/rn487x/rn487x.c"
 21953 ;; Parameters:    Size  Location     Type
 21954 ;;		None
 21955 ;; Auto vars:     Size  Location     Type
 21956 ;;		None
 21957 ;; Return value:  Size  Location     Type
 21958 ;;                  1    wreg      _Bool 
 21959 ;; Registers used:
 21960 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21961 ;; Tracked objects:
 21962 ;;		On entry : 0/0
 21963 ;;		On exit  : 0/0
 21964 ;;		Unchanged: 0/0
 21965 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21966 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21967 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21968 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21969 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21970 ;;Total ram usage:        0 bytes
 21971 ;; Hardware stack levels used: 1
 21972 ;; Hardware stack levels required when called: 7
 21973 ;; This function calls:
 21974 ;;		_RN487X_ReadMsg
 21975 ;;		_RN487X_SendCmd
 21976 ;; This function is called by:
 21977 ;;		_LIGHTBLUE_UpdateErrorLed
 21978 ;; This function uses a non-reentrant model
 21979 ;;
 21980                           
 21981     122A                     _RN487X_EnterCmdMode:	
 21982                           ;psect for function _RN487X_EnterCmdMode
 21983                           
 21984     122A                     l13286:	
 21985                           ;incstack = 0
 21986                           ; Regs used in _RN487X_EnterCmdMode: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 21987                           
 21988                           
 21989                           ;mcc_generated_files/rn487x/rn487x.c: 197:     const uint8_t cmdPrompt[] = {'C', 'M', 'D
      +                          ', '>', ' '};;mcc_generated_files/rn487x/rn487x.c: 199:     cmdBuf[0] = '$';
 21990     122A  3024               	movlw	36
 21991     122B  0144               	movlb	4	; select bank4
 21992     122C  00A0               	movwf	_cmdBuf^(0+512)
 21993                           
 21994                           ;mcc_generated_files/rn487x/rn487x.c: 200:     cmdBuf[1] = '$';
 21995     122D  3024               	movlw	36
 21996     122E  00A1               	movwf	(_cmdBuf^(0+512)+1)
 21997                           
 21998                           ;mcc_generated_files/rn487x/rn487x.c: 201:     cmdBuf[2] = '$';
 21999     122F  3024               	movlw	36
 22000     1230  00A2               	movwf	(_cmdBuf^(0+512)+2)
 22001     1231                     l13288:
 22002                           
 22003                           ;mcc_generated_files/rn487x/rn487x.c: 203:     RN487X_SendCmd(cmdBuf, 3);
 22004     1231  3003               	movlw	3
 22005     1232  00F7               	movwf	RN487X_SendCmd@cmdLen
 22006     1233  3020               	movlw	(low (_cmdBuf| (0+512)))& (0+255)
 22007     1234  3196  2696  3192   	fcall	_RN487X_SendCmd
 22008     1237                     l13290:
 22009                           
 22010                           ;mcc_generated_files/rn487x/rn487x.c: 205:     return RN487X_ReadMsg(cmdPrompt, sizeof (
      +                          cmdPrompt));;	Return value of _RN487X_EnterCmdMode is never used
 22011     1237  300B               	movlw	low (RN487X_EnterCmdMode@cmdPrompt| (0+32768))
 22012     1238  00F3               	movwf	RN487X_ReadMsg@expectedMsg
 22013     1239  30A0               	movlw	high (RN487X_EnterCmdMode@cmdPrompt| (0+32768))
 22014     123A  00F4               	movwf	RN487X_ReadMsg@expectedMsg+1
 22015     123B  3005               	movlw	5
 22016     123C  00F5               	movwf	RN487X_ReadMsg@msgLen
 22017     123D  3195  2587  3192   	fcall	_RN487X_ReadMsg
 22018     1240                     l1575:
 22019     1240  0008               	return
 22020     1241                     __end_of_RN487X_EnterCmdMode:
 22021                           
 22022                           	psect	text77
 22023     1696                     __ptext77:	
 22024 ;; *************** function _RN487X_SendCmd *****************
 22025 ;; Defined at:
 22026 ;;		line 79 in file "mcc_generated_files/rn487x/rn487x.c"
 22027 ;; Parameters:    Size  Location     Type
 22028 ;;  cmd             1    wreg     PTR const unsigned char 
 22029 ;;		 -> cmdBuf(64), 
 22030 ;;  cmdLen          1    7[COMMON] unsigned char 
 22031 ;; Auto vars:     Size  Location     Type
 22032 ;;  cmd             1   10[COMMON] PTR const unsigned char 
 22033 ;;		 -> cmdBuf(64), 
 22034 ;;  index           1    9[COMMON] unsigned char 
 22035 ;; Return value:  Size  Location     Type
 22036 ;;                  1    wreg      void 
 22037 ;; Registers used:
 22038 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22039 ;; Tracked objects:
 22040 ;;		On entry : 0/0
 22041 ;;		On exit  : 0/0
 22042 ;;		Unchanged: 0/0
 22043 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22044 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22045 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22046 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22047 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22048 ;;Total ram usage:        4 bytes
 22049 ;; Hardware stack levels used: 1
 22050 ;; Hardware stack levels required when called: 6
 22051 ;; This function calls:
 22052 ;;		_RN487X_Write
 22053 ;;		_RN487X_is_tx_done
 22054 ;; This function is called by:
 22055 ;;		_RN487X_EnterCmdMode
 22056 ;;		_RN487X_EnterDataMode
 22057 ;;		_RN487X_SetOutputs
 22058 ;;		_RN487X_GetCmd
 22059 ;;		_RN487X_GetInputsValues
 22060 ;;		_RN487X_RebootCmd
 22061 ;;		_RN487X_Disconnect
 22062 ;; This function uses a non-reentrant model
 22063 ;;
 22064                           
 22065     1696                     _RN487X_SendCmd:	
 22066                           ;psect for function _RN487X_SendCmd
 22067                           
 22068                           
 22069                           ;incstack = 0
 22070                           ; Regs used in _RN487X_SendCmd: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 22071                           ;RN487X_SendCmd@cmd stored from wreg
 22072     1696  00FA               	movwf	RN487X_SendCmd@cmd
 22073     1697                     l13170:
 22074                           
 22075                           ;mcc_generated_files/rn487x/rn487x.c: 79: void RN487X_SendCmd(const uint8_t *cmd, uint8_
      +                          t cmdLen);mcc_generated_files/rn487x/rn487x.c: 80: {;mcc_generated_files/rn487x/rn487x.c
      +                          : 81:     uint8_t index = 0;
 22076     1697  01F9               	clrf	RN487X_SendCmd@index
 22077                           
 22078                           ;mcc_generated_files/rn487x/rn487x.c: 83:     while (index < cmdLen)
 22079     1698  2EBD               	goto	l13178
 22080     1699                     l13172:
 22081                           
 22082                           ;mcc_generated_files/rn487x/rn487x.c: 84:     {;mcc_generated_files/rn487x/rn487x.c: 85:
      +                                   if (RN487X.TransmitDone())
 22083     1699  306C               	movlw	low ((_RN487X+4)| (0+32768))
 22084     169A  0084               	movwf	4
 22085     169B  3098               	movlw	high ((_RN487X+4)| (0+32768))
 22086     169C  0085               	movwf	5
 22087     169D  3F01               	moviw [1]fsr0
 22088     169E  008A               	movwf	10
 22089     169F  3F00               	moviw [0]fsr0
 22090     16A0  000A               	callw
 22091     16A1  3196               	pagesel	$
 22092     16A2  3A00               	xorlw	0
 22093     16A3  1903               	skipnz
 22094     16A4  2EA6               	goto	u9841
 22095     16A5  2EA7               	goto	u9840
 22096     16A6                     u9841:
 22097     16A6  2EBD               	goto	l13178
 22098     16A7                     u9840:
 22099     16A7                     l13174:
 22100                           
 22101                           ;mcc_generated_files/rn487x/rn487x.c: 86:         {;mcc_generated_files/rn487x/rn487x.c:
      +                           87:             RN487X.Write(cmd[index]);
 22102     16A7  0879               	movf	RN487X_SendCmd@index,w
 22103     16A8  077A               	addwf	RN487X_SendCmd@cmd,w
 22104     16A9  00F8               	movwf	??_RN487X_SendCmd
 22105     16AA  0878               	movf	??_RN487X_SendCmd,w
 22106     16AB  0086               	movwf	6
 22107     16AC  3002               	movlw	2	; select bank4/5
 22108     16AD  0087               	movwf	7
 22109     16AE  0801               	movf	1,w
 22110     16AF  00F6               	movwf	RN487X_Write@txData
 22111     16B0  3068               	movlw	low (_RN487X| (0+32768))
 22112     16B1  0084               	movwf	4
 22113     16B2  3098               	movlw	high (_RN487X| (0+32768))
 22114     16B3  0085               	movwf	5
 22115     16B4  3F01               	moviw [1]fsr0
 22116     16B5  008A               	movwf	10
 22117     16B6  3F00               	moviw [0]fsr0
 22118     16B7  000A               	callw
 22119     16B8  3196               	pagesel	$
 22120     16B9                     l13176:
 22121                           
 22122                           ;mcc_generated_files/rn487x/rn487x.c: 88:             index++;
 22123     16B9  3001               	movlw	1
 22124     16BA  00F8               	movwf	??_RN487X_SendCmd
 22125     16BB  0878               	movf	??_RN487X_SendCmd,w
 22126     16BC  07F9               	addwf	RN487X_SendCmd@index,f
 22127     16BD                     l13178:
 22128                           
 22129                           ;mcc_generated_files/rn487x/rn487x.c: 83:     while (index < cmdLen)
 22130     16BD  0877               	movf	RN487X_SendCmd@cmdLen,w
 22131     16BE  0279               	subwf	RN487X_SendCmd@index,w
 22132     16BF  1C03               	skipc
 22133     16C0  2EC2               	goto	u9851
 22134     16C1  2EC3               	goto	u9850
 22135     16C2                     u9851:
 22136     16C2  2E99               	goto	l13172
 22137     16C3                     u9850:
 22138     16C3                     l1540:
 22139     16C3  0008               	return
 22140     16C4                     __end_of_RN487X_SendCmd:
 22141                           
 22142                           	psect	text78
 22143     1FA1                     __ptext78:	
 22144 ;; *************** function _RN487X_is_tx_done *****************
 22145 ;; Defined at:
 22146 ;;		line 262 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 22147 ;; Parameters:    Size  Location     Type
 22148 ;;		None
 22149 ;; Auto vars:     Size  Location     Type
 22150 ;;		None
 22151 ;; Return value:  Size  Location     Type
 22152 ;;                  1    wreg      _Bool 
 22153 ;; Registers used:
 22154 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 22155 ;; Tracked objects:
 22156 ;;		On entry : 0/0
 22157 ;;		On exit  : 0/0
 22158 ;;		Unchanged: 0/0
 22159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22160 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22161 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22162 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22163 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22164 ;;Total ram usage:        0 bytes
 22165 ;; Hardware stack levels used: 1
 22166 ;; Hardware stack levels required when called: 5
 22167 ;; This function calls:
 22168 ;;		_EUSART1_is_tx_done
 22169 ;;		_EUSART2_is_tx_done
 22170 ;; This function is called by:
 22171 ;;		_RN487X_SendCmd
 22172 ;; This function uses a non-reentrant model
 22173 ;;
 22174                           
 22175     1FA1                     _RN487X_is_tx_done:	
 22176                           ;psect for function _RN487X_is_tx_done
 22177                           
 22178     1FA1                     l13116:	
 22179                           ;incstack = 0
 22180                           ; Regs used in _RN487X_is_tx_done: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 22181                           
 22182                           
 22183                           ;mcc_generated_files/rn487x/rn487x_interface.c: 264:     return uart[UART_BLE].TransmitD
      +                          one();
 22184     1FA1  3022               	movlw	low ((_uart+34)| (0+32768))
 22185     1FA2  0084               	movwf	4
 22186     1FA3  3098               	movlw	high ((_uart+34)| (0+32768))
 22187     1FA4  0085               	movwf	5
 22188     1FA5  3F01               	moviw [1]fsr0
 22189     1FA6  008A               	movwf	10
 22190     1FA7  3F00               	moviw [0]fsr0
 22191     1FA8  000A               	callw
 22192     1FA9  319F               	pagesel	$
 22193     1FAA                     l1446:
 22194     1FAA  0008               	return
 22195     1FAB                     __end_of_RN487X_is_tx_done:
 22196                           
 22197                           	psect	text79
 22198     1E9B                     __ptext79:	
 22199 ;; *************** function _EUSART1_is_tx_done *****************
 22200 ;; Defined at:
 22201 ;;		line 142 in file "mcc_generated_files/eusart1.c"
 22202 ;; Parameters:    Size  Location     Type
 22203 ;;		None
 22204 ;; Auto vars:     Size  Location     Type
 22205 ;;		None
 22206 ;; Return value:  Size  Location     Type
 22207 ;;                  1    wreg      _Bool 
 22208 ;; Registers used:
 22209 ;;		wreg, status,2, status,0
 22210 ;; Tracked objects:
 22211 ;;		On entry : 0/0
 22212 ;;		On exit  : 0/0
 22213 ;;		Unchanged: 0/0
 22214 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22216 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22218 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22219 ;;Total ram usage:        0 bytes
 22220 ;; Hardware stack levels used: 1
 22221 ;; Hardware stack levels required when called: 4
 22222 ;; This function calls:
 22223 ;;		Nothing
 22224 ;; This function is called by:
 22225 ;;		_RN487X_is_tx_done
 22226 ;; This function uses a non-reentrant model
 22227 ;;
 22228                           
 22229     1E9B                     _EUSART1_is_tx_done:	
 22230                           ;psect for function _EUSART1_is_tx_done
 22231                           
 22232     1E9B                     l12974:	
 22233                           ;incstack = 0
 22234                           ; Regs used in _EUSART1_is_tx_done: [wreg+status,2+status,0]
 22235                           
 22236                           
 22237                           ;mcc_generated_files/eusart1.c: 144:     return TX1STAbits.TRMT;
 22238     1E9B  0142               	movlb	2	; select bank2
 22239     1E9C  0C1E               	rrf	30,w	;volatile
 22240     1E9D  3901               	andlw	1
 22241     1E9E                     l1858:
 22242     1E9E  0008               	return
 22243     1E9F                     __end_of_EUSART1_is_tx_done:
 22244                           
 22245                           	psect	text80
 22246     1E97                     __ptext80:	
 22247 ;; *************** function _EUSART2_is_tx_done *****************
 22248 ;; Defined at:
 22249 ;;		line 142 in file "mcc_generated_files/eusart2.c"
 22250 ;; Parameters:    Size  Location     Type
 22251 ;;		None
 22252 ;; Auto vars:     Size  Location     Type
 22253 ;;		None
 22254 ;; Return value:  Size  Location     Type
 22255 ;;                  1    wreg      _Bool 
 22256 ;; Registers used:
 22257 ;;		wreg, status,2, status,0
 22258 ;; Tracked objects:
 22259 ;;		On entry : 0/0
 22260 ;;		On exit  : 0/0
 22261 ;;		Unchanged: 0/0
 22262 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22263 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22264 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22265 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22266 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22267 ;;Total ram usage:        0 bytes
 22268 ;; Hardware stack levels used: 1
 22269 ;; Hardware stack levels required when called: 4
 22270 ;; This function calls:
 22271 ;;		Nothing
 22272 ;; This function is called by:
 22273 ;;		_RN487X_is_tx_done
 22274 ;; This function uses a non-reentrant model
 22275 ;;
 22276                           
 22277     1E97                     _EUSART2_is_tx_done:	
 22278                           ;psect for function _EUSART2_is_tx_done
 22279                           
 22280     1E97                     l12930:	
 22281                           ;incstack = 0
 22282                           ; Regs used in _EUSART2_is_tx_done: [wreg+status,2+status,0]
 22283                           
 22284                           
 22285                           ;mcc_generated_files/eusart2.c: 144:     return TX2STAbits.TRMT;
 22286     1E97  0154               	movlb	20	; select bank20
 22287     1E98  0C1E               	rrf	30,w	;volatile
 22288     1E99  3901               	andlw	1
 22289     1E9A                     l1714:
 22290     1E9A  0008               	return
 22291     1E9B                     __end_of_EUSART2_is_tx_done:
 22292                           
 22293                           	psect	text81
 22294     1587                     __ptext81:	
 22295 ;; *************** function _RN487X_ReadMsg *****************
 22296 ;; Defined at:
 22297 ;;		line 108 in file "mcc_generated_files/rn487x/rn487x.c"
 22298 ;; Parameters:    Size  Location     Type
 22299 ;;  expectedMsg     2    3[COMMON] PTR const unsigned char 
 22300 ;;		 -> RN487X_RebootCmd@reboot(11), RN487X_GetInputsValues@ioValue(2), RN487X_EnterDataMode@cmdPrompt(5), RN487X_EnterC
      +mdMode@cmdPrompt(5), 
 22301 ;;  msgLen          1    5[COMMON] unsigned char 
 22302 ;; Auto vars:     Size  Location     Type
 22303 ;;  index           1    9[COMMON] unsigned char 
 22304 ;;  resp            1    8[COMMON] unsigned char 
 22305 ;; Return value:  Size  Location     Type
 22306 ;;                  1    wreg      _Bool 
 22307 ;; Registers used:
 22308 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22309 ;; Tracked objects:
 22310 ;;		On entry : 0/0
 22311 ;;		On exit  : 0/0
 22312 ;;		Unchanged: 0/0
 22313 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22314 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22315 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22316 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22317 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22318 ;;Total ram usage:        7 bytes
 22319 ;; Hardware stack levels used: 1
 22320 ;; Hardware stack levels required when called: 6
 22321 ;; This function calls:
 22322 ;;		_RN487X_Read@rn487x_interface$F1835
 22323 ;; This function is called by:
 22324 ;;		_RN487X_EnterCmdMode
 22325 ;;		_RN487X_EnterDataMode
 22326 ;;		_RN487X_GetInputsValues
 22327 ;;		_RN487X_RebootCmd
 22328 ;; This function uses a non-reentrant model
 22329 ;;
 22330                           
 22331     1587                     _RN487X_ReadMsg:	
 22332                           ;psect for function _RN487X_ReadMsg
 22333                           
 22334     1587                     l13180:	
 22335                           ;incstack = 0
 22336                           ; Regs used in _RN487X_ReadMsg: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 22337                           
 22338                           
 22339                           ;mcc_generated_files/rn487x/rn487x.c: 108: _Bool RN487X_ReadMsg(const uint8_t *expectedM
      +                          sg, uint8_t msgLen);mcc_generated_files/rn487x/rn487x.c: 109: {;mcc_generated_files/rn48
      +                          7x/rn487x.c: 110:     uint8_t index;;mcc_generated_files/rn487x/rn487x.c: 111:     uint8
      +                          _t resp;;mcc_generated_files/rn487x/rn487x.c: 113:     for (index = 0; index < msgLen; i
      +                          ndex++)
 22340     1587  01F9               	clrf	RN487X_ReadMsg@index
 22341     1588  2DAA               	goto	l13192
 22342     1589                     l13182:
 22343                           
 22344                           ;mcc_generated_files/rn487x/rn487x.c: 114:     {;mcc_generated_files/rn487x/rn487x.c: 11
      +                          5:         resp = RN487X.Read();
 22345     1589  306A               	movlw	low ((_RN487X+2)| (0+32768))
 22346     158A  0084               	movwf	4
 22347     158B  3098               	movlw	high ((_RN487X+2)| (0+32768))
 22348     158C  0085               	movwf	5
 22349     158D  3F01               	moviw [1]fsr0
 22350     158E  008A               	movwf	10
 22351     158F  3F00               	moviw [0]fsr0
 22352     1590  000A               	callw
 22353     1591  3195               	pagesel	$
 22354     1592  00F8               	movwf	RN487X_ReadMsg@resp
 22355     1593                     l13184:
 22356                           
 22357                           ;mcc_generated_files/rn487x/rn487x.c: 116:         if (resp != expectedMsg[index])
 22358     1593  0874               	movf	RN487X_ReadMsg@expectedMsg+1,w
 22359     1594  00F7               	movwf	??_RN487X_ReadMsg+1
 22360     1595  0873               	movf	RN487X_ReadMsg@expectedMsg,w
 22361     1596  00F6               	movwf	??_RN487X_ReadMsg
 22362     1597  0879               	movf	RN487X_ReadMsg@index,w
 22363     1598  0776               	addwf	??_RN487X_ReadMsg,w
 22364     1599  0084               	movwf	4
 22365     159A  0877               	movf	??_RN487X_ReadMsg+1,w
 22366     159B  1803               	skipnc
 22367     159C  0A77               	incf	??_RN487X_ReadMsg+1,w
 22368     159D  0085               	movwf	5
 22369     159E  0800               	movf	0,w	;code access
 22370     159F  0678               	xorwf	RN487X_ReadMsg@resp,w
 22371     15A0  1903               	skipnz
 22372     15A1  2DA3               	goto	u9861
 22373     15A2  2DA4               	goto	u9860
 22374     15A3                     u9861:
 22375     15A3  2DA6               	goto	l13190
 22376     15A4                     u9860:
 22377     15A4                     l13186:
 22378                           
 22379                           ;mcc_generated_files/rn487x/rn487x.c: 117:         {;mcc_generated_files/rn487x/rn487x.c
      +                          : 118:             return 0;
 22380     15A4  3000               	movlw	0
 22381     15A5  2DB1               	goto	l1551
 22382     15A6                     l13190:
 22383                           
 22384                           ;mcc_generated_files/rn487x/rn487x.c: 120:     }
 22385     15A6  3001               	movlw	1
 22386     15A7  00F6               	movwf	??_RN487X_ReadMsg
 22387     15A8  0876               	movf	??_RN487X_ReadMsg,w
 22388     15A9  07F9               	addwf	RN487X_ReadMsg@index,f
 22389     15AA                     l13192:
 22390     15AA  0875               	movf	RN487X_ReadMsg@msgLen,w
 22391     15AB  0279               	subwf	RN487X_ReadMsg@index,w
 22392     15AC  1C03               	skipc
 22393     15AD  2DAF               	goto	u9871
 22394     15AE  2DB0               	goto	u9870
 22395     15AF                     u9871:
 22396     15AF  2D89               	goto	l13182
 22397     15B0                     u9870:
 22398     15B0                     l13194:
 22399                           
 22400                           ;mcc_generated_files/rn487x/rn487x.c: 122:     return 1;
 22401     15B0  3001               	movlw	1
 22402     15B1                     l1551:
 22403     15B1  0008               	return
 22404     15B2                     __end_of_RN487X_ReadMsg:
 22405                           
 22406                           	psect	text82
 22407     1F97                     __ptext82:	
 22408 ;; *************** function _RN487X_Read@rn487x_interface$F1835 *****************
 22409 ;; Defined at:
 22410 ;;		line 257 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 22411 ;; Parameters:    Size  Location     Type
 22412 ;;		None
 22413 ;; Auto vars:     Size  Location     Type
 22414 ;;		None
 22415 ;; Return value:  Size  Location     Type
 22416 ;;                  1    wreg      unsigned char 
 22417 ;; Registers used:
 22418 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22419 ;; Tracked objects:
 22420 ;;		On entry : 0/0
 22421 ;;		On exit  : 0/0
 22422 ;;		Unchanged: 0/0
 22423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22424 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22425 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22427 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22428 ;;Total ram usage:        0 bytes
 22429 ;; Hardware stack levels used: 1
 22430 ;; Hardware stack levels required when called: 5
 22431 ;; This function calls:
 22432 ;;		_EUSART1_Read
 22433 ;;		_EUSART2_Read
 22434 ;; This function is called by:
 22435 ;;		_RN487X_ReadMsg
 22436 ;;		_RN487X_ReadDefaultResponse
 22437 ;;		_RN487X_FilterData
 22438 ;;		_RN487X_Init
 22439 ;;		_RN487X_GetCmd
 22440 ;;		_RN487X_WaitForMsg
 22441 ;; This function uses a non-reentrant model
 22442 ;;
 22443                           
 22444     1F97                     _RN487X_Read@rn487x_interface$F1835:	
 22445                           ;psect for function _RN487X_Read@rn487x_interface$F1835
 22446                           
 22447     1F97                     l13112:	
 22448                           ;incstack = 0
 22449                           ; Regs used in _RN487X_Read@rn487x_interface$F1835: [wreg-fsr1h+status,2+status,0+pclath
      +                          +cstack]
 22450                           
 22451                           
 22452                           ;mcc_generated_files/rn487x/rn487x_interface.c: 259:     return uart[UART_BLE].Read();
 22453     1F97  3014               	movlw	low ((_uart+20)| (0+32768))
 22454     1F98  0084               	movwf	4
 22455     1F99  3098               	movlw	high ((_uart+20)| (0+32768))
 22456     1F9A  0085               	movwf	5
 22457     1F9B  3F01               	moviw [1]fsr0
 22458     1F9C  008A               	movwf	10
 22459     1F9D  3F00               	moviw [0]fsr0
 22460     1F9E  000A               	callw
 22461     1F9F  319F               	pagesel	$
 22462     1FA0                     l1443:
 22463     1FA0  0008               	return
 22464     1FA1                     __end_of_RN487X_Read@rn487x_interface$F1835:
 22465                           
 22466                           	psect	text83
 22467     155E                     __ptext83:	
 22468 ;; *************** function _EUSART1_Read *****************
 22469 ;; Defined at:
 22470 ;;		line 151 in file "mcc_generated_files/eusart1.c"
 22471 ;; Parameters:    Size  Location     Type
 22472 ;;		None
 22473 ;; Auto vars:     Size  Location     Type
 22474 ;;  readValue       1    2[COMMON] unsigned char 
 22475 ;; Return value:  Size  Location     Type
 22476 ;;                  1    wreg      unsigned char 
 22477 ;; Registers used:
 22478 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 22479 ;; Tracked objects:
 22480 ;;		On entry : 0/0
 22481 ;;		On exit  : 0/0
 22482 ;;		Unchanged: 0/0
 22483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22484 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22485 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22486 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22487 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22488 ;;Total ram usage:        2 bytes
 22489 ;; Hardware stack levels used: 1
 22490 ;; Hardware stack levels required when called: 4
 22491 ;; This function calls:
 22492 ;;		Nothing
 22493 ;; This function is called by:
 22494 ;;		_getch
 22495 ;;		_RN487X_Read@rn487x_interface$F1835
 22496 ;;		_RN487X_Example_TransparentUart
 22497 ;;		_main
 22498 ;; This function uses a non-reentrant model
 22499 ;;
 22500                           
 22501     155E                     _EUSART1_Read:	
 22502                           ;psect for function _EUSART1_Read
 22503                           
 22504     155E                     l12978:	
 22505                           ;incstack = 0
 22506                           ; Regs used in _EUSART1_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
 22507                           
 22508     155E                     l12980:	
 22509                           ;mcc_generated_files/eusart1.c: 155:     while(0 == eusart1RxCount)
 22510                           
 22511                           
 22512                           ;mcc_generated_files/eusart1.c: 155:     while(0 == eusart1RxCount)
 22513     155E  0140               	movlb	0	; select bank0
 22514     155F  0852               	movf	_eusart1RxCount,w	;volatile
 22515     1560  1903               	btfsc	3,2
 22516     1561  2D63               	goto	u9671
 22517     1562  2D64               	goto	u9670
 22518     1563                     u9671:
 22519     1563  2D5E               	goto	l12980
 22520     1564                     u9670:
 22521     1564                     l12982:
 22522                           
 22523                           ;mcc_generated_files/eusart1.c: 159:     eusart1RxLastError = eusart1RxStatusBuffer[eusa
      +                          rt1RxTail];
 22524     1564  0853               	movf	_eusart1RxTail,w	;volatile
 22525     1565  3EBE               	addlw	(low (_eusart1RxStatusBuffer| 0))& (0+255)
 22526     1566  0086               	movwf	6
 22527     1567  0187               	clrf	7
 22528     1568  0801               	movf	1,w
 22529     1569  0141               	movlb	1	; select bank1
 22530     156A  00E6               	movwf	_eusart1RxLastError^(0+128)	;volatile
 22531                           
 22532                           ;mcc_generated_files/eusart1.c: 161:     readValue = eusart1RxBuffer[eusart1RxTail++];
 22533     156B  0140               	movlb	0	; select bank0
 22534     156C  0853               	movf	_eusart1RxTail,w
 22535     156D  3E44               	addlw	(low (_eusart1RxBuffer| (0+256)))& (0+255)
 22536     156E  0086               	movwf	6
 22537     156F  3001               	movlw	1	; select bank2/3
 22538     1570  0087               	movwf	7
 22539     1571  0801               	movf	1,w
 22540     1572  00F2               	movwf	EUSART1_Read@readValue
 22541     1573                     l12984:
 22542     1573  3001               	movlw	1
 22543     1574  00F1               	movwf	??_EUSART1_Read
 22544     1575  0871               	movf	??_EUSART1_Read,w
 22545     1576  07D3               	addwf	_eusart1RxTail,f	;volatile
 22546     1577                     l12986:
 22547                           
 22548                           ;mcc_generated_files/eusart1.c: 162:     if(sizeof(eusart1RxBuffer) <= eusart1RxTail)
 22549     1577  3008               	movlw	8
 22550     1578  0253               	subwf	_eusart1RxTail,w	;volatile
 22551     1579  1C03               	skipc
 22552     157A  2D7C               	goto	u9681
 22553     157B  2D7D               	goto	u9680
 22554     157C                     u9681:
 22555     157C  2D7E               	goto	l12990
 22556     157D                     u9680:
 22557     157D                     l12988:
 22558                           
 22559                           ;mcc_generated_files/eusart1.c: 163:     {;mcc_generated_files/eusart1.c: 164:         e
      +                          usart1RxTail = 0;
 22560     157D  01D3               	clrf	_eusart1RxTail	;volatile
 22561     157E                     l12990:
 22562                           
 22563                           ;mcc_generated_files/eusart1.c: 166:     PIE3bits.RC1IE = 0;
 22564     157E  014E               	movlb	14	; select bank14
 22565     157F  1299               	bcf	25,5	;volatile
 22566     1580                     l12992:
 22567                           
 22568                           ;mcc_generated_files/eusart1.c: 167:     eusart1RxCount--;
 22569     1580  3001               	movlw	1
 22570     1581  0140               	movlb	0	; select bank0
 22571     1582  02D2               	subwf	_eusart1RxCount,f	;volatile
 22572     1583                     l12994:
 22573                           
 22574                           ;mcc_generated_files/eusart1.c: 168:     PIE3bits.RC1IE = 1;
 22575     1583  014E               	movlb	14	; select bank14
 22576     1584  1699               	bsf	25,5	;volatile
 22577     1585                     l12996:
 22578                           
 22579                           ;mcc_generated_files/eusart1.c: 170:     return readValue;
 22580     1585  0872               	movf	EUSART1_Read@readValue,w
 22581     1586                     l1868:
 22582     1586  0008               	return
 22583     1587                     __end_of_EUSART1_Read:
 22584                           
 22585                           	psect	text84
 22586     150D                     __ptext84:	
 22587 ;; *************** function _EUSART2_Read *****************
 22588 ;; Defined at:
 22589 ;;		line 151 in file "mcc_generated_files/eusart2.c"
 22590 ;; Parameters:    Size  Location     Type
 22591 ;;		None
 22592 ;; Auto vars:     Size  Location     Type
 22593 ;;  readValue       1    2[COMMON] unsigned char 
 22594 ;; Return value:  Size  Location     Type
 22595 ;;                  1    wreg      unsigned char 
 22596 ;; Registers used:
 22597 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 22598 ;; Tracked objects:
 22599 ;;		On entry : 0/0
 22600 ;;		On exit  : 0/0
 22601 ;;		Unchanged: 0/0
 22602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22603 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22604 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22605 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22606 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22607 ;;Total ram usage:        2 bytes
 22608 ;; Hardware stack levels used: 1
 22609 ;; Hardware stack levels required when called: 4
 22610 ;; This function calls:
 22611 ;;		Nothing
 22612 ;; This function is called by:
 22613 ;;		_RN487X_Read@rn487x_interface$F1835
 22614 ;;		_RN487X_Example_TransparentUart
 22615 ;;		_main
 22616 ;; This function uses a non-reentrant model
 22617 ;;
 22618                           
 22619     150D                     _EUSART2_Read:	
 22620                           ;psect for function _EUSART2_Read
 22621                           
 22622     150D                     l12934:	
 22623                           ;incstack = 0
 22624                           ; Regs used in _EUSART2_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
 22625                           
 22626     150D                     l12936:	
 22627                           ;mcc_generated_files/eusart2.c: 155:     while(0 == eusart2RxCount)
 22628                           
 22629                           
 22630                           ;mcc_generated_files/eusart2.c: 155:     while(0 == eusart2RxCount)
 22631     150D  0140               	movlb	0	; select bank0
 22632     150E  0858               	movf	_eusart2RxCount,w	;volatile
 22633     150F  1903               	btfsc	3,2
 22634     1510  2D12               	goto	u9621
 22635     1511  2D13               	goto	u9620
 22636     1512                     u9621:
 22637     1512  2D0D               	goto	l12936
 22638     1513                     u9620:
 22639     1513                     l12938:
 22640                           
 22641                           ;mcc_generated_files/eusart2.c: 159:     eusart2RxLastError = eusart2RxStatusBuffer[eusa
      +                          rt2RxTail];
 22642     1513  0859               	movf	_eusart2RxTail,w	;volatile
 22643     1514  3EC6               	addlw	(low (_eusart2RxStatusBuffer| 0))& (0+255)
 22644     1515  0086               	movwf	6
 22645     1516  0187               	clrf	7
 22646     1517  0801               	movf	1,w
 22647     1518  0141               	movlb	1	; select bank1
 22648     1519  00E7               	movwf	_eusart2RxLastError^(0+128)	;volatile
 22649                           
 22650                           ;mcc_generated_files/eusart2.c: 161:     readValue = eusart2RxBuffer[eusart2RxTail++];
 22651     151A  0140               	movlb	0	; select bank0
 22652     151B  0859               	movf	_eusart2RxTail,w
 22653     151C  3ECE               	addlw	(low (_eusart2RxBuffer| 0))& (0+255)
 22654     151D  0086               	movwf	6
 22655     151E  0187               	clrf	7
 22656     151F  0801               	movf	1,w
 22657     1520  00F2               	movwf	EUSART2_Read@readValue
 22658     1521                     l12940:
 22659     1521  3001               	movlw	1
 22660     1522  00F1               	movwf	??_EUSART2_Read
 22661     1523  0871               	movf	??_EUSART2_Read,w
 22662     1524  07D9               	addwf	_eusart2RxTail,f	;volatile
 22663     1525                     l12942:
 22664                           
 22665                           ;mcc_generated_files/eusart2.c: 162:     if(sizeof(eusart2RxBuffer) <= eusart2RxTail)
 22666     1525  3008               	movlw	8
 22667     1526  0259               	subwf	_eusart2RxTail,w	;volatile
 22668     1527  1C03               	skipc
 22669     1528  2D2A               	goto	u9631
 22670     1529  2D2B               	goto	u9630
 22671     152A                     u9631:
 22672     152A  2D2C               	goto	l12946
 22673     152B                     u9630:
 22674     152B                     l12944:
 22675                           
 22676                           ;mcc_generated_files/eusart2.c: 163:     {;mcc_generated_files/eusart2.c: 164:         e
      +                          usart2RxTail = 0;
 22677     152B  01D9               	clrf	_eusart2RxTail	;volatile
 22678     152C                     l12946:
 22679                           
 22680                           ;mcc_generated_files/eusart2.c: 166:     PIE3bits.RC2IE = 0;
 22681     152C  014E               	movlb	14	; select bank14
 22682     152D  1399               	bcf	25,7	;volatile
 22683     152E                     l12948:
 22684                           
 22685                           ;mcc_generated_files/eusart2.c: 167:     eusart2RxCount--;
 22686     152E  3001               	movlw	1
 22687     152F  0140               	movlb	0	; select bank0
 22688     1530  02D8               	subwf	_eusart2RxCount,f	;volatile
 22689     1531                     l12950:
 22690                           
 22691                           ;mcc_generated_files/eusart2.c: 168:     PIE3bits.RC2IE = 1;
 22692     1531  014E               	movlb	14	; select bank14
 22693     1532  1799               	bsf	25,7	;volatile
 22694     1533                     l12952:
 22695                           
 22696                           ;mcc_generated_files/eusart2.c: 170:     return readValue;
 22697     1533  0872               	movf	EUSART2_Read@readValue,w
 22698     1534                     l1724:
 22699     1534  0008               	return
 22700     1535                     __end_of_EUSART2_Read:
 22701                           
 22702                           	psect	text85
 22703     1F62                     __ptext85:	
 22704 ;; *************** function _RN487X_Delay *****************
 22705 ;; Defined at:
 22706 ;;		line 272 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 22707 ;; Parameters:    Size  Location     Type
 22708 ;;  delayCount      2    4[COMMON] unsigned short 
 22709 ;; Auto vars:     Size  Location     Type
 22710 ;;		None
 22711 ;; Return value:  Size  Location     Type
 22712 ;;                  1    wreg      void 
 22713 ;; Registers used:
 22714 ;;		wreg, status,2, status,0, pclath, cstack
 22715 ;; Tracked objects:
 22716 ;;		On entry : 0/0
 22717 ;;		On exit  : 0/0
 22718 ;;		Unchanged: 0/0
 22719 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22720 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22721 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22723 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22724 ;;Total ram usage:        2 bytes
 22725 ;; Hardware stack levels used: 1
 22726 ;; Hardware stack levels required when called: 5
 22727 ;; This function calls:
 22728 ;;		_DELAY_milliseconds
 22729 ;; This function is called by:
 22730 ;;		_LIGHTBLUE_UpdateErrorLed
 22731 ;;		_RN487X_Init
 22732 ;; This function uses a non-reentrant model
 22733 ;;
 22734                           
 22735     1F62                     _RN487X_Delay:	
 22736                           ;psect for function _RN487X_Delay
 22737                           
 22738     1F62                     l13352:	
 22739                           ;incstack = 0
 22740                           ; Regs used in _RN487X_Delay: [wreg+status,2+status,0+pclath+cstack]
 22741                           
 22742                           
 22743                           ;mcc_generated_files/rn487x/rn487x_interface.c: 272: static __attribute__((inline)) void
      +                           RN487X_Delay(uint16_t delayCount);mcc_generated_files/rn487x/rn487x_interface.c: 273: {
      +                          ;mcc_generated_files/rn487x/rn487x_interface.c: 274:     return DELAY_milliseconds(delay
      +                          Count);;	Return value of _RN487X_Delay is never used
 22744     1F62  0875               	movf	RN487X_Delay@delayCount+1,w
 22745     1F63  00F2               	movwf	DELAY_milliseconds@milliseconds+1
 22746     1F64  0874               	movf	RN487X_Delay@delayCount,w
 22747     1F65  00F1               	movwf	DELAY_milliseconds@milliseconds
 22748     1F66  3191  21BC  319F   	fcall	_DELAY_milliseconds
 22749     1F69                     l1452:
 22750     1F69  0008               	return
 22751     1F6A                     __end_of_RN487X_Delay:
 22752                           
 22753                           	psect	text86
 22754     11BC                     __ptext86:	
 22755 ;; *************** function _DELAY_milliseconds *****************
 22756 ;; Defined at:
 22757 ;;		line 38 in file "mcc_generated_files/delay.c"
 22758 ;; Parameters:    Size  Location     Type
 22759 ;;  milliseconds    2    1[COMMON] unsigned short 
 22760 ;; Auto vars:     Size  Location     Type
 22761 ;;		None
 22762 ;; Return value:  Size  Location     Type
 22763 ;;                  1    wreg      void 
 22764 ;; Registers used:
 22765 ;;		wreg, status,2, status,0
 22766 ;; Tracked objects:
 22767 ;;		On entry : 0/0
 22768 ;;		On exit  : 0/0
 22769 ;;		Unchanged: 0/0
 22770 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22771 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22772 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22773 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22774 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22775 ;;Total ram usage:        3 bytes
 22776 ;; Hardware stack levels used: 1
 22777 ;; Hardware stack levels required when called: 4
 22778 ;; This function calls:
 22779 ;;		Nothing
 22780 ;; This function is called by:
 22781 ;;		_RN487X_Delay
 22782 ;; This function uses a non-reentrant model
 22783 ;;
 22784                           
 22785     11BC                     _DELAY_milliseconds:	
 22786                           ;psect for function _DELAY_milliseconds
 22787                           
 22788     11BC                     l13160:	
 22789                           ;incstack = 0
 22790                           ; Regs used in _DELAY_milliseconds: [wreg+status,2+status,0]
 22791                           
 22792                           
 22793                           ;mcc_generated_files/delay.c: 39:     while(milliseconds--){
 22794     11BC  29C5               	goto	l13164
 22795     11BD                     l13162:
 22796                           
 22797                           ;mcc_generated_files/delay.c: 40:         _delay((unsigned long)((1)*(32000000/4000.0)))
      +                          ;
 22798     11BD  300B               	movlw	11
 22799     11BE  00F3               	movwf	??_DELAY_milliseconds
 22800     11BF  3062               	movlw	98
 22801     11C0                     u13867:
 22802     11C0  0B89               	decfsz	9,f
 22803     11C1  29C0               	goto	u13867
 22804     11C2  0BF3               	decfsz	??_DELAY_milliseconds,f
 22805     11C3  29C0               	goto	u13867
 22806     11C4  3200               	nop2
 22807     11C5                     l13164:
 22808                           
 22809                           ;mcc_generated_files/delay.c: 39:     while(milliseconds--){
 22810     11C5  3001               	movlw	1
 22811     11C6  02F1               	subwf	DELAY_milliseconds@milliseconds,f
 22812     11C7  3000               	movlw	0
 22813     11C8  3BF2               	subwfb	DELAY_milliseconds@milliseconds+1,f
 22814     11C9  0A71               	incf	DELAY_milliseconds@milliseconds,w
 22815     11CA  1D03               	skipz
 22816     11CB  29D0               	goto	u9821
 22817     11CC  0A72               	incf	DELAY_milliseconds@milliseconds+1,w
 22818     11CD  1D03               	btfss	3,2
 22819     11CE  29D0               	goto	u9821
 22820     11CF  29D1               	goto	u9820
 22821     11D0                     u9821:
 22822     11D0  29BD               	goto	l13162
 22823     11D1                     u9820:
 22824     11D1                     l2634:
 22825     11D1  0008               	return
 22826     11D2                     __end_of_DELAY_milliseconds:
 22827                           
 22828                           	psect	text87
 22829     1470                     __ptext87:	
 22830 ;; *************** function _LIGHTBLUE_LedState *****************
 22831 ;; Defined at:
 22832 ;;		line 352 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 22833 ;; Parameters:    Size  Location     Type
 22834 ;;		None
 22835 ;; Auto vars:     Size  Location     Type
 22836 ;;  payload         3    0[BANK0 ] unsigned char [3]
 22837 ;;  led             1    3[BANK0 ] unsigned char 
 22838 ;; Return value:  Size  Location     Type
 22839 ;;                  1    wreg      void 
 22840 ;; Registers used:
 22841 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22842 ;; Tracked objects:
 22843 ;;		On entry : 0/0
 22844 ;;		On exit  : 0/0
 22845 ;;		Unchanged: 0/0
 22846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22847 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22848 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22850 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22851 ;;Total ram usage:        4 bytes
 22852 ;; Hardware stack levels used: 1
 22853 ;; Hardware stack levels required when called: 7
 22854 ;; This function calls:
 22855 ;;		_LIGHTBLUE_GetDataLedValue
 22856 ;;		_LIGHTBLUE_GetErrorLedValue
 22857 ;;		_LIGHTBLUE_SendPacket
 22858 ;;		_LIGHTBLUE_SplitByte
 22859 ;; This function is called by:
 22860 ;;		_main
 22861 ;; This function uses a non-reentrant model
 22862 ;;
 22863                           
 22864     1470                     _LIGHTBLUE_LedState:	
 22865                           ;psect for function _LIGHTBLUE_LedState
 22866                           
 22867     1470                     l14402:	
 22868                           ;incstack = 0
 22869                           ; Regs used in _LIGHTBLUE_LedState: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 22870                           
 22871                           
 22872                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 353:     char payload[3];;mcc_gene
      +                          rated_files/application/LIGHTBLUE_service.c: 354:     uint8_t led;;mcc_generated_files/a
      +                          pplication/LIGHTBLUE_service.c: 356:     led = (0x00) + LIGHTBLUE_GetDataLedValue();
 22873     1470  319E  26F2  3194   	fcall	_LIGHTBLUE_GetDataLedValue
 22874     1473  0140               	movlb	0	; select bank0
 22875     1474  00A3               	movwf	LIGHTBLUE_LedState@led
 22876     1475                     l14404:
 22877                           
 22878                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 358:     *payload = '\0';
 22879     1475  01A0               	clrf	LIGHTBLUE_LedState@payload
 22880     1476                     l14406:
 22881                           
 22882                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 359:     LIGHTBLUE_SplitByte(paylo
      +                          ad, led);
 22883     1476  0823               	movf	LIGHTBLUE_LedState@led,w
 22884     1477  00F6               	movwf	LIGHTBLUE_SplitByte@value
 22885     1478  3020               	movlw	(low (LIGHTBLUE_LedState@payload| 0))& (0+255)
 22886     1479  3196  26C4  3194   	fcall	_LIGHTBLUE_SplitByte
 22887     147C                     l14408:
 22888                           
 22889                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 361:     LIGHTBLUE_SendPacket(LED_
      +                          STATE_ID, payload);
 22890     147C  3020               	movlw	(low (LIGHTBLUE_LedState@payload| 0))& (0+255)
 22891     147D  00F7               	movwf	LIGHTBLUE_SendPacket@payload
 22892     147E  304C               	movlw	76
 22893     147F  318E  26D9  3194   	fcall	_LIGHTBLUE_SendPacket
 22894     1482                     l14410:
 22895                           
 22896                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 363:     led = (0x10) + LIGHTBLUE_
      +                          GetErrorLedValue();
 22897     1482  319E  26D6  3194   	fcall	_LIGHTBLUE_GetErrorLedValue
 22898     1485  3E10               	addlw	16
 22899     1486  0140               	movlb	0	; select bank0
 22900     1487  00A3               	movwf	LIGHTBLUE_LedState@led
 22901                           
 22902                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 364:     *payload = '\0';
 22903     1488  01A0               	clrf	LIGHTBLUE_LedState@payload
 22904     1489                     l14412:
 22905                           
 22906                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 365:     LIGHTBLUE_SplitByte(paylo
      +                          ad, led);
 22907     1489  0823               	movf	LIGHTBLUE_LedState@led,w
 22908     148A  00F6               	movwf	LIGHTBLUE_SplitByte@value
 22909     148B  3020               	movlw	(low (LIGHTBLUE_LedState@payload| 0))& (0+255)
 22910     148C  3196  26C4  3194   	fcall	_LIGHTBLUE_SplitByte
 22911     148F                     l14414:
 22912                           
 22913                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 367:     LIGHTBLUE_SendPacket(LED_
      +                          STATE_ID, payload);
 22914     148F  3020               	movlw	(low (LIGHTBLUE_LedState@payload| 0))& (0+255)
 22915     1490  00F7               	movwf	LIGHTBLUE_SendPacket@payload
 22916     1491  304C               	movlw	76
 22917     1492  318E  26D9  3194   	fcall	_LIGHTBLUE_SendPacket
 22918     1495                     l133:
 22919     1495  0008               	return
 22920     1496                     __end_of_LIGHTBLUE_LedState:
 22921                           
 22922                           	psect	text88
 22923     1ED6                     __ptext88:	
 22924 ;; *************** function _LIGHTBLUE_GetErrorLedValue *****************
 22925 ;; Defined at:
 22926 ;;		line 483 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 22927 ;; Parameters:    Size  Location     Type
 22928 ;;		None
 22929 ;; Auto vars:     Size  Location     Type
 22930 ;;		None
 22931 ;; Return value:  Size  Location     Type
 22932 ;;                  1    wreg      unsigned char 
 22933 ;; Registers used:
 22934 ;;		wreg, status,2, status,0
 22935 ;; Tracked objects:
 22936 ;;		On entry : 0/0
 22937 ;;		On exit  : 0/0
 22938 ;;		Unchanged: 0/0
 22939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22943 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22944 ;;Total ram usage:        0 bytes
 22945 ;; Hardware stack levels used: 1
 22946 ;; Hardware stack levels required when called: 4
 22947 ;; This function calls:
 22948 ;;		Nothing
 22949 ;; This function is called by:
 22950 ;;		_LIGHTBLUE_LedState
 22951 ;; This function uses a non-reentrant model
 22952 ;;
 22953                           
 22954     1ED6                     _LIGHTBLUE_GetErrorLedValue:	
 22955                           ;psect for function _LIGHTBLUE_GetErrorLedValue
 22956                           
 22957     1ED6                     l13676:	
 22958                           ;incstack = 0
 22959                           ; Regs used in _LIGHTBLUE_GetErrorLedValue: [wreg+status,2+status,0]
 22960                           
 22961                           
 22962                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 484:     return (0x01) - (bitMap.i
      +                          oStateBitMap.p2_2_state);
 22963     1ED6  0140               	movlb	0	; select bank0
 22964     1ED7  0850               	movf	_bitMap+1,w	;volatile
 22965     1ED8  3901               	andlw	1
 22966     1ED9  3C01               	sublw	1
 22967     1EDA                     l208:
 22968     1EDA  0008               	return
 22969     1EDB                     __end_of_LIGHTBLUE_GetErrorLedValue:
 22970                           
 22971                           	psect	text89
 22972     1EF2                     __ptext89:	
 22973 ;; *************** function _LIGHTBLUE_GetDataLedValue *****************
 22974 ;; Defined at:
 22975 ;;		line 479 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 22976 ;; Parameters:    Size  Location     Type
 22977 ;;		None
 22978 ;; Auto vars:     Size  Location     Type
 22979 ;;		None
 22980 ;; Return value:  Size  Location     Type
 22981 ;;                  1    wreg      unsigned char 
 22982 ;; Registers used:
 22983 ;;		wreg, status,2, status,0
 22984 ;; Tracked objects:
 22985 ;;		On entry : 0/0
 22986 ;;		On exit  : 0/0
 22987 ;;		Unchanged: 0/0
 22988 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22989 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22990 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22992 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22993 ;;Total ram usage:        0 bytes
 22994 ;; Hardware stack levels used: 1
 22995 ;; Hardware stack levels required when called: 4
 22996 ;; This function calls:
 22997 ;;		Nothing
 22998 ;; This function is called by:
 22999 ;;		_LIGHTBLUE_LedState
 23000 ;; This function uses a non-reentrant model
 23001 ;;
 23002                           
 23003     1EF2                     _LIGHTBLUE_GetDataLedValue:	
 23004                           ;psect for function _LIGHTBLUE_GetDataLedValue
 23005                           
 23006     1EF2                     l13672:	
 23007                           ;incstack = 0
 23008                           ; Regs used in _LIGHTBLUE_GetDataLedValue: [wreg+status,2+status,0]
 23009                           
 23010                           
 23011                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 480:     return (0x01) - PORTAbits
      +                          .RA5;
 23012     1EF2  0140               	movlb	0	; select bank0
 23013     1EF3  0E0C               	swapf	12,w	;volatile
 23014     1EF4  0C89               	rrf	9,f
 23015     1EF5  3901               	andlw	1
 23016     1EF6  3C01               	sublw	1
 23017     1EF7                     l205:
 23018     1EF7  0008               	return
 23019     1EF8                     __end_of_LIGHTBLUE_GetDataLedValue:
 23020                           
 23021                           	psect	text90
 23022     1EEC                     __ptext90:	
 23023 ;; *************** function _LIGHTBLUE_Initialize *****************
 23024 ;; Defined at:
 23025 ;;		line 306 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 23026 ;; Parameters:    Size  Location     Type
 23027 ;;		None
 23028 ;; Auto vars:     Size  Location     Type
 23029 ;;		None
 23030 ;; Return value:  Size  Location     Type
 23031 ;;                  1    wreg      void 
 23032 ;; Registers used:
 23033 ;;		wreg
 23034 ;; Tracked objects:
 23035 ;;		On entry : 0/0
 23036 ;;		On exit  : 0/0
 23037 ;;		Unchanged: 0/0
 23038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23039 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23040 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23042 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23043 ;;Total ram usage:        0 bytes
 23044 ;; Hardware stack levels used: 1
 23045 ;; Hardware stack levels required when called: 4
 23046 ;; This function calls:
 23047 ;;		Nothing
 23048 ;; This function is called by:
 23049 ;;		_main
 23050 ;; This function uses a non-reentrant model
 23051 ;;
 23052                           
 23053     1EEC                     _LIGHTBLUE_Initialize:	
 23054                           ;psect for function _LIGHTBLUE_Initialize
 23055                           
 23056     1EEC                     l14372:	
 23057                           ;incstack = 0
 23058                           ; Regs used in _LIGHTBLUE_Initialize: [wreg]
 23059                           
 23060                           
 23061                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 307:     bitMap.ioBitMap.gpioBitMa
      +                          p = 0x01;
 23062     1EEC  3001               	movlw	1
 23063     1EED  0140               	movlb	0	; select bank0
 23064     1EEE  00CF               	movwf	_bitMap	;volatile
 23065                           
 23066                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 308:     bitMap.ioStateBitMap.gpio
      +                          StateBitMap = 0x01;
 23067     1EEF  3001               	movlw	1
 23068     1EF0  00D0               	movwf	_bitMap+1	;volatile
 23069     1EF1                     l121:
 23070     1EF1  0008               	return
 23071     1EF2                     __end_of_LIGHTBLUE_Initialize:
 23072                           
 23073                           	psect	text91
 23074     1668                     __ptext91:	
 23075 ;; *************** function _LIGHTBLUE_AccelSensor *****************
 23076 ;; Defined at:
 23077 ;;		line 326 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 23078 ;; Parameters:    Size  Location     Type
 23079 ;;		None
 23080 ;; Auto vars:     Size  Location     Type
 23081 ;;  payload        13   25[BANK0 ] unsigned char [13]
 23082 ;;  accelData       6   38[BANK0 ] struct .
 23083 ;; Return value:  Size  Location     Type
 23084 ;;                  1    wreg      void 
 23085 ;; Registers used:
 23086 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23087 ;; Tracked objects:
 23088 ;;		On entry : 0/0
 23089 ;;		On exit  : 0/0
 23090 ;;		Unchanged: 0/0
 23091 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23092 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23093 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23095 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23096 ;;Total ram usage:       19 bytes
 23097 ;; Hardware stack levels used: 1
 23098 ;; Hardware stack levels required when called: 16
 23099 ;; This function calls:
 23100 ;;		_BMA253_GetAccelDataXYZ
 23101 ;;		_LIGHTBLUE_SendPacket
 23102 ;;		_LIGHTBLUE_SplitWord
 23103 ;; This function is called by:
 23104 ;;		_main
 23105 ;; This function uses a non-reentrant model
 23106 ;;
 23107                           
 23108     1668                     _LIGHTBLUE_AccelSensor:	
 23109                           ;psect for function _LIGHTBLUE_AccelSensor
 23110                           
 23111     1668                     l14382:	
 23112                           ;incstack = 0
 23113 ;; hardware stack exceeded
 23114                           ; Regs used in _LIGHTBLUE_AccelSensor: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 23115                           
 23116                           
 23117                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 327:     char payload[13];;mcc_gen
      +                          erated_files/application/LIGHTBLUE_service.c: 328:     BMA253_ACCEL_DATA_t accelData;;mc
      +                          c_generated_files/application/LIGHTBLUE_service.c: 331:     *payload = '\0';
 23118     1668  0140               	movlb	0	; select bank0
 23119     1669  01B9               	clrf	LIGHTBLUE_AccelSensor@payload
 23120     166A                     l14384:
 23121                           
 23122                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 332:     BMA253_GetAccelDataXYZ(&a
      +                          ccelData);
 23123     166A  3046               	movlw	(low (LIGHTBLUE_AccelSensor@accelData| 0))& (0+255)
 23124     166B  3187  27C4  3196   	fcall	_BMA253_GetAccelDataXYZ
 23125     166E                     l14386:
 23126                           
 23127                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 335:     LIGHTBLUE_SplitWord(paylo
      +                          ad, (accelData.x & 0x0FFF));
 23128     166E  30FF               	movlw	255
 23129     166F  0140               	movlb	0	; select bank0
 23130     1670  0546               	andwf	LIGHTBLUE_AccelSensor@accelData,w
 23131     1671  00F9               	movwf	LIGHTBLUE_SplitWord@value
 23132     1672  300F               	movlw	15
 23133     1673  0547               	andwf	LIGHTBLUE_AccelSensor@accelData+1,w
 23134     1674  00FA               	movwf	LIGHTBLUE_SplitWord@value+1
 23135     1675  3039               	movlw	(low (LIGHTBLUE_AccelSensor@payload| 0))& (0+255)
 23136     1676  3190  2059  3196   	fcall	_LIGHTBLUE_SplitWord
 23137     1679                     l14388:
 23138                           
 23139                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 336:     LIGHTBLUE_SplitWord(paylo
      +                          ad, (accelData.y & 0x0FFF));
 23140     1679  30FF               	movlw	255
 23141     167A  0140               	movlb	0	; select bank0
 23142     167B  0548               	andwf	LIGHTBLUE_AccelSensor@accelData+2,w
 23143     167C  00F9               	movwf	LIGHTBLUE_SplitWord@value
 23144     167D  300F               	movlw	15
 23145     167E  0549               	andwf	LIGHTBLUE_AccelSensor@accelData+3,w
 23146     167F  00FA               	movwf	LIGHTBLUE_SplitWord@value+1
 23147     1680  3039               	movlw	(low (LIGHTBLUE_AccelSensor@payload| 0))& (0+255)
 23148     1681  3190  2059  3196   	fcall	_LIGHTBLUE_SplitWord
 23149     1684                     l14390:
 23150                           
 23151                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 337:     LIGHTBLUE_SplitWord(paylo
      +                          ad, (accelData.z & 0x0FFF));
 23152     1684  30FF               	movlw	255
 23153     1685  0140               	movlb	0	; select bank0
 23154     1686  054A               	andwf	LIGHTBLUE_AccelSensor@accelData+4,w
 23155     1687  00F9               	movwf	LIGHTBLUE_SplitWord@value
 23156     1688  300F               	movlw	15
 23157     1689  054B               	andwf	LIGHTBLUE_AccelSensor@accelData+5,w
 23158     168A  00FA               	movwf	LIGHTBLUE_SplitWord@value+1
 23159     168B  3039               	movlw	(low (LIGHTBLUE_AccelSensor@payload| 0))& (0+255)
 23160     168C  3190  2059  3196   	fcall	_LIGHTBLUE_SplitWord
 23161     168F                     l14392:
 23162                           
 23163                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 339:     LIGHTBLUE_SendPacket(ACCE
      +                          L_DATA_ID, payload);
 23164     168F  3039               	movlw	(low (LIGHTBLUE_AccelSensor@payload| 0))& (0+255)
 23165     1690  00F7               	movwf	LIGHTBLUE_SendPacket@payload
 23166     1691  3058               	movlw	88
 23167     1692  318E  26D9  3196   	fcall	_LIGHTBLUE_SendPacket
 23168     1695                     l127:
 23169     1695  0008               	return
 23170     1696                     __end_of_LIGHTBLUE_AccelSensor:
 23171                           
 23172                           	psect	text92
 23173     1059                     __ptext92:	
 23174 ;; *************** function _LIGHTBLUE_SplitWord *****************
 23175 ;; Defined at:
 23176 ;;		line 463 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 23177 ;; Parameters:    Size  Location     Type
 23178 ;;  payload         1    wreg     PTR unsigned char 
 23179 ;;		 -> LIGHTBLUE_AccelSensor@payload(13), LIGHTBLUE_TemperatureSensor@payload(5), 
 23180 ;;  value           2    9[COMMON] short 
 23181 ;; Auto vars:     Size  Location     Type
 23182 ;;  payload         1   11[COMMON] PTR unsigned char 
 23183 ;;		 -> LIGHTBLUE_AccelSensor@payload(13), LIGHTBLUE_TemperatureSensor@payload(5), 
 23184 ;; Return value:  Size  Location     Type
 23185 ;;                  1    wreg      void 
 23186 ;; Registers used:
 23187 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23188 ;; Tracked objects:
 23189 ;;		On entry : 0/0
 23190 ;;		On exit  : 0/0
 23191 ;;		Unchanged: 0/0
 23192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23193 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23194 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23195 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23196 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23197 ;;Total ram usage:        3 bytes
 23198 ;; Hardware stack levels used: 1
 23199 ;; Hardware stack levels required when called: 6
 23200 ;; This function calls:
 23201 ;;		_LIGHTBLUE_SplitByte
 23202 ;; This function is called by:
 23203 ;;		_LIGHTBLUE_TemperatureSensor
 23204 ;;		_LIGHTBLUE_AccelSensor
 23205 ;; This function uses a non-reentrant model
 23206 ;;
 23207                           
 23208     1059                     _LIGHTBLUE_SplitWord:	
 23209                           ;psect for function _LIGHTBLUE_SplitWord
 23210                           
 23211                           
 23212                           ;incstack = 0
 23213                           ; Regs used in _LIGHTBLUE_SplitWord: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 23214                           ;LIGHTBLUE_SplitWord@payload stored from wreg
 23215     1059  00FB               	movwf	LIGHTBLUE_SplitWord@payload
 23216     105A                     l13648:
 23217                           
 23218                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 464:     LIGHTBLUE_SplitByte(paylo
      +                          ad, value);
 23219     105A  0879               	movf	LIGHTBLUE_SplitWord@value,w
 23220     105B  00F6               	movwf	LIGHTBLUE_SplitByte@value
 23221     105C  087B               	movf	LIGHTBLUE_SplitWord@payload,w
 23222     105D  3196  26C4  3190   	fcall	_LIGHTBLUE_SplitByte
 23223                           
 23224                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 465:     LIGHTBLUE_SplitByte(paylo
      +                          ad, value >> 8);
 23225     1060  087A               	movf	LIGHTBLUE_SplitWord@value+1,w
 23226     1061  00F6               	movwf	LIGHTBLUE_SplitByte@value
 23227     1062  087B               	movf	LIGHTBLUE_SplitWord@payload,w
 23228     1063  3196  26C4  3190   	fcall	_LIGHTBLUE_SplitByte
 23229     1066                     l196:
 23230     1066  0008               	return
 23231     1067                     __end_of_LIGHTBLUE_SplitWord:
 23232                           
 23233                           	psect	text93
 23234     16C4                     __ptext93:	
 23235 ;; *************** function _LIGHTBLUE_SplitByte *****************
 23236 ;; Defined at:
 23237 ;;		line 468 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 23238 ;; Parameters:    Size  Location     Type
 23239 ;;  payload         1    wreg     PTR unsigned char 
 23240 ;;		 -> LIGHTBLUE_SendProtocolVersion@payload(19), LIGHTBLUE_LedState@payload(3), LIGHTBLUE_PushButton@payload(3), LIGHT
      +BLUE_AccelSensor@payload(13), 
 23241 ;;		 -> LIGHTBLUE_TemperatureSensor@payload(5), 
 23242 ;;  value           1    6[COMMON] char 
 23243 ;; Auto vars:     Size  Location     Type
 23244 ;;  payload         1    8[COMMON] PTR unsigned char 
 23245 ;;		 -> LIGHTBLUE_SendProtocolVersion@payload(19), LIGHTBLUE_LedState@payload(3), LIGHTBLUE_PushButton@payload(3), LIGHT
      +BLUE_AccelSensor@payload(13), 
 23246 ;;		 -> LIGHTBLUE_TemperatureSensor@payload(5), 
 23247 ;; Return value:  Size  Location     Type
 23248 ;;                  1    wreg      void 
 23249 ;; Registers used:
 23250 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23251 ;; Tracked objects:
 23252 ;;		On entry : 0/0
 23253 ;;		On exit  : 0/0
 23254 ;;		Unchanged: 0/0
 23255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23256 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23257 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23258 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23259 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23260 ;;Total ram usage:        3 bytes
 23261 ;; Hardware stack levels used: 1
 23262 ;; Hardware stack levels required when called: 5
 23263 ;; This function calls:
 23264 ;;		_strlen
 23265 ;; This function is called by:
 23266 ;;		_LIGHTBLUE_PushButton
 23267 ;;		_LIGHTBLUE_LedState
 23268 ;;		_LIGHTBLUE_SendProtocolVersion
 23269 ;;		_LIGHTBLUE_SplitWord
 23270 ;; This function uses a non-reentrant model
 23271 ;;
 23272                           
 23273     16C4                     _LIGHTBLUE_SplitByte:	
 23274                           ;psect for function _LIGHTBLUE_SplitByte
 23275                           
 23276                           
 23277                           ;incstack = 0
 23278                           ; Regs used in _LIGHTBLUE_SplitByte: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 23279                           ;LIGHTBLUE_SplitByte@payload stored from wreg
 23280     16C4  00F8               	movwf	LIGHTBLUE_SplitByte@payload
 23281     16C5                     l13516:
 23282                           
 23283                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 469:     payload += strlen(payload
      +                          );
 23284     16C5  0878               	movf	LIGHTBLUE_SplitByte@payload,w
 23285     16C6  00F1               	movwf	strlen@s
 23286     16C7  01F2               	clrf	strlen@s+1
 23287     16C8  3192  22B7  3196   	fcall	_strlen
 23288     16CB  0871               	movf	?_strlen,w
 23289     16CC  00F7               	movwf	??_LIGHTBLUE_SplitByte
 23290     16CD  0877               	movf	??_LIGHTBLUE_SplitByte,w
 23291     16CE  07F8               	addwf	LIGHTBLUE_SplitByte@payload,f
 23292     16CF                     l13518:
 23293                           
 23294                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 470:     *payload++ = (_hex[(value
      +                           >> 4) & 0xF]);
 23295     16CF  0878               	movf	LIGHTBLUE_SplitByte@payload,w
 23296     16D0  0086               	movwf	6
 23297     16D1  0187               	clrf	7
 23298     16D2  0E76               	swapf	LIGHTBLUE_SplitByte@value,w
 23299     16D3  390F               	andlw	15
 23300     16D4  1989               	btfsc	9,3
 23301     16D5  38F0               	iorlw	240
 23302     16D6  390F               	andlw	15
 23303     16D7  3EA0               	addlw	(low (__hex| (0+256)))& (0+255)
 23304     16D8  0084               	movwf	4
 23305     16D9  3001               	movlw	1	; select bank3/4
 23306     16DA  0085               	movwf	5
 23307     16DB  0800               	movf	0,w
 23308     16DC  0081               	movwf	1
 23309     16DD                     l13520:
 23310     16DD  3001               	movlw	1
 23311     16DE  00F7               	movwf	??_LIGHTBLUE_SplitByte
 23312     16DF  0877               	movf	??_LIGHTBLUE_SplitByte,w
 23313     16E0  07F8               	addwf	LIGHTBLUE_SplitByte@payload,f
 23314     16E1                     l13522:
 23315                           
 23316                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 471:     *payload++ = (_hex[(value
      +                          ) & 0xF]);
 23317     16E1  0878               	movf	LIGHTBLUE_SplitByte@payload,w
 23318     16E2  0086               	movwf	6
 23319     16E3  0187               	clrf	7
 23320     16E4  0876               	movf	LIGHTBLUE_SplitByte@value,w
 23321     16E5  390F               	andlw	15
 23322     16E6  3EA0               	addlw	(low (__hex| (0+256)))& (0+255)
 23323     16E7  0084               	movwf	4
 23324     16E8  3001               	movlw	1	; select bank3/4
 23325     16E9  0085               	movwf	5
 23326     16EA  0800               	movf	0,w
 23327     16EB  0081               	movwf	1
 23328     16EC                     l13524:
 23329     16EC  3001               	movlw	1
 23330     16ED  00F7               	movwf	??_LIGHTBLUE_SplitByte
 23331     16EE  0877               	movf	??_LIGHTBLUE_SplitByte,w
 23332     16EF  07F8               	addwf	LIGHTBLUE_SplitByte@payload,f
 23333     16F0                     l13526:
 23334                           
 23335                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 472:     *payload = '\0';
 23336     16F0  0878               	movf	LIGHTBLUE_SplitByte@payload,w
 23337     16F1  0086               	movwf	6
 23338     16F2  0187               	clrf	7
 23339     16F3  0181               	clrf	1
 23340     16F4                     l199:
 23341     16F4  0008               	return
 23342     16F5                     __end_of_LIGHTBLUE_SplitByte:
 23343                           
 23344                           	psect	text94
 23345     0ED9                     __ptext94:	
 23346 ;; *************** function _LIGHTBLUE_SendPacket *****************
 23347 ;; Defined at:
 23348 ;;		line 451 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 23349 ;; Parameters:    Size  Location     Type
 23350 ;;  packetID        1    wreg     unsigned char 
 23351 ;;  payload         1    7[COMMON] PTR unsigned char 
 23352 ;;		 -> LIGHTBLUE_SendProtocolVersion@payload(19), LIGHTBLUE_LedState@payload(3), LIGHTBLUE_PushButton@payload(3), LIGHT
      +BLUE_AccelSensor@payload(13), 
 23353 ;;		 -> LIGHTBLUE_TemperatureSensor@payload(5), 
 23354 ;; Auto vars:     Size  Location     Type
 23355 ;;  packetID        1   10[COMMON] unsigned char 
 23356 ;; Return value:  Size  Location     Type
 23357 ;;                  1    wreg      void 
 23358 ;; Registers used:
 23359 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23360 ;; Tracked objects:
 23361 ;;		On entry : 0/0
 23362 ;;		On exit  : 0/0
 23363 ;;		Unchanged: 0/0
 23364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23365 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23366 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23367 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23368 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23369 ;;Total ram usage:        4 bytes
 23370 ;; Hardware stack levels used: 1
 23371 ;; Hardware stack levels required when called: 6
 23372 ;; This function calls:
 23373 ;;		_RN487X_Write
 23374 ;;		_strlen
 23375 ;; This function is called by:
 23376 ;;		_LIGHTBLUE_TemperatureSensor
 23377 ;;		_LIGHTBLUE_AccelSensor
 23378 ;;		_LIGHTBLUE_PushButton
 23379 ;;		_LIGHTBLUE_LedState
 23380 ;;		_LIGHTBLUE_SendProtocolVersion
 23381 ;; This function uses a non-reentrant model
 23382 ;;
 23383                           
 23384     0ED9                     _LIGHTBLUE_SendPacket:	
 23385                           ;psect for function _LIGHTBLUE_SendPacket
 23386                           
 23387                           
 23388                           ;incstack = 0
 23389                           ; Regs used in _LIGHTBLUE_SendPacket: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 23390                           ;LIGHTBLUE_SendPacket@packetID stored from wreg
 23391     0ED9  00FA               	movwf	LIGHTBLUE_SendPacket@packetID
 23392     0EDA                     l13650:
 23393                           
 23394                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 452:     RN487X.Write(('['));
 23395     0EDA  305B               	movlw	91
 23396     0EDB  00F6               	movwf	RN487X_Write@txData
 23397     0EDC  3068               	movlw	low (_RN487X| (0+32768))
 23398     0EDD  0084               	movwf	4
 23399     0EDE  3098               	movlw	high (_RN487X| (0+32768))
 23400     0EDF  0085               	movwf	5
 23401     0EE0  3F01               	moviw [1]fsr0
 23402     0EE1  008A               	movwf	10
 23403     0EE2  3F00               	moviw [0]fsr0
 23404     0EE3  000A               	callw
 23405     0EE4  318E               	pagesel	$
 23406                           
 23407                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 453:     RN487X.Write((_hex[(seque
      +                          nceNumber++) & 0xF]));
 23408     0EE5  0140               	movlb	0	; select bank0
 23409     0EE6  086D               	movf	_sequenceNumber,w
 23410     0EE7  390F               	andlw	15
 23411     0EE8  3EA0               	addlw	(low (__hex| (0+256)))& (0+255)
 23412     0EE9  0086               	movwf	6
 23413     0EEA  3001               	movlw	1	; select bank3/4
 23414     0EEB  0087               	movwf	7
 23415     0EEC  0801               	movf	1,w
 23416     0EED  00F6               	movwf	RN487X_Write@txData
 23417     0EEE  3068               	movlw	low (_RN487X| (0+32768))
 23418     0EEF  0084               	movwf	4
 23419     0EF0  3098               	movlw	high (_RN487X| (0+32768))
 23420     0EF1  0085               	movwf	5
 23421     0EF2  3F01               	moviw [1]fsr0
 23422     0EF3  008A               	movwf	10
 23423     0EF4  3F00               	moviw [0]fsr0
 23424     0EF5  000A               	callw
 23425     0EF6  318E               	pagesel	$
 23426     0EF7                     l13652:
 23427     0EF7  3001               	movlw	1
 23428     0EF8  00F8               	movwf	??_LIGHTBLUE_SendPacket
 23429     0EF9  0878               	movf	??_LIGHTBLUE_SendPacket,w
 23430     0EFA  0140               	movlb	0	; select bank0
 23431     0EFB  07ED               	addwf	_sequenceNumber,f
 23432     0EFC                     l13654:
 23433                           
 23434                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 454:     RN487X.Write(packetID);
 23435     0EFC  087A               	movf	LIGHTBLUE_SendPacket@packetID,w
 23436     0EFD  00F6               	movwf	RN487X_Write@txData
 23437     0EFE  3068               	movlw	low (_RN487X| (0+32768))
 23438     0EFF  0084               	movwf	4
 23439     0F00  3098               	movlw	high (_RN487X| (0+32768))
 23440     0F01  0085               	movwf	5
 23441     0F02  3F01               	moviw [1]fsr0
 23442     0F03  008A               	movwf	10
 23443     0F04  3F00               	moviw [0]fsr0
 23444     0F05  000A               	callw
 23445     0F06  318E               	pagesel	$
 23446     0F07                     l13656:
 23447                           
 23448                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 455:     RN487X.Write((_hex[(strle
      +                          n(payload) >> 4) & 0xF]));
 23449     0F07  0877               	movf	LIGHTBLUE_SendPacket@payload,w
 23450     0F08  00F1               	movwf	strlen@s
 23451     0F09  01F2               	clrf	strlen@s+1
 23452     0F0A  3192  22B7  318E   	fcall	_strlen
 23453     0F0D  0871               	movf	?_strlen,w
 23454     0F0E  00F8               	movwf	??_LIGHTBLUE_SendPacket
 23455     0F0F  0872               	movf	?_strlen+1,w
 23456     0F10  00F9               	movwf	??_LIGHTBLUE_SendPacket+1
 23457     0F11  3004               	movlw	4
 23458     0F12                     u10395:
 23459     0F12  36F9               	lsrf	??_LIGHTBLUE_SendPacket+1,f
 23460     0F13  0CF8               	rrf	??_LIGHTBLUE_SendPacket,f
 23461     0F14  0B89               	decfsz	9,f
 23462     0F15  2F12               	goto	u10395
 23463     0F16  0878               	movf	??_LIGHTBLUE_SendPacket,w
 23464     0F17  390F               	andlw	15
 23465     0F18  3EA0               	addlw	(low (__hex| (0+256)))& (0+255)
 23466     0F19  0086               	movwf	6
 23467     0F1A  3001               	movlw	1	; select bank3/4
 23468     0F1B  0087               	movwf	7
 23469     0F1C  0801               	movf	1,w
 23470     0F1D  00F6               	movwf	RN487X_Write@txData
 23471     0F1E  3068               	movlw	low (_RN487X| (0+32768))
 23472     0F1F  0084               	movwf	4
 23473     0F20  3098               	movlw	high (_RN487X| (0+32768))
 23474     0F21  0085               	movwf	5
 23475     0F22  3F01               	moviw [1]fsr0
 23476     0F23  008A               	movwf	10
 23477     0F24  3F00               	moviw [0]fsr0
 23478     0F25  000A               	callw
 23479     0F26  318E               	pagesel	$
 23480     0F27                     l13658:
 23481                           
 23482                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 456:     RN487X.Write((_hex[(strle
      +                          n(payload)) & 0xF]));
 23483     0F27  0877               	movf	LIGHTBLUE_SendPacket@payload,w
 23484     0F28  00F1               	movwf	strlen@s
 23485     0F29  01F2               	clrf	strlen@s+1
 23486     0F2A  3192  22B7  318E   	fcall	_strlen
 23487     0F2D  0871               	movf	?_strlen,w
 23488     0F2E  390F               	andlw	15
 23489     0F2F  3EA0               	addlw	(low (__hex| (0+256)))& (0+255)
 23490     0F30  0086               	movwf	6
 23491     0F31  3001               	movlw	1	; select bank3/4
 23492     0F32  0087               	movwf	7
 23493     0F33  0801               	movf	1,w
 23494     0F34  00F6               	movwf	RN487X_Write@txData
 23495     0F35  3068               	movlw	low (_RN487X| (0+32768))
 23496     0F36  0084               	movwf	4
 23497     0F37  3098               	movlw	high (_RN487X| (0+32768))
 23498     0F38  0085               	movwf	5
 23499     0F39  3F01               	moviw [1]fsr0
 23500     0F3A  008A               	movwf	10
 23501     0F3B  3F00               	moviw [0]fsr0
 23502     0F3C  000A               	callw
 23503     0F3D  318E               	pagesel	$
 23504                           
 23505                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 457:     while (*payload) {
 23506     0F3E  2F51               	goto	l13664
 23507     0F3F                     l13660:
 23508                           
 23509                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 458:         RN487X.Write((*(uint8
      +                          _t *) payload++));
 23510     0F3F  0877               	movf	LIGHTBLUE_SendPacket@payload,w
 23511     0F40  0086               	movwf	6
 23512     0F41  0187               	clrf	7
 23513     0F42  0801               	movf	1,w
 23514     0F43  00F6               	movwf	RN487X_Write@txData
 23515     0F44  3068               	movlw	low (_RN487X| (0+32768))
 23516     0F45  0084               	movwf	4
 23517     0F46  3098               	movlw	high (_RN487X| (0+32768))
 23518     0F47  0085               	movwf	5
 23519     0F48  3F01               	moviw [1]fsr0
 23520     0F49  008A               	movwf	10
 23521     0F4A  3F00               	moviw [0]fsr0
 23522     0F4B  000A               	callw
 23523     0F4C  318E               	pagesel	$
 23524     0F4D                     l13662:
 23525     0F4D  3001               	movlw	1
 23526     0F4E  00F8               	movwf	??_LIGHTBLUE_SendPacket
 23527     0F4F  0878               	movf	??_LIGHTBLUE_SendPacket,w
 23528     0F50  07F7               	addwf	LIGHTBLUE_SendPacket@payload,f
 23529     0F51                     l13664:
 23530                           
 23531                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 457:     while (*payload) {
 23532     0F51  0877               	movf	LIGHTBLUE_SendPacket@payload,w
 23533     0F52  0086               	movwf	6
 23534     0F53  0187               	clrf	7
 23535     0F54  0801               	movf	1,w
 23536     0F55  1D03               	btfss	3,2
 23537     0F56  2F58               	goto	u10401
 23538     0F57  2F59               	goto	u10400
 23539     0F58                     u10401:
 23540     0F58  2F3F               	goto	l13660
 23541     0F59                     u10400:
 23542     0F59                     l13666:
 23543                           
 23544                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 460:     RN487X.Write((']'));
 23545     0F59  305D               	movlw	93
 23546     0F5A  00F6               	movwf	RN487X_Write@txData
 23547     0F5B  3068               	movlw	low (_RN487X| (0+32768))
 23548     0F5C  0084               	movwf	4
 23549     0F5D  3098               	movlw	high (_RN487X| (0+32768))
 23550     0F5E  0085               	movwf	5
 23551     0F5F  3F01               	moviw [1]fsr0
 23552     0F60  008A               	movwf	10
 23553     0F61  3F00               	moviw [0]fsr0
 23554     0F62  000A               	callw
 23555     0F63  318E               	pagesel	$
 23556     0F64                     l193:
 23557     0F64  0008               	return
 23558     0F65                     __end_of_LIGHTBLUE_SendPacket:
 23559                           
 23560                           	psect	text95
 23561     12B7                     __ptext95:	
 23562 ;; *************** function _strlen *****************
 23563 ;; Defined at:
 23564 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\strlen.c"
 23565 ;; Parameters:    Size  Location     Type
 23566 ;;  s               2    1[COMMON] PTR const unsigned char 
 23567 ;;		 -> lightBlueSerial(80), statusBuffer@main$F4234(80), STR_5(12), STR_3(11), 
 23568 ;;		 -> statusBuffer(80), NULL(0), LIGHTBLUE_SendProtocolVersion@payload(19), LIGHTBLUE_LedState@payload(3), 
 23569 ;;		 -> LIGHTBLUE_PushButton@payload(3), LIGHTBLUE_AccelSensor@payload(13), LIGHTBLUE_TemperatureSensor@payload(5), STR_
      +1(6), 
 23570 ;; Auto vars:     Size  Location     Type
 23571 ;;  a               2    4[COMMON] PTR const unsigned char 
 23572 ;;		 -> lightBlueSerial(80), statusBuffer@main$F4234(80), STR_5(12), STR_3(11), 
 23573 ;;		 -> statusBuffer(80), NULL(0), LIGHTBLUE_SendProtocolVersion@payload(19), LIGHTBLUE_LedState@payload(3), 
 23574 ;;		 -> LIGHTBLUE_PushButton@payload(3), LIGHTBLUE_AccelSensor@payload(13), LIGHTBLUE_TemperatureSensor@payload(5), STR_
      +1(6), 
 23575 ;; Return value:  Size  Location     Type
 23576 ;;                  2    1[COMMON] unsigned int 
 23577 ;; Registers used:
 23578 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 23579 ;; Tracked objects:
 23580 ;;		On entry : 0/0
 23581 ;;		On exit  : 0/0
 23582 ;;		Unchanged: 0/0
 23583 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23584 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23585 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23586 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23587 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23588 ;;Total ram usage:        5 bytes
 23589 ;; Hardware stack levels used: 1
 23590 ;; Hardware stack levels required when called: 4
 23591 ;; This function calls:
 23592 ;;		Nothing
 23593 ;; This function is called by:
 23594 ;;		_LIGHTBLUE_SendProtocolVersion
 23595 ;;		_LIGHTBLUE_SendSerialData
 23596 ;;		_LIGHTBLUE_SendPacket
 23597 ;;		_LIGHTBLUE_SplitByte
 23598 ;;		_rn487x_PrintMessage
 23599 ;;		_strstr
 23600 ;; This function uses a non-reentrant model
 23601 ;;
 23602                           
 23603     12B7                     _strlen:	
 23604                           ;psect for function _strlen
 23605                           
 23606     12B7                     l13150:	
 23607                           ;incstack = 0
 23608                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
 23609                           
 23610     12B7  0872               	movf	strlen@s+1,w
 23611     12B8  00F5               	movwf	strlen@a+1
 23612     12B9  0871               	movf	strlen@s,w
 23613     12BA  00F4               	movwf	strlen@a
 23614     12BB  2AC0               	goto	l13154
 23615     12BC                     l13152:
 23616     12BC  3001               	movlw	1
 23617     12BD  07F1               	addwf	strlen@s,f
 23618     12BE  3000               	movlw	0
 23619     12BF  3DF2               	addwfc	strlen@s+1,f
 23620     12C0                     l13154:
 23621     12C0  0871               	movf	strlen@s,w
 23622     12C1  0084               	movwf	4
 23623     12C2  0872               	movf	strlen@s+1,w
 23624     12C3  0085               	movwf	5
 23625     12C4  0012               	moviw fsr0++
 23626     12C5  1D03               	btfss	3,2
 23627     12C6  2AC8               	goto	u9811
 23628     12C7  2AC9               	goto	u9810
 23629     12C8                     u9811:
 23630     12C8  2ABC               	goto	l13152
 23631     12C9                     u9810:
 23632     12C9                     l13156:
 23633     12C9  0874               	movf	strlen@a,w
 23634     12CA  0271               	subwf	strlen@s,w
 23635     12CB  00F1               	movwf	?_strlen
 23636     12CC  0875               	movf	strlen@a+1,w
 23637     12CD  3B72               	subwfb	strlen@s+1,w
 23638     12CE  00F2               	movwf	?_strlen+1
 23639     12CF                     l3339:
 23640     12CF  0008               	return
 23641     12D0                     __end_of_strlen:
 23642                           
 23643                           	psect	text96
 23644     1001                     __ptext96:	
 23645 ;; *************** function _RN487X_Write *****************
 23646 ;; Defined at:
 23647 ;;		line 252 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 23648 ;; Parameters:    Size  Location     Type
 23649 ;;  txData          1    6[COMMON] unsigned char 
 23650 ;; Auto vars:     Size  Location     Type
 23651 ;;		None
 23652 ;; Return value:  Size  Location     Type
 23653 ;;                  1    wreg      void 
 23654 ;; Registers used:
 23655 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23656 ;; Tracked objects:
 23657 ;;		On entry : 0/0
 23658 ;;		On exit  : 0/0
 23659 ;;		Unchanged: 0/0
 23660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23661 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23662 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23664 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23665 ;;Total ram usage:        1 bytes
 23666 ;; Hardware stack levels used: 1
 23667 ;; Hardware stack levels required when called: 5
 23668 ;; This function calls:
 23669 ;;		_EUSART1_Write
 23670 ;;		_EUSART2_Write
 23671 ;; This function is called by:
 23672 ;;		_RN487X_SendCmd
 23673 ;;		_LIGHTBLUE_SendPacket
 23674 ;;		_LIGHTBLUE_SendSerialData
 23675 ;;		_RN487X_Example_TransparentUart
 23676 ;;		_main
 23677 ;; This function uses a non-reentrant model
 23678 ;;
 23679                           
 23680     1001                     _RN487X_Write:	
 23681                           ;psect for function _RN487X_Write
 23682                           
 23683     1001                     l13110:	
 23684                           ;incstack = 0
 23685                           ; Regs used in _RN487X_Write: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 23686                           
 23687                           
 23688                           ;mcc_generated_files/rn487x/rn487x_interface.c: 252: static __attribute__((inline)) void
      +                           RN487X_Write(uint8_t txData);mcc_generated_files/rn487x/rn487x_interface.c: 253: {;mcc_
      +                          generated_files/rn487x/rn487x_interface.c: 254:     uart[UART_BLE].Write(txData);
 23689     1001  0876               	movf	RN487X_Write@txData,w
 23690     1002  00F1               	movwf	EUSART2_Write@txData
 23691     1003  3016               	movlw	low ((_uart+22)| (0+32768))
 23692     1004  0084               	movwf	4
 23693     1005  3098               	movlw	high ((_uart+22)| (0+32768))
 23694     1006  0085               	movwf	5
 23695     1007  3F01               	moviw [1]fsr0
 23696     1008  008A               	movwf	10
 23697     1009  3F00               	moviw [0]fsr0
 23698     100A  000A               	callw
 23699     100B  3190               	pagesel	$
 23700     100C                     l1440:
 23701     100C  0008               	return
 23702     100D                     __end_of_RN487X_Write:
 23703                           
 23704                           	psect	text97
 23705     14E5                     __ptext97:	
 23706 ;; *************** function _EUSART1_Write *****************
 23707 ;; Defined at:
 23708 ;;		line 173 in file "mcc_generated_files/eusart1.c"
 23709 ;; Parameters:    Size  Location     Type
 23710 ;;  txData          1    1[COMMON] unsigned char 
 23711 ;; Auto vars:     Size  Location     Type
 23712 ;;		None
 23713 ;; Return value:  Size  Location     Type
 23714 ;;                  1    wreg      void 
 23715 ;; Registers used:
 23716 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 23717 ;; Tracked objects:
 23718 ;;		On entry : 0/0
 23719 ;;		On exit  : 0/0
 23720 ;;		Unchanged: 0/0
 23721 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23722 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23723 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23724 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23725 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23726 ;;Total ram usage:        2 bytes
 23727 ;; Hardware stack levels used: 1
 23728 ;; Hardware stack levels required when called: 4
 23729 ;; This function calls:
 23730 ;;		Nothing
 23731 ;; This function is called by:
 23732 ;;		_putch
 23733 ;;		_RN487X_Write
 23734 ;;		_rn487x_PrintMessageStart
 23735 ;;		_rn487x_PrintMessageEnd
 23736 ;;		_rn487x_PrintIndicatorCharacters
 23737 ;;		_rn487x_PrintMessage
 23738 ;;		_LIGHTBLUE_PerformAction
 23739 ;;		_RN487X_Example_TransparentUart
 23740 ;;		_main
 23741 ;; This function uses a non-reentrant model
 23742 ;;
 23743                           
 23744     14E5                     _EUSART1_Write:	
 23745                           ;psect for function _EUSART1_Write
 23746                           
 23747     14E5                     l13000:	
 23748                           ;incstack = 0
 23749                           ; Regs used in _EUSART1_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
 23750                           
 23751     14E5                     l13002:	
 23752                           ;mcc_generated_files/eusart1.c: 173: void EUSART1_Write(uint8_t txData);mcc_generated_fi
      +                          les/eusart1.c: 174: {;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBuffer
      +                          Remaining)
 23753                           
 23754                           
 23755                           ;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBufferRemaining)
 23756     14E5  0140               	movlb	0	; select bank0
 23757     14E6  0855               	movf	_eusart1TxBufferRemaining,w	;volatile
 23758     14E7  1903               	btfsc	3,2
 23759     14E8  2CEA               	goto	u9691
 23760     14E9  2CEB               	goto	u9690
 23761     14EA                     u9691:
 23762     14EA  2CE5               	goto	l13002
 23763     14EB                     u9690:
 23764     14EB                     l1873:
 23765                           
 23766                           ;mcc_generated_files/eusart1.c: 179:     if(0 == PIE3bits.TX1IE)
 23767     14EB  014E               	movlb	14	; select bank14
 23768     14EC  1A19               	btfsc	25,4	;volatile
 23769     14ED  2CEF               	goto	u9701
 23770     14EE  2CF0               	goto	u9700
 23771     14EF                     u9701:
 23772     14EF  2CF4               	goto	l1874
 23773     14F0                     u9700:
 23774     14F0                     l13004:
 23775                           
 23776                           ;mcc_generated_files/eusart1.c: 180:     {;mcc_generated_files/eusart1.c: 181:         T
      +                          X1REG = txData;
 23777     14F0  0871               	movf	EUSART1_Write@txData,w
 23778     14F1  0142               	movlb	2	; select bank2
 23779     14F2  009A               	movwf	26	;volatile
 23780                           
 23781                           ;mcc_generated_files/eusart1.c: 182:     }
 23782     14F3  2D0A               	goto	l13016
 23783     14F4                     l1874:	
 23784                           ;mcc_generated_files/eusart1.c: 183:     else
 23785                           
 23786                           
 23787                           ;mcc_generated_files/eusart1.c: 184:     {;mcc_generated_files/eusart1.c: 185:         P
      +                          IE3bits.TX1IE = 0;
 23788     14F4  1219               	bcf	25,4	;volatile
 23789     14F5                     l13006:
 23790                           
 23791                           ;mcc_generated_files/eusart1.c: 186:         eusart1TxBuffer[eusart1TxHead++] = txData;
 23792     14F5  0140               	movlb	0	; select bank0
 23793     14F6  0857               	movf	_eusart1TxHead,w
 23794     14F7  3E4C               	addlw	(low (_eusart1TxBuffer| (0+256)))& (0+255)
 23795     14F8  0086               	movwf	6
 23796     14F9  3001               	movlw	1	; select bank2/3
 23797     14FA  0087               	movwf	7
 23798     14FB  0871               	movf	EUSART1_Write@txData,w
 23799     14FC  0081               	movwf	1
 23800     14FD                     l13008:
 23801     14FD  3001               	movlw	1
 23802     14FE  00F2               	movwf	??_EUSART1_Write
 23803     14FF  0872               	movf	??_EUSART1_Write,w
 23804     1500  07D7               	addwf	_eusart1TxHead,f	;volatile
 23805     1501                     l13010:
 23806                           
 23807                           ;mcc_generated_files/eusart1.c: 187:         if(sizeof(eusart1TxBuffer) <= eusart1TxHead
      +                          )
 23808     1501  3008               	movlw	8
 23809     1502  0257               	subwf	_eusart1TxHead,w	;volatile
 23810     1503  1C03               	skipc
 23811     1504  2D06               	goto	u9711
 23812     1505  2D07               	goto	u9710
 23813     1506                     u9711:
 23814     1506  2D08               	goto	l13014
 23815     1507                     u9710:
 23816     1507                     l13012:
 23817                           
 23818                           ;mcc_generated_files/eusart1.c: 188:         {;mcc_generated_files/eusart1.c: 189:      
      +                                 eusart1TxHead = 0;
 23819     1507  01D7               	clrf	_eusart1TxHead	;volatile
 23820     1508                     l13014:
 23821                           
 23822                           ;mcc_generated_files/eusart1.c: 191:         eusart1TxBufferRemaining--;
 23823     1508  3001               	movlw	1
 23824     1509  02D5               	subwf	_eusart1TxBufferRemaining,f	;volatile
 23825     150A                     l13016:
 23826                           
 23827                           ;mcc_generated_files/eusart1.c: 193:     PIE3bits.TX1IE = 1;
 23828     150A  014E               	movlb	14	; select bank14
 23829     150B  1619               	bsf	25,4	;volatile
 23830     150C                     l1877:
 23831     150C  0008               	return
 23832     150D                     __end_of_EUSART1_Write:
 23833                           
 23834                           	psect	text98
 23835     1496                     __ptext98:	
 23836 ;; *************** function _EUSART2_Write *****************
 23837 ;; Defined at:
 23838 ;;		line 173 in file "mcc_generated_files/eusart2.c"
 23839 ;; Parameters:    Size  Location     Type
 23840 ;;  txData          1    1[COMMON] unsigned char 
 23841 ;; Auto vars:     Size  Location     Type
 23842 ;;		None
 23843 ;; Return value:  Size  Location     Type
 23844 ;;                  1    wreg      void 
 23845 ;; Registers used:
 23846 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 23847 ;; Tracked objects:
 23848 ;;		On entry : 0/0
 23849 ;;		On exit  : 0/0
 23850 ;;		Unchanged: 0/0
 23851 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23852 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23853 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23854 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23855 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23856 ;;Total ram usage:        2 bytes
 23857 ;; Hardware stack levels used: 1
 23858 ;; Hardware stack levels required when called: 4
 23859 ;; This function calls:
 23860 ;;		Nothing
 23861 ;; This function is called by:
 23862 ;;		_RN487X_Write
 23863 ;;		_rn487x_PrintMessageStart
 23864 ;;		_rn487x_PrintMessageEnd
 23865 ;;		_rn487x_PrintIndicatorCharacters
 23866 ;;		_rn487x_PrintMessage
 23867 ;;		_LIGHTBLUE_PerformAction
 23868 ;;		_RN487X_Example_TransparentUart
 23869 ;;		_main
 23870 ;; This function uses a non-reentrant model
 23871 ;;
 23872                           
 23873     1496                     _EUSART2_Write:	
 23874                           ;psect for function _EUSART2_Write
 23875                           
 23876     1496                     l12956:	
 23877                           ;incstack = 0
 23878                           ; Regs used in _EUSART2_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
 23879                           
 23880     1496                     l12958:	
 23881                           ;mcc_generated_files/eusart2.c: 173: void EUSART2_Write(uint8_t txData);mcc_generated_fi
      +                          les/eusart2.c: 174: {;mcc_generated_files/eusart2.c: 175:     while(0 == eusart2TxBuffer
      +                          Remaining)
 23882                           
 23883                           
 23884                           ;mcc_generated_files/eusart2.c: 175:     while(0 == eusart2TxBufferRemaining)
 23885     1496  0140               	movlb	0	; select bank0
 23886     1497  085A               	movf	_eusart2TxBufferRemaining,w	;volatile
 23887     1498  1903               	btfsc	3,2
 23888     1499  2C9B               	goto	u9641
 23889     149A  2C9C               	goto	u9640
 23890     149B                     u9641:
 23891     149B  2C96               	goto	l12958
 23892     149C                     u9640:
 23893     149C                     l1729:
 23894                           
 23895                           ;mcc_generated_files/eusart2.c: 179:     if(0 == PIE3bits.TX2IE)
 23896     149C  014E               	movlb	14	; select bank14
 23897     149D  1B19               	btfsc	25,6	;volatile
 23898     149E  2CA0               	goto	u9651
 23899     149F  2CA1               	goto	u9650
 23900     14A0                     u9651:
 23901     14A0  2CA5               	goto	l1730
 23902     14A1                     u9650:
 23903     14A1                     l12960:
 23904                           
 23905                           ;mcc_generated_files/eusart2.c: 180:     {;mcc_generated_files/eusart2.c: 181:         T
      +                          X2REG = txData;
 23906     14A1  0871               	movf	EUSART2_Write@txData,w
 23907     14A2  0154               	movlb	20	; select bank20
 23908     14A3  009A               	movwf	26	;volatile
 23909                           
 23910                           ;mcc_generated_files/eusart2.c: 182:     }
 23911     14A4  2CBA               	goto	l12972
 23912     14A5                     l1730:	
 23913                           ;mcc_generated_files/eusart2.c: 183:     else
 23914                           
 23915                           
 23916                           ;mcc_generated_files/eusart2.c: 184:     {;mcc_generated_files/eusart2.c: 185:         P
      +                          IE3bits.TX2IE = 0;
 23917     14A5  1319               	bcf	25,6	;volatile
 23918     14A6                     l12962:
 23919                           
 23920                           ;mcc_generated_files/eusart2.c: 186:         eusart2TxBuffer[eusart2TxHead++] = txData;
 23921     14A6  0140               	movlb	0	; select bank0
 23922     14A7  085C               	movf	_eusart2TxHead,w
 23923     14A8  3ED6               	addlw	(low (_eusart2TxBuffer| 0))& (0+255)
 23924     14A9  0086               	movwf	6
 23925     14AA  0187               	clrf	7
 23926     14AB  0871               	movf	EUSART2_Write@txData,w
 23927     14AC  0081               	movwf	1
 23928     14AD                     l12964:
 23929     14AD  3001               	movlw	1
 23930     14AE  00F2               	movwf	??_EUSART2_Write
 23931     14AF  0872               	movf	??_EUSART2_Write,w
 23932     14B0  07DC               	addwf	_eusart2TxHead,f	;volatile
 23933     14B1                     l12966:
 23934                           
 23935                           ;mcc_generated_files/eusart2.c: 187:         if(sizeof(eusart2TxBuffer) <= eusart2TxHead
      +                          )
 23936     14B1  3008               	movlw	8
 23937     14B2  025C               	subwf	_eusart2TxHead,w	;volatile
 23938     14B3  1C03               	skipc
 23939     14B4  2CB6               	goto	u9661
 23940     14B5  2CB7               	goto	u9660
 23941     14B6                     u9661:
 23942     14B6  2CB8               	goto	l12970
 23943     14B7                     u9660:
 23944     14B7                     l12968:
 23945                           
 23946                           ;mcc_generated_files/eusart2.c: 188:         {;mcc_generated_files/eusart2.c: 189:      
      +                                 eusart2TxHead = 0;
 23947     14B7  01DC               	clrf	_eusart2TxHead	;volatile
 23948     14B8                     l12970:
 23949                           
 23950                           ;mcc_generated_files/eusart2.c: 191:         eusart2TxBufferRemaining--;
 23951     14B8  3001               	movlw	1
 23952     14B9  02DA               	subwf	_eusart2TxBufferRemaining,f	;volatile
 23953     14BA                     l12972:
 23954                           
 23955                           ;mcc_generated_files/eusart2.c: 193:     PIE3bits.TX2IE = 1;
 23956     14BA  014E               	movlb	14	; select bank14
 23957     14BB  1719               	bsf	25,6	;volatile
 23958     14BC                     l1733:
 23959     14BC  0008               	return
 23960     14BD                     __end_of_EUSART2_Write:
 23961                           
 23962                           	psect	text99
 23963     07C4                     __ptext99:	
 23964 ;; *************** function _BMA253_GetAccelDataXYZ *****************
 23965 ;; Defined at:
 23966 ;;		line 111 in file "mcc_generated_files/application/BMA253_accel.c"
 23967 ;; Parameters:    Size  Location     Type
 23968 ;;  accelData       1    wreg     PTR struct .
 23969 ;;		 -> LIGHTBLUE_AccelSensor@accelData(6), 
 23970 ;; Auto vars:     Size  Location     Type
 23971 ;;  accelData       1   22[BANK0 ] PTR struct .
 23972 ;;		 -> LIGHTBLUE_AccelSensor@accelData(6), 
 23973 ;;  sensorValue     2   23[BANK0 ] short 
 23974 ;; Return value:  Size  Location     Type
 23975 ;;                  1    wreg      void 
 23976 ;; Registers used:
 23977 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23978 ;; Tracked objects:
 23979 ;;		On entry : 0/0
 23980 ;;		On exit  : 0/0
 23981 ;;		Unchanged: 0/0
 23982 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23983 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23984 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23986 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23987 ;;Total ram usage:        3 bytes
 23988 ;; Hardware stack levels used: 1
 23989 ;; Hardware stack levels required when called: 15
 23990 ;; This function calls:
 23991 ;;		_BMA253_GetAccelDataY
 23992 ;;		_BMA253_GetAccelDataZ
 23993 ;;		_BMA253_NewAccelDataRdyY
 23994 ;;		_BMA253_NewAccelDataRdyZ
 23995 ;;		_TMAG5273_GetXValue
 23996 ;; This function is called by:
 23997 ;;		_LIGHTBLUE_AccelSensor
 23998 ;; This function uses a non-reentrant model
 23999 ;;
 24000                           
 24001     07C4                     _BMA253_GetAccelDataXYZ:	
 24002                           ;psect for function _BMA253_GetAccelDataXYZ
 24003                           
 24004                           
 24005                           ;incstack = 0
 24006 ;; hardware stack exceeded
 24007                           ; Regs used in _BMA253_GetAccelDataXYZ: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 24008                           ;BMA253_GetAccelDataXYZ@accelData stored from wreg
 24009     07C4  0140               	movlb	0	; select bank0
 24010     07C5  00B6               	movwf	BMA253_GetAccelDataXYZ@accelData
 24011     07C6                     l13630:
 24012                           
 24013                           ;mcc_generated_files/application/BMA253_accel.c: 112:     int16_t sensorValue;;mcc_gener
      +                          ated_files/application/BMA253_accel.c: 113:     TMAG5273_GetXValue(&sensorValue);
 24014     07C6  3037               	movlw	(low (BMA253_GetAccelDataXYZ@sensorValue| 0))& (0+255)
 24015     07C7  3190  204B  3187   	fcall	_TMAG5273_GetXValue
 24016     07CA                     l13632:
 24017                           
 24018                           ;mcc_generated_files/application/BMA253_accel.c: 115:     accelData->x = sensorValue;
 24019     07CA  0140               	movlb	0	; select bank0
 24020     07CB  0836               	movf	BMA253_GetAccelDataXYZ@accelData,w
 24021     07CC  0086               	movwf	6
 24022     07CD  0187               	clrf	7
 24023     07CE  0837               	movf	BMA253_GetAccelDataXYZ@sensorValue,w
 24024     07CF  3FC0               	movwi [0]fsr1
 24025     07D0  0838               	movf	BMA253_GetAccelDataXYZ@sensorValue+1,w
 24026     07D1  3FC1               	movwi [1]fsr1
 24027     07D2                     l13634:	
 24028                           ;mcc_generated_files/application/BMA253_accel.c: 117:     while (!BMA253_NewAccelDataRdy
      +                          Y()) {
 24029                           
 24030                           
 24031                           ;mcc_generated_files/application/BMA253_accel.c: 117:     while (!BMA253_NewAccelDataRdy
      +                          Y()) {
 24032     07D2  3190  20A2  3187   	fcall	_BMA253_NewAccelDataRdyY
 24033     07D5  3A00               	xorlw	0
 24034     07D6  1903               	skipnz
 24035     07D7  2FD9               	goto	u10371
 24036     07D8  2FDA               	goto	u10370
 24037     07D9                     u10371:
 24038     07D9  2FD2               	goto	l13634
 24039     07DA                     u10370:
 24040     07DA                     l13636:
 24041                           
 24042                           ;mcc_generated_files/application/BMA253_accel.c: 121:     BMA253_GetAccelDataY(&sensorVa
      +                          lue);
 24043     07DA  3037               	movlw	(low (BMA253_GetAccelDataXYZ@sensorValue| 0))& (0+255)
 24044     07DB  3196  260C  3187   	fcall	_BMA253_GetAccelDataY
 24045     07DE                     l13638:
 24046                           
 24047                           ;mcc_generated_files/application/BMA253_accel.c: 122:     accelData->y = sensorValue;
 24048     07DE  0140               	movlb	0	; select bank0
 24049     07DF  0836               	movf	BMA253_GetAccelDataXYZ@accelData,w
 24050     07E0  3E02               	addlw	2
 24051     07E1  0086               	movwf	6
 24052     07E2  0187               	clrf	7
 24053     07E3  0837               	movf	BMA253_GetAccelDataXYZ@sensorValue,w
 24054     07E4  3FC0               	movwi [0]fsr1
 24055     07E5  0838               	movf	BMA253_GetAccelDataXYZ@sensorValue+1,w
 24056     07E6  3FC1               	movwi [1]fsr1
 24057     07E7                     l13640:	
 24058                           ;mcc_generated_files/application/BMA253_accel.c: 124:     while (!BMA253_NewAccelDataRdy
      +                          Z()) {
 24059                           
 24060                           
 24061                           ;mcc_generated_files/application/BMA253_accel.c: 124:     while (!BMA253_NewAccelDataRdy
      +                          Z()) {
 24062     07E7  3190  20B3  3187   	fcall	_BMA253_NewAccelDataRdyZ
 24063     07EA  3A00               	xorlw	0
 24064     07EB  1903               	skipnz
 24065     07EC  2FEE               	goto	u10381
 24066     07ED  2FEF               	goto	u10380
 24067     07EE                     u10381:
 24068     07EE  2FE7               	goto	l13640
 24069     07EF                     u10380:
 24070     07EF                     l13642:
 24071                           
 24072                           ;mcc_generated_files/application/BMA253_accel.c: 128:     BMA253_GetAccelDataZ(&sensorVa
      +                          lue);
 24073     07EF  3037               	movlw	(low (BMA253_GetAccelDataXYZ@sensorValue| 0))& (0+255)
 24074     07F0  3196  263A  3187   	fcall	_BMA253_GetAccelDataZ
 24075     07F3                     l13644:
 24076                           
 24077                           ;mcc_generated_files/application/BMA253_accel.c: 129:     accelData->z = sensorValue;
 24078     07F3  0140               	movlb	0	; select bank0
 24079     07F4  0836               	movf	BMA253_GetAccelDataXYZ@accelData,w
 24080     07F5  3E04               	addlw	4
 24081     07F6  0086               	movwf	6
 24082     07F7  0187               	clrf	7
 24083     07F8  0837               	movf	BMA253_GetAccelDataXYZ@sensorValue,w
 24084     07F9  3FC0               	movwi [0]fsr1
 24085     07FA  0838               	movf	BMA253_GetAccelDataXYZ@sensorValue+1,w
 24086     07FB  3FC1               	movwi [1]fsr1
 24087     07FC                     l44:
 24088     07FC  0008               	return
 24089     07FD                     __end_of_BMA253_GetAccelDataXYZ:
 24090                           
 24091                           	psect	text100
 24092     104B                     __ptext100:	
 24093 ;; *************** function _TMAG5273_GetXValue *****************
 24094 ;; Defined at:
 24095 ;;		line 2562 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 24096 ;; Parameters:    Size  Location     Type
 24097 ;;  x               1    wreg     PTR short 
 24098 ;;		 -> BMA253_GetAccelDataXYZ@sensorValue(2), 
 24099 ;; Auto vars:     Size  Location     Type
 24100 ;;  x               1   11[COMMON] PTR short 
 24101 ;;		 -> BMA253_GetAccelDataXYZ@sensorValue(2), 
 24102 ;; Return value:  Size  Location     Type
 24103 ;;                  1    wreg      void 
 24104 ;; Registers used:
 24105 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 24106 ;; Tracked objects:
 24107 ;;		On entry : 0/0
 24108 ;;		On exit  : 0/0
 24109 ;;		Unchanged: 0/0
 24110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24111 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24112 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24114 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24115 ;;Total ram usage:        1 bytes
 24116 ;; Hardware stack levels used: 1
 24117 ;; Hardware stack levels required when called: 14
 24118 ;; This function calls:
 24119 ;;		_TMAG5273_CalcMeasurement
 24120 ;; This function is called by:
 24121 ;;		_BMA253_GetAccelDataXYZ
 24122 ;; This function uses a non-reentrant model
 24123 ;;
 24124                           
 24125     104B                     _TMAG5273_GetXValue:	
 24126                           ;psect for function _TMAG5273_GetXValue
 24127                           
 24128                           
 24129                           ;incstack = 0
 24130 ;; hardware stack exceeded
 24131                           ; Regs used in _TMAG5273_GetXValue: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 24132                           ;TMAG5273_GetXValue@x stored from wreg
 24133     104B  00FB               	movwf	TMAG5273_GetXValue@x
 24134     104C                     l13514:
 24135                           
 24136                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2563:     *x = TMAG527
      +                          3_CalcMeasurement(TMAG5273_REG_X_MSB_RESULT);
 24137     104C  3012               	movlw	18
 24138     104D  3193  23A5  3190   	fcall	_TMAG5273_CalcMeasurement
 24139     1050  087B               	movf	TMAG5273_GetXValue@x,w
 24140     1051  0086               	movwf	6
 24141     1052  0187               	clrf	7
 24142     1053  0140               	movlb	0	; select bank0
 24143     1054  082D               	movf	?_TMAG5273_CalcMeasurement,w
 24144     1055  3FC0               	movwi [0]fsr1
 24145     1056  082E               	movf	?_TMAG5273_CalcMeasurement+1,w
 24146     1057  3FC1               	movwi [1]fsr1
 24147     1058                     l1242:
 24148     1058  0008               	return
 24149     1059                     __end_of_TMAG5273_GetXValue:
 24150                           
 24151                           	psect	text101
 24152     13A5                     __ptext101:	
 24153 ;; *************** function _TMAG5273_CalcMeasurement *****************
 24154 ;; Defined at:
 24155 ;;		line 2566 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 24156 ;; Parameters:    Size  Location     Type
 24157 ;;  regAddress      1    wreg     unsigned char 
 24158 ;; Auto vars:     Size  Location     Type
 24159 ;;  regAddress      1   18[BANK0 ] unsigned char 
 24160 ;;  data            2   20[BANK0 ] short 
 24161 ;;  lowerByte       1   19[BANK0 ] unsigned char 
 24162 ;;  upperByte       1    0        unsigned char 
 24163 ;; Return value:  Size  Location     Type
 24164 ;;                  2   13[BANK0 ] short 
 24165 ;; Registers used:
 24166 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 24167 ;; Tracked objects:
 24168 ;;		On entry : 0/0
 24169 ;;		On exit  : 0/0
 24170 ;;		Unchanged: 0/0
 24171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24172 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24173 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24174 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24175 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24176 ;;Total ram usage:        9 bytes
 24177 ;; Hardware stack levels used: 1
 24178 ;; Hardware stack levels required when called: 13
 24179 ;; This function calls:
 24180 ;;		_i2c_read2ByteRegister
 24181 ;; This function is called by:
 24182 ;;		_TMAG5273_GetTemperatureValue
 24183 ;;		_TMAG5273_GetXValue
 24184 ;; This function uses a non-reentrant model
 24185 ;;
 24186                           
 24187     13A5                     _TMAG5273_CalcMeasurement:	
 24188                           ;psect for function _TMAG5273_CalcMeasurement
 24189                           
 24190                           
 24191                           ;incstack = 0
 24192                           ; Regs used in _TMAG5273_CalcMeasurement: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 24193                           ;TMAG5273_CalcMeasurement@regAddress stored from wreg
 24194     13A5  0140               	movlb	0	; select bank0
 24195     13A6  00B2               	movwf	TMAG5273_CalcMeasurement@regAddress
 24196     13A7                     l13462:
 24197                           
 24198                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2567:     int16_t data
      +                          ;;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2568:     uint8_t upp
      +                          erByte;;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2569:     uint8
      +                          _t lowerByte;;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2571:    
      +                           data = i2c_read2ByteRegister(0X22, regAddress);
 24199     13A7  0832               	movf	TMAG5273_CalcMeasurement@regAddress,w
 24200     13A8  00A4               	movwf	i2c_read2ByteRegister@reg
 24201     13A9  3022               	movlw	34
 24202     13AA  3189  21FA  3193   	fcall	_i2c_read2ByteRegister
 24203     13AD  0140               	movlb	0	; select bank0
 24204     13AE  0825               	movf	?_i2c_read2ByteRegister+1,w
 24205     13AF  00B5               	movwf	TMAG5273_CalcMeasurement@data+1
 24206     13B0  0824               	movf	?_i2c_read2ByteRegister,w
 24207     13B1  00B4               	movwf	TMAG5273_CalcMeasurement@data
 24208     13B2                     l13464:
 24209     13B2                     l13466:
 24210                           
 24211                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2573:     lowerByte = 
      +                          (uint8_t) data;
 24212     13B2  0834               	movf	TMAG5273_CalcMeasurement@data,w
 24213     13B3  00B3               	movwf	TMAG5273_CalcMeasurement@lowerByte
 24214     13B4                     l13468:
 24215                           
 24216                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2575:     data = ((int
      +                          16_t) (lowerByte << 8) | upperByte);
 24217     13B4  0833               	movf	TMAG5273_CalcMeasurement@lowerByte,w
 24218     13B5  00AF               	movwf	??_TMAG5273_CalcMeasurement
 24219     13B6  01B0               	clrf	??_TMAG5273_CalcMeasurement+1
 24220     13B7  082F               	movf	??_TMAG5273_CalcMeasurement,w
 24221     13B8  00B0               	movwf	??_TMAG5273_CalcMeasurement+1
 24222     13B9  01AF               	clrf	??_TMAG5273_CalcMeasurement
 24223     13BA  082F               	movf	??_TMAG5273_CalcMeasurement,w
 24224     13BB  00B4               	movwf	TMAG5273_CalcMeasurement@data
 24225     13BC  0830               	movf	??_TMAG5273_CalcMeasurement+1,w
 24226     13BD  00B5               	movwf	TMAG5273_CalcMeasurement@data+1
 24227     13BE                     l13470:
 24228                           
 24229                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2577:     return data;
 24230     13BE  0835               	movf	TMAG5273_CalcMeasurement@data+1,w
 24231     13BF  00AE               	movwf	?_TMAG5273_CalcMeasurement+1
 24232     13C0  0834               	movf	TMAG5273_CalcMeasurement@data,w
 24233     13C1  00AD               	movwf	?_TMAG5273_CalcMeasurement
 24234     13C2                     l1245:
 24235     13C2  0008               	return
 24236     13C3                     __end_of_TMAG5273_CalcMeasurement:
 24237                           
 24238                           	psect	text102
 24239     09FA                     __ptext102:	
 24240 ;; *************** function _i2c_read2ByteRegister *****************
 24241 ;; Defined at:
 24242 ;;		line 135 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 24243 ;; Parameters:    Size  Location     Type
 24244 ;;  address         1    wreg     unsigned char 
 24245 ;;  reg             1    4[BANK0 ] unsigned char 
 24246 ;; Auto vars:     Size  Location     Type
 24247 ;;  address         1   10[BANK0 ] unsigned char 
 24248 ;;  result          2   11[BANK0 ] unsigned short 
 24249 ;; Return value:  Size  Location     Type
 24250 ;;                  2    4[BANK0 ] unsigned short 
 24251 ;; Registers used:
 24252 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 24253 ;; Tracked objects:
 24254 ;;		On entry : 0/0
 24255 ;;		On exit  : 0/0
 24256 ;;		Unchanged: 0/0
 24257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24258 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24259 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24260 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24261 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24262 ;;Total ram usage:        9 bytes
 24263 ;; Hardware stack levels used: 1
 24264 ;; Hardware stack levels required when called: 12
 24265 ;; This function calls:
 24266 ;;		_I2C1_Close
 24267 ;;		_I2C1_MasterWrite
 24268 ;;		_I2C1_Open
 24269 ;;		_I2C1_SetAddressNackCallback
 24270 ;;		_I2C1_SetBuffer
 24271 ;;		_I2C1_SetDataCompleteCallback
 24272 ;; This function is called by:
 24273 ;;		_TMAG5273_GetManufacture
 24274 ;;		_TMAG5273_CalcMeasurement
 24275 ;;		_MCP9844_GetManufacture
 24276 ;;		_MCP9844_GetDevice
 24277 ;;		_MCP9844_CalcTemperature
 24278 ;;		_TMAG5273_GetDevice
 24279 ;; This function uses a non-reentrant model
 24280 ;;
 24281                           
 24282     09FA                     _i2c_read2ByteRegister:	
 24283                           ;psect for function _i2c_read2ByteRegister
 24284                           
 24285                           
 24286                           ;incstack = 0
 24287                           ; Regs used in _i2c_read2ByteRegister: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 24288                           ;i2c_read2ByteRegister@address stored from wreg
 24289     09FA  0140               	movlb	0	; select bank0
 24290     09FB  00AA               	movwf	i2c_read2ByteRegister@address
 24291     09FC                     l13268:
 24292     09FC                     l13270:	
 24293                           ;mcc_generated_files/drivers/i2c_simple_master.c: 135: uint16_t i2c_read2ByteRegister(i2
      +                          c1_address_t address, uint8_t reg);mcc_generated_files/drivers/i2c_simple_master.c: 136:
      +                           {;mcc_generated_files/drivers/i2c_simple_master.c: 138:     uint16_t result;;mcc_genera
      +                          ted_files/drivers/i2c_simple_master.c: 140:     while(!I2C1_Open(address));
 24294                           
 24295     09FC  0140               	movlb	0	; select bank0
 24296     09FD  082A               	movf	i2c_read2ByteRegister@address,w
 24297     09FE  3197  275C  3189   	fcall	_I2C1_Open
 24298     0A01  3A00               	xorlw	0
 24299     0A02  1903               	skipnz
 24300     0A03  2A05               	goto	u9991
 24301     0A04  2A06               	goto	u9990
 24302     0A05                     u9991:
 24303     0A05  29FC               	goto	l13270
 24304     0A06                     u9990:
 24305     0A06                     l13272:
 24306                           
 24307                           ;mcc_generated_files/drivers/i2c_simple_master.c: 141:     I2C1_SetDataCompleteCallback(
      +                          rd2RegCompleteHandler,&result);
 24308     0A06  300E               	movlw	low _rd2RegCompleteHandler
 24309     0A07  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 24310     0A08  3011               	movlw	high _rd2RegCompleteHandler
 24311     0A09  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 24312     0A0A  302B               	movlw	(low (i2c_read2ByteRegister@result| 0))& (0+255)
 24313     0A0B  00F7               	movwf	I2C1_SetDataCompleteCallback@ptr
 24314     0A0C  319F  27C9  3189   	fcall	_I2C1_SetDataCompleteCallback
 24315     0A0F                     l13274:
 24316                           
 24317                           ;mcc_generated_files/drivers/i2c_simple_master.c: 142:     I2C1_SetBuffer(&reg,1);
 24318     0A0F  3024               	movlw	low i2c_read2ByteRegister@reg
 24319     0A10  00F1               	movwf	I2C1_SetBuffer@buffer
 24320     0A11  3000               	movlw	high i2c_read2ByteRegister@reg
 24321     0A12  00F2               	movwf	I2C1_SetBuffer@buffer+1
 24322     0A13  3001               	movlw	1
 24323     0A14  00F3               	movwf	I2C1_SetBuffer@bufferSize
 24324     0A15  3000               	movlw	0
 24325     0A16  00F4               	movwf	I2C1_SetBuffer@bufferSize+1
 24326     0A17  3190  2084  3189   	fcall	_I2C1_SetBuffer
 24327     0A1A                     l13276:
 24328                           
 24329                           ;mcc_generated_files/drivers/i2c_simple_master.c: 143:     I2C1_SetAddressNackCallback((
      +                          (void*)0),((void*)0));
 24330     0A1A  3000               	movlw	0
 24331     0A1B  00F5               	movwf	I2C1_SetAddressNackCallback@cb
 24332     0A1C  00F6               	movwf	I2C1_SetAddressNackCallback@cb+1
 24333     0A1D  3000               	movlw	0
 24334     0A1E  00F7               	movwf	I2C1_SetAddressNackCallback@ptr
 24335     0A1F  00F8               	movwf	I2C1_SetAddressNackCallback@ptr+1
 24336     0A20  319F  27D4  3189   	fcall	_I2C1_SetAddressNackCallback
 24337     0A23                     l13278:
 24338                           
 24339                           ;mcc_generated_files/drivers/i2c_simple_master.c: 144:     I2C1_MasterWrite();
 24340     0A23  319E  26D1  3189   	fcall	_I2C1_MasterWrite
 24341     0A26                     l13280:	
 24342                           ;mcc_generated_files/drivers/i2c_simple_master.c: 145:     while(I2C1_BUSY == I2C1_Close
      +                          ());
 24343                           
 24344     0A26  3192  2287  3189   	fcall	_I2C1_Close
 24345     0A29  3A01               	xorlw	1
 24346     0A2A  1903               	skipnz
 24347     0A2B  2A2D               	goto	u10001
 24348     0A2C  2A2E               	goto	u10000
 24349     0A2D                     u10001:
 24350     0A2D  2A26               	goto	l13280
 24351     0A2E                     u10000:
 24352     0A2E                     l13282:
 24353                           
 24354                           ;mcc_generated_files/drivers/i2c_simple_master.c: 147:     return (result << 8 | result 
      +                          >> 8);
 24355     0A2E  0140               	movlb	0	; select bank0
 24356     0A2F  082C               	movf	i2c_read2ByteRegister@result+1,w
 24357     0A30  00A7               	movwf	??_i2c_read2ByteRegister+1
 24358     0A31  082B               	movf	i2c_read2ByteRegister@result,w
 24359     0A32  00A6               	movwf	??_i2c_read2ByteRegister
 24360     0A33  0827               	movf	??_i2c_read2ByteRegister+1,w
 24361     0A34  00A6               	movwf	??_i2c_read2ByteRegister
 24362     0A35  01A7               	clrf	??_i2c_read2ByteRegister+1
 24363     0A36  082B               	movf	i2c_read2ByteRegister@result,w
 24364     0A37  00A9               	movwf	??_i2c_read2ByteRegister+3
 24365     0A38  01A8               	clrf	??_i2c_read2ByteRegister+2
 24366     0A39  0826               	movf	??_i2c_read2ByteRegister,w
 24367     0A3A  0428               	iorwf	??_i2c_read2ByteRegister+2,w
 24368     0A3B  00A4               	movwf	?_i2c_read2ByteRegister
 24369     0A3C  0827               	movf	??_i2c_read2ByteRegister+1,w
 24370     0A3D  0429               	iorwf	??_i2c_read2ByteRegister+3,w
 24371     0A3E  00A5               	movwf	?_i2c_read2ByteRegister+1
 24372     0A3F                     l546:
 24373     0A3F  0008               	return
 24374     0A40                     __end_of_i2c_read2ByteRegister:
 24375                           
 24376                           	psect	text103
 24377     163A                     __ptext103:	
 24378 ;; *************** function _BMA253_GetAccelDataZ *****************
 24379 ;; Defined at:
 24380 ;;		line 99 in file "mcc_generated_files/application/BMA253_accel.c"
 24381 ;; Parameters:    Size  Location     Type
 24382 ;;  zAccelData      1    wreg     PTR short 
 24383 ;;		 -> BMA253_GetAccelDataXYZ@sensorValue(2), 
 24384 ;; Auto vars:     Size  Location     Type
 24385 ;;  zAccelData      1   13[BANK0 ] PTR short 
 24386 ;;		 -> BMA253_GetAccelDataXYZ@sensorValue(2), 
 24387 ;;  msbData         1   15[BANK0 ] unsigned char 
 24388 ;;  lsbData         1   14[BANK0 ] unsigned char 
 24389 ;; Return value:  Size  Location     Type
 24390 ;;                  1    wreg      void 
 24391 ;; Registers used:
 24392 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 24393 ;; Tracked objects:
 24394 ;;		On entry : 0/0
 24395 ;;		On exit  : 0/0
 24396 ;;		Unchanged: 0/0
 24397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24398 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24399 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24400 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24401 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24402 ;;Total ram usage:        6 bytes
 24403 ;; Hardware stack levels used: 1
 24404 ;; Hardware stack levels required when called: 14
 24405 ;; This function calls:
 24406 ;;		_BMA253_NewAccelDataRdyZ
 24407 ;;		_i2c_read1ByteRegister
 24408 ;; This function is called by:
 24409 ;;		_BMA253_GetAccelDataXYZ
 24410 ;; This function uses a non-reentrant model
 24411 ;;
 24412                           
 24413     163A                     _BMA253_GetAccelDataZ:	
 24414                           ;psect for function _BMA253_GetAccelDataZ
 24415                           
 24416                           
 24417                           ;incstack = 0
 24418 ;; hardware stack exceeded
 24419                           ; Regs used in _BMA253_GetAccelDataZ: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 24420                           ;BMA253_GetAccelDataZ@zAccelData stored from wreg
 24421     163A  0140               	movlb	0	; select bank0
 24422     163B  00AD               	movwf	BMA253_GetAccelDataZ@zAccelData
 24423     163C                     l13506:
 24424     163C                     l13508:	
 24425                           ;mcc_generated_files/application/BMA253_accel.c: 100:     uint8_t lsbData;;mcc_generated
      +                          _files/application/BMA253_accel.c: 101:     uint8_t msbData;;mcc_generated_files/applica
      +                          tion/BMA253_accel.c: 102:     while (!BMA253_NewAccelDataRdyZ()) {
 24426                           
 24427                           
 24428                           ;mcc_generated_files/application/BMA253_accel.c: 102:     while (!BMA253_NewAccelDataRdy
      +                          Z()) {
 24429     163C  3190  20B3  3196   	fcall	_BMA253_NewAccelDataRdyZ
 24430     163F  3A00               	xorlw	0
 24431     1640  1903               	skipnz
 24432     1641  2E43               	goto	u10261
 24433     1642  2E44               	goto	u10260
 24434     1643                     u10261:
 24435     1643  2E3C               	goto	l13508
 24436     1644                     u10260:
 24437     1644                     l13510:
 24438                           
 24439                           ;mcc_generated_files/application/BMA253_accel.c: 106:     lsbData = i2c_read1ByteRegiste
      +                          r((0x19), (0x06));
 24440     1644  3006               	movlw	6
 24441     1645  0140               	movlb	0	; select bank0
 24442     1646  00A4               	movwf	i2c_read1ByteRegister@reg
 24443     1647  3019               	movlw	25
 24444     1648  318B  23B3  3196   	fcall	_i2c_read1ByteRegister
 24445     164B  0140               	movlb	0	; select bank0
 24446     164C  00AE               	movwf	BMA253_GetAccelDataZ@lsbData
 24447                           
 24448                           ;mcc_generated_files/application/BMA253_accel.c: 107:     msbData = i2c_read1ByteRegiste
      +                          r((0x19), (0x07));
 24449     164D  3007               	movlw	7
 24450     164E  00A4               	movwf	i2c_read1ByteRegister@reg
 24451     164F  3019               	movlw	25
 24452     1650  318B  23B3  3196   	fcall	_i2c_read1ByteRegister
 24453     1653  0140               	movlb	0	; select bank0
 24454     1654  00AF               	movwf	BMA253_GetAccelDataZ@msbData
 24455     1655                     l13512:
 24456                           
 24457                           ;mcc_generated_files/application/BMA253_accel.c: 108:     *zAccelData = ((((int16_t) msb
      +                          Data) << 8) | (lsbData)) >> 4;
 24458     1655  082F               	movf	BMA253_GetAccelDataZ@msbData,w
 24459     1656  00AB               	movwf	??_BMA253_GetAccelDataZ+1
 24460     1657  082E               	movf	BMA253_GetAccelDataZ@lsbData,w
 24461     1658  00AA               	movwf	??_BMA253_GetAccelDataZ
 24462     1659  3004               	movlw	4
 24463     165A  00AC               	movwf	??_BMA253_GetAccelDataZ+2
 24464     165B                     u10275:
 24465     165B  0D2B               	rlf	??_BMA253_GetAccelDataZ+1,w
 24466     165C  0CAB               	rrf	??_BMA253_GetAccelDataZ+1,f
 24467     165D  0CAA               	rrf	??_BMA253_GetAccelDataZ,f
 24468     165E  0BAC               	decfsz	??_BMA253_GetAccelDataZ+2,f
 24469     165F  2E5B               	goto	u10275
 24470     1660  082D               	movf	BMA253_GetAccelDataZ@zAccelData,w
 24471     1661  0086               	movwf	6
 24472     1662  0187               	clrf	7
 24473     1663  082A               	movf	??_BMA253_GetAccelDataZ,w
 24474     1664  3FC0               	movwi [0]fsr1
 24475     1665  082B               	movf	??_BMA253_GetAccelDataZ+1,w
 24476     1666  3FC1               	movwi [1]fsr1
 24477     1667                     l35:
 24478     1667  0008               	return
 24479     1668                     __end_of_BMA253_GetAccelDataZ:
 24480                           
 24481                           	psect	text104
 24482     10B3                     __ptext104:	
 24483 ;; *************** function _BMA253_NewAccelDataRdyZ *****************
 24484 ;; Defined at:
 24485 ;;		line 152 in file "mcc_generated_files/application/BMA253_accel.c"
 24486 ;; Parameters:    Size  Location     Type
 24487 ;;		None
 24488 ;; Auto vars:     Size  Location     Type
 24489 ;;  zNewData        1   11[COMMON] _Bool 
 24490 ;; Return value:  Size  Location     Type
 24491 ;;                  1    wreg      _Bool 
 24492 ;; Registers used:
 24493 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 24494 ;; Tracked objects:
 24495 ;;		On entry : 0/0
 24496 ;;		On exit  : 0/0
 24497 ;;		Unchanged: 0/0
 24498 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24500 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24502 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24503 ;;Total ram usage:        1 bytes
 24504 ;; Hardware stack levels used: 1
 24505 ;; Hardware stack levels required when called: 13
 24506 ;; This function calls:
 24507 ;;		_i2c_read1ByteRegister
 24508 ;; This function is called by:
 24509 ;;		_BMA253_GetAccelDataZ
 24510 ;;		_BMA253_GetAccelDataXYZ
 24511 ;; This function uses a non-reentrant model
 24512 ;;
 24513                           
 24514     10B3                     _BMA253_NewAccelDataRdyZ:	
 24515                           ;psect for function _BMA253_NewAccelDataRdyZ
 24516                           
 24517     10B3                     l13418:	
 24518                           ;incstack = 0
 24519                           ; Regs used in _BMA253_NewAccelDataRdyZ: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 24520                           
 24521                           
 24522                           ;mcc_generated_files/application/BMA253_accel.c: 153:     _Bool zNewData;;mcc_generated_
      +                          files/application/BMA253_accel.c: 155:     zNewData = (i2c_read1ByteRegister((0x19), (0x
      +                          06)) & (0x01));
 24523     10B3  3006               	movlw	6
 24524     10B4  0140               	movlb	0	; select bank0
 24525     10B5  00A4               	movwf	i2c_read1ByteRegister@reg
 24526     10B6  3019               	movlw	25
 24527     10B7  318B  23B3  3190   	fcall	_i2c_read1ByteRegister
 24528     10BA  3901               	andlw	1
 24529     10BB  1D03               	btfss	3,2
 24530     10BC  28BE               	goto	u10141
 24531     10BD  28C0               	goto	u10140
 24532     10BE                     u10141:
 24533     10BE  3001               	movlw	1
 24534     10BF  28C1               	goto	u10150
 24535     10C0                     u10140:
 24536     10C0  3000               	movlw	0
 24537     10C1                     u10150:
 24538     10C1  00FB               	movwf	BMA253_NewAccelDataRdyZ@zNewData
 24539     10C2                     l13420:
 24540                           
 24541                           ;mcc_generated_files/application/BMA253_accel.c: 157:     return zNewData;
 24542     10C2  087B               	movf	BMA253_NewAccelDataRdyZ@zNewData,w
 24543     10C3                     l56:
 24544     10C3  0008               	return
 24545     10C4                     __end_of_BMA253_NewAccelDataRdyZ:
 24546                           
 24547                           	psect	text105
 24548     160C                     __ptext105:	
 24549 ;; *************** function _BMA253_GetAccelDataY *****************
 24550 ;; Defined at:
 24551 ;;		line 87 in file "mcc_generated_files/application/BMA253_accel.c"
 24552 ;; Parameters:    Size  Location     Type
 24553 ;;  yAccelData      1    wreg     PTR short 
 24554 ;;		 -> BMA253_GetAccelDataXYZ@sensorValue(2), 
 24555 ;; Auto vars:     Size  Location     Type
 24556 ;;  yAccelData      1   13[BANK0 ] PTR short 
 24557 ;;		 -> BMA253_GetAccelDataXYZ@sensorValue(2), 
 24558 ;;  msbData         1   15[BANK0 ] unsigned char 
 24559 ;;  lsbData         1   14[BANK0 ] unsigned char 
 24560 ;; Return value:  Size  Location     Type
 24561 ;;                  1    wreg      void 
 24562 ;; Registers used:
 24563 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 24564 ;; Tracked objects:
 24565 ;;		On entry : 0/0
 24566 ;;		On exit  : 0/0
 24567 ;;		Unchanged: 0/0
 24568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24569 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24570 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24571 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24572 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24573 ;;Total ram usage:        6 bytes
 24574 ;; Hardware stack levels used: 1
 24575 ;; Hardware stack levels required when called: 14
 24576 ;; This function calls:
 24577 ;;		_BMA253_NewAccelDataRdyY
 24578 ;;		_i2c_read1ByteRegister
 24579 ;; This function is called by:
 24580 ;;		_BMA253_GetAccelDataXYZ
 24581 ;; This function uses a non-reentrant model
 24582 ;;
 24583                           
 24584     160C                     _BMA253_GetAccelDataY:	
 24585                           ;psect for function _BMA253_GetAccelDataY
 24586                           
 24587                           
 24588                           ;incstack = 0
 24589 ;; hardware stack exceeded
 24590                           ; Regs used in _BMA253_GetAccelDataY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 24591                           ;BMA253_GetAccelDataY@yAccelData stored from wreg
 24592     160C  0140               	movlb	0	; select bank0
 24593     160D  00AD               	movwf	BMA253_GetAccelDataY@yAccelData
 24594     160E                     l13498:
 24595     160E                     l13500:	
 24596                           ;mcc_generated_files/application/BMA253_accel.c: 88:     uint8_t lsbData;;mcc_generated_
      +                          files/application/BMA253_accel.c: 89:     uint8_t msbData;;mcc_generated_files/applicati
      +                          on/BMA253_accel.c: 90:     while (!BMA253_NewAccelDataRdyY()) {
 24597                           
 24598                           
 24599                           ;mcc_generated_files/application/BMA253_accel.c: 90:     while (!BMA253_NewAccelDataRdyY
      +                          ()) {
 24600     160E  3190  20A2  3196   	fcall	_BMA253_NewAccelDataRdyY
 24601     1611  3A00               	xorlw	0
 24602     1612  1903               	skipnz
 24603     1613  2E15               	goto	u10241
 24604     1614  2E16               	goto	u10240
 24605     1615                     u10241:
 24606     1615  2E0E               	goto	l13500
 24607     1616                     u10240:
 24608     1616                     l13502:
 24609                           
 24610                           ;mcc_generated_files/application/BMA253_accel.c: 94:     lsbData = i2c_read1ByteRegister
      +                          ((0x19), (0x04));
 24611     1616  3004               	movlw	4
 24612     1617  0140               	movlb	0	; select bank0
 24613     1618  00A4               	movwf	i2c_read1ByteRegister@reg
 24614     1619  3019               	movlw	25
 24615     161A  318B  23B3  3196   	fcall	_i2c_read1ByteRegister
 24616     161D  0140               	movlb	0	; select bank0
 24617     161E  00AE               	movwf	BMA253_GetAccelDataY@lsbData
 24618                           
 24619                           ;mcc_generated_files/application/BMA253_accel.c: 95:     msbData = i2c_read1ByteRegister
      +                          ((0x19), (0x05));
 24620     161F  3005               	movlw	5
 24621     1620  00A4               	movwf	i2c_read1ByteRegister@reg
 24622     1621  3019               	movlw	25
 24623     1622  318B  23B3  3196   	fcall	_i2c_read1ByteRegister
 24624     1625  0140               	movlb	0	; select bank0
 24625     1626  00AF               	movwf	BMA253_GetAccelDataY@msbData
 24626     1627                     l13504:
 24627                           
 24628                           ;mcc_generated_files/application/BMA253_accel.c: 96:     *yAccelData = ((((int16_t) msbD
      +                          ata) << 8) | (lsbData)) >> 4;
 24629     1627  082F               	movf	BMA253_GetAccelDataY@msbData,w
 24630     1628  00AB               	movwf	??_BMA253_GetAccelDataY+1
 24631     1629  082E               	movf	BMA253_GetAccelDataY@lsbData,w
 24632     162A  00AA               	movwf	??_BMA253_GetAccelDataY
 24633     162B  3004               	movlw	4
 24634     162C  00AC               	movwf	??_BMA253_GetAccelDataY+2
 24635     162D                     u10255:
 24636     162D  0D2B               	rlf	??_BMA253_GetAccelDataY+1,w
 24637     162E  0CAB               	rrf	??_BMA253_GetAccelDataY+1,f
 24638     162F  0CAA               	rrf	??_BMA253_GetAccelDataY,f
 24639     1630  0BAC               	decfsz	??_BMA253_GetAccelDataY+2,f
 24640     1631  2E2D               	goto	u10255
 24641     1632  082D               	movf	BMA253_GetAccelDataY@yAccelData,w
 24642     1633  0086               	movwf	6
 24643     1634  0187               	clrf	7
 24644     1635  082A               	movf	??_BMA253_GetAccelDataY,w
 24645     1636  3FC0               	movwi [0]fsr1
 24646     1637  082B               	movf	??_BMA253_GetAccelDataY+1,w
 24647     1638  3FC1               	movwi [1]fsr1
 24648     1639                     l29:
 24649     1639  0008               	return
 24650     163A                     __end_of_BMA253_GetAccelDataY:
 24651                           
 24652                           	psect	text106
 24653     10A2                     __ptext106:	
 24654 ;; *************** function _BMA253_NewAccelDataRdyY *****************
 24655 ;; Defined at:
 24656 ;;		line 144 in file "mcc_generated_files/application/BMA253_accel.c"
 24657 ;; Parameters:    Size  Location     Type
 24658 ;;		None
 24659 ;; Auto vars:     Size  Location     Type
 24660 ;;  yNewData        1   11[COMMON] _Bool 
 24661 ;; Return value:  Size  Location     Type
 24662 ;;                  1    wreg      _Bool 
 24663 ;; Registers used:
 24664 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 24665 ;; Tracked objects:
 24666 ;;		On entry : 0/0
 24667 ;;		On exit  : 0/0
 24668 ;;		Unchanged: 0/0
 24669 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24670 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24671 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24673 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24674 ;;Total ram usage:        1 bytes
 24675 ;; Hardware stack levels used: 1
 24676 ;; Hardware stack levels required when called: 13
 24677 ;; This function calls:
 24678 ;;		_i2c_read1ByteRegister
 24679 ;; This function is called by:
 24680 ;;		_BMA253_GetAccelDataY
 24681 ;;		_BMA253_GetAccelDataXYZ
 24682 ;; This function uses a non-reentrant model
 24683 ;;
 24684                           
 24685     10A2                     _BMA253_NewAccelDataRdyY:	
 24686                           ;psect for function _BMA253_NewAccelDataRdyY
 24687                           
 24688     10A2                     l13412:	
 24689                           ;incstack = 0
 24690                           ; Regs used in _BMA253_NewAccelDataRdyY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 24691                           
 24692                           
 24693                           ;mcc_generated_files/application/BMA253_accel.c: 145:     _Bool yNewData;;mcc_generated_
      +                          files/application/BMA253_accel.c: 147:     yNewData = (i2c_read1ByteRegister((0x19), (0x
      +                          04)) & (0x01));
 24694     10A2  3004               	movlw	4
 24695     10A3  0140               	movlb	0	; select bank0
 24696     10A4  00A4               	movwf	i2c_read1ByteRegister@reg
 24697     10A5  3019               	movlw	25
 24698     10A6  318B  23B3  3190   	fcall	_i2c_read1ByteRegister
 24699     10A9  3901               	andlw	1
 24700     10AA  1D03               	btfss	3,2
 24701     10AB  28AD               	goto	u10121
 24702     10AC  28AF               	goto	u10120
 24703     10AD                     u10121:
 24704     10AD  3001               	movlw	1
 24705     10AE  28B0               	goto	u10130
 24706     10AF                     u10120:
 24707     10AF  3000               	movlw	0
 24708     10B0                     u10130:
 24709     10B0  00FB               	movwf	BMA253_NewAccelDataRdyY@yNewData
 24710     10B1                     l13414:
 24711                           
 24712                           ;mcc_generated_files/application/BMA253_accel.c: 149:     return yNewData;
 24713     10B1  087B               	movf	BMA253_NewAccelDataRdyY@yNewData,w
 24714     10B2                     l53:
 24715     10B2  0008               	return
 24716     10B3                     __end_of_BMA253_NewAccelDataRdyY:
 24717                           
 24718                           	psect	text107
 24719     0BB3                     __ptext107:	
 24720 ;; *************** function _i2c_read1ByteRegister *****************
 24721 ;; Defined at:
 24722 ;;		line 97 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 24723 ;; Parameters:    Size  Location     Type
 24724 ;;  address         1    wreg     unsigned char 
 24725 ;;  reg             1    4[BANK0 ] unsigned char 
 24726 ;; Auto vars:     Size  Location     Type
 24727 ;;  address         1    5[BANK0 ] unsigned char 
 24728 ;;  x               2    7[BANK0 ] int 
 24729 ;;  d2              1    9[BANK0 ] unsigned char 
 24730 ;;  e               1    6[BANK0 ] enum E358
 24731 ;; Return value:  Size  Location     Type
 24732 ;;                  1    wreg      unsigned char 
 24733 ;; Registers used:
 24734 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 24735 ;; Tracked objects:
 24736 ;;		On entry : 0/0
 24737 ;;		On exit  : 0/0
 24738 ;;		Unchanged: 0/0
 24739 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24740 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24741 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24743 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24744 ;;Total ram usage:        6 bytes
 24745 ;; Hardware stack levels used: 1
 24746 ;; Hardware stack levels required when called: 12
 24747 ;; This function calls:
 24748 ;;		_I2C1_Close
 24749 ;;		_I2C1_MasterWrite
 24750 ;;		_I2C1_Open
 24751 ;;		_I2C1_SetAddressNackCallback
 24752 ;;		_I2C1_SetBuffer
 24753 ;;		_I2C1_SetDataCompleteCallback
 24754 ;; This function is called by:
 24755 ;;		_BMA253_GetAccelDataY
 24756 ;;		_BMA253_GetAccelDataZ
 24757 ;;		_BMA253_NewAccelDataRdyY
 24758 ;;		_BMA253_NewAccelDataRdyZ
 24759 ;;		_readRegister
 24760 ;;		_BMA253_GetAccelDataX
 24761 ;;		_BMA253_GetAccelChipId
 24762 ;;		_BMA253_NewAccelDataRdyX
 24763 ;; This function uses a non-reentrant model
 24764 ;;
 24765                           
 24766     0BB3                     _i2c_read1ByteRegister:	
 24767                           ;psect for function _i2c_read1ByteRegister
 24768                           
 24769                           
 24770                           ;incstack = 0
 24771                           ; Regs used in _i2c_read1ByteRegister: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 24772                           ;i2c_read1ByteRegister@address stored from wreg
 24773     0BB3  0140               	movlb	0	; select bank0
 24774     0BB4  00A5               	movwf	i2c_read1ByteRegister@address
 24775     0BB5                     l13120:
 24776                           
 24777                           ;mcc_generated_files/drivers/i2c_simple_master.c: 97: uint8_t i2c_read1ByteRegister(i2c1
      +                          _address_t address, uint8_t reg);mcc_generated_files/drivers/i2c_simple_master.c: 98: {;
      +                          mcc_generated_files/drivers/i2c_simple_master.c: 99:     uint8_t d2=42;
 24778     0BB5  302A               	movlw	42
 24779     0BB6  00A9               	movwf	i2c_read1ByteRegister@d2
 24780                           
 24781                           ;mcc_generated_files/drivers/i2c_simple_master.c: 100:     i2c1_error_t e;;mcc_generated
      +                          _files/drivers/i2c_simple_master.c: 101:     int x;;mcc_generated_files/drivers/i2c_simp
      +                          le_master.c: 103:     for(x = 2; x != 0; x--)
 24782     0BB7  3002               	movlw	2
 24783     0BB8  00A7               	movwf	i2c_read1ByteRegister@x
 24784     0BB9  3000               	movlw	0
 24785     0BBA  00A8               	movwf	i2c_read1ByteRegister@x+1
 24786     0BBB                     l13126:
 24787     0BBB  0140               	movlb	0	; select bank0
 24788     0BBC  0825               	movf	i2c_read1ByteRegister@address,w
 24789     0BBD  3197  275C  318B   	fcall	_I2C1_Open
 24790     0BC0  3A00               	xorlw	0
 24791     0BC1  1903               	skipnz
 24792     0BC2  2BC4               	goto	u9771
 24793     0BC3  2BC5               	goto	u9770
 24794     0BC4                     u9771:
 24795     0BC4  2BBB               	goto	l13126
 24796     0BC5                     u9770:
 24797     0BC5                     l13128:
 24798                           
 24799                           ;mcc_generated_files/drivers/i2c_simple_master.c: 106:         I2C1_SetDataCompleteCallb
      +                          ack(rd1RegCompleteHandler,&d2);
 24800     0BC5  30FB               	movlw	low _rd1RegCompleteHandler
 24801     0BC6  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 24802     0BC7  3010               	movlw	high _rd1RegCompleteHandler
 24803     0BC8  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 24804     0BC9  3029               	movlw	(low (i2c_read1ByteRegister@d2| 0))& (0+255)
 24805     0BCA  00F7               	movwf	I2C1_SetDataCompleteCallback@ptr
 24806     0BCB  319F  27C9  318B   	fcall	_I2C1_SetDataCompleteCallback
 24807     0BCE                     l13130:
 24808                           
 24809                           ;mcc_generated_files/drivers/i2c_simple_master.c: 107:         I2C1_SetBuffer(&reg,1);
 24810     0BCE  3024               	movlw	low i2c_read1ByteRegister@reg
 24811     0BCF  00F1               	movwf	I2C1_SetBuffer@buffer
 24812     0BD0  3000               	movlw	high i2c_read1ByteRegister@reg
 24813     0BD1  00F2               	movwf	I2C1_SetBuffer@buffer+1
 24814     0BD2  3001               	movlw	1
 24815     0BD3  00F3               	movwf	I2C1_SetBuffer@bufferSize
 24816     0BD4  3000               	movlw	0
 24817     0BD5  00F4               	movwf	I2C1_SetBuffer@bufferSize+1
 24818     0BD6  3190  2084  318B   	fcall	_I2C1_SetBuffer
 24819     0BD9                     l13132:
 24820                           
 24821                           ;mcc_generated_files/drivers/i2c_simple_master.c: 108:         I2C1_SetAddressNackCallba
      +                          ck(((void*)0),((void*)0));
 24822     0BD9  3000               	movlw	0
 24823     0BDA  00F5               	movwf	I2C1_SetAddressNackCallback@cb
 24824     0BDB  00F6               	movwf	I2C1_SetAddressNackCallback@cb+1
 24825     0BDC  3000               	movlw	0
 24826     0BDD  00F7               	movwf	I2C1_SetAddressNackCallback@ptr
 24827     0BDE  00F8               	movwf	I2C1_SetAddressNackCallback@ptr+1
 24828     0BDF  319F  27D4  318B   	fcall	_I2C1_SetAddressNackCallback
 24829     0BE2                     l13134:
 24830                           
 24831                           ;mcc_generated_files/drivers/i2c_simple_master.c: 109:         I2C1_MasterWrite();
 24832     0BE2  319E  26D1  318B   	fcall	_I2C1_MasterWrite
 24833     0BE5                     l13136:	
 24834                           ;mcc_generated_files/drivers/i2c_simple_master.c: 110:         while(I2C1_BUSY == (e = I
      +                          2C1_Close()));
 24835                           
 24836     0BE5  3192  2287  318B   	fcall	_I2C1_Close
 24837     0BE8  0140               	movlb	0	; select bank0
 24838     0BE9  00A6               	movwf	i2c_read1ByteRegister@e
 24839     0BEA  0326               	decf	i2c_read1ByteRegister@e,w
 24840     0BEB  1903               	btfsc	3,2
 24841     0BEC  2BEE               	goto	u9781
 24842     0BED  2BEF               	goto	u9780
 24843     0BEE                     u9781:
 24844     0BEE  2BE5               	goto	l13136
 24845     0BEF                     u9780:
 24846     0BEF                     l13138:
 24847                           
 24848                           ;mcc_generated_files/drivers/i2c_simple_master.c: 111:         if(e==I2C1_NOERR) break;
 24849     0BEF  0826               	movf	i2c_read1ByteRegister@e,w
 24850     0BF0  1D03               	btfss	3,2
 24851     0BF1  2BF3               	goto	u9791
 24852     0BF2  2BF4               	goto	u9790
 24853     0BF3                     u9791:
 24854     0BF3  2BF5               	goto	l13142
 24855     0BF4                     u9790:
 24856     0BF4  2BFF               	goto	l13146
 24857     0BF5                     l13142:
 24858                           
 24859                           ;mcc_generated_files/drivers/i2c_simple_master.c: 112:     }
 24860     0BF5  30FF               	movlw	255
 24861     0BF6  07A7               	addwf	i2c_read1ByteRegister@x,f
 24862     0BF7  30FF               	movlw	255
 24863     0BF8  3DA8               	addwfc	i2c_read1ByteRegister@x+1,f
 24864     0BF9                     l13144:
 24865     0BF9  0827               	movf	i2c_read1ByteRegister@x,w
 24866     0BFA  0428               	iorwf	i2c_read1ByteRegister@x+1,w
 24867     0BFB  1D03               	btfss	3,2
 24868     0BFC  2BFE               	goto	u9801
 24869     0BFD  2BFF               	goto	u9800
 24870     0BFE                     u9801:
 24871     0BFE  2BBB               	goto	l13126
 24872     0BFF                     u9800:
 24873     0BFF                     l13146:
 24874                           
 24875                           ;mcc_generated_files/drivers/i2c_simple_master.c: 115:     return d2;
 24876     0BFF  0829               	movf	i2c_read1ByteRegister@d2,w
 24877     0C00                     l534:
 24878     0C00  0008               	return
 24879     0C01                     __end_of_i2c_read1ByteRegister:
 24880                           
 24881                           	psect	text108
 24882     1FD4                     __ptext108:	
 24883 ;; *************** function _I2C1_SetAddressNackCallback *****************
 24884 ;; Defined at:
 24885 ;;		line 283 in file "mcc_generated_files/i2c1_master.c"
 24886 ;; Parameters:    Size  Location     Type
 24887 ;;  cb              2    5[COMMON] PTR FTN(PTR void ,)enum 
 24888 ;;		 -> NULL(1), 
 24889 ;;  ptr             2    7[COMMON] PTR void 
 24890 ;;		 -> NULL(0), 
 24891 ;; Auto vars:     Size  Location     Type
 24892 ;;		None
 24893 ;; Return value:  Size  Location     Type
 24894 ;;                  1    wreg      void 
 24895 ;; Registers used:
 24896 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 24897 ;; Tracked objects:
 24898 ;;		On entry : 0/0
 24899 ;;		On exit  : 0/0
 24900 ;;		Unchanged: 0/0
 24901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24902 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24903 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24904 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24905 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24906 ;;Total ram usage:        4 bytes
 24907 ;; Hardware stack levels used: 1
 24908 ;; Hardware stack levels required when called: 5
 24909 ;; This function calls:
 24910 ;;		_I2C1_SetCallback
 24911 ;; This function is called by:
 24912 ;;		_i2c_write1ByteRegister
 24913 ;;		_i2c_read1ByteRegister
 24914 ;;		_i2c_read2ByteRegister
 24915 ;;		_i2c_writeNBytes
 24916 ;;		_i2c_write2ByteRegister
 24917 ;;		_i2c_readDataBlock
 24918 ;;		_I2C1_Read1ByteRegister
 24919 ;;		_I2C1_Read2ByteRegister
 24920 ;;		_I2C1_Write1ByteRegister
 24921 ;;		_I2C1_Write2ByteRegister
 24922 ;;		_I2C1_WriteNBytes
 24923 ;;		_I2C1_ReadDataBlock
 24924 ;; This function uses a non-reentrant model
 24925 ;;
 24926                           
 24927     1FD4                     _I2C1_SetAddressNackCallback:	
 24928                           ;psect for function _I2C1_SetAddressNackCallback
 24929                           
 24930     1FD4                     l13086:	
 24931                           ;incstack = 0
 24932                           ; Regs used in _I2C1_SetAddressNackCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 24933                           
 24934                           
 24935                           ;mcc_generated_files/i2c1_master.c: 283: void I2C1_SetAddressNackCallback(i2c1_callback_
      +                          t cb, void *ptr);mcc_generated_files/i2c1_master.c: 284: {;mcc_generated_files/i2c1_mast
      +                          er.c: 285:     I2C1_SetCallback(I2C1_ADDR_NACK, cb, ptr);
 24936     1FD4  0876               	movf	I2C1_SetAddressNackCallback@cb+1,w
 24937     1FD5  00F2               	movwf	I2C1_SetCallback@cb+1
 24938     1FD6  0875               	movf	I2C1_SetAddressNackCallback@cb,w
 24939     1FD7  00F1               	movwf	I2C1_SetCallback@cb
 24940     1FD8  0877               	movf	I2C1_SetAddressNackCallback@ptr,w
 24941     1FD9  00F3               	movwf	I2C1_SetCallback@ptr
 24942     1FDA  3002               	movlw	2
 24943     1FDB  3194  244C  319F   	fcall	_I2C1_SetCallback
 24944     1FDE                     l2432:
 24945     1FDE  0008               	return
 24946     1FDF                     __end_of_I2C1_SetAddressNackCallback:
 24947                           
 24948                           	psect	text109
 24949     175C                     __ptext109:	
 24950 ;; *************** function _I2C1_Open *****************
 24951 ;; Defined at:
 24952 ;;		line 176 in file "mcc_generated_files/i2c1_master.c"
 24953 ;; Parameters:    Size  Location     Type
 24954 ;;  address         1    wreg     unsigned char 
 24955 ;; Auto vars:     Size  Location     Type
 24956 ;;  address         1    1[COMMON] unsigned char 
 24957 ;;  returnValue     1    2[COMMON] enum E358
 24958 ;; Return value:  Size  Location     Type
 24959 ;;                  1    wreg      enum E358
 24960 ;; Registers used:
 24961 ;;		wreg, status,2, status,0, pclath, cstack
 24962 ;; Tracked objects:
 24963 ;;		On entry : 0/0
 24964 ;;		On exit  : 0/0
 24965 ;;		Unchanged: 0/0
 24966 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24967 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24968 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24969 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24970 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24971 ;;Total ram usage:        2 bytes
 24972 ;; Hardware stack levels used: 1
 24973 ;; Hardware stack levels required when called: 5
 24974 ;; This function calls:
 24975 ;;		_I2C1_MasterClearIrq
 24976 ;;		_I2C1_MasterOpen
 24977 ;; This function is called by:
 24978 ;;		_i2c_write1ByteRegister
 24979 ;;		_i2c_read1ByteRegister
 24980 ;;		_i2c_read2ByteRegister
 24981 ;;		_i2c_writeNBytes
 24982 ;;		_i2c_write2ByteRegister
 24983 ;;		_i2c_readDataBlock
 24984 ;;		_i2c_readNBytes
 24985 ;;		_I2C1_Read1ByteRegister
 24986 ;;		_I2C1_Read2ByteRegister
 24987 ;;		_I2C1_Write1ByteRegister
 24988 ;;		_I2C1_Write2ByteRegister
 24989 ;;		_I2C1_WriteNBytes
 24990 ;;		_I2C1_ReadNBytes
 24991 ;;		_I2C1_ReadDataBlock
 24992 ;; This function uses a non-reentrant model
 24993 ;;
 24994                           
 24995     175C                     _I2C1_Open:	
 24996                           ;psect for function _I2C1_Open
 24997                           
 24998                           
 24999                           ;incstack = 0
 25000                           ; Regs used in _I2C1_Open: [wreg+status,2+status,0+pclath+cstack]
 25001                           ;I2C1_Open@address stored from wreg
 25002     175C  00F1               	movwf	I2C1_Open@address
 25003     175D                     l13054:
 25004                           
 25005                           ;mcc_generated_files/i2c1_master.c: 176: i2c1_error_t I2C1_Open(i2c1_address_t address);
      +                          mcc_generated_files/i2c1_master.c: 177: {;mcc_generated_files/i2c1_master.c: 178:     i2
      +                          c1_error_t returnValue = I2C1_BUSY;
 25006     175D  01F2               	clrf	I2C1_Open@returnValue
 25007     175E  0AF2               	incf	I2C1_Open@returnValue,f
 25008                           
 25009                           ;mcc_generated_files/i2c1_master.c: 180:     if(!I2C1_Status.inUse)
 25010     175F  0141               	movlb	1	; select bank1
 25011     1760  193D               	btfsc	(_I2C1_Status^(0+128)+29),2
 25012     1761  2F63               	goto	u9751
 25013     1762  2F64               	goto	u9750
 25014     1763                     u9751:
 25015     1763  2F90               	goto	l2399
 25016     1764                     u9750:
 25017     1764                     l13056:
 25018                           
 25019                           ;mcc_generated_files/i2c1_master.c: 181:     {;mcc_generated_files/i2c1_master.c: 182:  
      +                                 I2C1_Status.address = address;
 25020     1764  0871               	movf	I2C1_Open@address,w
 25021     1765  00B6               	movwf	(_I2C1_Status^(0+128)+22)
 25022     1766                     l13058:
 25023                           
 25024                           ;mcc_generated_files/i2c1_master.c: 183:         I2C1_Status.busy = 0;
 25025     1766  10BD               	bcf	(_I2C1_Status^(0+128)+29),1
 25026     1767                     l13060:
 25027                           
 25028                           ;mcc_generated_files/i2c1_master.c: 184:         I2C1_Status.inUse = 1;
 25029     1767  153D               	bsf	(_I2C1_Status^(0+128)+29),2
 25030     1768                     l13062:
 25031                           
 25032                           ;mcc_generated_files/i2c1_master.c: 185:         I2C1_Status.addressNackCheck = 0;
 25033     1768  103D               	bcf	(_I2C1_Status^(0+128)+29),0
 25034                           
 25035                           ;mcc_generated_files/i2c1_master.c: 186:         I2C1_Status.state = I2C1_RESET;
 25036     1769  300E               	movlw	14
 25037     176A  00BB               	movwf	(_I2C1_Status^(0+128)+27)
 25038                           
 25039                           ;mcc_generated_files/i2c1_master.c: 187:         I2C1_Status.time_out_value = 500;
 25040     176B  30F4               	movlw	244
 25041     176C  00B4               	movwf	(_I2C1_Status^(0+128)+20)
 25042     176D  3001               	movlw	1
 25043     176E  00B5               	movwf	(_I2C1_Status^(0+128)+21)
 25044     176F                     l13064:
 25045                           
 25046                           ;mcc_generated_files/i2c1_master.c: 188:         I2C1_Status.bufferFree = 1;
 25047     176F  15BD               	bsf	(_I2C1_Status^(0+128)+29),3
 25048                           
 25049                           ;mcc_generated_files/i2c1_master.c: 191:         I2C1_Status.callbackTable[I2C1_DATA_COM
      +                          PLETE]=I2C1_CallbackReturnStop;
 25050     1770  3060               	movlw	low _I2C1_CallbackReturnStop
 25051     1771  00A0               	movwf	_I2C1_Status^(0+128)
 25052     1772  301E               	movlw	high _I2C1_CallbackReturnStop
 25053     1773  00A1               	movwf	(_I2C1_Status^(0+128)+1)
 25054     1774                     l13066:
 25055                           
 25056                           ;mcc_generated_files/i2c1_master.c: 192:         I2C1_Status.callbackPayload[I2C1_DATA_C
      +                          OMPLETE] = ((void*)0);
 25057     1774  01AC               	clrf	(low ((_I2C1_Status| 0+12)))^(0+128)
 25058     1775                     l13068:
 25059                           
 25060                           ;mcc_generated_files/i2c1_master.c: 193:         I2C1_Status.callbackTable[I2C1_WRITE_CO
      +                          LLISION]=I2C1_CallbackReturnStop;
 25061     1775  3060               	movlw	low _I2C1_CallbackReturnStop
 25062     1776  00A2               	movwf	(low ((_I2C1_Status| 0+2)))^(0+128)
 25063     1777  301E               	movlw	high _I2C1_CallbackReturnStop
 25064     1778  00A3               	movwf	((low ((_I2C1_Status| 0+2)))^(0+128)+1)
 25065                           
 25066                           ;mcc_generated_files/i2c1_master.c: 194:         I2C1_Status.callbackPayload[I2C1_WRITE_
      +                          COLLISION] = ((void*)0);
 25067     1779  01AD               	clrf	(low ((_I2C1_Status| 0+13)))^(0+128)
 25068     177A                     l13070:
 25069                           
 25070                           ;mcc_generated_files/i2c1_master.c: 195:         I2C1_Status.callbackTable[I2C1_ADDR_NAC
      +                          K]=I2C1_CallbackReturnStop;
 25071     177A  3060               	movlw	low _I2C1_CallbackReturnStop
 25072     177B  00A4               	movwf	(low ((_I2C1_Status| 0+4)))^(0+128)
 25073     177C  301E               	movlw	high _I2C1_CallbackReturnStop
 25074     177D  00A5               	movwf	((low ((_I2C1_Status| 0+4)))^(0+128)+1)
 25075     177E                     l13072:
 25076                           
 25077                           ;mcc_generated_files/i2c1_master.c: 196:         I2C1_Status.callbackPayload[I2C1_ADDR_N
      +                          ACK] = ((void*)0);
 25078     177E  01AE               	clrf	(low ((_I2C1_Status| 0+14)))^(0+128)
 25079                           
 25080                           ;mcc_generated_files/i2c1_master.c: 197:         I2C1_Status.callbackTable[I2C1_DATA_NAC
      +                          K]=I2C1_CallbackReturnStop;
 25081     177F  3060               	movlw	low _I2C1_CallbackReturnStop
 25082     1780  00A6               	movwf	(low ((_I2C1_Status| 0+6)))^(0+128)
 25083     1781  301E               	movlw	high _I2C1_CallbackReturnStop
 25084     1782  00A7               	movwf	((low ((_I2C1_Status| 0+6)))^(0+128)+1)
 25085     1783                     l13074:
 25086                           
 25087                           ;mcc_generated_files/i2c1_master.c: 198:         I2C1_Status.callbackPayload[I2C1_DATA_N
      +                          ACK] = ((void*)0);
 25088     1783  01AF               	clrf	(low ((_I2C1_Status| 0+15)))^(0+128)
 25089     1784                     l13076:
 25090                           
 25091                           ;mcc_generated_files/i2c1_master.c: 199:         I2C1_Status.callbackTable[I2C1_TIMEOUT]
      +                          =I2C1_CallbackReturnReset;
 25092     1784  3062               	movlw	low _I2C1_CallbackReturnReset
 25093     1785  00A8               	movwf	(low ((_I2C1_Status| 0+8)))^(0+128)
 25094     1786  301E               	movlw	high _I2C1_CallbackReturnReset
 25095     1787  00A9               	movwf	((low ((_I2C1_Status| 0+8)))^(0+128)+1)
 25096                           
 25097                           ;mcc_generated_files/i2c1_master.c: 200:         I2C1_Status.callbackPayload[I2C1_TIMEOU
      +                          T] = ((void*)0);
 25098     1788  01B0               	clrf	(low ((_I2C1_Status| 0+16)))^(0+128)
 25099     1789                     l13078:
 25100                           
 25101                           ;mcc_generated_files/i2c1_master.c: 202:         I2C1_MasterClearIrq();
 25102     1789  319E  2664  3197   	fcall	_I2C1_MasterClearIrq
 25103     178C                     l13080:
 25104                           
 25105                           ;mcc_generated_files/i2c1_master.c: 203:         I2C1_MasterOpen();
 25106     178C  3190  203E  3197   	fcall	_I2C1_MasterOpen
 25107     178F                     l13082:
 25108                           
 25109                           ;mcc_generated_files/i2c1_master.c: 204:         returnValue = I2C1_NOERR;
 25110     178F  01F2               	clrf	I2C1_Open@returnValue
 25111     1790                     l2399:	
 25112                           ;mcc_generated_files/i2c1_master.c: 205:     }
 25113                           
 25114                           
 25115                           ;mcc_generated_files/i2c1_master.c: 206:     return returnValue;
 25116     1790  0872               	movf	I2C1_Open@returnValue,w
 25117     1791                     l2400:
 25118     1791  0008               	return
 25119     1792                     __end_of_I2C1_Open:
 25120                           
 25121                           	psect	text110
 25122     103E                     __ptext110:	
 25123 ;; *************** function _I2C1_MasterOpen *****************
 25124 ;; Defined at:
 25125 ;;		line 543 in file "mcc_generated_files/i2c1_master.c"
 25126 ;; Parameters:    Size  Location     Type
 25127 ;;		None
 25128 ;; Auto vars:     Size  Location     Type
 25129 ;;		None
 25130 ;; Return value:  Size  Location     Type
 25131 ;;                  1    wreg      _Bool 
 25132 ;; Registers used:
 25133 ;;		wreg, status,2
 25134 ;; Tracked objects:
 25135 ;;		On entry : 0/0
 25136 ;;		On exit  : 0/0
 25137 ;;		Unchanged: 0/0
 25138 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25139 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25140 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25141 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25142 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25143 ;;Total ram usage:        0 bytes
 25144 ;; Hardware stack levels used: 1
 25145 ;; Hardware stack levels required when called: 4
 25146 ;; This function calls:
 25147 ;;		Nothing
 25148 ;; This function is called by:
 25149 ;;		_I2C1_Open
 25150 ;; This function uses a non-reentrant model
 25151 ;;
 25152                           
 25153     103E                     _I2C1_MasterOpen:	
 25154                           ;psect for function _I2C1_MasterOpen
 25155                           
 25156     103E                     l13018:	
 25157                           ;incstack = 0
 25158                           ; Regs used in _I2C1_MasterOpen: [wreg+status,2]
 25159                           
 25160                           
 25161                           ;mcc_generated_files/i2c1_master.c: 545:     if(!SSP1CON1bits.SSPEN)
 25162     103E  0143               	movlb	3	; select bank3
 25163     103F  1A90               	btfsc	16,5	;volatile
 25164     1040  2842               	goto	u9721
 25165     1041  2843               	goto	u9720
 25166     1042                     u9721:
 25167     1042  284A               	goto	l2565
 25168     1043                     u9720:
 25169     1043                     l13020:
 25170                           
 25171                           ;mcc_generated_files/i2c1_master.c: 546:     {;mcc_generated_files/i2c1_master.c: 547:  
      +                                 SSP1STAT = 0x00;
 25172     1043  018F               	clrf	15	;volatile
 25173     1044                     l13022:
 25174                           
 25175                           ;mcc_generated_files/i2c1_master.c: 548:         SSP1CON1 = 0x08;
 25176     1044  3008               	movlw	8
 25177     1045  0090               	movwf	16	;volatile
 25178     1046                     l13024:
 25179                           
 25180                           ;mcc_generated_files/i2c1_master.c: 549:         SSP1CON2 = 0x00;
 25181     1046  0191               	clrf	17	;volatile
 25182                           
 25183                           ;mcc_generated_files/i2c1_master.c: 550:         SSP1ADD = 0x4F;
 25184     1047  304F               	movlw	79
 25185     1048  008D               	movwf	13	;volatile
 25186     1049                     l13026:
 25187                           
 25188                           ;mcc_generated_files/i2c1_master.c: 551:         SSP1CON1bits.SSPEN = 1;
 25189     1049  1690               	bsf	16,5	;volatile
 25190     104A                     l2565:
 25191     104A  0008               	return
 25192     104B                     __end_of_I2C1_MasterOpen:
 25193                           
 25194                           	psect	text111
 25195     1ED1                     __ptext111:	
 25196 ;; *************** function _I2C1_MasterWrite *****************
 25197 ;; Defined at:
 25198 ;;		line 251 in file "mcc_generated_files/i2c1_master.c"
 25199 ;; Parameters:    Size  Location     Type
 25200 ;;		None
 25201 ;; Auto vars:     Size  Location     Type
 25202 ;;		None
 25203 ;; Return value:  Size  Location     Type
 25204 ;;                  1    wreg      enum E358
 25205 ;; Registers used:
 25206 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 25207 ;; Tracked objects:
 25208 ;;		On entry : 0/0
 25209 ;;		On exit  : 0/0
 25210 ;;		Unchanged: 0/0
 25211 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25212 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25213 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25214 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25215 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25216 ;;Total ram usage:        0 bytes
 25217 ;; Hardware stack levels used: 1
 25218 ;; Hardware stack levels required when called: 11
 25219 ;; This function calls:
 25220 ;;		_I2C1_MasterOperation
 25221 ;; This function is called by:
 25222 ;;		_i2c_write1ByteRegister
 25223 ;;		_i2c_read1ByteRegister
 25224 ;;		_i2c_read2ByteRegister
 25225 ;;		_i2c_writeNBytes
 25226 ;;		_i2c_write2ByteRegister
 25227 ;;		_i2c_readDataBlock
 25228 ;;		_I2C1_Read1ByteRegister
 25229 ;;		_I2C1_Read2ByteRegister
 25230 ;;		_I2C1_Write1ByteRegister
 25231 ;;		_I2C1_Write2ByteRegister
 25232 ;;		_I2C1_WriteNBytes
 25233 ;;		_I2C1_ReadDataBlock
 25234 ;; This function uses a non-reentrant model
 25235 ;;
 25236                           
 25237     1ED1                     _I2C1_MasterWrite:	
 25238                           ;psect for function _I2C1_MasterWrite
 25239                           
 25240     1ED1                     l13088:	
 25241                           ;incstack = 0
 25242                           ; Regs used in _I2C1_MasterWrite: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 25243                           
 25244                           
 25245                           ;mcc_generated_files/i2c1_master.c: 253:     return I2C1_MasterOperation(0);;	Return val
      +                          ue of _I2C1_MasterWrite is never used
 25246     1ED1  3000               	movlw	0
 25247     1ED2  3193  23C3  319E   	fcall	_I2C1_MasterOperation
 25248     1ED5                     l2416:
 25249     1ED5  0008               	return
 25250     1ED6                     __end_of_I2C1_MasterWrite:
 25251                           
 25252                           	psect	text112
 25253     13C3                     __ptext112:	
 25254 ;; *************** function _I2C1_MasterOperation *****************
 25255 ;; Defined at:
 25256 ;;		line 224 in file "mcc_generated_files/i2c1_master.c"
 25257 ;; Parameters:    Size  Location     Type
 25258 ;;  read            1    wreg     _Bool 
 25259 ;; Auto vars:     Size  Location     Type
 25260 ;;  read            1    2[BANK0 ] _Bool 
 25261 ;;  returnValue     1    3[BANK0 ] enum E358
 25262 ;; Return value:  Size  Location     Type
 25263 ;;                  1    wreg      enum E358
 25264 ;; Registers used:
 25265 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 25266 ;; Tracked objects:
 25267 ;;		On entry : 0/0
 25268 ;;		On exit  : 0/0
 25269 ;;		Unchanged: 0/0
 25270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25271 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25272 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25274 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25275 ;;Total ram usage:        2 bytes
 25276 ;; Hardware stack levels used: 1
 25277 ;; Hardware stack levels required when called: 10
 25278 ;; This function calls:
 25279 ;;		_I2C1_MasterStart
 25280 ;;		_I2C1_Poller
 25281 ;; This function is called by:
 25282 ;;		_I2C1_MasterWrite
 25283 ;;		_I2C1_MasterRead
 25284 ;; This function uses a non-reentrant model
 25285 ;;
 25286                           
 25287     13C3                     _I2C1_MasterOperation:	
 25288                           ;psect for function _I2C1_MasterOperation
 25289                           
 25290                           
 25291                           ;incstack = 0
 25292                           ; Regs used in _I2C1_MasterOperation: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 25293                           ;I2C1_MasterOperation@read stored from wreg
 25294     13C3  0140               	movlb	0	; select bank0
 25295     13C4  00A2               	movwf	I2C1_MasterOperation@read
 25296     13C5                     l13034:
 25297                           
 25298                           ;mcc_generated_files/i2c1_master.c: 224: i2c1_error_t I2C1_MasterOperation(_Bool read);m
      +                          cc_generated_files/i2c1_master.c: 225: {;mcc_generated_files/i2c1_master.c: 226:     i2c
      +                          1_error_t returnValue = I2C1_BUSY;
 25299     13C5  01A3               	clrf	I2C1_MasterOperation@returnValue
 25300     13C6  0AA3               	incf	I2C1_MasterOperation@returnValue,f
 25301                           
 25302                           ;mcc_generated_files/i2c1_master.c: 227:     if(!I2C1_Status.busy)
 25303     13C7  0141               	movlb	1	; select bank1
 25304     13C8  18BD               	btfsc	(_I2C1_Status^(0+128)+29),1
 25305     13C9  2BCB               	goto	u9731
 25306     13CA  2BCC               	goto	u9730
 25307     13CB                     u9731:
 25308     13CB  2BE1               	goto	l13050
 25309     13CC                     u9730:
 25310     13CC                     l13036:
 25311                           
 25312                           ;mcc_generated_files/i2c1_master.c: 228:     {;mcc_generated_files/i2c1_master.c: 229:  
      +                                 I2C1_Status.busy = 1;
 25313     13CC  14BD               	bsf	(_I2C1_Status^(0+128)+29),1
 25314     13CD                     l13038:
 25315                           
 25316                           ;mcc_generated_files/i2c1_master.c: 230:         returnValue = I2C1_NOERR;
 25317     13CD  0140               	movlb	0	; select bank0
 25318     13CE  01A3               	clrf	I2C1_MasterOperation@returnValue
 25319     13CF                     l13040:
 25320                           
 25321                           ;mcc_generated_files/i2c1_master.c: 232:         if(read)
 25322     13CF  0822               	movf	I2C1_MasterOperation@read,w
 25323     13D0  1903               	btfsc	3,2
 25324     13D1  2BD3               	goto	u9741
 25325     13D2  2BD4               	goto	u9740
 25326     13D3                     u9741:
 25327     13D3  2BD8               	goto	l13044
 25328     13D4                     u9740:
 25329     13D4                     l13042:
 25330                           
 25331                           ;mcc_generated_files/i2c1_master.c: 233:         {;mcc_generated_files/i2c1_master.c: 23
      +                          4:             I2C1_Status.state = I2C1_SEND_ADR_READ;
 25332     13D4  0141               	movlb	1	; select bank1
 25333     13D5  01BB               	clrf	(_I2C1_Status^(0+128)+27)
 25334     13D6  0ABB               	incf	(_I2C1_Status^(0+128)+27),f
 25335                           
 25336                           ;mcc_generated_files/i2c1_master.c: 235:         }
 25337     13D7  2BDB               	goto	l13046
 25338     13D8                     l13044:
 25339                           
 25340                           ;mcc_generated_files/i2c1_master.c: 237:         {;mcc_generated_files/i2c1_master.c: 23
      +                          8:             I2C1_Status.state = I2C1_SEND_ADR_WRITE;
 25341     13D8  3002               	movlw	2
 25342     13D9  0141               	movlb	1	; select bank1
 25343     13DA  00BB               	movwf	(_I2C1_Status^(0+128)+27)
 25344     13DB                     l13046:
 25345                           
 25346                           ;mcc_generated_files/i2c1_master.c: 240:         I2C1_MasterStart();
 25347     13DB  319E  266D  3193   	fcall	_I2C1_MasterStart
 25348     13DE                     l13048:
 25349                           
 25350                           ;mcc_generated_files/i2c1_master.c: 241:         I2C1_Poller();
 25351     13DE  3190  2031  3193   	fcall	_I2C1_Poller
 25352     13E1                     l13050:
 25353                           
 25354                           ;mcc_generated_files/i2c1_master.c: 243:     return returnValue;
 25355     13E1  0140               	movlb	0	; select bank0
 25356     13E2  0823               	movf	I2C1_MasterOperation@returnValue,w
 25357     13E3                     l2410:
 25358     13E3  0008               	return
 25359     13E4                     __end_of_I2C1_MasterOperation:
 25360                           
 25361                           	psect	text113
 25362     1031                     __ptext113:	
 25363 ;; *************** function _I2C1_Poller *****************
 25364 ;; Defined at:
 25365 ;;		line 312 in file "mcc_generated_files/i2c1_master.c"
 25366 ;; Parameters:    Size  Location     Type
 25367 ;;		None
 25368 ;; Auto vars:     Size  Location     Type
 25369 ;;		None
 25370 ;; Return value:  Size  Location     Type
 25371 ;;                  1    wreg      void 
 25372 ;; Registers used:
 25373 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 25374 ;; Tracked objects:
 25375 ;;		On entry : 0/0
 25376 ;;		On exit  : 0/0
 25377 ;;		Unchanged: 0/0
 25378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25379 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25380 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25382 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25383 ;;Total ram usage:        0 bytes
 25384 ;; Hardware stack levels used: 1
 25385 ;; Hardware stack levels required when called: 9
 25386 ;; This function calls:
 25387 ;;		_I2C1_MasterFsm
 25388 ;;		_I2C1_MasterWaitForEvent
 25389 ;; This function is called by:
 25390 ;;		_I2C1_MasterOperation
 25391 ;; This function uses a non-reentrant model
 25392 ;;
 25393                           
 25394     1031                     _I2C1_Poller:	
 25395                           ;psect for function _I2C1_Poller
 25396                           
 25397     1031                     l12922:	
 25398                           ;incstack = 0
 25399                           ; Regs used in _I2C1_Poller: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 25400                           
 25401                           
 25402                           ;mcc_generated_files/i2c1_master.c: 314:     while(I2C1_Status.busy)
 25403     1031  2838               	goto	l12928
 25404     1032                     l12924:
 25405                           
 25406                           ;mcc_generated_files/i2c1_master.c: 315:     {;mcc_generated_files/i2c1_master.c: 316:  
      +                                 I2C1_MasterWaitForEvent();
 25407     1032  319E  26E6  3190   	fcall	_I2C1_MasterWaitForEvent
 25408     1035                     l12926:
 25409                           
 25410                           ;mcc_generated_files/i2c1_master.c: 317:         I2C1_MasterFsm();
 25411     1035  3195  2535  3190   	fcall	_I2C1_MasterFsm
 25412     1038                     l12928:
 25413                           
 25414                           ;mcc_generated_files/i2c1_master.c: 314:     while(I2C1_Status.busy)
 25415     1038  0141               	movlb	1	; select bank1
 25416     1039  18BD               	btfsc	(_I2C1_Status^(0+128)+29),1
 25417     103A  283C               	goto	u9611
 25418     103B  283D               	goto	u9610
 25419     103C                     u9611:
 25420     103C  2832               	goto	l12924
 25421     103D                     u9610:
 25422     103D                     l2449:
 25423     103D  0008               	return
 25424     103E                     __end_of_I2C1_Poller:
 25425                           
 25426                           	psect	text114
 25427     1EE6                     __ptext114:	
 25428 ;; *************** function _I2C1_MasterWaitForEvent *****************
 25429 ;; Defined at:
 25430 ;;		line 650 in file "mcc_generated_files/i2c1_master.c"
 25431 ;; Parameters:    Size  Location     Type
 25432 ;;		None
 25433 ;; Auto vars:     Size  Location     Type
 25434 ;;		None
 25435 ;; Return value:  Size  Location     Type
 25436 ;;                  1    wreg      void 
 25437 ;; Registers used:
 25438 ;;		None
 25439 ;; Tracked objects:
 25440 ;;		On entry : 0/0
 25441 ;;		On exit  : 0/0
 25442 ;;		Unchanged: 0/0
 25443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25444 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25445 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25447 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25448 ;;Total ram usage:        0 bytes
 25449 ;; Hardware stack levels used: 1
 25450 ;; Hardware stack levels required when called: 4
 25451 ;; This function calls:
 25452 ;;		Nothing
 25453 ;; This function is called by:
 25454 ;;		_I2C1_Poller
 25455 ;; This function uses a non-reentrant model
 25456 ;;
 25457                           
 25458     1EE6                     _I2C1_MasterWaitForEvent:	
 25459                           ;psect for function _I2C1_MasterWaitForEvent
 25460                           
 25461     1EE6                     l2622:	
 25462                           ;incstack = 0
 25463                           ; Regs used in _I2C1_MasterWaitForEvent: []
 25464                           ;mcc_generated_files/i2c1_master.c: 652:     while(1)
 25465                           
 25466                           
 25467                           ;mcc_generated_files/i2c1_master.c: 653:     {;mcc_generated_files/i2c1_master.c: 654:  
      +                                 if(PIR3bits.SSP1IF)
 25468     1EE6  014E               	movlb	14	; select bank14
 25469     1EE7  1C0F               	btfss	15,0	;volatile
 25470     1EE8  2EEA               	goto	u9581
 25471     1EE9  2EEB               	goto	u9580
 25472     1EEA                     u9581:
 25473     1EEA  2EE6               	goto	l2622
 25474     1EEB                     u9580:
 25475     1EEB                     l2626:
 25476     1EEB  0008               	return
 25477     1EEC                     __end_of_I2C1_MasterWaitForEvent:
 25478                           
 25479                           	psect	text115
 25480     1535                     __ptext115:	
 25481 ;; *************** function _I2C1_MasterFsm *****************
 25482 ;; Defined at:
 25483 ;;		line 321 in file "mcc_generated_files/i2c1_master.c"
 25484 ;; Parameters:    Size  Location     Type
 25485 ;;		None
 25486 ;; Auto vars:     Size  Location     Type
 25487 ;;		None
 25488 ;; Return value:  Size  Location     Type
 25489 ;;                  1    wreg      void 
 25490 ;; Registers used:
 25491 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 25492 ;; Tracked objects:
 25493 ;;		On entry : 0/0
 25494 ;;		On exit  : 0/0
 25495 ;;		Unchanged: 0/0
 25496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25497 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25498 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25499 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25500 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25501 ;;Total ram usage:        2 bytes
 25502 ;; Hardware stack levels used: 1
 25503 ;; Hardware stack levels required when called: 8
 25504 ;; This function calls:
 25505 ;;		_I2C1_DO_ADDRESS_NACK
 25506 ;;		_I2C1_DO_IDLE
 25507 ;;		_I2C1_DO_RCEN
 25508 ;;		_I2C1_DO_RESET
 25509 ;;		_I2C1_DO_RX
 25510 ;;		_I2C1_DO_RX_ACK
 25511 ;;		_I2C1_DO_RX_NACK_RESTART
 25512 ;;		_I2C1_DO_RX_NACK_STOP
 25513 ;;		_I2C1_DO_SEND_ADR_READ
 25514 ;;		_I2C1_DO_SEND_ADR_WRITE
 25515 ;;		_I2C1_DO_SEND_RESTART
 25516 ;;		_I2C1_DO_SEND_RESTART_READ
 25517 ;;		_I2C1_DO_SEND_RESTART_WRITE
 25518 ;;		_I2C1_DO_SEND_STOP
 25519 ;;		_I2C1_DO_TX
 25520 ;;		_I2C1_DO_TX_EMPTY
 25521 ;;		_I2C1_MasterClearIrq
 25522 ;;		_I2C1_MasterIsNack
 25523 ;; This function is called by:
 25524 ;;		_I2C1_Poller
 25525 ;; This function uses a non-reentrant model
 25526 ;;
 25527                           
 25528     1535                     _I2C1_MasterFsm:	
 25529                           ;psect for function _I2C1_MasterFsm
 25530                           
 25531     1535                     l12910:	
 25532                           ;incstack = 0
 25533                           ; Regs used in _I2C1_MasterFsm: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 25534                           
 25535                           
 25536                           ;mcc_generated_files/i2c1_master.c: 323:     I2C1_MasterClearIrq();
 25537     1535  319E  2664  3195   	fcall	_I2C1_MasterClearIrq
 25538     1538                     l12912:
 25539                           
 25540                           ;mcc_generated_files/i2c1_master.c: 325:     if(I2C1_Status.addressNackCheck && I2C1_Mas
      +                          terIsNack())
 25541     1538  0141               	movlb	1	; select bank1
 25542     1539  1C3D               	btfss	(_I2C1_Status^(0+128)+29),0
 25543     153A  2D3C               	goto	u9591
 25544     153B  2D3D               	goto	u9590
 25545     153C                     u9591:
 25546     153C  2D48               	goto	l12918
 25547     153D                     u9590:
 25548     153D                     l12914:
 25549     153D  319E  26E0  3195   	fcall	_I2C1_MasterIsNack
 25550     1540  3A00               	xorlw	0
 25551     1541  1903               	skipnz
 25552     1542  2D44               	goto	u9601
 25553     1543  2D45               	goto	u9600
 25554     1544                     u9601:
 25555     1544  2D48               	goto	l12918
 25556     1545                     u9600:
 25557     1545                     l12916:
 25558                           
 25559                           ;mcc_generated_files/i2c1_master.c: 326:     {;mcc_generated_files/i2c1_master.c: 327:  
      +                                 I2C1_Status.state = I2C1_ADDRESS_NACK;
 25560     1545  300F               	movlw	15
 25561     1546  0141               	movlb	1	; select bank1
 25562     1547  00BB               	movwf	(_I2C1_Status^(0+128)+27)
 25563     1548                     l12918:
 25564                           
 25565                           ;mcc_generated_files/i2c1_master.c: 329:     I2C1_Status.state = i2c1_fsmStateTable[I2C1
      +                          _Status.state]();
 25566     1548  0141               	movlb	1	; select bank1
 25567     1549  083B               	movf	(_I2C1_Status^(0+128)+27),w
 25568     154A  0140               	movlb	0	; select bank0
 25569     154B  00A0               	movwf	??_I2C1_MasterFsm
 25570     154C  01A1               	clrf	??_I2C1_MasterFsm+1
 25571     154D  35A0               	lslf	??_I2C1_MasterFsm,f
 25572     154E  0DA1               	rlf	??_I2C1_MasterFsm+1,f
 25573     154F  3028               	movlw	low _i2c1_fsmStateTable
 25574     1550  0720               	addwf	??_I2C1_MasterFsm,w
 25575     1551  0084               	movwf	4
 25576     1552  3018               	movlw	high _i2c1_fsmStateTable
 25577     1553  3D21               	addwfc	??_I2C1_MasterFsm+1,w
 25578     1554  3880               	iorlw	128
 25579     1555  0085               	movwf	5
 25580     1556  3F01               	moviw [1]fsr0
 25581     1557  008A               	movwf	10
 25582     1558  3F00               	moviw [0]fsr0
 25583     1559  000A               	callw
 25584     155A  3195               	pagesel	$
 25585     155B  0141               	movlb	1	; select bank1
 25586     155C  00BB               	movwf	(_I2C1_Status^(0+128)+27)
 25587     155D                     l2453:
 25588     155D  0008               	return
 25589     155E                     __end_of_I2C1_MasterFsm:
 25590                           
 25591                           	psect	text116
 25592     14BD                     __ptext116:	
 25593 ;; *************** function _I2C1_DO_ADDRESS_NACK *****************
 25594 ;; Defined at:
 25595 ;;		line 500 in file "mcc_generated_files/i2c1_master.c"
 25596 ;; Parameters:    Size  Location     Type
 25597 ;;		None
 25598 ;; Auto vars:     Size  Location     Type
 25599 ;;		None
 25600 ;; Return value:  Size  Location     Type
 25601 ;;                  1    wreg      enum E12565
 25602 ;; Registers used:
 25603 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 25604 ;; Tracked objects:
 25605 ;;		On entry : 0/0
 25606 ;;		On exit  : 0/0
 25607 ;;		Unchanged: 0/0
 25608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25609 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25610 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25611 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25612 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25613 ;;Total ram usage:        2 bytes
 25614 ;; Hardware stack levels used: 1
 25615 ;; Hardware stack levels required when called: 7
 25616 ;; This function calls:
 25617 ;;		NULL
 25618 ;;		_I2C1_CallbackReturnReset
 25619 ;;		_I2C1_CallbackReturnStop
 25620 ;;		_I2C1_DO_SEND_RESTART
 25621 ;;		_I2C1_DO_SEND_STOP
 25622 ;;		_rd1RegCompleteHandler
 25623 ;;		_rd1RegCompleteHandler@i2c1_master_example$F1693
 25624 ;;		_rd2RegCompleteHandler
 25625 ;;		_rd2RegCompleteHandler@i2c1_master_example$F1704
 25626 ;;		_rdBlkRegCompleteHandler
 25627 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F1727
 25628 ;;		_wr1RegCompleteHandler
 25629 ;;		_wr1RegCompleteHandler@i2c1_master_example$F1710
 25630 ;;		_wr2RegCompleteHandler
 25631 ;;		_wr2RegCompleteHandler@i2c1_master_example$F1716
 25632 ;; This function is called by:
 25633 ;;		_I2C1_MasterFsm
 25634 ;; This function uses a non-reentrant model
 25635 ;;
 25636                           
 25637     14BD                     _I2C1_DO_ADDRESS_NACK:	
 25638                           ;psect for function _I2C1_DO_ADDRESS_NACK
 25639                           
 25640     14BD                     l12886:	
 25641                           ;incstack = 0
 25642                           ; Regs used in _I2C1_DO_ADDRESS_NACK: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 25643                           
 25644                           
 25645                           ;mcc_generated_files/i2c1_master.c: 502:     I2C1_Status.addressNackCheck = 0;
 25646     14BD  0141               	movlb	1	; select bank1
 25647     14BE  103D               	bcf	(_I2C1_Status^(0+128)+29),0
 25648     14BF                     l12888:
 25649                           
 25650                           ;mcc_generated_files/i2c1_master.c: 503:     I2C1_Status.error = I2C1_FAIL;
 25651     14BF  3002               	movlw	2
 25652     14C0  00BC               	movwf	(_I2C1_Status^(0+128)+28)
 25653                           
 25654                           ;mcc_generated_files/i2c1_master.c: 504:     switch(I2C1_Status.callbackTable[I2C1_ADDR_
      +                          NACK](I2C1_Status.callbackPayload[I2C1_ADDR_NACK]))
 25655     14C1  2CCA               	goto	l12900
 25656     14C2                     l12890:
 25657                           
 25658                           ;mcc_generated_files/i2c1_master.c: 508:             return I2C1_DO_SEND_RESTART();
 25659     14C2  319E  26B3  3194   	fcall	_I2C1_DO_SEND_RESTART
 25660     14C5  2CE4               	goto	l2544
 25661     14C6                     l12894:
 25662                           
 25663                           ;mcc_generated_files/i2c1_master.c: 510:             return I2C1_DO_SEND_STOP();
 25664     14C6  319E  26B8  3194   	fcall	_I2C1_DO_SEND_STOP
 25665     14C9  2CE4               	goto	l2544
 25666     14CA                     l12900:
 25667     14CA  082E               	movf	(low ((_I2C1_Status| 0+14)))^(0+128),w
 25668     14CB  00F8               	movwf	I2C1_CallbackReturnReset@funPtr
 25669     14CC  3004               	movlw	4
 25670     14CD  3EA0               	addlw	(low (_I2C1_Status| 0))& (0+255)
 25671     14CE  0086               	movwf	6
 25672     14CF  0187               	clrf	7
 25673     14D0  3F41               	moviw [1]fsr1
 25674     14D1  008A               	movwf	10
 25675     14D2  3F40               	moviw [0]fsr1
 25676     14D3  000A               	callw
 25677     14D4  3194               	pagesel	$
 25678     14D5  00F9               	movwf	??_I2C1_DO_ADDRESS_NACK
 25679     14D6  01FA               	clrf	??_I2C1_DO_ADDRESS_NACK+1
 25680                           
 25681                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 25682                           ; Switch size 1, requested type "simple"
 25683                           ; Number of cases is 1, Range of values is 0 to 0
 25684                           ; switch strategies available:
 25685                           ; Name         Instructions Cycles
 25686                           ; simple_byte            4     3 (average)
 25687                           ; direct_byte            8     6 (fixed)
 25688                           ; jumptable            260     6 (fixed)
 25689                           ;	Chosen strategy is simple_byte
 25690     14D7  087A               	movf	??_I2C1_DO_ADDRESS_NACK+1,w
 25691     14D8  3A00               	xorlw	0	; case 0
 25692     14D9  1903               	skipnz
 25693     14DA  2CDC               	goto	l16628
 25694     14DB  2CC6               	goto	l12894
 25695     14DC                     l16628:
 25696                           
 25697                           ; Switch size 1, requested type "simple"
 25698                           ; Number of cases is 2, Range of values is 2 to 3
 25699                           ; switch strategies available:
 25700                           ; Name         Instructions Cycles
 25701                           ; simple_byte            7     4 (average)
 25702                           ; direct_byte           13     9 (fixed)
 25703                           ; jumptable            263     9 (fixed)
 25704                           ;	Chosen strategy is simple_byte
 25705     14DC  0879               	movf	??_I2C1_DO_ADDRESS_NACK,w
 25706     14DD  3A02               	xorlw	2	; case 2
 25707     14DE  1903               	skipnz
 25708     14DF  2CC2               	goto	l12890
 25709     14E0  3A01               	xorlw	1	; case 3
 25710     14E1  1903               	skipnz
 25711     14E2  2CC2               	goto	l12890
 25712     14E3  2CC6               	goto	l12894
 25713     14E4                     l2544:
 25714     14E4  0008               	return
 25715     14E5                     __end_of_I2C1_DO_ADDRESS_NACK:
 25716                           
 25717                           	psect	text117
 25718     1ECC                     __ptext117:	
 25719 ;; *************** function _I2C1_DO_RESET *****************
 25720 ;; Defined at:
 25721 ;;		line 494 in file "mcc_generated_files/i2c1_master.c"
 25722 ;; Parameters:    Size  Location     Type
 25723 ;;		None
 25724 ;; Auto vars:     Size  Location     Type
 25725 ;;		None
 25726 ;; Return value:  Size  Location     Type
 25727 ;;                  1    wreg      enum E12565
 25728 ;; Registers used:
 25729 ;;		wreg, status,2
 25730 ;; Tracked objects:
 25731 ;;		On entry : 0/0
 25732 ;;		On exit  : 0/0
 25733 ;;		Unchanged: 0/0
 25734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25735 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25736 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25738 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25739 ;;Total ram usage:        0 bytes
 25740 ;; Hardware stack levels used: 1
 25741 ;; Hardware stack levels required when called: 4
 25742 ;; This function calls:
 25743 ;;		Nothing
 25744 ;; This function is called by:
 25745 ;;		_I2C1_MasterFsm
 25746 ;; This function uses a non-reentrant model
 25747 ;;
 25748                           
 25749     1ECC                     _I2C1_DO_RESET:	
 25750                           ;psect for function _I2C1_DO_RESET
 25751                           
 25752     1ECC                     l12878:	
 25753                           ;incstack = 0
 25754                           ; Regs used in _I2C1_DO_RESET: [wreg+status,2]
 25755                           
 25756                           
 25757                           ;mcc_generated_files/i2c1_master.c: 496:     I2C1_Status.busy = 0;
 25758     1ECC  0141               	movlb	1	; select bank1
 25759     1ECD  10BD               	bcf	(_I2C1_Status^(0+128)+29),1
 25760     1ECE                     l12880:
 25761                           
 25762                           ;mcc_generated_files/i2c1_master.c: 497:     I2C1_Status.error = I2C1_NOERR;
 25763     1ECE  01BC               	clrf	(_I2C1_Status^(0+128)+28)
 25764     1ECF                     l12882:
 25765                           
 25766                           ;mcc_generated_files/i2c1_master.c: 498:     return I2C1_RESET;
 25767     1ECF  300E               	movlw	14
 25768     1ED0                     l2538:
 25769     1ED0  0008               	return
 25770     1ED1                     __end_of_I2C1_DO_RESET:
 25771                           
 25772                           	psect	text118
 25773     1EC7                     __ptext118:	
 25774 ;; *************** function _I2C1_DO_RX_NACK_RESTART *****************
 25775 ;; Defined at:
 25776 ;;		line 488 in file "mcc_generated_files/i2c1_master.c"
 25777 ;; Parameters:    Size  Location     Type
 25778 ;;		None
 25779 ;; Auto vars:     Size  Location     Type
 25780 ;;		None
 25781 ;; Return value:  Size  Location     Type
 25782 ;;                  1    wreg      enum E12565
 25783 ;; Registers used:
 25784 ;;		wreg, status,2, status,0, pclath, cstack
 25785 ;; Tracked objects:
 25786 ;;		On entry : 0/0
 25787 ;;		On exit  : 0/0
 25788 ;;		Unchanged: 0/0
 25789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25793 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25794 ;;Total ram usage:        0 bytes
 25795 ;; Hardware stack levels used: 1
 25796 ;; Hardware stack levels required when called: 5
 25797 ;; This function calls:
 25798 ;;		_I2C1_MasterSendNack
 25799 ;; This function is called by:
 25800 ;;		_I2C1_DO_RX
 25801 ;;		_I2C1_MasterFsm
 25802 ;; This function uses a non-reentrant model
 25803 ;;
 25804                           
 25805     1EC7                     _I2C1_DO_RX_NACK_RESTART:	
 25806                           ;psect for function _I2C1_DO_RX_NACK_RESTART
 25807                           
 25808     1EC7                     l12716:	
 25809                           ;incstack = 0
 25810                           ; Regs used in _I2C1_DO_RX_NACK_RESTART: [wreg+status,2+status,0+pclath+cstack]
 25811                           
 25812                           
 25813                           ;mcc_generated_files/i2c1_master.c: 490:     I2C1_MasterSendNack();
 25814     1EC7  319E  268F  319E   	fcall	_I2C1_MasterSendNack
 25815     1ECA                     l12718:
 25816                           
 25817                           ;mcc_generated_files/i2c1_master.c: 491:     return I2C1_SEND_RESTART;
 25818     1ECA  3009               	movlw	9
 25819     1ECB                     l2535:
 25820     1ECB  0008               	return
 25821     1ECC                     __end_of_I2C1_DO_RX_NACK_RESTART:
 25822                           
 25823                           	psect	text119
 25824     1EC2                     __ptext119:	
 25825 ;; *************** function _I2C1_DO_RX_NACK_STOP *****************
 25826 ;; Defined at:
 25827 ;;		line 482 in file "mcc_generated_files/i2c1_master.c"
 25828 ;; Parameters:    Size  Location     Type
 25829 ;;		None
 25830 ;; Auto vars:     Size  Location     Type
 25831 ;;		None
 25832 ;; Return value:  Size  Location     Type
 25833 ;;                  1    wreg      enum E12565
 25834 ;; Registers used:
 25835 ;;		wreg, status,2, status,0, pclath, cstack
 25836 ;; Tracked objects:
 25837 ;;		On entry : 0/0
 25838 ;;		On exit  : 0/0
 25839 ;;		Unchanged: 0/0
 25840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25841 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25842 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25844 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25845 ;;Total ram usage:        0 bytes
 25846 ;; Hardware stack levels used: 1
 25847 ;; Hardware stack levels required when called: 5
 25848 ;; This function calls:
 25849 ;;		_I2C1_MasterSendNack
 25850 ;; This function is called by:
 25851 ;;		_I2C1_DO_RX
 25852 ;;		_I2C1_MasterFsm
 25853 ;; This function uses a non-reentrant model
 25854 ;;
 25855                           
 25856     1EC2                     _I2C1_DO_RX_NACK_STOP:	
 25857                           ;psect for function _I2C1_DO_RX_NACK_STOP
 25858                           
 25859     1EC2                     l12722:	
 25860                           ;incstack = 0
 25861                           ; Regs used in _I2C1_DO_RX_NACK_STOP: [wreg+status,2+status,0+pclath+cstack]
 25862                           
 25863                           
 25864                           ;mcc_generated_files/i2c1_master.c: 484:     I2C1_MasterSendNack();
 25865     1EC2  319E  268F  319E   	fcall	_I2C1_MasterSendNack
 25866     1EC5                     l12724:
 25867                           
 25868                           ;mcc_generated_files/i2c1_master.c: 485:     return I2C1_SEND_STOP;
 25869     1EC5  300A               	movlw	10
 25870     1EC6                     l2532:
 25871     1EC6  0008               	return
 25872     1EC7                     __end_of_I2C1_DO_RX_NACK_STOP:
 25873                           
 25874                           	psect	text120
 25875     1EBD                     __ptext120:	
 25876 ;; *************** function _I2C1_DO_RX_ACK *****************
 25877 ;; Defined at:
 25878 ;;		line 475 in file "mcc_generated_files/i2c1_master.c"
 25879 ;; Parameters:    Size  Location     Type
 25880 ;;		None
 25881 ;; Auto vars:     Size  Location     Type
 25882 ;;		None
 25883 ;; Return value:  Size  Location     Type
 25884 ;;                  1    wreg      enum E12565
 25885 ;; Registers used:
 25886 ;;		wreg, status,2, status,0, pclath, cstack
 25887 ;; Tracked objects:
 25888 ;;		On entry : 0/0
 25889 ;;		On exit  : 0/0
 25890 ;;		Unchanged: 0/0
 25891 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25892 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25893 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25895 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25896 ;;Total ram usage:        0 bytes
 25897 ;; Hardware stack levels used: 1
 25898 ;; Hardware stack levels required when called: 5
 25899 ;; This function calls:
 25900 ;;		_I2C1_MasterSendAck
 25901 ;; This function is called by:
 25902 ;;		_I2C1_MasterFsm
 25903 ;; This function uses a non-reentrant model
 25904 ;;
 25905                           
 25906     1EBD                     _I2C1_DO_RX_ACK:	
 25907                           ;psect for function _I2C1_DO_RX_ACK
 25908                           
 25909     1EBD                     l12872:	
 25910                           ;incstack = 0
 25911                           ; Regs used in _I2C1_DO_RX_ACK: [wreg+status,2+status,0+pclath+cstack]
 25912                           
 25913                           
 25914                           ;mcc_generated_files/i2c1_master.c: 477:     I2C1_MasterSendAck();
 25915     1EBD  319E  2693  319E   	fcall	_I2C1_MasterSendAck
 25916     1EC0                     l12874:
 25917                           
 25918                           ;mcc_generated_files/i2c1_master.c: 478:     return I2C1_RCEN;
 25919     1EC0  3005               	movlw	5
 25920     1EC1                     l2529:
 25921     1EC1  0008               	return
 25922     1EC2                     __end_of_I2C1_DO_RX_ACK:
 25923                           
 25924                           	psect	text121
 25925     1EB8                     __ptext121:	
 25926 ;; *************** function _I2C1_DO_SEND_STOP *****************
 25927 ;; Defined at:
 25928 ;;		line 469 in file "mcc_generated_files/i2c1_master.c"
 25929 ;; Parameters:    Size  Location     Type
 25930 ;;		None
 25931 ;; Auto vars:     Size  Location     Type
 25932 ;;		None
 25933 ;; Return value:  Size  Location     Type
 25934 ;;                  1    wreg      enum E12565
 25935 ;; Registers used:
 25936 ;;		wreg, status,2, status,0, pclath, cstack
 25937 ;; Tracked objects:
 25938 ;;		On entry : 0/0
 25939 ;;		On exit  : 0/0
 25940 ;;		Unchanged: 0/0
 25941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25942 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25943 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25945 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25946 ;;Total ram usage:        0 bytes
 25947 ;; Hardware stack levels used: 1
 25948 ;; Hardware stack levels required when called: 5
 25949 ;; This function calls:
 25950 ;;		_I2C1_MasterStop
 25951 ;; This function is called by:
 25952 ;;		_I2C1_DO_TX
 25953 ;;		_I2C1_DO_TX_EMPTY
 25954 ;;		_I2C1_DO_ADDRESS_NACK
 25955 ;;		_I2C1_MasterFsm
 25956 ;; This function uses a non-reentrant model
 25957 ;;
 25958                           
 25959     1EB8                     _I2C1_DO_SEND_STOP:	
 25960                           ;psect for function _I2C1_DO_SEND_STOP
 25961                           
 25962     1EB8                     l12704:	
 25963                           ;incstack = 0
 25964                           ; Regs used in _I2C1_DO_SEND_STOP: [wreg+status,2+status,0+pclath+cstack]
 25965                           
 25966                           
 25967                           ;mcc_generated_files/i2c1_master.c: 471:     I2C1_MasterStop();
 25968     1EB8  319E  2673  319E   	fcall	_I2C1_MasterStop
 25969     1EBB                     l12706:
 25970                           
 25971                           ;mcc_generated_files/i2c1_master.c: 472:     return I2C1_IDLE;
 25972     1EBB  3000               	movlw	0
 25973     1EBC                     l2526:
 25974     1EBC  0008               	return
 25975     1EBD                     __end_of_I2C1_DO_SEND_STOP:
 25976                           
 25977                           	psect	text122
 25978     1EB3                     __ptext122:	
 25979 ;; *************** function _I2C1_DO_SEND_RESTART *****************
 25980 ;; Defined at:
 25981 ;;		line 463 in file "mcc_generated_files/i2c1_master.c"
 25982 ;; Parameters:    Size  Location     Type
 25983 ;;		None
 25984 ;; Auto vars:     Size  Location     Type
 25985 ;;		None
 25986 ;; Return value:  Size  Location     Type
 25987 ;;                  1    wreg      enum E12565
 25988 ;; Registers used:
 25989 ;;		wreg, status,2, status,0, pclath, cstack
 25990 ;; Tracked objects:
 25991 ;;		On entry : 0/0
 25992 ;;		On exit  : 0/0
 25993 ;;		Unchanged: 0/0
 25994 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25995 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25996 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25998 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25999 ;;Total ram usage:        0 bytes
 26000 ;; Hardware stack levels used: 1
 26001 ;; Hardware stack levels required when called: 5
 26002 ;; This function calls:
 26003 ;;		_I2C1_MasterEnableRestart
 26004 ;; This function is called by:
 26005 ;;		_I2C1_DO_TX_EMPTY
 26006 ;;		_I2C1_DO_ADDRESS_NACK
 26007 ;;		_I2C1_MasterFsm
 26008 ;; This function uses a non-reentrant model
 26009 ;;
 26010                           
 26011     1EB3                     _I2C1_DO_SEND_RESTART:	
 26012                           ;psect for function _I2C1_DO_SEND_RESTART
 26013                           
 26014     1EB3                     l12730:	
 26015                           ;incstack = 0
 26016                           ; Regs used in _I2C1_DO_SEND_RESTART: [wreg+status,2+status,0+pclath+cstack]
 26017                           
 26018                           
 26019                           ;mcc_generated_files/i2c1_master.c: 465:     I2C1_MasterEnableRestart();
 26020     1EB3  319E  2670  319E   	fcall	_I2C1_MasterEnableRestart
 26021     1EB6                     l12732:
 26022                           
 26023                           ;mcc_generated_files/i2c1_master.c: 466:     return I2C1_SEND_ADR_READ;
 26024     1EB6  3001               	movlw	1
 26025     1EB7                     l2523:
 26026     1EB7  0008               	return
 26027     1EB8                     __end_of_I2C1_DO_SEND_RESTART:
 26028                           
 26029                           	psect	text123
 26030     1EAE                     __ptext123:	
 26031 ;; *************** function _I2C1_DO_SEND_RESTART_WRITE *****************
 26032 ;; Defined at:
 26033 ;;		line 456 in file "mcc_generated_files/i2c1_master.c"
 26034 ;; Parameters:    Size  Location     Type
 26035 ;;		None
 26036 ;; Auto vars:     Size  Location     Type
 26037 ;;		None
 26038 ;; Return value:  Size  Location     Type
 26039 ;;                  1    wreg      enum E12565
 26040 ;; Registers used:
 26041 ;;		wreg, status,2, status,0, pclath, cstack
 26042 ;; Tracked objects:
 26043 ;;		On entry : 0/0
 26044 ;;		On exit  : 0/0
 26045 ;;		Unchanged: 0/0
 26046 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26047 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26048 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26049 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26050 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26051 ;;Total ram usage:        0 bytes
 26052 ;; Hardware stack levels used: 1
 26053 ;; Hardware stack levels required when called: 5
 26054 ;; This function calls:
 26055 ;;		_I2C1_MasterEnableRestart
 26056 ;; This function is called by:
 26057 ;;		_I2C1_DO_TX
 26058 ;;		_I2C1_MasterFsm
 26059 ;; This function uses a non-reentrant model
 26060 ;;
 26061                           
 26062     1EAE                     _I2C1_DO_SEND_RESTART_WRITE:	
 26063                           ;psect for function _I2C1_DO_SEND_RESTART_WRITE
 26064                           
 26065     1EAE                     l12698:	
 26066                           ;incstack = 0
 26067                           ; Regs used in _I2C1_DO_SEND_RESTART_WRITE: [wreg+status,2+status,0+pclath+cstack]
 26068                           
 26069                           
 26070                           ;mcc_generated_files/i2c1_master.c: 458:     I2C1_MasterEnableRestart();
 26071     1EAE  319E  2670  319E   	fcall	_I2C1_MasterEnableRestart
 26072     1EB1                     l12700:
 26073                           
 26074                           ;mcc_generated_files/i2c1_master.c: 459:     return I2C1_SEND_ADR_WRITE;
 26075     1EB1  3002               	movlw	2
 26076     1EB2                     l2520:
 26077     1EB2  0008               	return
 26078     1EB3                     __end_of_I2C1_DO_SEND_RESTART_WRITE:
 26079                           
 26080                           	psect	text124
 26081     1EA9                     __ptext124:	
 26082 ;; *************** function _I2C1_DO_SEND_RESTART_READ *****************
 26083 ;; Defined at:
 26084 ;;		line 450 in file "mcc_generated_files/i2c1_master.c"
 26085 ;; Parameters:    Size  Location     Type
 26086 ;;		None
 26087 ;; Auto vars:     Size  Location     Type
 26088 ;;		None
 26089 ;; Return value:  Size  Location     Type
 26090 ;;                  1    wreg      enum E12565
 26091 ;; Registers used:
 26092 ;;		wreg, status,2, status,0, pclath, cstack
 26093 ;; Tracked objects:
 26094 ;;		On entry : 0/0
 26095 ;;		On exit  : 0/0
 26096 ;;		Unchanged: 0/0
 26097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26098 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26099 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26101 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26102 ;;Total ram usage:        0 bytes
 26103 ;; Hardware stack levels used: 1
 26104 ;; Hardware stack levels required when called: 5
 26105 ;; This function calls:
 26106 ;;		_I2C1_MasterEnableRestart
 26107 ;; This function is called by:
 26108 ;;		_I2C1_DO_TX
 26109 ;;		_I2C1_MasterFsm
 26110 ;; This function uses a non-reentrant model
 26111 ;;
 26112                           
 26113     1EA9                     _I2C1_DO_SEND_RESTART_READ:	
 26114                           ;psect for function _I2C1_DO_SEND_RESTART_READ
 26115                           
 26116     1EA9                     l12692:	
 26117                           ;incstack = 0
 26118                           ; Regs used in _I2C1_DO_SEND_RESTART_READ: [wreg+status,2+status,0+pclath+cstack]
 26119                           
 26120                           
 26121                           ;mcc_generated_files/i2c1_master.c: 452:     I2C1_MasterEnableRestart();
 26122     1EA9  319E  2670  319E   	fcall	_I2C1_MasterEnableRestart
 26123     1EAC                     l12694:
 26124                           
 26125                           ;mcc_generated_files/i2c1_master.c: 453:     return I2C1_SEND_ADR_READ;
 26126     1EAC  3001               	movlw	1
 26127     1EAD                     l2517:
 26128     1EAD  0008               	return
 26129     1EAE                     __end_of_I2C1_DO_SEND_RESTART_READ:
 26130                           
 26131                           	psect	text125
 26132     1F4C                     __ptext125:	
 26133 ;; *************** function _I2C1_DO_RCEN *****************
 26134 ;; Defined at:
 26135 ;;		line 402 in file "mcc_generated_files/i2c1_master.c"
 26136 ;; Parameters:    Size  Location     Type
 26137 ;;		None
 26138 ;; Auto vars:     Size  Location     Type
 26139 ;;		None
 26140 ;; Return value:  Size  Location     Type
 26141 ;;                  1    wreg      enum E12565
 26142 ;; Registers used:
 26143 ;;		wreg, status,2, status,0, pclath, cstack
 26144 ;; Tracked objects:
 26145 ;;		On entry : 0/0
 26146 ;;		On exit  : 0/0
 26147 ;;		Unchanged: 0/0
 26148 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26149 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26150 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26152 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26153 ;;Total ram usage:        0 bytes
 26154 ;; Hardware stack levels used: 1
 26155 ;; Hardware stack levels required when called: 5
 26156 ;; This function calls:
 26157 ;;		_I2C1_MasterStartRx
 26158 ;; This function is called by:
 26159 ;;		_I2C1_MasterFsm
 26160 ;; This function uses a non-reentrant model
 26161 ;;
 26162                           
 26163     1F4C                     _I2C1_DO_RCEN:	
 26164                           ;psect for function _I2C1_DO_RCEN
 26165                           
 26166     1F4C                     l12838:	
 26167                           ;incstack = 0
 26168                           ; Regs used in _I2C1_DO_RCEN: [wreg+status,2+status,0+pclath+cstack]
 26169                           
 26170                           
 26171                           ;mcc_generated_files/i2c1_master.c: 404:     I2C1_Status.addressNackCheck = 0;
 26172     1F4C  0141               	movlb	1	; select bank1
 26173     1F4D  103D               	bcf	(_I2C1_Status^(0+128)+29),0
 26174     1F4E                     l12840:
 26175                           
 26176                           ;mcc_generated_files/i2c1_master.c: 405:     I2C1_MasterStartRx();
 26177     1F4E  319E  2676  319F   	fcall	_I2C1_MasterStartRx
 26178     1F51                     l12842:
 26179                           
 26180                           ;mcc_generated_files/i2c1_master.c: 406:     return I2C1_RX;
 26181     1F51  3004               	movlw	4
 26182     1F52                     l2493:
 26183     1F52  0008               	return
 26184     1F53                     __end_of_I2C1_DO_RCEN:
 26185                           
 26186                           	psect	text126
 26187     0A88                     __ptext126:	
 26188 ;; *************** function _I2C1_DO_RX *****************
 26189 ;; Defined at:
 26190 ;;		line 378 in file "mcc_generated_files/i2c1_master.c"
 26191 ;; Parameters:    Size  Location     Type
 26192 ;;		None
 26193 ;; Auto vars:     Size  Location     Type
 26194 ;;		None
 26195 ;; Return value:  Size  Location     Type
 26196 ;;                  1    wreg      enum E12565
 26197 ;; Registers used:
 26198 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 26199 ;; Tracked objects:
 26200 ;;		On entry : 0/0
 26201 ;;		On exit  : 0/0
 26202 ;;		Unchanged: 0/0
 26203 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26205 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26206 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26207 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26208 ;;Total ram usage:        2 bytes
 26209 ;; Hardware stack levels used: 1
 26210 ;; Hardware stack levels required when called: 7
 26211 ;; This function calls:
 26212 ;;		NULL
 26213 ;;		_I2C1_CallbackReturnReset
 26214 ;;		_I2C1_CallbackReturnStop
 26215 ;;		_I2C1_DO_RX_NACK_RESTART
 26216 ;;		_I2C1_DO_RX_NACK_STOP
 26217 ;;		_I2C1_MasterGetRxData
 26218 ;;		_I2C1_MasterSendAck
 26219 ;;		_rd1RegCompleteHandler
 26220 ;;		_rd1RegCompleteHandler@i2c1_master_example$F1693
 26221 ;;		_rd2RegCompleteHandler
 26222 ;;		_rd2RegCompleteHandler@i2c1_master_example$F1704
 26223 ;;		_rdBlkRegCompleteHandler
 26224 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F1727
 26225 ;;		_wr1RegCompleteHandler
 26226 ;;		_wr1RegCompleteHandler@i2c1_master_example$F1710
 26227 ;;		_wr2RegCompleteHandler
 26228 ;;		_wr2RegCompleteHandler@i2c1_master_example$F1716
 26229 ;; This function is called by:
 26230 ;;		_I2C1_MasterFsm
 26231 ;; This function uses a non-reentrant model
 26232 ;;
 26233                           
 26234     0A88                     _I2C1_DO_RX:	
 26235                           ;psect for function _I2C1_DO_RX
 26236                           
 26237     0A88                     l12806:	
 26238                           ;incstack = 0
 26239                           ; Regs used in _I2C1_DO_RX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 26240                           
 26241                           
 26242                           ;mcc_generated_files/i2c1_master.c: 380:     *I2C1_Status.data_ptr++ = I2C1_MasterGetRxD
      +                          ata();
 26243     0A88  319E  2679  318A   	fcall	_I2C1_MasterGetRxData
 26244     0A8B  00F9               	movwf	??_I2C1_DO_RX
 26245     0A8C  3017               	movlw	23
 26246     0A8D  3EA0               	addlw	(low (_I2C1_Status| 0))& (0+255)
 26247     0A8E  0086               	movwf	6
 26248     0A8F  0187               	clrf	7
 26249     0A90  3F40               	moviw [0]fsr1
 26250     0A91  0084               	movwf	4
 26251     0A92  3F41               	moviw [1]fsr1
 26252     0A93  0085               	movwf	5
 26253     0A94  0879               	movf	??_I2C1_DO_RX,w
 26254     0A95  0080               	movwf	0
 26255     0A96                     l12808:
 26256     0A96  3001               	movlw	1
 26257     0A97  0141               	movlb	1	; select bank1
 26258     0A98  07B7               	addwf	(low ((_I2C1_Status| 0+23)))^(0+128),f
 26259     0A99  3000               	movlw	0
 26260     0A9A  3DB8               	addwfc	((low ((_I2C1_Status| 0+23))+1))^(0+128),f
 26261     0A9B                     l12810:
 26262                           
 26263                           ;mcc_generated_files/i2c1_master.c: 381:     if(--I2C1_Status.data_length)
 26264     0A9B  3001               	movlw	1
 26265     0A9C  02B9               	subwf	(_I2C1_Status^(0+128)+25),f
 26266     0A9D  3000               	movlw	0
 26267     0A9E  3BBA               	subwfb	((_I2C1_Status+1)^(0+128)+25),f
 26268     0A9F  0839               	movf	(_I2C1_Status^(0+128)+25),w
 26269     0AA0  043A               	iorwf	((_I2C1_Status+1)^(0+128)+25),w
 26270     0AA1  1903               	btfsc	3,2
 26271     0AA2  2AA4               	goto	u9571
 26272     0AA3  2AA5               	goto	u9570
 26273     0AA4                     u9571:
 26274     0AA4  2AAA               	goto	l2481
 26275     0AA5                     u9570:
 26276     0AA5                     l12812:
 26277                           
 26278                           ;mcc_generated_files/i2c1_master.c: 382:     {;mcc_generated_files/i2c1_master.c: 383:  
      +                                 I2C1_MasterSendAck();
 26279     0AA5  319E  2693  318A   	fcall	_I2C1_MasterSendAck
 26280     0AA8                     l12814:
 26281                           
 26282                           ;mcc_generated_files/i2c1_master.c: 384:         return I2C1_RCEN;
 26283     0AA8  3005               	movlw	5
 26284     0AA9  2AD0               	goto	l2482
 26285     0AAA                     l2481:	
 26286                           ;mcc_generated_files/i2c1_master.c: 386:     else
 26287                           
 26288                           
 26289                           ;mcc_generated_files/i2c1_master.c: 387:     {;mcc_generated_files/i2c1_master.c: 388:  
      +                                 I2C1_Status.bufferFree = 1;
 26290     0AAA  15BD               	bsf	(_I2C1_Status^(0+128)+29),3
 26291                           
 26292                           ;mcc_generated_files/i2c1_master.c: 389:         switch(I2C1_Status.callbackTable[I2C1_D
      +                          ATA_COMPLETE](I2C1_Status.callbackPayload[I2C1_DATA_COMPLETE]))
 26293     0AAB  2AB4               	goto	l12830
 26294     0AAC                     l12820:
 26295                           
 26296                           ;mcc_generated_files/i2c1_master.c: 393:                 return I2C1_DO_RX_NACK_RESTART(
      +                          );
 26297     0AAC  319E  26C7  318A   	fcall	_I2C1_DO_RX_NACK_RESTART
 26298     0AAF  2AD0               	goto	l2482
 26299     0AB0                     l12824:
 26300                           
 26301                           ;mcc_generated_files/i2c1_master.c: 397:                 return I2C1_DO_RX_NACK_STOP();
 26302     0AB0  319E  26C2  318A   	fcall	_I2C1_DO_RX_NACK_STOP
 26303     0AB3  2AD0               	goto	l2482
 26304     0AB4                     l12830:
 26305     0AB4  082C               	movf	(low ((_I2C1_Status| 0+12)))^(0+128),w
 26306     0AB5  00F8               	movwf	I2C1_CallbackReturnReset@funPtr
 26307     0AB6  0821               	movf	(_I2C1_Status+1)^(0+128),w
 26308     0AB7  008A               	movwf	10
 26309     0AB8  0820               	movf	_I2C1_Status^(0+128),w
 26310     0AB9  000A               	callw
 26311     0ABA  318A               	pagesel	$
 26312     0ABB  00F9               	movwf	??_I2C1_DO_RX
 26313     0ABC  01FA               	clrf	??_I2C1_DO_RX+1
 26314                           
 26315                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 26316                           ; Switch size 1, requested type "simple"
 26317                           ; Number of cases is 1, Range of values is 0 to 0
 26318                           ; switch strategies available:
 26319                           ; Name         Instructions Cycles
 26320                           ; simple_byte            4     3 (average)
 26321                           ; direct_byte            8     6 (fixed)
 26322                           ; jumptable            260     6 (fixed)
 26323                           ;	Chosen strategy is simple_byte
 26324     0ABD  087A               	movf	??_I2C1_DO_RX+1,w
 26325     0ABE  3A00               	xorlw	0	; case 0
 26326     0ABF  1903               	skipnz
 26327     0AC0  2AC2               	goto	l16630
 26328     0AC1  2AB0               	goto	l12824
 26329     0AC2                     l16630:
 26330                           
 26331                           ; Switch size 1, requested type "simple"
 26332                           ; Number of cases is 4, Range of values is 1 to 4
 26333                           ; switch strategies available:
 26334                           ; Name         Instructions Cycles
 26335                           ; simple_byte           13     7 (average)
 26336                           ; direct_byte           17     9 (fixed)
 26337                           ; jumptable            263     9 (fixed)
 26338                           ;	Chosen strategy is simple_byte
 26339     0AC2  0879               	movf	??_I2C1_DO_RX,w
 26340     0AC3  3A01               	xorlw	1	; case 1
 26341     0AC4  1903               	skipnz
 26342     0AC5  2AB0               	goto	l12824
 26343     0AC6  3A03               	xorlw	3	; case 2
 26344     0AC7  1903               	skipnz
 26345     0AC8  2AAC               	goto	l12820
 26346     0AC9  3A01               	xorlw	1	; case 3
 26347     0ACA  1903               	skipnz
 26348     0ACB  2AAC               	goto	l12820
 26349     0ACC  3A07               	xorlw	7	; case 4
 26350     0ACD  1903               	skipnz
 26351     0ACE  2AB0               	goto	l12824
 26352     0ACF  2AB0               	goto	l12824
 26353     0AD0                     l2482:
 26354     0AD0  0008               	return
 26355     0AD1                     __end_of_I2C1_DO_RX:
 26356                           
 26357                           	psect	text127
 26358     0D9D                     __ptext127:	
 26359 ;; *************** function _I2C1_DO_TX *****************
 26360 ;; Defined at:
 26361 ;;		line 354 in file "mcc_generated_files/i2c1_master.c"
 26362 ;; Parameters:    Size  Location     Type
 26363 ;;		None
 26364 ;; Auto vars:     Size  Location     Type
 26365 ;;		None
 26366 ;; Return value:  Size  Location     Type
 26367 ;;                  1    wreg      enum E12565
 26368 ;; Registers used:
 26369 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 26370 ;; Tracked objects:
 26371 ;;		On entry : 0/0
 26372 ;;		On exit  : 0/0
 26373 ;;		Unchanged: 0/0
 26374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26375 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26376 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26377 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26378 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26379 ;;Total ram usage:        2 bytes
 26380 ;; Hardware stack levels used: 1
 26381 ;; Hardware stack levels required when called: 7
 26382 ;; This function calls:
 26383 ;;		NULL
 26384 ;;		_I2C1_CallbackReturnReset
 26385 ;;		_I2C1_CallbackReturnStop
 26386 ;;		_I2C1_DO_SEND_RESTART_READ
 26387 ;;		_I2C1_DO_SEND_RESTART_WRITE
 26388 ;;		_I2C1_DO_SEND_STOP
 26389 ;;		_I2C1_MasterIsNack
 26390 ;;		_I2C1_MasterSendTxData
 26391 ;;		_rd1RegCompleteHandler
 26392 ;;		_rd1RegCompleteHandler@i2c1_master_example$F1693
 26393 ;;		_rd2RegCompleteHandler
 26394 ;;		_rd2RegCompleteHandler@i2c1_master_example$F1704
 26395 ;;		_rdBlkRegCompleteHandler
 26396 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F1727
 26397 ;;		_wr1RegCompleteHandler
 26398 ;;		_wr1RegCompleteHandler@i2c1_master_example$F1710
 26399 ;;		_wr2RegCompleteHandler
 26400 ;;		_wr2RegCompleteHandler@i2c1_master_example$F1716
 26401 ;; This function is called by:
 26402 ;;		_I2C1_MasterFsm
 26403 ;; This function uses a non-reentrant model
 26404 ;;
 26405                           
 26406     0D9D                     _I2C1_DO_TX:	
 26407                           ;psect for function _I2C1_DO_TX
 26408                           
 26409     0D9D                     l12772:	
 26410                           ;incstack = 0
 26411                           ; Regs used in _I2C1_DO_TX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 26412                           
 26413                           
 26414                           ;mcc_generated_files/i2c1_master.c: 356:     if(I2C1_MasterIsNack())
 26415     0D9D  319E  26E0  318D   	fcall	_I2C1_MasterIsNack
 26416     0DA0  3A00               	xorlw	0
 26417     0DA1  1903               	skipnz
 26418     0DA2  2DA4               	goto	u9551
 26419     0DA3  2DA5               	goto	u9550
 26420     0DA4                     u9551:
 26421     0DA4  2DD3               	goto	l2465
 26422     0DA5                     u9550:
 26423     0DA5  2DB2               	goto	l12790
 26424     0DA6                     l12776:
 26425                           
 26426                           ;mcc_generated_files/i2c1_master.c: 361:                 return I2C1_DO_SEND_RESTART_REA
      +                          D();
 26427     0DA6  319E  26A9  318D   	fcall	_I2C1_DO_SEND_RESTART_READ
 26428     0DA9  2DF2               	goto	l2468
 26429     0DAA                     l12780:
 26430                           
 26431                           ;mcc_generated_files/i2c1_master.c: 363:                   return I2C1_DO_SEND_RESTART_W
      +                          RITE();
 26432     0DAA  319E  26AE  318D   	fcall	_I2C1_DO_SEND_RESTART_WRITE
 26433     0DAD  2DF2               	goto	l2468
 26434     0DAE                     l12784:
 26435                           
 26436                           ;mcc_generated_files/i2c1_master.c: 367:                 return I2C1_DO_SEND_STOP();
 26437     0DAE  319E  26B8  318D   	fcall	_I2C1_DO_SEND_STOP
 26438     0DB1  2DF2               	goto	l2468
 26439     0DB2                     l12790:
 26440     0DB2  0141               	movlb	1	; select bank1
 26441     0DB3  082F               	movf	(low ((_I2C1_Status| 0+15)))^(0+128),w
 26442     0DB4  00F8               	movwf	I2C1_CallbackReturnReset@funPtr
 26443     0DB5  3006               	movlw	6
 26444     0DB6  3EA0               	addlw	(low (_I2C1_Status| 0))& (0+255)
 26445     0DB7  0086               	movwf	6
 26446     0DB8  0187               	clrf	7
 26447     0DB9  3F41               	moviw [1]fsr1
 26448     0DBA  008A               	movwf	10
 26449     0DBB  3F40               	moviw [0]fsr1
 26450     0DBC  000A               	callw
 26451     0DBD  318D               	pagesel	$
 26452     0DBE  00F9               	movwf	??_I2C1_DO_TX
 26453     0DBF  01FA               	clrf	??_I2C1_DO_TX+1
 26454                           
 26455                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 26456                           ; Switch size 1, requested type "simple"
 26457                           ; Number of cases is 1, Range of values is 0 to 0
 26458                           ; switch strategies available:
 26459                           ; Name         Instructions Cycles
 26460                           ; simple_byte            4     3 (average)
 26461                           ; direct_byte            8     6 (fixed)
 26462                           ; jumptable            260     6 (fixed)
 26463                           ;	Chosen strategy is simple_byte
 26464     0DC0  087A               	movf	??_I2C1_DO_TX+1,w
 26465     0DC1  3A00               	xorlw	0	; case 0
 26466     0DC2  1903               	skipnz
 26467     0DC3  2DC5               	goto	l16632
 26468     0DC4  2DAE               	goto	l12784
 26469     0DC5                     l16632:
 26470                           
 26471                           ; Switch size 1, requested type "simple"
 26472                           ; Number of cases is 4, Range of values is 1 to 4
 26473                           ; switch strategies available:
 26474                           ; Name         Instructions Cycles
 26475                           ; simple_byte           13     7 (average)
 26476                           ; direct_byte           17     9 (fixed)
 26477                           ; jumptable            263     9 (fixed)
 26478                           ;	Chosen strategy is simple_byte
 26479     0DC5  0879               	movf	??_I2C1_DO_TX,w
 26480     0DC6  3A01               	xorlw	1	; case 1
 26481     0DC7  1903               	skipnz
 26482     0DC8  2DAE               	goto	l12784
 26483     0DC9  3A03               	xorlw	3	; case 2
 26484     0DCA  1903               	skipnz
 26485     0DCB  2DA6               	goto	l12776
 26486     0DCC  3A01               	xorlw	1	; case 3
 26487     0DCD  1903               	skipnz
 26488     0DCE  2DAA               	goto	l12780
 26489     0DCF  3A07               	xorlw	7	; case 4
 26490     0DD0  1903               	skipnz
 26491     0DD1  2DAE               	goto	l12784
 26492     0DD2  2DAE               	goto	l12784
 26493     0DD3                     l2465:	
 26494                           ;mcc_generated_files/i2c1_master.c: 370:     else
 26495                           
 26496                           
 26497                           ;mcc_generated_files/i2c1_master.c: 371:     {;mcc_generated_files/i2c1_master.c: 372:  
      +                                 I2C1_Status.addressNackCheck = 0;
 26498     0DD3  0141               	movlb	1	; select bank1
 26499     0DD4  103D               	bcf	(_I2C1_Status^(0+128)+29),0
 26500     0DD5                     l12792:
 26501                           
 26502                           ;mcc_generated_files/i2c1_master.c: 373:         I2C1_MasterSendTxData(*I2C1_Status.data
      +                          _ptr++);
 26503     0DD5  0838               	movf	((low ((_I2C1_Status| 0+23))+1))^(0+128),w
 26504     0DD6  00FA               	movwf	??_I2C1_DO_TX+1
 26505     0DD7  0837               	movf	(low ((_I2C1_Status| 0+23)))^(0+128),w
 26506     0DD8  00F9               	movwf	??_I2C1_DO_TX
 26507     0DD9  0AB7               	incf	(low ((_I2C1_Status| 0+23)))^(0+128),f
 26508     0DDA  1903               	skipnz
 26509     0DDB  0AB8               	incf	((low ((_I2C1_Status| 0+23))+1))^(0+128),f
 26510     0DDC  0879               	movf	??_I2C1_DO_TX,w
 26511     0DDD  0086               	movwf	6
 26512     0DDE  087A               	movf	??_I2C1_DO_TX+1,w
 26513     0DDF  0087               	movwf	7
 26514     0DE0  0801               	movf	1,w
 26515     0DE1  319E  269F  318D   	fcall	_I2C1_MasterSendTxData
 26516     0DE4                     l12794:
 26517                           
 26518                           ;mcc_generated_files/i2c1_master.c: 374:         return (--I2C1_Status.data_length)?I2C1
      +                          _TX:I2C1_TX_EMPTY;
 26519     0DE4  3001               	movlw	1
 26520     0DE5  0141               	movlb	1	; select bank1
 26521     0DE6  02B9               	subwf	(_I2C1_Status^(0+128)+25),f
 26522     0DE7  3000               	movlw	0
 26523     0DE8  3BBA               	subwfb	((_I2C1_Status+1)^(0+128)+25),f
 26524     0DE9  0839               	movf	(_I2C1_Status^(0+128)+25),w
 26525     0DEA  043A               	iorwf	((_I2C1_Status+1)^(0+128)+25),w
 26526     0DEB  1D03               	btfss	3,2
 26527     0DEC  2DEE               	goto	u9561
 26528     0DED  2DEF               	goto	u9560
 26529     0DEE                     u9561:
 26530     0DEE  2DF1               	goto	l12798
 26531     0DEF                     u9560:
 26532     0DEF                     l12796:
 26533     0DEF  3006               	movlw	6
 26534     0DF0  2DF2               	goto	l2468
 26535     0DF1                     l12798:
 26536     0DF1  3003               	movlw	3
 26537     0DF2                     l2468:
 26538     0DF2  0008               	return
 26539     0DF3                     __end_of_I2C1_DO_TX:
 26540                           
 26541                           	psect	text128
 26542     1F5A                     __ptext128:	
 26543 ;; *************** function _I2C1_DO_SEND_ADR_WRITE *****************
 26544 ;; Defined at:
 26545 ;;		line 347 in file "mcc_generated_files/i2c1_master.c"
 26546 ;; Parameters:    Size  Location     Type
 26547 ;;		None
 26548 ;; Auto vars:     Size  Location     Type
 26549 ;;		None
 26550 ;; Return value:  Size  Location     Type
 26551 ;;                  1    wreg      enum E12565
 26552 ;; Registers used:
 26553 ;;		wreg, status,2, status,0, pclath, cstack
 26554 ;; Tracked objects:
 26555 ;;		On entry : 0/0
 26556 ;;		On exit  : 0/0
 26557 ;;		Unchanged: 0/0
 26558 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26559 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26560 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26562 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26563 ;;Total ram usage:        0 bytes
 26564 ;; Hardware stack levels used: 1
 26565 ;; Hardware stack levels required when called: 5
 26566 ;; This function calls:
 26567 ;;		_I2C1_MasterSendTxData
 26568 ;; This function is called by:
 26569 ;;		_I2C1_MasterFsm
 26570 ;; This function uses a non-reentrant model
 26571 ;;
 26572                           
 26573     1F5A                     _I2C1_DO_SEND_ADR_WRITE:	
 26574                           ;psect for function _I2C1_DO_SEND_ADR_WRITE
 26575                           
 26576     1F5A                     l12764:	
 26577                           ;incstack = 0
 26578                           ; Regs used in _I2C1_DO_SEND_ADR_WRITE: [wreg+status,2+status,0+pclath+cstack]
 26579                           
 26580                           
 26581                           ;mcc_generated_files/i2c1_master.c: 349:     I2C1_Status.addressNackCheck = 1;
 26582     1F5A  0141               	movlb	1	; select bank1
 26583     1F5B  143D               	bsf	(_I2C1_Status^(0+128)+29),0
 26584     1F5C                     l12766:
 26585                           
 26586                           ;mcc_generated_files/i2c1_master.c: 350:     I2C1_MasterSendTxData((uint8_t) (I2C1_Statu
      +                          s.address << 1));
 26587     1F5C  3536               	lslf	(_I2C1_Status^(0+128)+22),w
 26588     1F5D  319E  269F  319F   	fcall	_I2C1_MasterSendTxData
 26589     1F60                     l12768:
 26590                           
 26591                           ;mcc_generated_files/i2c1_master.c: 351:     return I2C1_TX;
 26592     1F60  3003               	movlw	3
 26593     1F61                     l2462:
 26594     1F61  0008               	return
 26595     1F62                     __end_of_I2C1_DO_SEND_ADR_WRITE:
 26596                           
 26597                           	psect	text129
 26598     1F73                     __ptext129:	
 26599 ;; *************** function _I2C1_DO_SEND_ADR_READ *****************
 26600 ;; Defined at:
 26601 ;;		line 340 in file "mcc_generated_files/i2c1_master.c"
 26602 ;; Parameters:    Size  Location     Type
 26603 ;;		None
 26604 ;; Auto vars:     Size  Location     Type
 26605 ;;		None
 26606 ;; Return value:  Size  Location     Type
 26607 ;;                  1    wreg      enum E12565
 26608 ;; Registers used:
 26609 ;;		wreg, status,2, status,0, pclath, cstack
 26610 ;; Tracked objects:
 26611 ;;		On entry : 0/0
 26612 ;;		On exit  : 0/0
 26613 ;;		Unchanged: 0/0
 26614 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26615 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26616 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26618 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26619 ;;Total ram usage:        0 bytes
 26620 ;; Hardware stack levels used: 1
 26621 ;; Hardware stack levels required when called: 5
 26622 ;; This function calls:
 26623 ;;		_I2C1_MasterSendTxData
 26624 ;; This function is called by:
 26625 ;;		_I2C1_MasterFsm
 26626 ;; This function uses a non-reentrant model
 26627 ;;
 26628                           
 26629     1F73                     _I2C1_DO_SEND_ADR_READ:	
 26630                           ;psect for function _I2C1_DO_SEND_ADR_READ
 26631                           
 26632     1F73                     l12756:	
 26633                           ;incstack = 0
 26634                           ; Regs used in _I2C1_DO_SEND_ADR_READ: [wreg+status,2+status,0+pclath+cstack]
 26635                           
 26636                           
 26637                           ;mcc_generated_files/i2c1_master.c: 342:     I2C1_Status.addressNackCheck = 1;
 26638     1F73  0141               	movlb	1	; select bank1
 26639     1F74  143D               	bsf	(_I2C1_Status^(0+128)+29),0
 26640     1F75                     l12758:
 26641                           
 26642                           ;mcc_generated_files/i2c1_master.c: 343:     I2C1_MasterSendTxData((uint8_t) (I2C1_Statu
      +                          s.address << 1 | 1));
 26643     1F75  1403               	setc
 26644     1F76  0D36               	rlf	(_I2C1_Status^(0+128)+22),w
 26645     1F77  319E  269F  319F   	fcall	_I2C1_MasterSendTxData
 26646     1F7A                     l12760:
 26647                           
 26648                           ;mcc_generated_files/i2c1_master.c: 344:     return I2C1_RCEN;
 26649     1F7A  3005               	movlw	5
 26650     1F7B                     l2459:
 26651     1F7B  0008               	return
 26652     1F7C                     __end_of_I2C1_DO_SEND_ADR_READ:
 26653                           
 26654                           	psect	text130
 26655     1EA4                     __ptext130:	
 26656 ;; *************** function _I2C1_DO_IDLE *****************
 26657 ;; Defined at:
 26658 ;;		line 333 in file "mcc_generated_files/i2c1_master.c"
 26659 ;; Parameters:    Size  Location     Type
 26660 ;;		None
 26661 ;; Auto vars:     Size  Location     Type
 26662 ;;		None
 26663 ;; Return value:  Size  Location     Type
 26664 ;;                  1    wreg      enum E12565
 26665 ;; Registers used:
 26666 ;;		wreg, status,2
 26667 ;; Tracked objects:
 26668 ;;		On entry : 0/0
 26669 ;;		On exit  : 0/0
 26670 ;;		Unchanged: 0/0
 26671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26675 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26676 ;;Total ram usage:        0 bytes
 26677 ;; Hardware stack levels used: 1
 26678 ;; Hardware stack levels required when called: 4
 26679 ;; This function calls:
 26680 ;;		Nothing
 26681 ;; This function is called by:
 26682 ;;		_I2C1_MasterFsm
 26683 ;; This function uses a non-reentrant model
 26684 ;;
 26685                           
 26686     1EA4                     _I2C1_DO_IDLE:	
 26687                           ;psect for function _I2C1_DO_IDLE
 26688                           
 26689     1EA4                     l12748:	
 26690                           ;incstack = 0
 26691                           ; Regs used in _I2C1_DO_IDLE: [wreg+status,2]
 26692                           
 26693                           
 26694                           ;mcc_generated_files/i2c1_master.c: 335:     I2C1_Status.busy = 0;
 26695     1EA4  0141               	movlb	1	; select bank1
 26696     1EA5  10BD               	bcf	(_I2C1_Status^(0+128)+29),1
 26697     1EA6                     l12750:
 26698                           
 26699                           ;mcc_generated_files/i2c1_master.c: 336:     I2C1_Status.error = I2C1_NOERR;
 26700     1EA6  01BC               	clrf	(_I2C1_Status^(0+128)+28)
 26701     1EA7                     l12752:
 26702                           
 26703                           ;mcc_generated_files/i2c1_master.c: 337:     return I2C1_RESET;
 26704     1EA7  300E               	movlw	14
 26705     1EA8                     l2456:
 26706     1EA8  0008               	return
 26707     1EA9                     __end_of_I2C1_DO_IDLE:
 26708                           
 26709                           	psect	text131
 26710     15B2                     __ptext131:	
 26711 ;; *************** function _I2C1_DO_TX_EMPTY *****************
 26712 ;; Defined at:
 26713 ;;		line 409 in file "mcc_generated_files/i2c1_master.c"
 26714 ;; Parameters:    Size  Location     Type
 26715 ;;		None
 26716 ;; Auto vars:     Size  Location     Type
 26717 ;;		None
 26718 ;; Return value:  Size  Location     Type
 26719 ;;                  1    wreg      enum E12565
 26720 ;; Registers used:
 26721 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 26722 ;; Tracked objects:
 26723 ;;		On entry : 0/0
 26724 ;;		On exit  : 0/0
 26725 ;;		Unchanged: 0/0
 26726 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26728 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26729 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26730 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26731 ;;Total ram usage:        2 bytes
 26732 ;; Hardware stack levels used: 1
 26733 ;; Hardware stack levels required when called: 7
 26734 ;; This function calls:
 26735 ;;		NULL
 26736 ;;		_I2C1_CallbackReturnReset
 26737 ;;		_I2C1_CallbackReturnStop
 26738 ;;		_I2C1_DO_SEND_RESTART
 26739 ;;		_I2C1_DO_SEND_STOP
 26740 ;;		_I2C1_MasterSetIrq
 26741 ;;		_rd1RegCompleteHandler
 26742 ;;		_rd1RegCompleteHandler@i2c1_master_example$F1693
 26743 ;;		_rd2RegCompleteHandler
 26744 ;;		_rd2RegCompleteHandler@i2c1_master_example$F1704
 26745 ;;		_rdBlkRegCompleteHandler
 26746 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F1727
 26747 ;;		_wr1RegCompleteHandler
 26748 ;;		_wr1RegCompleteHandler@i2c1_master_example$F1710
 26749 ;;		_wr2RegCompleteHandler
 26750 ;;		_wr2RegCompleteHandler@i2c1_master_example$F1716
 26751 ;; This function is called by:
 26752 ;;		_I2C1_MasterFsm
 26753 ;; This function uses a non-reentrant model
 26754 ;;
 26755                           
 26756     15B2                     _I2C1_DO_TX_EMPTY:	
 26757                           ;psect for function _I2C1_DO_TX_EMPTY
 26758                           
 26759     15B2                     l12846:	
 26760                           ;incstack = 0
 26761                           ; Regs used in _I2C1_DO_TX_EMPTY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 26762                           
 26763                           
 26764                           ;mcc_generated_files/i2c1_master.c: 411:     I2C1_Status.bufferFree = 1;
 26765     15B2  0141               	movlb	1	; select bank1
 26766     15B3  15BD               	bsf	(_I2C1_Status^(0+128)+29),3
 26767                           
 26768                           ;mcc_generated_files/i2c1_master.c: 412:     switch(I2C1_Status.callbackTable[I2C1_DATA_
      +                          COMPLETE](I2C1_Status.callbackPayload[I2C1_DATA_COMPLETE]))
 26769     15B4  2DC2               	goto	l12864
 26770     15B5                     l12848:
 26771                           
 26772                           ;mcc_generated_files/i2c1_master.c: 416:             return I2C1_DO_SEND_RESTART();
 26773     15B5  319E  26B3  3195   	fcall	_I2C1_DO_SEND_RESTART
 26774     15B8  2DDE               	goto	l2499
 26775     15B9                     l12852:
 26776                           
 26777                           ;mcc_generated_files/i2c1_master.c: 418:             I2C1_MasterSetIrq();
 26778     15B9  319E  267C  3195   	fcall	_I2C1_MasterSetIrq
 26779     15BC                     l12854:
 26780                           
 26781                           ;mcc_generated_files/i2c1_master.c: 419:             return I2C1_TX;
 26782     15BC  3003               	movlw	3
 26783     15BD  2DDE               	goto	l2499
 26784     15BE                     l12858:
 26785                           
 26786                           ;mcc_generated_files/i2c1_master.c: 422:             return I2C1_DO_SEND_STOP();
 26787     15BE  319E  26B8  3195   	fcall	_I2C1_DO_SEND_STOP
 26788     15C1  2DDE               	goto	l2499
 26789     15C2                     l12864:
 26790     15C2  082C               	movf	(low ((_I2C1_Status| 0+12)))^(0+128),w
 26791     15C3  00F8               	movwf	I2C1_CallbackReturnReset@funPtr
 26792     15C4  0821               	movf	(_I2C1_Status+1)^(0+128),w
 26793     15C5  008A               	movwf	10
 26794     15C6  0820               	movf	_I2C1_Status^(0+128),w
 26795     15C7  000A               	callw
 26796     15C8  3195               	pagesel	$
 26797     15C9  00F9               	movwf	??_I2C1_DO_TX_EMPTY
 26798     15CA  01FA               	clrf	??_I2C1_DO_TX_EMPTY+1
 26799                           
 26800                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 26801                           ; Switch size 1, requested type "simple"
 26802                           ; Number of cases is 1, Range of values is 0 to 0
 26803                           ; switch strategies available:
 26804                           ; Name         Instructions Cycles
 26805                           ; simple_byte            4     3 (average)
 26806                           ; direct_byte            8     6 (fixed)
 26807                           ; jumptable            260     6 (fixed)
 26808                           ;	Chosen strategy is simple_byte
 26809     15CB  087A               	movf	??_I2C1_DO_TX_EMPTY+1,w
 26810     15CC  3A00               	xorlw	0	; case 0
 26811     15CD  1903               	skipnz
 26812     15CE  2DD0               	goto	l16634
 26813     15CF  2DBE               	goto	l12858
 26814     15D0                     l16634:
 26815                           
 26816                           ; Switch size 1, requested type "simple"
 26817                           ; Number of cases is 4, Range of values is 1 to 4
 26818                           ; switch strategies available:
 26819                           ; Name         Instructions Cycles
 26820                           ; simple_byte           13     7 (average)
 26821                           ; direct_byte           17     9 (fixed)
 26822                           ; jumptable            263     9 (fixed)
 26823                           ;	Chosen strategy is simple_byte
 26824     15D0  0879               	movf	??_I2C1_DO_TX_EMPTY,w
 26825     15D1  3A01               	xorlw	1	; case 1
 26826     15D2  1903               	skipnz
 26827     15D3  2DBE               	goto	l12858
 26828     15D4  3A03               	xorlw	3	; case 2
 26829     15D5  1903               	skipnz
 26830     15D6  2DB5               	goto	l12848
 26831     15D7  3A01               	xorlw	1	; case 3
 26832     15D8  1903               	skipnz
 26833     15D9  2DB5               	goto	l12848
 26834     15DA  3A07               	xorlw	7	; case 4
 26835     15DB  1903               	skipnz
 26836     15DC  2DB9               	goto	l12852
 26837     15DD  2DBE               	goto	l12858
 26838     15DE                     l2499:
 26839     15DE  0008               	return
 26840     15DF                     __end_of_I2C1_DO_TX_EMPTY:
 26841                           
 26842                           	psect	text132
 26843     1E7C                     __ptext132:	
 26844 ;; *************** function _I2C1_MasterSetIrq *****************
 26845 ;; Defined at:
 26846 ;;		line 645 in file "mcc_generated_files/i2c1_master.c"
 26847 ;; Parameters:    Size  Location     Type
 26848 ;;		None
 26849 ;; Auto vars:     Size  Location     Type
 26850 ;;		None
 26851 ;; Return value:  Size  Location     Type
 26852 ;;                  1    wreg      void 
 26853 ;; Registers used:
 26854 ;;		None
 26855 ;; Tracked objects:
 26856 ;;		On entry : 0/0
 26857 ;;		On exit  : 0/0
 26858 ;;		Unchanged: 0/0
 26859 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26860 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26861 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26863 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26864 ;;Total ram usage:        0 bytes
 26865 ;; Hardware stack levels used: 1
 26866 ;; Hardware stack levels required when called: 4
 26867 ;; This function calls:
 26868 ;;		Nothing
 26869 ;; This function is called by:
 26870 ;;		_I2C1_DO_TX_EMPTY
 26871 ;; This function uses a non-reentrant model
 26872 ;;
 26873                           
 26874     1E7C                     _I2C1_MasterSetIrq:	
 26875                           ;psect for function _I2C1_MasterSetIrq
 26876                           
 26877     1E7C                     l12736:	
 26878                           ;incstack = 0
 26879                           ; Regs used in _I2C1_MasterSetIrq: []
 26880                           
 26881                           
 26882                           ;mcc_generated_files/i2c1_master.c: 647:     PIR3bits.SSP1IF = 1;
 26883     1E7C  014E               	movlb	14	; select bank14
 26884     1E7D  140F               	bsf	15,0	;volatile
 26885     1E7E                     l2619:
 26886     1E7E  0008               	return
 26887     1E7F                     __end_of_I2C1_MasterSetIrq:
 26888                           
 26889                           	psect	text133
 26890     1EE0                     __ptext133:	
 26891 ;; *************** function _I2C1_MasterIsNack *****************
 26892 ;; Defined at:
 26893 ;;		line 598 in file "mcc_generated_files/i2c1_master.c"
 26894 ;; Parameters:    Size  Location     Type
 26895 ;;		None
 26896 ;; Auto vars:     Size  Location     Type
 26897 ;;		None
 26898 ;; Return value:  Size  Location     Type
 26899 ;;                  1    wreg      _Bool 
 26900 ;; Registers used:
 26901 ;;		wreg, status,2, status,0
 26902 ;; Tracked objects:
 26903 ;;		On entry : 0/0
 26904 ;;		On exit  : 0/0
 26905 ;;		Unchanged: 0/0
 26906 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26907 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26908 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26910 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26911 ;;Total ram usage:        0 bytes
 26912 ;; Hardware stack levels used: 1
 26913 ;; Hardware stack levels required when called: 4
 26914 ;; This function calls:
 26915 ;;		Nothing
 26916 ;; This function is called by:
 26917 ;;		_I2C1_MasterFsm
 26918 ;;		_I2C1_DO_TX
 26919 ;; This function uses a non-reentrant model
 26920 ;;
 26921                           
 26922     1EE0                     _I2C1_MasterIsNack:	
 26923                           ;psect for function _I2C1_MasterIsNack
 26924                           
 26925     1EE0                     l12686:	
 26926                           ;incstack = 0
 26927                           ; Regs used in _I2C1_MasterIsNack: [wreg+status,2+status,0]
 26928                           
 26929                           
 26930                           ;mcc_generated_files/i2c1_master.c: 600:     return SSP1CON2bits.ACKSTAT;
 26931     1EE0  0143               	movlb	3	; select bank3
 26932     1EE1  0E11               	swapf	17,w	;volatile
 26933     1EE2  0C89               	rrf	9,f
 26934     1EE3  0C89               	rrf	9,f
 26935     1EE4  3901               	andlw	1
 26936     1EE5                     l2592:
 26937     1EE5  0008               	return
 26938     1EE6                     __end_of_I2C1_MasterIsNack:
 26939                           
 26940                           	psect	text134
 26941     1E9F                     __ptext134:	
 26942 ;; *************** function _I2C1_MasterSendTxData *****************
 26943 ;; Defined at:
 26944 ;;		line 568 in file "mcc_generated_files/i2c1_master.c"
 26945 ;; Parameters:    Size  Location     Type
 26946 ;;  data            1    wreg     unsigned char 
 26947 ;; Auto vars:     Size  Location     Type
 26948 ;;  data            1    1[COMMON] unsigned char 
 26949 ;; Return value:  Size  Location     Type
 26950 ;;                  1    wreg      void 
 26951 ;; Registers used:
 26952 ;;		wreg
 26953 ;; Tracked objects:
 26954 ;;		On entry : 0/0
 26955 ;;		On exit  : 0/0
 26956 ;;		Unchanged: 0/0
 26957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26959 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26961 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26962 ;;Total ram usage:        1 bytes
 26963 ;; Hardware stack levels used: 1
 26964 ;; Hardware stack levels required when called: 4
 26965 ;; This function calls:
 26966 ;;		Nothing
 26967 ;; This function is called by:
 26968 ;;		_I2C1_DO_SEND_ADR_READ
 26969 ;;		_I2C1_DO_SEND_ADR_WRITE
 26970 ;;		_I2C1_DO_TX
 26971 ;; This function uses a non-reentrant model
 26972 ;;
 26973                           
 26974     1E9F                     _I2C1_MasterSendTxData:	
 26975                           ;psect for function _I2C1_MasterSendTxData
 26976                           
 26977                           
 26978                           ;incstack = 0
 26979                           ; Regs used in _I2C1_MasterSendTxData: [wreg]
 26980                           ;I2C1_MasterSendTxData@data stored from wreg
 26981     1E9F  00F1               	movwf	I2C1_MasterSendTxData@data
 26982     1EA0                     l12690:
 26983                           
 26984                           ;mcc_generated_files/i2c1_master.c: 568: static __attribute__((inline)) void I2C1_Master
      +                          SendTxData(uint8_t data);mcc_generated_files/i2c1_master.c: 569: {;mcc_generated_files/i
      +                          2c1_master.c: 570:     SSP1BUF = data;
 26985     1EA0  0871               	movf	I2C1_MasterSendTxData@data,w
 26986     1EA1  0143               	movlb	3	; select bank3
 26987     1EA2  008C               	movwf	12	;volatile
 26988     1EA3                     l2574:
 26989     1EA3  0008               	return
 26990     1EA4                     __end_of_I2C1_MasterSendTxData:
 26991                           
 26992                           	psect	text135
 26993     1E93                     __ptext135:	
 26994 ;; *************** function _I2C1_MasterSendAck *****************
 26995 ;; Defined at:
 26996 ;;		line 603 in file "mcc_generated_files/i2c1_master.c"
 26997 ;; Parameters:    Size  Location     Type
 26998 ;;		None
 26999 ;; Auto vars:     Size  Location     Type
 27000 ;;		None
 27001 ;; Return value:  Size  Location     Type
 27002 ;;                  1    wreg      void 
 27003 ;; Registers used:
 27004 ;;		None
 27005 ;; Tracked objects:
 27006 ;;		On entry : 0/0
 27007 ;;		On exit  : 0/0
 27008 ;;		Unchanged: 0/0
 27009 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27010 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27011 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27013 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27014 ;;Total ram usage:        0 bytes
 27015 ;; Hardware stack levels used: 1
 27016 ;; Hardware stack levels required when called: 4
 27017 ;; This function calls:
 27018 ;;		Nothing
 27019 ;; This function is called by:
 27020 ;;		_I2C1_DO_RX
 27021 ;;		_I2C1_DO_RX_ACK
 27022 ;; This function uses a non-reentrant model
 27023 ;;
 27024                           
 27025     1E93                     _I2C1_MasterSendAck:	
 27026                           ;psect for function _I2C1_MasterSendAck
 27027                           
 27028     1E93                     l12714:	
 27029                           ;incstack = 0
 27030                           ; Regs used in _I2C1_MasterSendAck: []
 27031                           
 27032                           
 27033                           ;mcc_generated_files/i2c1_master.c: 605:     SSP1CON2bits.ACKDT = 0;
 27034     1E93  0143               	movlb	3	; select bank3
 27035     1E94  1291               	bcf	17,5	;volatile
 27036                           
 27037                           ;mcc_generated_files/i2c1_master.c: 606:     SSP1CON2bits.ACKEN = 1;
 27038     1E95  1611               	bsf	17,4	;volatile
 27039     1E96                     l2595:
 27040     1E96  0008               	return
 27041     1E97                     __end_of_I2C1_MasterSendAck:
 27042                           
 27043                           	psect	text136
 27044     1E79                     __ptext136:	
 27045 ;; *************** function _I2C1_MasterGetRxData *****************
 27046 ;; Defined at:
 27047 ;;		line 563 in file "mcc_generated_files/i2c1_master.c"
 27048 ;; Parameters:    Size  Location     Type
 27049 ;;		None
 27050 ;; Auto vars:     Size  Location     Type
 27051 ;;		None
 27052 ;; Return value:  Size  Location     Type
 27053 ;;                  1    wreg      unsigned char 
 27054 ;; Registers used:
 27055 ;;		wreg
 27056 ;; Tracked objects:
 27057 ;;		On entry : 0/0
 27058 ;;		On exit  : 0/0
 27059 ;;		Unchanged: 0/0
 27060 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27061 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27062 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27063 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27064 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27065 ;;Total ram usage:        0 bytes
 27066 ;; Hardware stack levels used: 1
 27067 ;; Hardware stack levels required when called: 4
 27068 ;; This function calls:
 27069 ;;		Nothing
 27070 ;; This function is called by:
 27071 ;;		_I2C1_DO_RX
 27072 ;; This function uses a non-reentrant model
 27073 ;;
 27074                           
 27075     1E79                     _I2C1_MasterGetRxData:	
 27076                           ;psect for function _I2C1_MasterGetRxData
 27077                           
 27078     1E79                     l12710:	
 27079                           ;incstack = 0
 27080                           ; Regs used in _I2C1_MasterGetRxData: [wreg]
 27081                           
 27082                           
 27083                           ;mcc_generated_files/i2c1_master.c: 565:     return SSP1BUF;
 27084     1E79  0143               	movlb	3	; select bank3
 27085     1E7A  080C               	movf	12,w	;volatile
 27086     1E7B                     l2571:
 27087     1E7B  0008               	return
 27088     1E7C                     __end_of_I2C1_MasterGetRxData:
 27089                           
 27090                           	psect	text137
 27091     1E8F                     __ptext137:	
 27092 ;; *************** function _I2C1_MasterSendNack *****************
 27093 ;; Defined at:
 27094 ;;		line 609 in file "mcc_generated_files/i2c1_master.c"
 27095 ;; Parameters:    Size  Location     Type
 27096 ;;		None
 27097 ;; Auto vars:     Size  Location     Type
 27098 ;;		None
 27099 ;; Return value:  Size  Location     Type
 27100 ;;                  1    wreg      void 
 27101 ;; Registers used:
 27102 ;;		None
 27103 ;; Tracked objects:
 27104 ;;		On entry : 0/0
 27105 ;;		On exit  : 0/0
 27106 ;;		Unchanged: 0/0
 27107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27108 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27109 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27111 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27112 ;;Total ram usage:        0 bytes
 27113 ;; Hardware stack levels used: 1
 27114 ;; Hardware stack levels required when called: 4
 27115 ;; This function calls:
 27116 ;;		Nothing
 27117 ;; This function is called by:
 27118 ;;		_I2C1_DO_RX_NACK_STOP
 27119 ;;		_I2C1_DO_RX_NACK_RESTART
 27120 ;; This function uses a non-reentrant model
 27121 ;;
 27122                           
 27123     1E8F                     _I2C1_MasterSendNack:	
 27124                           ;psect for function _I2C1_MasterSendNack
 27125                           
 27126     1E8F                     l12608:	
 27127                           ;incstack = 0
 27128                           ; Regs used in _I2C1_MasterSendNack: []
 27129                           
 27130                           
 27131                           ;mcc_generated_files/i2c1_master.c: 611:     SSP1CON2bits.ACKDT = 1;
 27132     1E8F  0143               	movlb	3	; select bank3
 27133     1E90  1691               	bsf	17,5	;volatile
 27134                           
 27135                           ;mcc_generated_files/i2c1_master.c: 612:     SSP1CON2bits.ACKEN = 1;
 27136     1E91  1611               	bsf	17,4	;volatile
 27137     1E92                     l2598:
 27138     1E92  0008               	return
 27139     1E93                     __end_of_I2C1_MasterSendNack:
 27140                           
 27141                           	psect	text138
 27142     1E76                     __ptext138:	
 27143 ;; *************** function _I2C1_MasterStartRx *****************
 27144 ;; Defined at:
 27145 ;;		line 583 in file "mcc_generated_files/i2c1_master.c"
 27146 ;; Parameters:    Size  Location     Type
 27147 ;;		None
 27148 ;; Auto vars:     Size  Location     Type
 27149 ;;		None
 27150 ;; Return value:  Size  Location     Type
 27151 ;;                  1    wreg      void 
 27152 ;; Registers used:
 27153 ;;		None
 27154 ;; Tracked objects:
 27155 ;;		On entry : 0/0
 27156 ;;		On exit  : 0/0
 27157 ;;		Unchanged: 0/0
 27158 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27159 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27160 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27162 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27163 ;;Total ram usage:        0 bytes
 27164 ;; Hardware stack levels used: 1
 27165 ;; Hardware stack levels required when called: 4
 27166 ;; This function calls:
 27167 ;;		Nothing
 27168 ;; This function is called by:
 27169 ;;		_I2C1_DO_RCEN
 27170 ;; This function uses a non-reentrant model
 27171 ;;
 27172                           
 27173     1E76                     _I2C1_MasterStartRx:	
 27174                           ;psect for function _I2C1_MasterStartRx
 27175                           
 27176     1E76                     l12728:	
 27177                           ;incstack = 0
 27178                           ; Regs used in _I2C1_MasterStartRx: []
 27179                           
 27180                           
 27181                           ;mcc_generated_files/i2c1_master.c: 585:     SSP1CON2bits.RCEN = 1;
 27182     1E76  0143               	movlb	3	; select bank3
 27183     1E77  1591               	bsf	17,3	;volatile
 27184     1E78                     l2583:
 27185     1E78  0008               	return
 27186     1E79                     __end_of_I2C1_MasterStartRx:
 27187                           
 27188                           	psect	text139
 27189     1E62                     __ptext139:	
 27190 ;; *************** function _I2C1_CallbackReturnReset *****************
 27191 ;; Defined at:
 27192 ;;		line 525 in file "mcc_generated_files/i2c1_master.c"
 27193 ;; Parameters:    Size  Location     Type
 27194 ;;  funPtr          1    8[COMMON] PTR void 
 27195 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 27196 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 27197 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 27198 ;; Auto vars:     Size  Location     Type
 27199 ;;		None
 27200 ;; Return value:  Size  Location     Type
 27201 ;;                  1    wreg      enum E363
 27202 ;; Registers used:
 27203 ;;		wreg
 27204 ;; Tracked objects:
 27205 ;;		On entry : 0/0
 27206 ;;		On exit  : 0/0
 27207 ;;		Unchanged: 0/0
 27208 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27209 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27210 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27212 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27213 ;;Total ram usage:        1 bytes
 27214 ;; Hardware stack levels used: 1
 27215 ;; Hardware stack levels required when called: 4
 27216 ;; This function calls:
 27217 ;;		Nothing
 27218 ;; This function is called by:
 27219 ;;		_I2C1_Open
 27220 ;;		_I2C1_DO_TX
 27221 ;;		_I2C1_DO_RX
 27222 ;;		_I2C1_DO_TX_EMPTY
 27223 ;;		_I2C1_DO_ADDRESS_NACK
 27224 ;;		_I2C1_DO_RX_EMPTY
 27225 ;; This function uses a non-reentrant model
 27226 ;;
 27227                           
 27228     1E62                     _I2C1_CallbackReturnReset:	
 27229                           ;psect for function _I2C1_CallbackReturnReset
 27230                           
 27231     1E62                     l12742:	
 27232                           ;incstack = 0
 27233                           ; Regs used in _I2C1_CallbackReturnReset: [wreg]
 27234                           
 27235                           
 27236                           ;mcc_generated_files/i2c1_master.c: 525: i2c1_operations_t I2C1_CallbackReturnReset(void
      +                           *funPtr);mcc_generated_files/i2c1_master.c: 526: {;mcc_generated_files/i2c1_master.c: 5
      +                          27:     return I2C1_RESET_LINK;
 27237     1E62  3005               	movlw	5
 27238     1E63                     l2555:
 27239     1E63  0008               	return
 27240     1E64                     __end_of_I2C1_CallbackReturnReset:
 27241                           
 27242                           	psect	text140
 27243     1E60                     __ptext140:	
 27244 ;; *************** function _I2C1_CallbackReturnStop *****************
 27245 ;; Defined at:
 27246 ;;		line 520 in file "mcc_generated_files/i2c1_master.c"
 27247 ;; Parameters:    Size  Location     Type
 27248 ;;  funPtr          1    8[COMMON] PTR void 
 27249 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 27250 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 27251 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 27252 ;; Auto vars:     Size  Location     Type
 27253 ;;		None
 27254 ;; Return value:  Size  Location     Type
 27255 ;;                  1    wreg      enum E363
 27256 ;; Registers used:
 27257 ;;		wreg
 27258 ;; Tracked objects:
 27259 ;;		On entry : 0/0
 27260 ;;		On exit  : 0/0
 27261 ;;		Unchanged: 0/0
 27262 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27263 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27264 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27265 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27266 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27267 ;;Total ram usage:        1 bytes
 27268 ;; Hardware stack levels used: 1
 27269 ;; Hardware stack levels required when called: 4
 27270 ;; This function calls:
 27271 ;;		Nothing
 27272 ;; This function is called by:
 27273 ;;		_I2C1_Open
 27274 ;;		_I2C1_SetCallback
 27275 ;;		_I2C1_DO_TX
 27276 ;;		_I2C1_DO_RX
 27277 ;;		_I2C1_DO_TX_EMPTY
 27278 ;;		_I2C1_DO_ADDRESS_NACK
 27279 ;;		_I2C1_DO_RX_EMPTY
 27280 ;; This function uses a non-reentrant model
 27281 ;;
 27282                           
 27283     1E60                     _I2C1_CallbackReturnStop:	
 27284                           ;psect for function _I2C1_CallbackReturnStop
 27285                           
 27286     1E60                     l12738:	
 27287                           ;incstack = 0
 27288                           ; Regs used in _I2C1_CallbackReturnStop: [wreg]
 27289                           
 27290                           
 27291                           ;mcc_generated_files/i2c1_master.c: 520: i2c1_operations_t I2C1_CallbackReturnStop(void 
      +                          *funPtr);mcc_generated_files/i2c1_master.c: 521: {;mcc_generated_files/i2c1_master.c: 52
      +                          2:     return I2C1_STOP;
 27292     1E60  3001               	movlw	1
 27293     1E61                     l2552:
 27294     1E61  0008               	return
 27295     1E62                     __end_of_I2C1_CallbackReturnStop:
 27296                           
 27297                           	psect	text141
 27298     1337                     __ptext141:	
 27299 ;; *************** function _rdBlkRegCompleteHandler@i2c1_master_example$F1727 *****************
 27300 ;; Defined at:
 27301 ;;		line 170 in file "mcc_generated_files/examples/i2c1_master_example.c"
 27302 ;; Parameters:    Size  Location     Type
 27303 ;;  ptr             1    8[COMMON] PTR void 
 27304 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 27305 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 27306 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 27307 ;; Auto vars:     Size  Location     Type
 27308 ;;		None
 27309 ;; Return value:  Size  Location     Type
 27310 ;;                  1    wreg      enum E363
 27311 ;; Registers used:
 27312 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 27313 ;; Tracked objects:
 27314 ;;		On entry : 0/0
 27315 ;;		On exit  : 0/0
 27316 ;;		Unchanged: 0/0
 27317 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27318 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27319 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27321 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27322 ;;Total ram usage:        1 bytes
 27323 ;; Hardware stack levels used: 1
 27324 ;; Hardware stack levels required when called: 6
 27325 ;; This function calls:
 27326 ;;		_I2C1_SetBuffer
 27327 ;;		_I2C1_SetDataCompleteCallback
 27328 ;; This function is called by:
 27329 ;;		_I2C1_ReadDataBlock
 27330 ;;		_I2C1_DO_TX
 27331 ;;		_I2C1_DO_RX
 27332 ;;		_I2C1_DO_TX_EMPTY
 27333 ;;		_I2C1_DO_ADDRESS_NACK
 27334 ;;		_I2C1_DO_RX_EMPTY
 27335 ;; This function uses a non-reentrant model
 27336 ;;
 27337                           
 27338     1337                     _rdBlkRegCompleteHandler@i2c1_master_example$F1727:	
 27339                           ;psect for function _rdBlkRegCompleteHandler@i2c1_master_example$F1727
 27340                           
 27341     1337                     l12680:	
 27342                           ;incstack = 0
 27343                           ; Regs used in _rdBlkRegCompleteHandler@i2c1_master_example$F1727: [wreg+fsr1l+fsr1h+sta
      +                          tus,2+status,0+pclath+cstack]
 27344                           
 27345     1337  0878               	movf	rdBlkRegCompleteHandler@i2c1_master_example$F1727@ptr,w
 27346     1338  3E02               	addlw	2
 27347     1339  0086               	movwf	6
 27348     133A  0187               	clrf	7
 27349     133B  3F40               	moviw [0]fsr1
 27350     133C  00F1               	movwf	I2C1_SetBuffer@buffer
 27351     133D  3F41               	moviw [1]fsr1
 27352     133E  00F2               	movwf	I2C1_SetBuffer@buffer+1
 27353     133F  0878               	movf	rdBlkRegCompleteHandler@i2c1_master_example$F1727@ptr,w
 27354     1340  0086               	movwf	6
 27355     1341  0187               	clrf	7
 27356     1342  3F40               	moviw [0]fsr1
 27357     1343  00F3               	movwf	I2C1_SetBuffer@bufferSize
 27358     1344  3F41               	moviw [1]fsr1
 27359     1345  00F4               	movwf	I2C1_SetBuffer@bufferSize+1
 27360     1346  3190  2084  3193   	fcall	_I2C1_SetBuffer
 27361     1349  3000               	movlw	0
 27362     134A  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 27363     134B  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 27364     134C  01F7               	clrf	I2C1_SetDataCompleteCallback@ptr
 27365     134D  319F  27C9  3193   	fcall	_I2C1_SetDataCompleteCallback
 27366     1350                     l12682:
 27367     1350  3002               	movlw	2
 27368     1351                     l1396:
 27369     1351  0008               	return
 27370     1352                     __end_of_rdBlkRegCompleteHandler@i2c1_master_example$F1727:
 27371                           
 27372                           	psect	text142
 27373     115A                     __ptext142:	
 27374 ;; *************** function _wr1RegCompleteHandler@i2c1_master_example$F1710 *****************
 27375 ;; Defined at:
 27376 ;;		line 156 in file "mcc_generated_files/examples/i2c1_master_example.c"
 27377 ;; Parameters:    Size  Location     Type
 27378 ;;  ptr             1    8[COMMON] PTR void 
 27379 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 27380 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 27381 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 27382 ;; Auto vars:     Size  Location     Type
 27383 ;;		None
 27384 ;; Return value:  Size  Location     Type
 27385 ;;                  1    wreg      enum E363
 27386 ;; Registers used:
 27387 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 27388 ;; Tracked objects:
 27389 ;;		On entry : 0/0
 27390 ;;		On exit  : 0/0
 27391 ;;		Unchanged: 0/0
 27392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27393 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27394 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27395 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27396 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27397 ;;Total ram usage:        1 bytes
 27398 ;; Hardware stack levels used: 1
 27399 ;; Hardware stack levels required when called: 6
 27400 ;; This function calls:
 27401 ;;		_I2C1_SetBuffer
 27402 ;;		_I2C1_SetDataCompleteCallback
 27403 ;; This function is called by:
 27404 ;;		_I2C1_Write1ByteRegister
 27405 ;;		_I2C1_DO_TX
 27406 ;;		_I2C1_DO_RX
 27407 ;;		_I2C1_DO_TX_EMPTY
 27408 ;;		_I2C1_DO_ADDRESS_NACK
 27409 ;;		_I2C1_DO_RX_EMPTY
 27410 ;; This function uses a non-reentrant model
 27411 ;;
 27412                           
 27413     115A                     _wr1RegCompleteHandler@i2c1_master_example$F1710:	
 27414                           ;psect for function _wr1RegCompleteHandler@i2c1_master_example$F1710
 27415                           
 27416     115A                     l12664:	
 27417                           ;incstack = 0
 27418                           ; Regs used in _wr1RegCompleteHandler@i2c1_master_example$F1710: [wreg+fsr1l+fsr1h+statu
      +                          s,2+status,0+pclath+cstack]
 27419                           
 27420     115A  0878               	movf	wr1RegCompleteHandler@i2c1_master_example$F1710@ptr,w
 27421     115B  00F1               	movwf	I2C1_SetBuffer@buffer
 27422     115C  01F2               	clrf	I2C1_SetBuffer@buffer+1
 27423     115D  3001               	movlw	1
 27424     115E  00F3               	movwf	I2C1_SetBuffer@bufferSize
 27425     115F  3000               	movlw	0
 27426     1160  00F4               	movwf	I2C1_SetBuffer@bufferSize+1
 27427     1161  3190  2084  3191   	fcall	_I2C1_SetBuffer
 27428     1164                     l12666:
 27429     1164  3000               	movlw	0
 27430     1165  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 27431     1166  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 27432     1167  01F7               	clrf	I2C1_SetDataCompleteCallback@ptr
 27433     1168  319F  27C9  3191   	fcall	_I2C1_SetDataCompleteCallback
 27434     116B                     l12668:
 27435     116B  3004               	movlw	4
 27436     116C                     l1390:
 27437     116C  0008               	return
 27438     116D                     __end_of_wr1RegCompleteHandler@i2c1_master_example$F1710:
 27439                           
 27440                           	psect	text143
 27441     1147                     __ptext143:	
 27442 ;; *************** function _rd2RegCompleteHandler@i2c1_master_example$F1704 *****************
 27443 ;; Defined at:
 27444 ;;		line 149 in file "mcc_generated_files/examples/i2c1_master_example.c"
 27445 ;; Parameters:    Size  Location     Type
 27446 ;;  ptr             1    8[COMMON] PTR void 
 27447 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 27448 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 27449 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 27450 ;; Auto vars:     Size  Location     Type
 27451 ;;		None
 27452 ;; Return value:  Size  Location     Type
 27453 ;;                  1    wreg      enum E363
 27454 ;; Registers used:
 27455 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 27456 ;; Tracked objects:
 27457 ;;		On entry : 0/0
 27458 ;;		On exit  : 0/0
 27459 ;;		Unchanged: 0/0
 27460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27461 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27462 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27464 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27465 ;;Total ram usage:        1 bytes
 27466 ;; Hardware stack levels used: 1
 27467 ;; Hardware stack levels required when called: 6
 27468 ;; This function calls:
 27469 ;;		_I2C1_SetBuffer
 27470 ;;		_I2C1_SetDataCompleteCallback
 27471 ;; This function is called by:
 27472 ;;		_I2C1_Read2ByteRegister
 27473 ;;		_I2C1_DO_TX
 27474 ;;		_I2C1_DO_RX
 27475 ;;		_I2C1_DO_TX_EMPTY
 27476 ;;		_I2C1_DO_ADDRESS_NACK
 27477 ;;		_I2C1_DO_RX_EMPTY
 27478 ;; This function uses a non-reentrant model
 27479 ;;
 27480                           
 27481     1147                     _rd2RegCompleteHandler@i2c1_master_example$F1704:	
 27482                           ;psect for function _rd2RegCompleteHandler@i2c1_master_example$F1704
 27483                           
 27484     1147                     l12656:	
 27485                           ;incstack = 0
 27486                           ; Regs used in _rd2RegCompleteHandler@i2c1_master_example$F1704: [wreg+fsr1l+fsr1h+statu
      +                          s,2+status,0+pclath+cstack]
 27487                           
 27488     1147  0878               	movf	rd2RegCompleteHandler@i2c1_master_example$F1704@ptr,w
 27489     1148  00F1               	movwf	I2C1_SetBuffer@buffer
 27490     1149  01F2               	clrf	I2C1_SetBuffer@buffer+1
 27491     114A  3002               	movlw	2
 27492     114B  00F3               	movwf	I2C1_SetBuffer@bufferSize
 27493     114C  3000               	movlw	0
 27494     114D  00F4               	movwf	I2C1_SetBuffer@bufferSize+1
 27495     114E  3190  2084  3191   	fcall	_I2C1_SetBuffer
 27496     1151                     l12658:
 27497     1151  3000               	movlw	0
 27498     1152  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 27499     1153  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 27500     1154  01F7               	clrf	I2C1_SetDataCompleteCallback@ptr
 27501     1155  319F  27C9  3191   	fcall	_I2C1_SetDataCompleteCallback
 27502     1158                     l12660:
 27503     1158  3002               	movlw	2
 27504     1159                     l1387:
 27505     1159  0008               	return
 27506     115A                     __end_of_rd2RegCompleteHandler@i2c1_master_example$F1704:
 27507                           
 27508                           	psect	text144
 27509     1134                     __ptext144:	
 27510 ;; *************** function _rd1RegCompleteHandler@i2c1_master_example$F1693 *****************
 27511 ;; Defined at:
 27512 ;;		line 142 in file "mcc_generated_files/examples/i2c1_master_example.c"
 27513 ;; Parameters:    Size  Location     Type
 27514 ;;  ptr             1    8[COMMON] PTR void 
 27515 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 27516 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 27517 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 27518 ;; Auto vars:     Size  Location     Type
 27519 ;;		None
 27520 ;; Return value:  Size  Location     Type
 27521 ;;                  1    wreg      enum E363
 27522 ;; Registers used:
 27523 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 27524 ;; Tracked objects:
 27525 ;;		On entry : 0/0
 27526 ;;		On exit  : 0/0
 27527 ;;		Unchanged: 0/0
 27528 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27529 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27530 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27532 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27533 ;;Total ram usage:        1 bytes
 27534 ;; Hardware stack levels used: 1
 27535 ;; Hardware stack levels required when called: 6
 27536 ;; This function calls:
 27537 ;;		_I2C1_SetBuffer
 27538 ;;		_I2C1_SetDataCompleteCallback
 27539 ;; This function is called by:
 27540 ;;		_I2C1_Read1ByteRegister
 27541 ;;		_I2C1_DO_TX
 27542 ;;		_I2C1_DO_RX
 27543 ;;		_I2C1_DO_TX_EMPTY
 27544 ;;		_I2C1_DO_ADDRESS_NACK
 27545 ;;		_I2C1_DO_RX_EMPTY
 27546 ;; This function uses a non-reentrant model
 27547 ;;
 27548                           
 27549     1134                     _rd1RegCompleteHandler@i2c1_master_example$F1693:	
 27550                           ;psect for function _rd1RegCompleteHandler@i2c1_master_example$F1693
 27551                           
 27552     1134                     l12648:	
 27553                           ;incstack = 0
 27554                           ; Regs used in _rd1RegCompleteHandler@i2c1_master_example$F1693: [wreg+fsr1l+fsr1h+statu
      +                          s,2+status,0+pclath+cstack]
 27555                           
 27556     1134  0878               	movf	rd1RegCompleteHandler@i2c1_master_example$F1693@ptr,w
 27557     1135  00F1               	movwf	I2C1_SetBuffer@buffer
 27558     1136  01F2               	clrf	I2C1_SetBuffer@buffer+1
 27559     1137  3001               	movlw	1
 27560     1138  00F3               	movwf	I2C1_SetBuffer@bufferSize
 27561     1139  3000               	movlw	0
 27562     113A  00F4               	movwf	I2C1_SetBuffer@bufferSize+1
 27563     113B  3190  2084  3191   	fcall	_I2C1_SetBuffer
 27564     113E                     l12650:
 27565     113E  3000               	movlw	0
 27566     113F  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 27567     1140  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 27568     1141  01F7               	clrf	I2C1_SetDataCompleteCallback@ptr
 27569     1142  319F  27C9  3191   	fcall	_I2C1_SetDataCompleteCallback
 27570     1145                     l12652:
 27571     1145  3002               	movlw	2
 27572     1146                     l1384:
 27573     1146  0008               	return
 27574     1147                     __end_of_rd1RegCompleteHandler@i2c1_master_example$F1693:
 27575                           
 27576                           	psect	text145
 27577     131C                     __ptext145:	
 27578 ;; *************** function _rdBlkRegCompleteHandler *****************
 27579 ;; Defined at:
 27580 ;;		line 185 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 27581 ;; Parameters:    Size  Location     Type
 27582 ;;  p               1    8[COMMON] PTR void 
 27583 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 27584 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 27585 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 27586 ;; Auto vars:     Size  Location     Type
 27587 ;;		None
 27588 ;; Return value:  Size  Location     Type
 27589 ;;                  1    wreg      enum E363
 27590 ;; Registers used:
 27591 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 27592 ;; Tracked objects:
 27593 ;;		On entry : 0/0
 27594 ;;		On exit  : 0/0
 27595 ;;		Unchanged: 0/0
 27596 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27597 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27598 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27600 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27601 ;;Total ram usage:        1 bytes
 27602 ;; Hardware stack levels used: 1
 27603 ;; Hardware stack levels required when called: 6
 27604 ;; This function calls:
 27605 ;;		_I2C1_SetBuffer
 27606 ;;		_I2C1_SetDataCompleteCallback
 27607 ;; This function is called by:
 27608 ;;		_i2c_readDataBlock
 27609 ;;		_I2C1_DO_TX
 27610 ;;		_I2C1_DO_RX
 27611 ;;		_I2C1_DO_TX_EMPTY
 27612 ;;		_I2C1_DO_ADDRESS_NACK
 27613 ;;		_I2C1_DO_RX_EMPTY
 27614 ;; This function uses a non-reentrant model
 27615 ;;
 27616                           
 27617     131C                     _rdBlkRegCompleteHandler:	
 27618                           ;psect for function _rdBlkRegCompleteHandler
 27619                           
 27620     131C                     l12642:	
 27621                           ;incstack = 0
 27622                           ; Regs used in _rdBlkRegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 27623                           
 27624                           
 27625                           ;mcc_generated_files/drivers/i2c_simple_master.c: 185: static i2c1_operations_t rdBlkReg
      +                          CompleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 186: {;mcc_gen
      +                          erated_files/drivers/i2c_simple_master.c: 187:     I2C1_SetBuffer(((buf_t *)p)->data,((b
      +                          uf_t*)p)->len);
 27626     131C  0878               	movf	rdBlkRegCompleteHandler@p,w
 27627     131D  3E02               	addlw	2
 27628     131E  0086               	movwf	6
 27629     131F  0187               	clrf	7
 27630     1320  3F40               	moviw [0]fsr1
 27631     1321  00F1               	movwf	I2C1_SetBuffer@buffer
 27632     1322  3F41               	moviw [1]fsr1
 27633     1323  00F2               	movwf	I2C1_SetBuffer@buffer+1
 27634     1324  0878               	movf	rdBlkRegCompleteHandler@p,w
 27635     1325  0086               	movwf	6
 27636     1326  0187               	clrf	7
 27637     1327  3F40               	moviw [0]fsr1
 27638     1328  00F3               	movwf	I2C1_SetBuffer@bufferSize
 27639     1329  3F41               	moviw [1]fsr1
 27640     132A  00F4               	movwf	I2C1_SetBuffer@bufferSize+1
 27641     132B  3190  2084  3193   	fcall	_I2C1_SetBuffer
 27642                           
 27643                           ;mcc_generated_files/drivers/i2c_simple_master.c: 188:     I2C1_SetDataCompleteCallback(
      +                          ((void*)0),((void*)0));
 27644     132E  3000               	movlw	0
 27645     132F  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 27646     1330  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 27647     1331  01F7               	clrf	I2C1_SetDataCompleteCallback@ptr
 27648     1332  319F  27C9  3193   	fcall	_I2C1_SetDataCompleteCallback
 27649     1335                     l12644:
 27650                           
 27651                           ;mcc_generated_files/drivers/i2c_simple_master.c: 189:     return I2C1_RESTART_READ;
 27652     1335  3002               	movlw	2
 27653     1336                     l561:
 27654     1336  0008               	return
 27655     1337                     __end_of_rdBlkRegCompleteHandler:
 27656                           
 27657                           	psect	text146
 27658     1121                     __ptext146:	
 27659 ;; *************** function _wr2RegCompleteHandler *****************
 27660 ;; Defined at:
 27661 ;;		line 151 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 27662 ;; Parameters:    Size  Location     Type
 27663 ;;  p               1    8[COMMON] PTR void 
 27664 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 27665 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 27666 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 27667 ;; Auto vars:     Size  Location     Type
 27668 ;;		None
 27669 ;; Return value:  Size  Location     Type
 27670 ;;                  1    wreg      enum E363
 27671 ;; Registers used:
 27672 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 27673 ;; Tracked objects:
 27674 ;;		On entry : 0/0
 27675 ;;		On exit  : 0/0
 27676 ;;		Unchanged: 0/0
 27677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27678 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27679 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27680 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27681 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27682 ;;Total ram usage:        1 bytes
 27683 ;; Hardware stack levels used: 1
 27684 ;; Hardware stack levels required when called: 6
 27685 ;; This function calls:
 27686 ;;		_I2C1_SetBuffer
 27687 ;;		_I2C1_SetDataCompleteCallback
 27688 ;; This function is called by:
 27689 ;;		_i2c_write2ByteRegister
 27690 ;;		_I2C1_DO_TX
 27691 ;;		_I2C1_DO_RX
 27692 ;;		_I2C1_DO_TX_EMPTY
 27693 ;;		_I2C1_DO_ADDRESS_NACK
 27694 ;;		_I2C1_DO_RX_EMPTY
 27695 ;; This function uses a non-reentrant model
 27696 ;;
 27697                           
 27698     1121                     _wr2RegCompleteHandler:	
 27699                           ;psect for function _wr2RegCompleteHandler
 27700                           
 27701     1121                     l12634:	
 27702                           ;incstack = 0
 27703                           ; Regs used in _wr2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 27704                           
 27705                           
 27706                           ;mcc_generated_files/drivers/i2c_simple_master.c: 151: static i2c1_operations_t wr2RegCo
      +                          mpleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 152: {;mcc_gener
      +                          ated_files/drivers/i2c_simple_master.c: 153:     I2C1_SetBuffer(p,2);
 27707     1121  0878               	movf	wr2RegCompleteHandler@p,w
 27708     1122  00F1               	movwf	I2C1_SetBuffer@buffer
 27709     1123  01F2               	clrf	I2C1_SetBuffer@buffer+1
 27710     1124  3002               	movlw	2
 27711     1125  00F3               	movwf	I2C1_SetBuffer@bufferSize
 27712     1126  3000               	movlw	0
 27713     1127  00F4               	movwf	I2C1_SetBuffer@bufferSize+1
 27714     1128  3190  2084  3191   	fcall	_I2C1_SetBuffer
 27715     112B                     l12636:
 27716                           
 27717                           ;mcc_generated_files/drivers/i2c_simple_master.c: 154:     I2C1_SetDataCompleteCallback(
      +                          ((void*)0),((void*)0));
 27718     112B  3000               	movlw	0
 27719     112C  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 27720     112D  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 27721     112E  01F7               	clrf	I2C1_SetDataCompleteCallback@ptr
 27722     112F  319F  27C9  3191   	fcall	_I2C1_SetDataCompleteCallback
 27723     1132                     l12638:
 27724                           
 27725                           ;mcc_generated_files/drivers/i2c_simple_master.c: 155:     return I2C1_CONTINUE;
 27726     1132  3004               	movlw	4
 27727     1133                     l549:
 27728     1133  0008               	return
 27729     1134                     __end_of_wr2RegCompleteHandler:
 27730                           
 27731                           	psect	text147
 27732     110E                     __ptext147:	
 27733 ;; *************** function _rd2RegCompleteHandler *****************
 27734 ;; Defined at:
 27735 ;;		line 119 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 27736 ;; Parameters:    Size  Location     Type
 27737 ;;  p               1    8[COMMON] PTR void 
 27738 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 27739 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 27740 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 27741 ;; Auto vars:     Size  Location     Type
 27742 ;;		None
 27743 ;; Return value:  Size  Location     Type
 27744 ;;                  1    wreg      enum E363
 27745 ;; Registers used:
 27746 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 27747 ;; Tracked objects:
 27748 ;;		On entry : 0/0
 27749 ;;		On exit  : 0/0
 27750 ;;		Unchanged: 0/0
 27751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27752 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27753 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27755 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27756 ;;Total ram usage:        1 bytes
 27757 ;; Hardware stack levels used: 1
 27758 ;; Hardware stack levels required when called: 6
 27759 ;; This function calls:
 27760 ;;		_I2C1_SetBuffer
 27761 ;;		_I2C1_SetDataCompleteCallback
 27762 ;; This function is called by:
 27763 ;;		_i2c_read2ByteRegister
 27764 ;;		_I2C1_DO_TX
 27765 ;;		_I2C1_DO_RX
 27766 ;;		_I2C1_DO_TX_EMPTY
 27767 ;;		_I2C1_DO_ADDRESS_NACK
 27768 ;;		_I2C1_DO_RX_EMPTY
 27769 ;; This function uses a non-reentrant model
 27770 ;;
 27771                           
 27772     110E                     _rd2RegCompleteHandler:	
 27773                           ;psect for function _rd2RegCompleteHandler
 27774                           
 27775     110E                     l12626:	
 27776                           ;incstack = 0
 27777                           ; Regs used in _rd2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 27778                           
 27779                           
 27780                           ;mcc_generated_files/drivers/i2c_simple_master.c: 119: static i2c1_operations_t rd2RegCo
      +                          mpleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 120: {;mcc_gener
      +                          ated_files/drivers/i2c_simple_master.c: 121:     I2C1_SetBuffer(p,2);
 27781     110E  0878               	movf	rd2RegCompleteHandler@p,w
 27782     110F  00F1               	movwf	I2C1_SetBuffer@buffer
 27783     1110  01F2               	clrf	I2C1_SetBuffer@buffer+1
 27784     1111  3002               	movlw	2
 27785     1112  00F3               	movwf	I2C1_SetBuffer@bufferSize
 27786     1113  3000               	movlw	0
 27787     1114  00F4               	movwf	I2C1_SetBuffer@bufferSize+1
 27788     1115  3190  2084  3191   	fcall	_I2C1_SetBuffer
 27789     1118                     l12628:
 27790                           
 27791                           ;mcc_generated_files/drivers/i2c_simple_master.c: 122:     I2C1_SetDataCompleteCallback(
      +                          ((void*)0),((void*)0));
 27792     1118  3000               	movlw	0
 27793     1119  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 27794     111A  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 27795     111B  01F7               	clrf	I2C1_SetDataCompleteCallback@ptr
 27796     111C  319F  27C9  3191   	fcall	_I2C1_SetDataCompleteCallback
 27797     111F                     l12630:
 27798                           
 27799                           ;mcc_generated_files/drivers/i2c_simple_master.c: 123:     return I2C1_RESTART_READ;
 27800     111F  3002               	movlw	2
 27801     1120                     l537:
 27802     1120  0008               	return
 27803     1121                     __end_of_rd2RegCompleteHandler:
 27804                           
 27805                           	psect	text148
 27806     10FB                     __ptext148:	
 27807 ;; *************** function _rd1RegCompleteHandler *****************
 27808 ;; Defined at:
 27809 ;;		line 81 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 27810 ;; Parameters:    Size  Location     Type
 27811 ;;  p               1    8[COMMON] PTR void 
 27812 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 27813 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 27814 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 27815 ;; Auto vars:     Size  Location     Type
 27816 ;;		None
 27817 ;; Return value:  Size  Location     Type
 27818 ;;                  1    wreg      enum E363
 27819 ;; Registers used:
 27820 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 27821 ;; Tracked objects:
 27822 ;;		On entry : 0/0
 27823 ;;		On exit  : 0/0
 27824 ;;		Unchanged: 0/0
 27825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27826 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27827 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27829 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27830 ;;Total ram usage:        1 bytes
 27831 ;; Hardware stack levels used: 1
 27832 ;; Hardware stack levels required when called: 6
 27833 ;; This function calls:
 27834 ;;		_I2C1_SetBuffer
 27835 ;;		_I2C1_SetDataCompleteCallback
 27836 ;; This function is called by:
 27837 ;;		_i2c_read1ByteRegister
 27838 ;;		_I2C1_DO_TX
 27839 ;;		_I2C1_DO_RX
 27840 ;;		_I2C1_DO_TX_EMPTY
 27841 ;;		_I2C1_DO_ADDRESS_NACK
 27842 ;;		_I2C1_DO_RX_EMPTY
 27843 ;; This function uses a non-reentrant model
 27844 ;;
 27845                           
 27846     10FB                     _rd1RegCompleteHandler:	
 27847                           ;psect for function _rd1RegCompleteHandler
 27848                           
 27849     10FB                     l12618:	
 27850                           ;incstack = 0
 27851                           ; Regs used in _rd1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 27852                           
 27853                           
 27854                           ;mcc_generated_files/drivers/i2c_simple_master.c: 81: static i2c1_operations_t rd1RegCom
      +                          pleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 82: {;mcc_generat
      +                          ed_files/drivers/i2c_simple_master.c: 83:     I2C1_SetBuffer(p,1);
 27855     10FB  0878               	movf	rd1RegCompleteHandler@p,w
 27856     10FC  00F1               	movwf	I2C1_SetBuffer@buffer
 27857     10FD  01F2               	clrf	I2C1_SetBuffer@buffer+1
 27858     10FE  3001               	movlw	1
 27859     10FF  00F3               	movwf	I2C1_SetBuffer@bufferSize
 27860     1100  3000               	movlw	0
 27861     1101  00F4               	movwf	I2C1_SetBuffer@bufferSize+1
 27862     1102  3190  2084  3190   	fcall	_I2C1_SetBuffer
 27863     1105                     l12620:
 27864                           
 27865                           ;mcc_generated_files/drivers/i2c_simple_master.c: 84:     I2C1_SetDataCompleteCallback((
      +                          (void*)0),((void*)0));
 27866     1105  3000               	movlw	0
 27867     1106  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 27868     1107  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 27869     1108  01F7               	clrf	I2C1_SetDataCompleteCallback@ptr
 27870     1109  319F  27C9  3190   	fcall	_I2C1_SetDataCompleteCallback
 27871     110C                     l12622:
 27872                           
 27873                           ;mcc_generated_files/drivers/i2c_simple_master.c: 85:     return I2C1_RESTART_READ;
 27874     110C  3002               	movlw	2
 27875     110D                     l522:
 27876     110D  0008               	return
 27877     110E                     __end_of_rd1RegCompleteHandler:
 27878                           
 27879                           	psect	text149
 27880     10E8                     __ptext149:	
 27881 ;; *************** function _wr1RegCompleteHandler *****************
 27882 ;; Defined at:
 27883 ;;		line 34 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 27884 ;; Parameters:    Size  Location     Type
 27885 ;;  p               1    8[COMMON] PTR void 
 27886 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 27887 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 27888 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 27889 ;; Auto vars:     Size  Location     Type
 27890 ;;		None
 27891 ;; Return value:  Size  Location     Type
 27892 ;;                  1    wreg      enum E363
 27893 ;; Registers used:
 27894 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 27895 ;; Tracked objects:
 27896 ;;		On entry : 0/0
 27897 ;;		On exit  : 0/0
 27898 ;;		Unchanged: 0/0
 27899 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27900 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27901 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27902 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27903 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27904 ;;Total ram usage:        1 bytes
 27905 ;; Hardware stack levels used: 1
 27906 ;; Hardware stack levels required when called: 6
 27907 ;; This function calls:
 27908 ;;		_I2C1_SetBuffer
 27909 ;;		_I2C1_SetDataCompleteCallback
 27910 ;; This function is called by:
 27911 ;;		_i2c_write1ByteRegister
 27912 ;;		_I2C1_DO_TX
 27913 ;;		_I2C1_DO_RX
 27914 ;;		_I2C1_DO_TX_EMPTY
 27915 ;;		_I2C1_DO_ADDRESS_NACK
 27916 ;;		_I2C1_DO_RX_EMPTY
 27917 ;; This function uses a non-reentrant model
 27918 ;;
 27919                           
 27920     10E8                     _wr1RegCompleteHandler:	
 27921                           ;psect for function _wr1RegCompleteHandler
 27922                           
 27923     10E8                     l12610:	
 27924                           ;incstack = 0
 27925                           ; Regs used in _wr1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 27926                           
 27927                           
 27928                           ;mcc_generated_files/drivers/i2c_simple_master.c: 34: static i2c1_operations_t wr1RegCom
      +                          pleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 35: {;mcc_generat
      +                          ed_files/drivers/i2c_simple_master.c: 36:     I2C1_SetBuffer(p,1);
 27929     10E8  0878               	movf	wr1RegCompleteHandler@p,w
 27930     10E9  00F1               	movwf	I2C1_SetBuffer@buffer
 27931     10EA  01F2               	clrf	I2C1_SetBuffer@buffer+1
 27932     10EB  3001               	movlw	1
 27933     10EC  00F3               	movwf	I2C1_SetBuffer@bufferSize
 27934     10ED  3000               	movlw	0
 27935     10EE  00F4               	movwf	I2C1_SetBuffer@bufferSize+1
 27936     10EF  3190  2084  3190   	fcall	_I2C1_SetBuffer
 27937     10F2                     l12612:
 27938                           
 27939                           ;mcc_generated_files/drivers/i2c_simple_master.c: 37:     I2C1_SetDataCompleteCallback((
      +                          (void*)0),((void*)0));
 27940     10F2  3000               	movlw	0
 27941     10F3  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 27942     10F4  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 27943     10F5  01F7               	clrf	I2C1_SetDataCompleteCallback@ptr
 27944     10F6  319F  27C9  3190   	fcall	_I2C1_SetDataCompleteCallback
 27945     10F9                     l12614:
 27946                           
 27947                           ;mcc_generated_files/drivers/i2c_simple_master.c: 38:     return I2C1_CONTINUE;
 27948     10F9  3004               	movlw	4
 27949     10FA                     l501:
 27950     10FA  0008               	return
 27951     10FB                     __end_of_wr1RegCompleteHandler:
 27952                           
 27953                           	psect	text150
 27954     10D5                     __ptext150:	
 27955 ;; *************** function _wr2RegCompleteHandler@i2c1_master_example$F1716 *****************
 27956 ;; Defined at:
 27957 ;;		line 163 in file "mcc_generated_files/examples/i2c1_master_example.c"
 27958 ;; Parameters:    Size  Location     Type
 27959 ;;  ptr             1    8[COMMON] PTR void 
 27960 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 27961 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 27962 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 27963 ;; Auto vars:     Size  Location     Type
 27964 ;;		None
 27965 ;; Return value:  Size  Location     Type
 27966 ;;                  1    wreg      enum E363
 27967 ;; Registers used:
 27968 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 27969 ;; Tracked objects:
 27970 ;;		On entry : 0/0
 27971 ;;		On exit  : 0/0
 27972 ;;		Unchanged: 0/0
 27973 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27974 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27975 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27977 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27978 ;;Total ram usage:        1 bytes
 27979 ;; Hardware stack levels used: 1
 27980 ;; Hardware stack levels required when called: 6
 27981 ;; This function calls:
 27982 ;;		_I2C1_SetBuffer
 27983 ;;		_I2C1_SetDataCompleteCallback
 27984 ;; This function is called by:
 27985 ;;		_I2C1_Write2ByteRegister
 27986 ;;		_I2C1_DO_TX
 27987 ;;		_I2C1_DO_RX
 27988 ;;		_I2C1_DO_TX_EMPTY
 27989 ;;		_I2C1_DO_ADDRESS_NACK
 27990 ;;		_I2C1_DO_RX_EMPTY
 27991 ;; This function uses a non-reentrant model
 27992 ;;
 27993                           
 27994     10D5                     _wr2RegCompleteHandler@i2c1_master_example$F1716:	
 27995                           ;psect for function _wr2RegCompleteHandler@i2c1_master_example$F1716
 27996                           
 27997     10D5                     l12672:	
 27998                           ;incstack = 0
 27999                           ; Regs used in _wr2RegCompleteHandler@i2c1_master_example$F1716: [wreg+fsr1l+fsr1h+statu
      +                          s,2+status,0+pclath+cstack]
 28000                           
 28001     10D5  0878               	movf	wr2RegCompleteHandler@i2c1_master_example$F1716@ptr,w
 28002     10D6  00F1               	movwf	I2C1_SetBuffer@buffer
 28003     10D7  01F2               	clrf	I2C1_SetBuffer@buffer+1
 28004     10D8  3002               	movlw	2
 28005     10D9  00F3               	movwf	I2C1_SetBuffer@bufferSize
 28006     10DA  3000               	movlw	0
 28007     10DB  00F4               	movwf	I2C1_SetBuffer@bufferSize+1
 28008     10DC  3190  2084  3190   	fcall	_I2C1_SetBuffer
 28009     10DF                     l12674:
 28010     10DF  3000               	movlw	0
 28011     10E0  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 28012     10E1  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 28013     10E2  01F7               	clrf	I2C1_SetDataCompleteCallback@ptr
 28014     10E3  319F  27C9  3190   	fcall	_I2C1_SetDataCompleteCallback
 28015     10E6                     l12676:
 28016     10E6  3004               	movlw	4
 28017     10E7                     l1393:
 28018     10E7  0008               	return
 28019     10E8                     __end_of_wr2RegCompleteHandler@i2c1_master_example$F1716:
 28020                           
 28021                           	psect	text151
 28022     1FC9                     __ptext151:	
 28023 ;; *************** function _I2C1_SetDataCompleteCallback *****************
 28024 ;; Defined at:
 28025 ;;		line 273 in file "mcc_generated_files/i2c1_master.c"
 28026 ;; Parameters:    Size  Location     Type
 28027 ;;  cb              2    5[COMMON] PTR FTN(PTR void ,)enum 
 28028 ;;		 -> rdBlkRegCompleteHandler@i2c1_master_example$F1727(1), wr2RegCompleteHandler@i2c1_master_example$F1716(1), wr1Reg
      +CompleteHandler@i2c1_master_example$F1710(1), rd2RegCompleteHandler@i2c1_master_example$F1704(1), 
 28029 ;;		 -> rd1RegCompleteHandler@i2c1_master_example$F1693(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), rd2Reg
      +CompleteHandler(1), 
 28030 ;;		 -> rd1RegCompleteHandler(1), wr1RegCompleteHandler(1), NULL(1), 
 28031 ;;  ptr             1    7[COMMON] PTR void 
 28032 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 28033 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 28034 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 28035 ;; Auto vars:     Size  Location     Type
 28036 ;;		None
 28037 ;; Return value:  Size  Location     Type
 28038 ;;                  1    wreg      void 
 28039 ;; Registers used:
 28040 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 28041 ;; Tracked objects:
 28042 ;;		On entry : 0/0
 28043 ;;		On exit  : 0/0
 28044 ;;		Unchanged: 0/0
 28045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 28046 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28047 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28048 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28049 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28050 ;;Total ram usage:        3 bytes
 28051 ;; Hardware stack levels used: 1
 28052 ;; Hardware stack levels required when called: 5
 28053 ;; This function calls:
 28054 ;;		_I2C1_SetCallback
 28055 ;; This function is called by:
 28056 ;;		_wr1RegCompleteHandler
 28057 ;;		_i2c_write1ByteRegister
 28058 ;;		_rd1RegCompleteHandler
 28059 ;;		_i2c_read1ByteRegister
 28060 ;;		_rd2RegCompleteHandler
 28061 ;;		_i2c_read2ByteRegister
 28062 ;;		_wr2RegCompleteHandler
 28063 ;;		_rdBlkRegCompleteHandler
 28064 ;;		_rd1RegCompleteHandler@i2c1_master_example$F1693
 28065 ;;		_rd2RegCompleteHandler@i2c1_master_example$F1704
 28066 ;;		_wr1RegCompleteHandler@i2c1_master_example$F1710
 28067 ;;		_wr2RegCompleteHandler@i2c1_master_example$F1716
 28068 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F1727
 28069 ;;		_i2c_write2ByteRegister
 28070 ;;		_i2c_readDataBlock
 28071 ;;		_I2C1_Read1ByteRegister
 28072 ;;		_I2C1_Read2ByteRegister
 28073 ;;		_I2C1_Write1ByteRegister
 28074 ;;		_I2C1_Write2ByteRegister
 28075 ;;		_I2C1_ReadDataBlock
 28076 ;; This function uses a non-reentrant model
 28077 ;;
 28078                           
 28079     1FC9                     _I2C1_SetDataCompleteCallback:	
 28080                           ;psect for function _I2C1_SetDataCompleteCallback
 28081                           
 28082     1FC9                     l12602:	
 28083                           ;incstack = 0
 28084                           ; Regs used in _I2C1_SetDataCompleteCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclath
      +                          +cstack]
 28085                           
 28086                           
 28087                           ;mcc_generated_files/i2c1_master.c: 273: void I2C1_SetDataCompleteCallback(i2c1_callback
      +                          _t cb, void *ptr);mcc_generated_files/i2c1_master.c: 274: {;mcc_generated_files/i2c1_mas
      +                          ter.c: 275:     I2C1_SetCallback(I2C1_DATA_COMPLETE, cb, ptr);
 28088     1FC9  0876               	movf	I2C1_SetDataCompleteCallback@cb+1,w
 28089     1FCA  00F2               	movwf	I2C1_SetCallback@cb+1
 28090     1FCB  0875               	movf	I2C1_SetDataCompleteCallback@cb,w
 28091     1FCC  00F1               	movwf	I2C1_SetCallback@cb
 28092     1FCD  0877               	movf	I2C1_SetDataCompleteCallback@ptr,w
 28093     1FCE  00F3               	movwf	I2C1_SetCallback@ptr
 28094     1FCF  3000               	movlw	0
 28095     1FD0  3194  244C  319F   	fcall	_I2C1_SetCallback
 28096     1FD3                     l2426:
 28097     1FD3  0008               	return
 28098     1FD4                     __end_of_I2C1_SetDataCompleteCallback:
 28099                           
 28100                           	psect	text152
 28101     144C                     __ptext152:	
 28102 ;; *************** function _I2C1_SetCallback *****************
 28103 ;; Defined at:
 28104 ;;		line 298 in file "mcc_generated_files/i2c1_master.c"
 28105 ;; Parameters:    Size  Location     Type
 28106 ;;  idx             1    wreg     enum E12583
 28107 ;;  cb              2    1[COMMON] PTR FTN(PTR void ,)enum 
 28108 ;;		 -> rdBlkRegCompleteHandler@i2c1_master_example$F1727(1), wr2RegCompleteHandler@i2c1_master_example$F1716(1), wr1Reg
      +CompleteHandler@i2c1_master_example$F1710(1), rd2RegCompleteHandler@i2c1_master_example$F1704(1), 
 28109 ;;		 -> rd1RegCompleteHandler@i2c1_master_example$F1693(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), rd2Reg
      +CompleteHandler(1), 
 28110 ;;		 -> rd1RegCompleteHandler(1), wr1RegCompleteHandler(1), NULL(1), 
 28111 ;;  ptr             1    3[COMMON] PTR void 
 28112 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 28113 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 28114 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 28115 ;; Auto vars:     Size  Location     Type
 28116 ;;  idx             1    4[COMMON] enum E12583
 28117 ;; Return value:  Size  Location     Type
 28118 ;;                  1    wreg      void 
 28119 ;; Registers used:
 28120 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 28121 ;; Tracked objects:
 28122 ;;		On entry : 0/0
 28123 ;;		On exit  : 0/0
 28124 ;;		Unchanged: 0/0
 28125 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 28126 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28127 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28129 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28130 ;;Total ram usage:        4 bytes
 28131 ;; Hardware stack levels used: 1
 28132 ;; Hardware stack levels required when called: 4
 28133 ;; This function calls:
 28134 ;;		Nothing
 28135 ;; This function is called by:
 28136 ;;		_I2C1_SetDataCompleteCallback
 28137 ;;		_I2C1_SetAddressNackCallback
 28138 ;;		_I2C1_SetWriteCollisionCallback
 28139 ;;		_I2C1_SetDataNackCallback
 28140 ;;		_I2C1_SetTimeoutCallback
 28141 ;; This function uses a non-reentrant model
 28142 ;;
 28143                           
 28144     144C                     _I2C1_SetCallback:	
 28145                           ;psect for function _I2C1_SetCallback
 28146                           
 28147                           
 28148                           ;incstack = 0
 28149                           ; Regs used in _I2C1_SetCallback: [wreg+fsr1l+fsr1h+status,2+status,0]
 28150                           ;I2C1_SetCallback@idx stored from wreg
 28151     144C  00F4               	movwf	I2C1_SetCallback@idx
 28152     144D                     l12590:
 28153                           
 28154                           ;mcc_generated_files/i2c1_master.c: 298: static void I2C1_SetCallback(i2c1_callbackIndex
      +                          _t idx, i2c1_callback_t cb, void *ptr);mcc_generated_files/i2c1_master.c: 299: {;mcc_gen
      +                          erated_files/i2c1_master.c: 300:     if(cb)
 28155     144D  0871               	movf	I2C1_SetCallback@cb,w
 28156     144E  0472               	iorwf	I2C1_SetCallback@cb+1,w
 28157     144F  1903               	btfsc	3,2
 28158     1450  2C52               	goto	u9531
 28159     1451  2C53               	goto	u9530
 28160     1452                     u9531:
 28161     1452  2C62               	goto	l12594
 28162     1453                     u9530:
 28163     1453                     l12592:
 28164                           
 28165                           ;mcc_generated_files/i2c1_master.c: 301:     {;mcc_generated_files/i2c1_master.c: 302:  
      +                                 I2C1_Status.callbackTable[idx] = cb;
 28166     1453  3574               	lslf	I2C1_SetCallback@idx,w
 28167     1454  3EA0               	addlw	(low (_I2C1_Status| 0))& (0+255)
 28168     1455  0086               	movwf	6
 28169     1456  0187               	clrf	7
 28170     1457  0871               	movf	I2C1_SetCallback@cb,w
 28171     1458  3FC0               	movwi [0]fsr1
 28172     1459  0872               	movf	I2C1_SetCallback@cb+1,w
 28173     145A  3FC1               	movwi [1]fsr1
 28174                           
 28175                           ;mcc_generated_files/i2c1_master.c: 303:         I2C1_Status.callbackPayload[idx] = ptr;
 28176     145B  0874               	movf	I2C1_SetCallback@idx,w
 28177     145C  3EAC               	addlw	(low ((_I2C1_Status| 0+12)))& (0+255)
 28178     145D  0086               	movwf	6
 28179     145E  0187               	clrf	7
 28180     145F  0873               	movf	I2C1_SetCallback@ptr,w
 28181     1460  0081               	movwf	1
 28182                           
 28183                           ;mcc_generated_files/i2c1_master.c: 304:     }
 28184     1461  2C6F               	goto	l2443
 28185     1462                     l12594:
 28186                           
 28187                           ;mcc_generated_files/i2c1_master.c: 306:     {;mcc_generated_files/i2c1_master.c: 307:  
      +                                 I2C1_Status.callbackTable[idx] = I2C1_CallbackReturnStop;
 28188     1462  3574               	lslf	I2C1_SetCallback@idx,w
 28189     1463  3EA0               	addlw	(low (_I2C1_Status| 0))& (0+255)
 28190     1464  0086               	movwf	6
 28191     1465  0187               	clrf	7
 28192     1466  3060               	movlw	low _I2C1_CallbackReturnStop
 28193     1467  3FC0               	movwi [0]fsr1
 28194     1468  301E               	movlw	high _I2C1_CallbackReturnStop
 28195     1469  3FC1               	movwi [1]fsr1
 28196                           
 28197                           ;mcc_generated_files/i2c1_master.c: 308:         I2C1_Status.callbackPayload[idx] = ((vo
      +                          id*)0);
 28198     146A  0874               	movf	I2C1_SetCallback@idx,w
 28199     146B  3EAC               	addlw	(low ((_I2C1_Status| 0+12)))& (0+255)
 28200     146C  0086               	movwf	6
 28201     146D  0187               	clrf	7
 28202     146E  0181               	clrf	1
 28203     146F                     l2443:
 28204     146F  0008               	return
 28205     1470                     __end_of_I2C1_SetCallback:
 28206                           
 28207                           	psect	text153
 28208     1084                     __ptext153:	
 28209 ;; *************** function _I2C1_SetBuffer *****************
 28210 ;; Defined at:
 28211 ;;		line 263 in file "mcc_generated_files/i2c1_master.c"
 28212 ;; Parameters:    Size  Location     Type
 28213 ;;  buffer          2    1[COMMON] PTR void 
 28214 ;;		 -> I2C1_ReadDataBlock@reg(1), I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@reg(1), I2C1_Write2ByteReg
      +ister@data(2), 
 28215 ;;		 -> I2C1_Write1ByteRegister@reg(1), I2C1_Write1ByteRegister@data(1), I2C1_Read2ByteRegister@reg(1), I2C1_Read2ByteRe
      +gister@returnValue(2), 
 28216 ;;		 -> I2C1_Read1ByteRegister@reg(1), I2C1_Read1ByteRegister@returnValue(1), RAM(8192), i2c_readDataBlock@reg(1), 
 28217 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@reg(1), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@reg
      +(1), 
 28218 ;;		 -> i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@reg(1), i2c_read1ByteRegister@d2(1), i2c_write1ByteRegist
      +er@reg(1), 
 28219 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 28220 ;;  bufferSize      2    3[COMMON] unsigned int 
 28221 ;; Auto vars:     Size  Location     Type
 28222 ;;		None
 28223 ;; Return value:  Size  Location     Type
 28224 ;;                  1    wreg      void 
 28225 ;; Registers used:
 28226 ;;		wreg
 28227 ;; Tracked objects:
 28228 ;;		On entry : 0/0
 28229 ;;		On exit  : 0/0
 28230 ;;		Unchanged: 0/0
 28231 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 28232 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28233 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28235 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28236 ;;Total ram usage:        4 bytes
 28237 ;; Hardware stack levels used: 1
 28238 ;; Hardware stack levels required when called: 4
 28239 ;; This function calls:
 28240 ;;		Nothing
 28241 ;; This function is called by:
 28242 ;;		_wr1RegCompleteHandler
 28243 ;;		_i2c_write1ByteRegister
 28244 ;;		_rd1RegCompleteHandler
 28245 ;;		_i2c_read1ByteRegister
 28246 ;;		_rd2RegCompleteHandler
 28247 ;;		_i2c_read2ByteRegister
 28248 ;;		_wr2RegCompleteHandler
 28249 ;;		_rdBlkRegCompleteHandler
 28250 ;;		_rd1RegCompleteHandler@i2c1_master_example$F1693
 28251 ;;		_rd2RegCompleteHandler@i2c1_master_example$F1704
 28252 ;;		_wr1RegCompleteHandler@i2c1_master_example$F1710
 28253 ;;		_wr2RegCompleteHandler@i2c1_master_example$F1716
 28254 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F1727
 28255 ;;		_i2c_writeNBytes
 28256 ;;		_i2c_write2ByteRegister
 28257 ;;		_i2c_readDataBlock
 28258 ;;		_i2c_readNBytes
 28259 ;;		_I2C1_Read1ByteRegister
 28260 ;;		_I2C1_Read2ByteRegister
 28261 ;;		_I2C1_Write1ByteRegister
 28262 ;;		_I2C1_Write2ByteRegister
 28263 ;;		_I2C1_WriteNBytes
 28264 ;;		_I2C1_ReadNBytes
 28265 ;;		_I2C1_ReadDataBlock
 28266 ;; This function uses a non-reentrant model
 28267 ;;
 28268                           
 28269     1084                     _I2C1_SetBuffer:	
 28270                           ;psect for function _I2C1_SetBuffer
 28271                           
 28272     1084                     l12596:	
 28273                           ;incstack = 0
 28274                           ; Regs used in _I2C1_SetBuffer: [wreg]
 28275                           
 28276                           
 28277                           ;mcc_generated_files/i2c1_master.c: 263: void I2C1_SetBuffer(void *buffer, size_t buffer
      +                          Size);mcc_generated_files/i2c1_master.c: 264: {;mcc_generated_files/i2c1_master.c: 265: 
      +                              if(I2C1_Status.bufferFree)
 28278     1084  0141               	movlb	1	; select bank1
 28279     1085  1DBD               	btfss	(_I2C1_Status^(0+128)+29),3
 28280     1086  2888               	goto	u9541
 28281     1087  2889               	goto	u9540
 28282     1088                     u9541:
 28283     1088  2892               	goto	l2423
 28284     1089                     u9540:
 28285     1089                     l12598:
 28286                           
 28287                           ;mcc_generated_files/i2c1_master.c: 266:     {;mcc_generated_files/i2c1_master.c: 267:  
      +                                 I2C1_Status.data_ptr = buffer;
 28288     1089  0872               	movf	I2C1_SetBuffer@buffer+1,w
 28289     108A  00B8               	movwf	((low ((_I2C1_Status| 0+23))+1))^(0+128)
 28290     108B  0871               	movf	I2C1_SetBuffer@buffer,w
 28291     108C  00B7               	movwf	(low ((_I2C1_Status| 0+23)))^(0+128)
 28292                           
 28293                           ;mcc_generated_files/i2c1_master.c: 268:         I2C1_Status.data_length = bufferSize;
 28294     108D  0874               	movf	I2C1_SetBuffer@bufferSize+1,w
 28295     108E  00BA               	movwf	((_I2C1_Status+1)^(0+128)+25)
 28296     108F  0873               	movf	I2C1_SetBuffer@bufferSize,w
 28297     1090  00B9               	movwf	(_I2C1_Status^(0+128)+25)
 28298     1091                     l12600:
 28299                           
 28300                           ;mcc_generated_files/i2c1_master.c: 269:         I2C1_Status.bufferFree = 0;
 28301     1091  11BD               	bcf	(_I2C1_Status^(0+128)+29),3
 28302     1092                     l2423:
 28303     1092  0008               	return
 28304     1093                     __end_of_I2C1_SetBuffer:
 28305                           
 28306                           	psect	text154
 28307     1E73                     __ptext154:	
 28308 ;; *************** function _I2C1_MasterStop *****************
 28309 ;; Defined at:
 28310 ;;		line 593 in file "mcc_generated_files/i2c1_master.c"
 28311 ;; Parameters:    Size  Location     Type
 28312 ;;		None
 28313 ;; Auto vars:     Size  Location     Type
 28314 ;;		None
 28315 ;; Return value:  Size  Location     Type
 28316 ;;                  1    wreg      void 
 28317 ;; Registers used:
 28318 ;;		None
 28319 ;; Tracked objects:
 28320 ;;		On entry : 0/0
 28321 ;;		On exit  : 0/0
 28322 ;;		Unchanged: 0/0
 28323 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 28324 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28325 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28327 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28328 ;;Total ram usage:        0 bytes
 28329 ;; Hardware stack levels used: 1
 28330 ;; Hardware stack levels required when called: 4
 28331 ;; This function calls:
 28332 ;;		Nothing
 28333 ;; This function is called by:
 28334 ;;		_I2C1_DO_SEND_STOP
 28335 ;; This function uses a non-reentrant model
 28336 ;;
 28337                           
 28338     1E73                     _I2C1_MasterStop:	
 28339                           ;psect for function _I2C1_MasterStop
 28340                           
 28341     1E73                     l12606:	
 28342                           ;incstack = 0
 28343                           ; Regs used in _I2C1_MasterStop: []
 28344                           
 28345                           
 28346                           ;mcc_generated_files/i2c1_master.c: 595:     SSP1CON2bits.PEN = 1;
 28347     1E73  0143               	movlb	3	; select bank3
 28348     1E74  1511               	bsf	17,2	;volatile
 28349     1E75                     l2589:
 28350     1E75  0008               	return
 28351     1E76                     __end_of_I2C1_MasterStop:
 28352                           
 28353                           	psect	text155
 28354     1E70                     __ptext155:	
 28355 ;; *************** function _I2C1_MasterEnableRestart *****************
 28356 ;; Defined at:
 28357 ;;		line 573 in file "mcc_generated_files/i2c1_master.c"
 28358 ;; Parameters:    Size  Location     Type
 28359 ;;		None
 28360 ;; Auto vars:     Size  Location     Type
 28361 ;;		None
 28362 ;; Return value:  Size  Location     Type
 28363 ;;                  1    wreg      void 
 28364 ;; Registers used:
 28365 ;;		None
 28366 ;; Tracked objects:
 28367 ;;		On entry : 0/0
 28368 ;;		On exit  : 0/0
 28369 ;;		Unchanged: 0/0
 28370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 28371 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28372 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28374 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28375 ;;Total ram usage:        0 bytes
 28376 ;; Hardware stack levels used: 1
 28377 ;; Hardware stack levels required when called: 4
 28378 ;; This function calls:
 28379 ;;		Nothing
 28380 ;; This function is called by:
 28381 ;;		_I2C1_DO_SEND_RESTART_READ
 28382 ;;		_I2C1_DO_SEND_RESTART_WRITE
 28383 ;;		_I2C1_DO_SEND_RESTART
 28384 ;;		_I2C1_DO_RX_EMPTY
 28385 ;; This function uses a non-reentrant model
 28386 ;;
 28387                           
 28388     1E70                     _I2C1_MasterEnableRestart:	
 28389                           ;psect for function _I2C1_MasterEnableRestart
 28390                           
 28391     1E70                     l12604:	
 28392                           ;incstack = 0
 28393                           ; Regs used in _I2C1_MasterEnableRestart: []
 28394                           
 28395                           
 28396                           ;mcc_generated_files/i2c1_master.c: 575:     SSP1CON2bits.RSEN = 1;
 28397     1E70  0143               	movlb	3	; select bank3
 28398     1E71  1491               	bsf	17,1	;volatile
 28399     1E72                     l2577:
 28400     1E72  0008               	return
 28401     1E73                     __end_of_I2C1_MasterEnableRestart:
 28402                           
 28403                           	psect	text156
 28404     1E6D                     __ptext156:	
 28405 ;; *************** function _I2C1_MasterStart *****************
 28406 ;; Defined at:
 28407 ;;		line 588 in file "mcc_generated_files/i2c1_master.c"
 28408 ;; Parameters:    Size  Location     Type
 28409 ;;		None
 28410 ;; Auto vars:     Size  Location     Type
 28411 ;;		None
 28412 ;; Return value:  Size  Location     Type
 28413 ;;                  1    wreg      void 
 28414 ;; Registers used:
 28415 ;;		None
 28416 ;; Tracked objects:
 28417 ;;		On entry : 0/0
 28418 ;;		On exit  : 0/0
 28419 ;;		Unchanged: 0/0
 28420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 28421 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28422 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28424 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28425 ;;Total ram usage:        0 bytes
 28426 ;; Hardware stack levels used: 1
 28427 ;; Hardware stack levels required when called: 4
 28428 ;; This function calls:
 28429 ;;		Nothing
 28430 ;; This function is called by:
 28431 ;;		_I2C1_MasterOperation
 28432 ;; This function uses a non-reentrant model
 28433 ;;
 28434                           
 28435     1E6D                     _I2C1_MasterStart:	
 28436                           ;psect for function _I2C1_MasterStart
 28437                           
 28438     1E6D                     l12920:	
 28439                           ;incstack = 0
 28440                           ; Regs used in _I2C1_MasterStart: []
 28441                           
 28442                           
 28443                           ;mcc_generated_files/i2c1_master.c: 590:     SSP1CON2bits.SEN = 1;
 28444     1E6D  0143               	movlb	3	; select bank3
 28445     1E6E  1411               	bsf	17,0	;volatile
 28446     1E6F                     l2586:
 28447     1E6F  0008               	return
 28448     1E70                     __end_of_I2C1_MasterStart:
 28449                           
 28450                           	psect	text157
 28451     1287                     __ptext157:	
 28452 ;; *************** function _I2C1_Close *****************
 28453 ;; Defined at:
 28454 ;;		line 209 in file "mcc_generated_files/i2c1_master.c"
 28455 ;; Parameters:    Size  Location     Type
 28456 ;;		None
 28457 ;; Auto vars:     Size  Location     Type
 28458 ;;  returnValue     1    1[COMMON] enum E358
 28459 ;; Return value:  Size  Location     Type
 28460 ;;                  1    wreg      enum E358
 28461 ;; Registers used:
 28462 ;;		wreg, status,2, status,0, pclath, cstack
 28463 ;; Tracked objects:
 28464 ;;		On entry : 0/0
 28465 ;;		On exit  : 0/0
 28466 ;;		Unchanged: 0/0
 28467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 28468 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28469 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28471 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28472 ;;Total ram usage:        1 bytes
 28473 ;; Hardware stack levels used: 1
 28474 ;; Hardware stack levels required when called: 5
 28475 ;; This function calls:
 28476 ;;		_I2C1_MasterClearIrq
 28477 ;;		_I2C1_MasterClose
 28478 ;;		_I2C1_MasterDisableIrq
 28479 ;; This function is called by:
 28480 ;;		_i2c_write1ByteRegister
 28481 ;;		_i2c_read1ByteRegister
 28482 ;;		_i2c_read2ByteRegister
 28483 ;;		_i2c_writeNBytes
 28484 ;;		_i2c_write2ByteRegister
 28485 ;;		_i2c_readDataBlock
 28486 ;;		_i2c_readNBytes
 28487 ;;		_I2C1_Read1ByteRegister
 28488 ;;		_I2C1_Read2ByteRegister
 28489 ;;		_I2C1_Write1ByteRegister
 28490 ;;		_I2C1_Write2ByteRegister
 28491 ;;		_I2C1_WriteNBytes
 28492 ;;		_I2C1_ReadNBytes
 28493 ;;		_I2C1_ReadDataBlock
 28494 ;; This function uses a non-reentrant model
 28495 ;;
 28496                           
 28497     1287                     _I2C1_Close:	
 28498                           ;psect for function _I2C1_Close
 28499                           
 28500     1287                     l13092:	
 28501                           ;incstack = 0
 28502                           ; Regs used in _I2C1_Close: [wreg+status,2+status,0+pclath+cstack]
 28503                           
 28504                           
 28505                           ;mcc_generated_files/i2c1_master.c: 211:     i2c1_error_t returnValue = I2C1_BUSY;
 28506     1287  01F1               	clrf	I2C1_Close@returnValue
 28507     1288  0AF1               	incf	I2C1_Close@returnValue,f
 28508                           
 28509                           ;mcc_generated_files/i2c1_master.c: 212:     if(!I2C1_Status.busy)
 28510     1289  0141               	movlb	1	; select bank1
 28511     128A  18BD               	btfsc	(_I2C1_Status^(0+128)+29),1
 28512     128B  2A8D               	goto	u9761
 28513     128C  2A8E               	goto	u9760
 28514     128D                     u9761:
 28515     128D  2A9D               	goto	l13106
 28516     128E                     u9760:
 28517     128E                     l13094:
 28518                           
 28519                           ;mcc_generated_files/i2c1_master.c: 213:     {;mcc_generated_files/i2c1_master.c: 214:  
      +                                 I2C1_Status.inUse = 0;
 28520     128E  113D               	bcf	(_I2C1_Status^(0+128)+29),2
 28521     128F                     l13096:
 28522                           
 28523                           ;mcc_generated_files/i2c1_master.c: 215:         I2C1_Status.address = 0xff;
 28524     128F  30FF               	movlw	255
 28525     1290  00B6               	movwf	(_I2C1_Status^(0+128)+22)
 28526     1291                     l13098:
 28527                           
 28528                           ;mcc_generated_files/i2c1_master.c: 216:         I2C1_MasterClearIrq();
 28529     1291  319E  2664  3192   	fcall	_I2C1_MasterClearIrq
 28530     1294                     l13100:
 28531                           
 28532                           ;mcc_generated_files/i2c1_master.c: 217:         I2C1_MasterDisableIrq();
 28533     1294  319E  266A  3192   	fcall	_I2C1_MasterDisableIrq
 28534     1297                     l13102:
 28535                           
 28536                           ;mcc_generated_files/i2c1_master.c: 218:         I2C1_MasterClose();
 28537     1297  319E  2667  3192   	fcall	_I2C1_MasterClose
 28538     129A                     l13104:
 28539                           
 28540                           ;mcc_generated_files/i2c1_master.c: 219:         returnValue = I2C1_Status.error;
 28541     129A  0141               	movlb	1	; select bank1
 28542     129B  083C               	movf	(_I2C1_Status^(0+128)+28),w
 28543     129C  00F1               	movwf	I2C1_Close@returnValue
 28544     129D                     l13106:
 28545                           
 28546                           ;mcc_generated_files/i2c1_master.c: 221:     return returnValue;
 28547     129D  0871               	movf	I2C1_Close@returnValue,w
 28548     129E                     l2404:
 28549     129E  0008               	return
 28550     129F                     __end_of_I2C1_Close:
 28551                           
 28552                           	psect	text158
 28553     1E6A                     __ptext158:	
 28554 ;; *************** function _I2C1_MasterDisableIrq *****************
 28555 ;; Defined at:
 28556 ;;		line 635 in file "mcc_generated_files/i2c1_master.c"
 28557 ;; Parameters:    Size  Location     Type
 28558 ;;		None
 28559 ;; Auto vars:     Size  Location     Type
 28560 ;;		None
 28561 ;; Return value:  Size  Location     Type
 28562 ;;                  1    wreg      void 
 28563 ;; Registers used:
 28564 ;;		None
 28565 ;; Tracked objects:
 28566 ;;		On entry : 0/0
 28567 ;;		On exit  : 0/0
 28568 ;;		Unchanged: 0/0
 28569 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 28570 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28571 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28572 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28573 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28574 ;;Total ram usage:        0 bytes
 28575 ;; Hardware stack levels used: 1
 28576 ;; Hardware stack levels required when called: 4
 28577 ;; This function calls:
 28578 ;;		Nothing
 28579 ;; This function is called by:
 28580 ;;		_I2C1_Close
 28581 ;;		_I2C1_SetTimeOut
 28582 ;; This function uses a non-reentrant model
 28583 ;;
 28584                           
 28585     1E6A                     _I2C1_MasterDisableIrq:	
 28586                           ;psect for function _I2C1_MasterDisableIrq
 28587                           
 28588     1E6A                     l13030:	
 28589                           ;incstack = 0
 28590                           ; Regs used in _I2C1_MasterDisableIrq: []
 28591                           
 28592                           
 28593                           ;mcc_generated_files/i2c1_master.c: 637:     PIE3bits.SSP1IE = 0;
 28594     1E6A  014E               	movlb	14	; select bank14
 28595     1E6B  1019               	bcf	25,0	;volatile
 28596     1E6C                     l2613:
 28597     1E6C  0008               	return
 28598     1E6D                     __end_of_I2C1_MasterDisableIrq:
 28599                           
 28600                           	psect	text159
 28601     1E67                     __ptext159:	
 28602 ;; *************** function _I2C1_MasterClose *****************
 28603 ;; Defined at:
 28604 ;;		line 557 in file "mcc_generated_files/i2c1_master.c"
 28605 ;; Parameters:    Size  Location     Type
 28606 ;;		None
 28607 ;; Auto vars:     Size  Location     Type
 28608 ;;		None
 28609 ;; Return value:  Size  Location     Type
 28610 ;;                  1    wreg      void 
 28611 ;; Registers used:
 28612 ;;		None
 28613 ;; Tracked objects:
 28614 ;;		On entry : 0/0
 28615 ;;		On exit  : 0/0
 28616 ;;		Unchanged: 0/0
 28617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 28618 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28619 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28621 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28622 ;;Total ram usage:        0 bytes
 28623 ;; Hardware stack levels used: 1
 28624 ;; Hardware stack levels required when called: 4
 28625 ;; This function calls:
 28626 ;;		Nothing
 28627 ;; This function is called by:
 28628 ;;		_I2C1_Close
 28629 ;; This function uses a non-reentrant model
 28630 ;;
 28631                           
 28632     1E67                     _I2C1_MasterClose:	
 28633                           ;psect for function _I2C1_MasterClose
 28634                           
 28635     1E67                     l13032:	
 28636                           ;incstack = 0
 28637                           ; Regs used in _I2C1_MasterClose: []
 28638                           
 28639                           
 28640                           ;mcc_generated_files/i2c1_master.c: 560:     SSP1CON1bits.SSPEN = 0;
 28641     1E67  0143               	movlb	3	; select bank3
 28642     1E68  1290               	bcf	16,5	;volatile
 28643     1E69                     l2568:
 28644     1E69  0008               	return
 28645     1E6A                     __end_of_I2C1_MasterClose:
 28646                           
 28647                           	psect	text160
 28648     1E64                     __ptext160:	
 28649 ;; *************** function _I2C1_MasterClearIrq *****************
 28650 ;; Defined at:
 28651 ;;		line 640 in file "mcc_generated_files/i2c1_master.c"
 28652 ;; Parameters:    Size  Location     Type
 28653 ;;		None
 28654 ;; Auto vars:     Size  Location     Type
 28655 ;;		None
 28656 ;; Return value:  Size  Location     Type
 28657 ;;                  1    wreg      void 
 28658 ;; Registers used:
 28659 ;;		None
 28660 ;; Tracked objects:
 28661 ;;		On entry : 0/0
 28662 ;;		On exit  : 0/0
 28663 ;;		Unchanged: 0/0
 28664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 28665 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28666 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28668 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28669 ;;Total ram usage:        0 bytes
 28670 ;; Hardware stack levels used: 1
 28671 ;; Hardware stack levels required when called: 4
 28672 ;; This function calls:
 28673 ;;		Nothing
 28674 ;; This function is called by:
 28675 ;;		_I2C1_Open
 28676 ;;		_I2C1_Close
 28677 ;;		_I2C1_MasterFsm
 28678 ;; This function uses a non-reentrant model
 28679 ;;
 28680                           
 28681     1E64                     _I2C1_MasterClearIrq:	
 28682                           ;psect for function _I2C1_MasterClearIrq
 28683                           
 28684     1E64                     l12746:	
 28685                           ;incstack = 0
 28686                           ; Regs used in _I2C1_MasterClearIrq: []
 28687                           
 28688                           
 28689                           ;mcc_generated_files/i2c1_master.c: 642:     PIR3bits.SSP1IF = 0;
 28690     1E64  014E               	movlb	14	; select bank14
 28691     1E65  100F               	bcf	15,0	;volatile
 28692     1E66                     l2616:
 28693     1E66  0008               	return
 28694     1E67                     __end_of_I2C1_MasterClearIrq:
 28695                           
 28696                           	psect	intentry
 28697     0004                     __pintentry:	
 28698 ;; *************** function _INTERRUPT_InterruptManager *****************
 28699 ;; Defined at:
 28700 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 28701 ;; Parameters:    Size  Location     Type
 28702 ;;		None
 28703 ;; Auto vars:     Size  Location     Type
 28704 ;;		None
 28705 ;; Return value:  Size  Location     Type
 28706 ;;                  1    wreg      void 
 28707 ;; Registers used:
 28708 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 28709 ;; Tracked objects:
 28710 ;;		On entry : 0/0
 28711 ;;		On exit  : 0/0
 28712 ;;		Unchanged: 0/0
 28713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 28714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28717 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28718 ;;Total ram usage:        0 bytes
 28719 ;; Hardware stack levels used: 1
 28720 ;; Hardware stack levels required when called: 3
 28721 ;; This function calls:
 28722 ;;		NULL
 28723 ;;		_EUSART1_Receive_ISR
 28724 ;;		_EUSART1_Transmit_ISR
 28725 ;;		_EUSART2_Receive_ISR
 28726 ;;		_EUSART2_Transmit_ISR
 28727 ;;		_PIN_MANAGER_IOC
 28728 ;; This function is called by:
 28729 ;;		Interrupt level 1
 28730 ;; This function uses a non-reentrant model
 28731 ;;
 28732                           
 28733     0004                     _INTERRUPT_InterruptManager:
 28734                           
 28735                           ;incstack = 0
 28736 ;; hardware stack exceeded
 28737     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 28738                           
 28739                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
 28740     0005  3180               	pagesel	$
 28741     0006                     i1l12330:
 28742                           
 28743                           ;mcc_generated_files/interrupt_manager.c: 55:     if(PIE0bits.IOCIE == 1 && PIR0bits.IOC
      +                          IF == 1)
 28744     0006  014E               	movlb	14	; select bank14
 28745     0007  1E16               	btfss	22,4	;volatile
 28746     0008  280A               	goto	u932_21
 28747     0009  280B               	goto	u932_20
 28748     000A                     u932_21:
 28749     000A  2813               	goto	i1l1949
 28750     000B                     u932_20:
 28751     000B                     i1l12332:
 28752     000B  1E0C               	btfss	12,4	;volatile
 28753     000C  280E               	goto	u933_21
 28754     000D  280F               	goto	u933_20
 28755     000E                     u933_21:
 28756     000E  2813               	goto	i1l1949
 28757     000F                     u933_20:
 28758     000F                     i1l12334:
 28759                           
 28760                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         PIN_MANAGER_IOC();
 28761     000F  319F  276A  3180   	fcall	_PIN_MANAGER_IOC
 28762                           
 28763                           ;mcc_generated_files/interrupt_manager.c: 58:     }
 28764     0012  2853               	goto	i1l1961
 28765     0013                     i1l1949:	
 28766                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
 28767                           
 28768     0013  1F0B               	btfss	11,6	;volatile
 28769     0014  2816               	goto	u934_21
 28770     0015  2817               	goto	u934_20
 28771     0016                     u934_21:
 28772     0016  2853               	goto	i1l1961
 28773     0017                     u934_20:
 28774     0017                     i1l12336:
 28775                           
 28776                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE3bits.TX2IE == 1 && PIR3bits.TX2IF == 1)
 28777     0017  1F19               	btfss	25,6	;volatile
 28778     0018  281A               	goto	u935_21
 28779     0019  281B               	goto	u935_20
 28780     001A                     u935_21:
 28781     001A  2826               	goto	i1l1952
 28782     001B                     u935_20:
 28783     001B                     i1l12338:
 28784     001B  1F0F               	btfss	15,6	;volatile
 28785     001C  281E               	goto	u936_21
 28786     001D  281F               	goto	u936_20
 28787     001E                     u936_21:
 28788     001E  2826               	goto	i1l1952
 28789     001F                     u936_20:
 28790     001F                     i1l12340:
 28791                           
 28792                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             EUSART2_TxDefaultInterruptHandler();
 28793     001F  0141               	movlb	1	; select bank1
 28794     0020  086D               	movf	(_EUSART2_TxDefaultInterruptHandler+1)^(0+128),w
 28795     0021  008A               	movwf	10
 28796     0022  086C               	movf	_EUSART2_TxDefaultInterruptHandler^(0+128),w
 28797     0023  000A               	callw
 28798     0024  3180               	pagesel	$
 28799                           
 28800                           ;mcc_generated_files/interrupt_manager.c: 64:         }
 28801     0025  2853               	goto	i1l1961
 28802     0026                     i1l1952:	
 28803                           ;mcc_generated_files/interrupt_manager.c: 65:         else if(PIE3bits.RC2IE == 1 && PIR
      +                          3bits.RC2IF == 1)
 28804                           
 28805     0026  1F99               	btfss	25,7	;volatile
 28806     0027  2829               	goto	u937_21
 28807     0028  282A               	goto	u937_20
 28808     0029                     u937_21:
 28809     0029  2835               	goto	i1l1954
 28810     002A                     u937_20:
 28811     002A                     i1l12342:
 28812     002A  1F8F               	btfss	15,7	;volatile
 28813     002B  282D               	goto	u938_21
 28814     002C  282E               	goto	u938_20
 28815     002D                     u938_21:
 28816     002D  2835               	goto	i1l1954
 28817     002E                     u938_20:
 28818     002E                     i1l12344:
 28819                           
 28820                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             EUSART2_RxDefaultInterruptHandler();
 28821     002E  0142               	movlb	2	; select bank2
 28822     002F  0865               	movf	(_EUSART2_RxDefaultInterruptHandler+1)^(0+256),w
 28823     0030  008A               	movwf	10
 28824     0031  0864               	movf	_EUSART2_RxDefaultInterruptHandler^(0+256),w
 28825     0032  000A               	callw
 28826     0033  3180               	pagesel	$
 28827                           
 28828                           ;mcc_generated_files/interrupt_manager.c: 68:         }
 28829     0034  2853               	goto	i1l1961
 28830     0035                     i1l1954:	
 28831                           ;mcc_generated_files/interrupt_manager.c: 69:         else if(PIE3bits.TX1IE == 1 && PIR
      +                          3bits.TX1IF == 1)
 28832                           
 28833     0035  1E19               	btfss	25,4	;volatile
 28834     0036  2838               	goto	u939_21
 28835     0037  2839               	goto	u939_20
 28836     0038                     u939_21:
 28837     0038  2844               	goto	i1l1956
 28838     0039                     u939_20:
 28839     0039                     i1l12346:
 28840     0039  1E0F               	btfss	15,4	;volatile
 28841     003A  283C               	goto	u940_21
 28842     003B  283D               	goto	u940_20
 28843     003C                     u940_21:
 28844     003C  2844               	goto	i1l1956
 28845     003D                     u940_20:
 28846     003D                     i1l12348:
 28847                           
 28848                           ;mcc_generated_files/interrupt_manager.c: 70:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 71:             EUSART1_TxDefaultInterruptHandler();
 28849     003D  0142               	movlb	2	; select bank2
 28850     003E  085D               	movf	(_EUSART1_TxDefaultInterruptHandler+1)^(0+256),w
 28851     003F  008A               	movwf	10
 28852     0040  085C               	movf	_EUSART1_TxDefaultInterruptHandler^(0+256),w
 28853     0041  000A               	callw
 28854     0042  3180               	pagesel	$
 28855                           
 28856                           ;mcc_generated_files/interrupt_manager.c: 72:         }
 28857     0043  2853               	goto	i1l1961
 28858     0044                     i1l1956:	
 28859                           ;mcc_generated_files/interrupt_manager.c: 73:         else if(PIE3bits.RC1IE == 1 && PIR
      +                          3bits.RC1IF == 1)
 28860                           
 28861     0044  1E99               	btfss	25,5	;volatile
 28862     0045  2847               	goto	u941_21
 28863     0046  2848               	goto	u941_20
 28864     0047                     u941_21:
 28865     0047  2853               	goto	i1l1955
 28866     0048                     u941_20:
 28867     0048                     i1l12350:
 28868     0048  1E8F               	btfss	15,5	;volatile
 28869     0049  284B               	goto	u942_21
 28870     004A  284C               	goto	u942_20
 28871     004B                     u942_21:
 28872     004B  2853               	goto	i1l1955
 28873     004C                     u942_20:
 28874     004C                     i1l12352:
 28875                           
 28876                           ;mcc_generated_files/interrupt_manager.c: 74:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 75:             EUSART1_RxDefaultInterruptHandler();
 28877     004C  0142               	movlb	2	; select bank2
 28878     004D  085B               	movf	(_EUSART1_RxDefaultInterruptHandler+1)^(0+256),w
 28879     004E  008A               	movwf	10
 28880     004F  085A               	movf	_EUSART1_RxDefaultInterruptHandler^(0+256),w
 28881     0050  000A               	callw
 28882     0051  3180               	pagesel	$
 28883                           
 28884                           ;mcc_generated_files/interrupt_manager.c: 76:         }
 28885     0052  2853               	goto	i1l1961
 28886     0053                     i1l1955:
 28887     0053                     i1l1961:
 28888     0053  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 28889     0054  0009               	retfie
 28890     0055                     __end_of_INTERRUPT_InterruptManager:
 28891                           
 28892                           	psect	text162
 28893     1F6A                     __ptext162:	
 28894 ;; *************** function _PIN_MANAGER_IOC *****************
 28895 ;; Defined at:
 28896 ;;		line 142 in file "mcc_generated_files/pin_manager.c"
 28897 ;; Parameters:    Size  Location     Type
 28898 ;;		None
 28899 ;; Auto vars:     Size  Location     Type
 28900 ;;		None
 28901 ;; Return value:  Size  Location     Type
 28902 ;;                  1    wreg      void 
 28903 ;; Registers used:
 28904 ;;		wreg, status,2, status,0, pclath, cstack
 28905 ;; Tracked objects:
 28906 ;;		On entry : 0/0
 28907 ;;		On exit  : 0/0
 28908 ;;		Unchanged: 0/0
 28909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 28910 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28911 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28913 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28914 ;;Total ram usage:        0 bytes
 28915 ;; Hardware stack levels used: 1
 28916 ;; Hardware stack levels required when called: 2
 28917 ;; This function calls:
 28918 ;;		_IOCAF6_ISR
 28919 ;; This function is called by:
 28920 ;;		_INTERRUPT_InterruptManager
 28921 ;; This function uses a non-reentrant model
 28922 ;;
 28923                           
 28924     1F6A                     _PIN_MANAGER_IOC:	
 28925                           ;psect for function _PIN_MANAGER_IOC
 28926                           
 28927     1F6A                     i1l10414:	
 28928                           ;incstack = 0
 28929 ;; hardware stack exceeded
 28930                           ; Regs used in _PIN_MANAGER_IOC: [wreg+status,2+status,0+pclath+cstack]
 28931                           
 28932                           
 28933                           ;mcc_generated_files/pin_manager.c: 145:     if(IOCAFbits.IOCAF6 == 1)
 28934     1F6A  017E               	movlb	62	; select bank62
 28935     1F6B  1F3F               	btfss	63,6	;volatile
 28936     1F6C  2F6E               	goto	u711_21
 28937     1F6D  2F6F               	goto	u711_20
 28938     1F6E                     u711_21:
 28939     1F6E  2F72               	goto	i1l2101
 28940     1F6F                     u711_20:
 28941     1F6F                     i1l10416:
 28942                           
 28943                           ;mcc_generated_files/pin_manager.c: 146:     {;mcc_generated_files/pin_manager.c: 147:  
      +                                 IOCAF6_ISR();
 28944     1F6F  3190  2075  319F   	fcall	_IOCAF6_ISR
 28945     1F72                     i1l2101:
 28946     1F72  0008               	return
 28947     1F73                     __end_of_PIN_MANAGER_IOC:
 28948                           
 28949                           	psect	text163
 28950     1075                     __ptext163:	
 28951 ;; *************** function _IOCAF6_ISR *****************
 28952 ;; Defined at:
 28953 ;;		line 154 in file "mcc_generated_files/pin_manager.c"
 28954 ;; Parameters:    Size  Location     Type
 28955 ;;		None
 28956 ;; Auto vars:     Size  Location     Type
 28957 ;;		None
 28958 ;; Return value:  Size  Location     Type
 28959 ;;                  1    wreg      void 
 28960 ;; Registers used:
 28961 ;;		wreg, status,2, status,0, pclath, cstack
 28962 ;; Tracked objects:
 28963 ;;		On entry : 0/0
 28964 ;;		On exit  : 0/0
 28965 ;;		Unchanged: 0/0
 28966 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 28967 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28968 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28969 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28970 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28971 ;;Total ram usage:        0 bytes
 28972 ;; Hardware stack levels used: 1
 28973 ;; Hardware stack levels required when called: 1
 28974 ;; This function calls:
 28975 ;;		NULL
 28976 ;;		_IOCAF6_DefaultInterruptHandler
 28977 ;; This function is called by:
 28978 ;;		_PIN_MANAGER_IOC
 28979 ;; This function uses a non-reentrant model
 28980 ;;
 28981                           
 28982     1075                     _IOCAF6_ISR:	
 28983                           ;psect for function _IOCAF6_ISR
 28984                           
 28985     1075                     i1l9874:	
 28986                           ;incstack = 0
 28987 ;; hardware stack exceeded
 28988                           ; Regs used in _IOCAF6_ISR: [wreg+status,2+status,0+pclath+cstack]
 28989                           
 28990                           
 28991                           ;mcc_generated_files/pin_manager.c: 159:     if(IOCAF6_InterruptHandler)
 28992     1075  0141               	movlb	1	; select bank1
 28993     1076  086A               	movf	_IOCAF6_InterruptHandler^(0+128),w
 28994     1077  046B               	iorwf	(_IOCAF6_InterruptHandler+1)^(0+128),w
 28995     1078  1903               	btfsc	3,2
 28996     1079  287B               	goto	u668_21
 28997     107A  287C               	goto	u668_20
 28998     107B                     u668_21:
 28999     107B  2881               	goto	i1l9878
 29000     107C                     u668_20:
 29001     107C                     i1l9876:
 29002                           
 29003                           ;mcc_generated_files/pin_manager.c: 160:     {;mcc_generated_files/pin_manager.c: 161:  
      +                                 IOCAF6_InterruptHandler();
 29004     107C  086B               	movf	(_IOCAF6_InterruptHandler+1)^(0+128),w
 29005     107D  008A               	movwf	10
 29006     107E  086A               	movf	_IOCAF6_InterruptHandler^(0+128),w
 29007     107F  000A               	callw
 29008     1080  3190               	pagesel	$
 29009     1081                     i1l9878:
 29010                           
 29011                           ;mcc_generated_files/pin_manager.c: 163:     IOCAFbits.IOCAF6 = 0;
 29012     1081  017E               	movlb	62	; select bank62
 29013     1082  133F               	bcf	63,6	;volatile
 29014     1083                     i1l2105:
 29015     1083  0008               	return
 29016     1084                     __end_of_IOCAF6_ISR:
 29017                           
 29018                           	psect	text164
 29019     1000                     __ptext164:	
 29020 ;; *************** function _IOCAF6_DefaultInterruptHandler *****************
 29021 ;; Defined at:
 29022 ;;		line 176 in file "mcc_generated_files/pin_manager.c"
 29023 ;; Parameters:    Size  Location     Type
 29024 ;;		None
 29025 ;; Auto vars:     Size  Location     Type
 29026 ;;		None
 29027 ;; Return value:  Size  Location     Type
 29028 ;;                  1    wreg      void 
 29029 ;; Registers used:
 29030 ;;		None
 29031 ;; Tracked objects:
 29032 ;;		On entry : 0/0
 29033 ;;		On exit  : 0/0
 29034 ;;		Unchanged: 0/0
 29035 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 29036 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29037 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29039 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29040 ;;Total ram usage:        0 bytes
 29041 ;; Hardware stack levels used: 1
 29042 ;; This function calls:
 29043 ;;		Nothing
 29044 ;; This function is called by:
 29045 ;;		_PIN_MANAGER_Initialize
 29046 ;;		_IOCAF6_ISR
 29047 ;; This function uses a non-reentrant model
 29048 ;;
 29049                           
 29050     1000                     _IOCAF6_DefaultInterruptHandler:	
 29051                           ;psect for function _IOCAF6_DefaultInterruptHandler
 29052                           
 29053     1000                     i1l2111:	
 29054                           ;incstack = 0
 29055 ;; hardware stack exceeded
 29056                           ; Regs used in _IOCAF6_DefaultInterruptHandler: []
 29057                           
 29058     1000  0008               	return
 29059     1001                     __end_of_IOCAF6_DefaultInterruptHandler:
 29060                           
 29061                           	psect	text165
 29062     1406                     __ptext165:	
 29063 ;; *************** function _EUSART1_Transmit_ISR *****************
 29064 ;; Defined at:
 29065 ;;		line 206 in file "mcc_generated_files/eusart1.c"
 29066 ;; Parameters:    Size  Location     Type
 29067 ;;		None
 29068 ;; Auto vars:     Size  Location     Type
 29069 ;;		None
 29070 ;; Return value:  Size  Location     Type
 29071 ;;                  1    wreg      void 
 29072 ;; Registers used:
 29073 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 29074 ;; Tracked objects:
 29075 ;;		On entry : 0/0
 29076 ;;		On exit  : 0/0
 29077 ;;		Unchanged: 0/0
 29078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 29079 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29080 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29081 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29082 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29083 ;;Total ram usage:        1 bytes
 29084 ;; Hardware stack levels used: 1
 29085 ;; This function calls:
 29086 ;;		Nothing
 29087 ;; This function is called by:
 29088 ;;		_EUSART1_Initialize
 29089 ;;		_INTERRUPT_InterruptManager
 29090 ;; This function uses a non-reentrant model
 29091 ;;
 29092                           
 29093     1406                     _EUSART1_Transmit_ISR:	
 29094                           ;psect for function _EUSART1_Transmit_ISR
 29095                           
 29096     1406                     i1l10382:	
 29097                           ;incstack = 0
 29098                           ; Regs used in _EUSART1_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 29099                           
 29100                           
 29101                           ;mcc_generated_files/eusart1.c: 210:     if(sizeof(eusart1TxBuffer) > eusart1TxBufferRem
      +                          aining)
 29102     1406  3008               	movlw	8
 29103     1407  0140               	movlb	0	; select bank0
 29104     1408  0255               	subwf	_eusart1TxBufferRemaining,w	;volatile
 29105     1409  1803               	skipnc
 29106     140A  2C0C               	goto	u706_21
 29107     140B  2C0D               	goto	u706_20
 29108     140C                     u706_21:
 29109     140C  2C26               	goto	i1l1886
 29110     140D                     u706_20:
 29111     140D                     i1l10384:
 29112                           
 29113                           ;mcc_generated_files/eusart1.c: 211:     {;mcc_generated_files/eusart1.c: 212:         T
      +                          X1REG = eusart1TxBuffer[eusart1TxTail++];
 29114     140D  0856               	movf	_eusart1TxTail,w
 29115     140E  3E4C               	addlw	(low (_eusart1TxBuffer| (0+256)))& (0+255)
 29116     140F  0086               	movwf	6
 29117     1410  3001               	movlw	1	; select bank2/3
 29118     1411  0087               	movwf	7
 29119     1412  0801               	movf	1,w
 29120     1413  0142               	movlb	2	; select bank2
 29121     1414  009A               	movwf	26	;volatile
 29122     1415                     i1l10386:
 29123     1415  3001               	movlw	1
 29124     1416  00F0               	movwf	??_EUSART1_Transmit_ISR
 29125     1417  0870               	movf	??_EUSART1_Transmit_ISR,w
 29126     1418  0140               	movlb	0	; select bank0
 29127     1419  07D6               	addwf	_eusart1TxTail,f	;volatile
 29128     141A                     i1l10388:
 29129                           
 29130                           ;mcc_generated_files/eusart1.c: 213:         if(sizeof(eusart1TxBuffer) <= eusart1TxTail
      +                          )
 29131     141A  3008               	movlw	8
 29132     141B  0256               	subwf	_eusart1TxTail,w	;volatile
 29133     141C  1C03               	skipc
 29134     141D  2C1F               	goto	u707_21
 29135     141E  2C20               	goto	u707_20
 29136     141F                     u707_21:
 29137     141F  2C21               	goto	i1l10392
 29138     1420                     u707_20:
 29139     1420                     i1l10390:
 29140                           
 29141                           ;mcc_generated_files/eusart1.c: 214:         {;mcc_generated_files/eusart1.c: 215:      
      +                                 eusart1TxTail = 0;
 29142     1420  01D6               	clrf	_eusart1TxTail	;volatile
 29143     1421                     i1l10392:
 29144                           
 29145                           ;mcc_generated_files/eusart1.c: 217:         eusart1TxBufferRemaining++;
 29146     1421  3001               	movlw	1
 29147     1422  00F0               	movwf	??_EUSART1_Transmit_ISR
 29148     1423  0870               	movf	??_EUSART1_Transmit_ISR,w
 29149     1424  07D5               	addwf	_eusart1TxBufferRemaining,f	;volatile
 29150                           
 29151                           ;mcc_generated_files/eusart1.c: 218:     }
 29152     1425  2C28               	goto	i1l1889
 29153     1426                     i1l1886:	
 29154                           ;mcc_generated_files/eusart1.c: 219:     else
 29155                           
 29156                           
 29157                           ;mcc_generated_files/eusart1.c: 220:     {;mcc_generated_files/eusart1.c: 221:         P
      +                          IE3bits.TX1IE = 0;
 29158     1426  014E               	movlb	14	; select bank14
 29159     1427  1219               	bcf	25,4	;volatile
 29160     1428                     i1l1889:
 29161     1428  0008               	return
 29162     1429                     __end_of_EUSART1_Transmit_ISR:
 29163                           
 29164                           	psect	text166
 29165     13E4                     __ptext166:	
 29166 ;; *************** function _EUSART2_Transmit_ISR *****************
 29167 ;; Defined at:
 29168 ;;		line 197 in file "mcc_generated_files/eusart2.c"
 29169 ;; Parameters:    Size  Location     Type
 29170 ;;		None
 29171 ;; Auto vars:     Size  Location     Type
 29172 ;;		None
 29173 ;; Return value:  Size  Location     Type
 29174 ;;                  1    wreg      void 
 29175 ;; Registers used:
 29176 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 29177 ;; Tracked objects:
 29178 ;;		On entry : 0/0
 29179 ;;		On exit  : 0/0
 29180 ;;		Unchanged: 0/0
 29181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 29182 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29183 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29184 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29185 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29186 ;;Total ram usage:        1 bytes
 29187 ;; Hardware stack levels used: 1
 29188 ;; This function calls:
 29189 ;;		Nothing
 29190 ;; This function is called by:
 29191 ;;		_EUSART2_Initialize
 29192 ;;		_INTERRUPT_InterruptManager
 29193 ;; This function uses a non-reentrant model
 29194 ;;
 29195                           
 29196     13E4                     _EUSART2_Transmit_ISR:	
 29197                           ;psect for function _EUSART2_Transmit_ISR
 29198                           
 29199     13E4                     i1l10350:	
 29200                           ;incstack = 0
 29201                           ; Regs used in _EUSART2_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 29202                           
 29203                           
 29204                           ;mcc_generated_files/eusart2.c: 201:     if(sizeof(eusart2TxBuffer) > eusart2TxBufferRem
      +                          aining)
 29205     13E4  3008               	movlw	8
 29206     13E5  0140               	movlb	0	; select bank0
 29207     13E6  025A               	subwf	_eusart2TxBufferRemaining,w	;volatile
 29208     13E7  1803               	skipnc
 29209     13E8  2BEA               	goto	u701_21
 29210     13E9  2BEB               	goto	u701_20
 29211     13EA                     u701_21:
 29212     13EA  2C03               	goto	i1l1736
 29213     13EB                     u701_20:
 29214     13EB                     i1l10352:
 29215                           
 29216                           ;mcc_generated_files/eusart2.c: 202:     {;mcc_generated_files/eusart2.c: 203:         T
      +                          X2REG = eusart2TxBuffer[eusart2TxTail++];
 29217     13EB  085B               	movf	_eusart2TxTail,w
 29218     13EC  3ED6               	addlw	(low (_eusart2TxBuffer| 0))& (0+255)
 29219     13ED  0086               	movwf	6
 29220     13EE  0187               	clrf	7
 29221     13EF  0801               	movf	1,w
 29222     13F0  0154               	movlb	20	; select bank20
 29223     13F1  009A               	movwf	26	;volatile
 29224     13F2                     i1l10354:
 29225     13F2  3001               	movlw	1
 29226     13F3  00F0               	movwf	??_EUSART2_Transmit_ISR
 29227     13F4  0870               	movf	??_EUSART2_Transmit_ISR,w
 29228     13F5  0140               	movlb	0	; select bank0
 29229     13F6  07DB               	addwf	_eusart2TxTail,f	;volatile
 29230     13F7                     i1l10356:
 29231                           
 29232                           ;mcc_generated_files/eusart2.c: 204:         if(sizeof(eusart2TxBuffer) <= eusart2TxTail
      +                          )
 29233     13F7  3008               	movlw	8
 29234     13F8  025B               	subwf	_eusart2TxTail,w	;volatile
 29235     13F9  1C03               	skipc
 29236     13FA  2BFC               	goto	u702_21
 29237     13FB  2BFD               	goto	u702_20
 29238     13FC                     u702_21:
 29239     13FC  2BFE               	goto	i1l10360
 29240     13FD                     u702_20:
 29241     13FD                     i1l10358:
 29242                           
 29243                           ;mcc_generated_files/eusart2.c: 205:         {;mcc_generated_files/eusart2.c: 206:      
      +                                 eusart2TxTail = 0;
 29244     13FD  01DB               	clrf	_eusart2TxTail	;volatile
 29245     13FE                     i1l10360:
 29246                           
 29247                           ;mcc_generated_files/eusart2.c: 208:         eusart2TxBufferRemaining++;
 29248     13FE  3001               	movlw	1
 29249     13FF  00F0               	movwf	??_EUSART2_Transmit_ISR
 29250     1400  0870               	movf	??_EUSART2_Transmit_ISR,w
 29251     1401  07DA               	addwf	_eusart2TxBufferRemaining,f	;volatile
 29252                           
 29253                           ;mcc_generated_files/eusart2.c: 209:     }
 29254     1402  2C05               	goto	i1l1739
 29255     1403                     i1l1736:	
 29256                           ;mcc_generated_files/eusart2.c: 210:     else
 29257                           
 29258                           
 29259                           ;mcc_generated_files/eusart2.c: 211:     {;mcc_generated_files/eusart2.c: 212:         P
      +                          IE3bits.TX2IE = 0;
 29260     1403  014E               	movlb	14	; select bank14
 29261     1404  1319               	bcf	25,6	;volatile
 29262     1405                     i1l1739:
 29263     1405  0008               	return
 29264     1406                     __end_of_EUSART2_Transmit_ISR:
 29265                           
 29266                           	psect	text167
 29267     0886                     __ptext167:	
 29268 ;; *************** function _EUSART1_Receive_ISR *****************
 29269 ;; Defined at:
 29270 ;;		line 225 in file "mcc_generated_files/eusart1.c"
 29271 ;; Parameters:    Size  Location     Type
 29272 ;;		None
 29273 ;; Auto vars:     Size  Location     Type
 29274 ;;		None
 29275 ;; Return value:  Size  Location     Type
 29276 ;;                  1    wreg      void 
 29277 ;; Registers used:
 29278 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 29279 ;; Tracked objects:
 29280 ;;		On entry : 0/0
 29281 ;;		On exit  : 0/0
 29282 ;;		Unchanged: 0/0
 29283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 29284 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29285 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29286 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29287 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29288 ;;Total ram usage:        0 bytes
 29289 ;; Hardware stack levels used: 1
 29290 ;; Hardware stack levels required when called: 2
 29291 ;; This function calls:
 29292 ;;		NULL
 29293 ;;		_EUSART1_DefaultErrorHandler
 29294 ;;		_EUSART1_DefaultFramingErrorHandler
 29295 ;;		_EUSART1_DefaultOverrunErrorHandler
 29296 ;;		_EUSART1_RxDataHandler
 29297 ;; This function is called by:
 29298 ;;		_EUSART1_Initialize
 29299 ;;		_INTERRUPT_InterruptManager
 29300 ;; This function uses a non-reentrant model
 29301 ;;
 29302                           
 29303     0886                     _EUSART1_Receive_ISR:	
 29304                           ;psect for function _EUSART1_Receive_ISR
 29305                           
 29306     0886                     i1l10394:	
 29307                           ;incstack = 0
 29308 ;; hardware stack exceeded
 29309                           ; Regs used in _EUSART1_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 29310                           
 29311                           
 29312                           ;mcc_generated_files/eusart1.c: 228:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
 29313     0886  0140               	movlb	0	; select bank0
 29314     0887  0854               	movf	_eusart1RxHead,w	;volatile
 29315     0888  3EBE               	addlw	(low (_eusart1RxStatusBuffer| 0))& (0+255)
 29316     0889  0086               	movwf	6
 29317     088A  0187               	clrf	7
 29318     088B  0181               	clrf	1
 29319     088C                     i1l10396:
 29320                           
 29321                           ;mcc_generated_files/eusart1.c: 230:     if(RC1STAbits.FERR){
 29322     088C  0142               	movlb	2	; select bank2
 29323     088D  1D1D               	btfss	29,2	;volatile
 29324     088E  2890               	goto	u708_21
 29325     088F  2891               	goto	u708_20
 29326     0890                     u708_21:
 29327     0890  289D               	goto	i1l10402
 29328     0891                     u708_20:
 29329     0891                     i1l10398:
 29330                           
 29331                           ;mcc_generated_files/eusart1.c: 231:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
 29332     0891  0140               	movlb	0	; select bank0
 29333     0892  0854               	movf	_eusart1RxHead,w	;volatile
 29334     0893  3EBE               	addlw	(low (_eusart1RxStatusBuffer| 0))& (0+255)
 29335     0894  0086               	movwf	6
 29336     0895  0187               	clrf	7
 29337     0896  1481               	bsf	1,1
 29338     0897                     i1l10400:
 29339                           
 29340                           ;mcc_generated_files/eusart1.c: 232:         EUSART1_FramingErrorHandler();
 29341     0897  0142               	movlb	2	; select bank2
 29342     0898  0859               	movf	(_EUSART1_FramingErrorHandler+1)^(0+256),w
 29343     0899  008A               	movwf	10
 29344     089A  0858               	movf	_EUSART1_FramingErrorHandler^(0+256),w
 29345     089B  000A               	callw
 29346     089C  3188               	pagesel	$
 29347     089D                     i1l10402:
 29348                           
 29349                           ;mcc_generated_files/eusart1.c: 235:     if(RC1STAbits.OERR){
 29350     089D  0142               	movlb	2	; select bank2
 29351     089E  1C9D               	btfss	29,1	;volatile
 29352     089F  28A1               	goto	u709_21
 29353     08A0  28A2               	goto	u709_20
 29354     08A1                     u709_21:
 29355     08A1  28AE               	goto	i1l10408
 29356     08A2                     u709_20:
 29357     08A2                     i1l10404:
 29358                           
 29359                           ;mcc_generated_files/eusart1.c: 236:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
 29360     08A2  0140               	movlb	0	; select bank0
 29361     08A3  0854               	movf	_eusart1RxHead,w	;volatile
 29362     08A4  3EBE               	addlw	(low (_eusart1RxStatusBuffer| 0))& (0+255)
 29363     08A5  0086               	movwf	6
 29364     08A6  0187               	clrf	7
 29365     08A7  1501               	bsf	1,2
 29366     08A8                     i1l10406:
 29367                           
 29368                           ;mcc_generated_files/eusart1.c: 237:         EUSART1_OverrunErrorHandler();
 29369     08A8  0142               	movlb	2	; select bank2
 29370     08A9  0857               	movf	(_EUSART1_OverrunErrorHandler+1)^(0+256),w
 29371     08AA  008A               	movwf	10
 29372     08AB  0856               	movf	_EUSART1_OverrunErrorHandler^(0+256),w
 29373     08AC  000A               	callw
 29374     08AD  3188               	pagesel	$
 29375     08AE                     i1l10408:
 29376                           
 29377                           ;mcc_generated_files/eusart1.c: 240:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
 29378     08AE  0140               	movlb	0	; select bank0
 29379     08AF  0854               	movf	_eusart1RxHead,w	;volatile
 29380     08B0  3EBE               	addlw	(low (_eusart1RxStatusBuffer| 0))& (0+255)
 29381     08B1  0086               	movwf	6
 29382     08B2  0187               	clrf	7
 29383     08B3  0801               	movf	1,w
 29384     08B4  1903               	btfsc	3,2
 29385     08B5  28B7               	goto	u710_21
 29386     08B6  28B8               	goto	u710_20
 29387     08B7                     u710_21:
 29388     08B7  28BF               	goto	i1l10412
 29389     08B8                     u710_20:
 29390     08B8                     i1l10410:
 29391                           
 29392                           ;mcc_generated_files/eusart1.c: 241:         EUSART1_ErrorHandler();
 29393     08B8  0142               	movlb	2	; select bank2
 29394     08B9  0855               	movf	(_EUSART1_ErrorHandler+1)^(0+256),w
 29395     08BA  008A               	movwf	10
 29396     08BB  0854               	movf	_EUSART1_ErrorHandler^(0+256),w
 29397     08BC  000A               	callw
 29398     08BD  3188               	pagesel	$
 29399                           
 29400                           ;mcc_generated_files/eusart1.c: 242:     } else {
 29401     08BE  28C2               	goto	i1l1896
 29402     08BF                     i1l10412:
 29403                           
 29404                           ;mcc_generated_files/eusart1.c: 243:         EUSART1_RxDataHandler();
 29405     08BF  3193  2302  3188   	fcall	_EUSART1_RxDataHandler
 29406     08C2                     i1l1896:
 29407     08C2  0008               	return
 29408     08C3                     __end_of_EUSART1_Receive_ISR:
 29409                           
 29410                           	psect	text168
 29411     084D                     __ptext168:	
 29412 ;; *************** function _EUSART2_Receive_ISR *****************
 29413 ;; Defined at:
 29414 ;;		line 216 in file "mcc_generated_files/eusart2.c"
 29415 ;; Parameters:    Size  Location     Type
 29416 ;;		None
 29417 ;; Auto vars:     Size  Location     Type
 29418 ;;		None
 29419 ;; Return value:  Size  Location     Type
 29420 ;;                  1    wreg      void 
 29421 ;; Registers used:
 29422 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 29423 ;; Tracked objects:
 29424 ;;		On entry : 0/0
 29425 ;;		On exit  : 0/0
 29426 ;;		Unchanged: 0/0
 29427 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 29428 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29429 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29430 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29431 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29432 ;;Total ram usage:        0 bytes
 29433 ;; Hardware stack levels used: 1
 29434 ;; Hardware stack levels required when called: 2
 29435 ;; This function calls:
 29436 ;;		NULL
 29437 ;;		_EUSART2_DefaultErrorHandler
 29438 ;;		_EUSART2_DefaultFramingErrorHandler
 29439 ;;		_EUSART2_DefaultOverrunErrorHandler
 29440 ;;		_EUSART2_RxDataHandler
 29441 ;; This function is called by:
 29442 ;;		_EUSART2_Initialize
 29443 ;;		_INTERRUPT_InterruptManager
 29444 ;; This function uses a non-reentrant model
 29445 ;;
 29446                           
 29447     084D                     _EUSART2_Receive_ISR:	
 29448                           ;psect for function _EUSART2_Receive_ISR
 29449                           
 29450     084D                     i1l10362:	
 29451                           ;incstack = 0
 29452 ;; hardware stack exceeded
 29453                           ; Regs used in _EUSART2_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 29454                           
 29455                           
 29456                           ;mcc_generated_files/eusart2.c: 219:     eusart2RxStatusBuffer[eusart2RxHead].status = 0
      +                          ;
 29457     084D  087C               	movf	_eusart2RxHead,w	;volatile
 29458     084E  3EC6               	addlw	(low (_eusart2RxStatusBuffer| 0))& (0+255)
 29459     084F  0086               	movwf	6
 29460     0850  0187               	clrf	7
 29461     0851  0181               	clrf	1
 29462     0852                     i1l10364:
 29463                           
 29464                           ;mcc_generated_files/eusart2.c: 221:     if(RC2STAbits.FERR){
 29465     0852  0154               	movlb	20	; select bank20
 29466     0853  1D1D               	btfss	29,2	;volatile
 29467     0854  2856               	goto	u703_21
 29468     0855  2857               	goto	u703_20
 29469     0856                     u703_21:
 29470     0856  2862               	goto	i1l10370
 29471     0857                     u703_20:
 29472     0857                     i1l10366:
 29473                           
 29474                           ;mcc_generated_files/eusart2.c: 222:         eusart2RxStatusBuffer[eusart2RxHead].ferr =
      +                           1;
 29475     0857  087C               	movf	_eusart2RxHead,w	;volatile
 29476     0858  3EC6               	addlw	(low (_eusart2RxStatusBuffer| 0))& (0+255)
 29477     0859  0086               	movwf	6
 29478     085A  0187               	clrf	7
 29479     085B  1481               	bsf	1,1
 29480     085C                     i1l10368:
 29481                           
 29482                           ;mcc_generated_files/eusart2.c: 223:         EUSART2_FramingErrorHandler();
 29483     085C  0142               	movlb	2	; select bank2
 29484     085D  0863               	movf	(_EUSART2_FramingErrorHandler+1)^(0+256),w
 29485     085E  008A               	movwf	10
 29486     085F  0862               	movf	_EUSART2_FramingErrorHandler^(0+256),w
 29487     0860  000A               	callw
 29488     0861  3188               	pagesel	$
 29489     0862                     i1l10370:
 29490                           
 29491                           ;mcc_generated_files/eusart2.c: 226:     if(RC2STAbits.OERR){
 29492     0862  0154               	movlb	20	; select bank20
 29493     0863  1C9D               	btfss	29,1	;volatile
 29494     0864  2866               	goto	u704_21
 29495     0865  2867               	goto	u704_20
 29496     0866                     u704_21:
 29497     0866  2872               	goto	i1l10376
 29498     0867                     u704_20:
 29499     0867                     i1l10372:
 29500                           
 29501                           ;mcc_generated_files/eusart2.c: 227:         eusart2RxStatusBuffer[eusart2RxHead].oerr =
      +                           1;
 29502     0867  087C               	movf	_eusart2RxHead,w	;volatile
 29503     0868  3EC6               	addlw	(low (_eusart2RxStatusBuffer| 0))& (0+255)
 29504     0869  0086               	movwf	6
 29505     086A  0187               	clrf	7
 29506     086B  1501               	bsf	1,2
 29507     086C                     i1l10374:
 29508                           
 29509                           ;mcc_generated_files/eusart2.c: 228:         EUSART2_OverrunErrorHandler();
 29510     086C  0142               	movlb	2	; select bank2
 29511     086D  0861               	movf	(_EUSART2_OverrunErrorHandler+1)^(0+256),w
 29512     086E  008A               	movwf	10
 29513     086F  0860               	movf	_EUSART2_OverrunErrorHandler^(0+256),w
 29514     0870  000A               	callw
 29515     0871  3188               	pagesel	$
 29516     0872                     i1l10376:
 29517                           
 29518                           ;mcc_generated_files/eusart2.c: 231:     if(eusart2RxStatusBuffer[eusart2RxHead].status)
      +                          {
 29519     0872  087C               	movf	_eusart2RxHead,w	;volatile
 29520     0873  3EC6               	addlw	(low (_eusart2RxStatusBuffer| 0))& (0+255)
 29521     0874  0086               	movwf	6
 29522     0875  0187               	clrf	7
 29523     0876  0801               	movf	1,w
 29524     0877  1903               	btfsc	3,2
 29525     0878  287A               	goto	u705_21
 29526     0879  287B               	goto	u705_20
 29527     087A                     u705_21:
 29528     087A  2882               	goto	i1l10380
 29529     087B                     u705_20:
 29530     087B                     i1l10378:
 29531                           
 29532                           ;mcc_generated_files/eusart2.c: 232:         EUSART2_ErrorHandler();
 29533     087B  0142               	movlb	2	; select bank2
 29534     087C  085F               	movf	(_EUSART2_ErrorHandler+1)^(0+256),w
 29535     087D  008A               	movwf	10
 29536     087E  085E               	movf	_EUSART2_ErrorHandler^(0+256),w
 29537     087F  000A               	callw
 29538     0880  3188               	pagesel	$
 29539                           
 29540                           ;mcc_generated_files/eusart2.c: 233:     } else {
 29541     0881  2885               	goto	i1l1746
 29542     0882                     i1l10380:
 29543                           
 29544                           ;mcc_generated_files/eusart2.c: 234:         EUSART2_RxDataHandler();
 29545     0882  3192  226F  3188   	fcall	_EUSART2_RxDataHandler
 29546     0885                     i1l1746:
 29547     0885  0008               	return
 29548     0886                     __end_of_EUSART2_Receive_ISR:
 29549                           
 29550                           	psect	text169
 29551     1E8B                     __ptext169:	
 29552 ;; *************** function _EUSART2_DefaultOverrunErrorHandler *****************
 29553 ;; Defined at:
 29554 ;;		line 252 in file "mcc_generated_files/eusart2.c"
 29555 ;; Parameters:    Size  Location     Type
 29556 ;;		None
 29557 ;; Auto vars:     Size  Location     Type
 29558 ;;		None
 29559 ;; Return value:  Size  Location     Type
 29560 ;;                  1    wreg      void 
 29561 ;; Registers used:
 29562 ;;		None
 29563 ;; Tracked objects:
 29564 ;;		On entry : 0/0
 29565 ;;		On exit  : 0/0
 29566 ;;		Unchanged: 0/0
 29567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 29568 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29569 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29571 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29572 ;;Total ram usage:        0 bytes
 29573 ;; Hardware stack levels used: 1
 29574 ;; This function calls:
 29575 ;;		Nothing
 29576 ;; This function is called by:
 29577 ;;		_EUSART2_Initialize
 29578 ;;		_EUSART2_Receive_ISR
 29579 ;; This function uses a non-reentrant model
 29580 ;;
 29581                           
 29582     1E8B                     _EUSART2_DefaultOverrunErrorHandler:	
 29583                           ;psect for function _EUSART2_DefaultOverrunErrorHandler
 29584                           
 29585     1E8B                     i1l9744:	
 29586                           ;incstack = 0
 29587 ;; hardware stack exceeded
 29588                           ; Regs used in _EUSART2_DefaultOverrunErrorHandler: []
 29589                           
 29590                           
 29591                           ;mcc_generated_files/eusart2.c: 255:     RC2STAbits.CREN = 0;
 29592     1E8B  0154               	movlb	20	; select bank20
 29593     1E8C  121D               	bcf	29,4	;volatile
 29594                           
 29595                           ;mcc_generated_files/eusart2.c: 256:     RC2STAbits.CREN = 1;
 29596     1E8D  161D               	bsf	29,4	;volatile
 29597     1E8E                     i1l1756:
 29598     1E8E  0008               	return
 29599     1E8F                     __end_of_EUSART2_DefaultOverrunErrorHandler:
 29600                           
 29601                           	psect	text170
 29602     1E5F                     __ptext170:	
 29603 ;; *************** function _EUSART2_DefaultFramingErrorHandler *****************
 29604 ;; Defined at:
 29605 ;;		line 250 in file "mcc_generated_files/eusart2.c"
 29606 ;; Parameters:    Size  Location     Type
 29607 ;;		None
 29608 ;; Auto vars:     Size  Location     Type
 29609 ;;		None
 29610 ;; Return value:  Size  Location     Type
 29611 ;;                  1    wreg      void 
 29612 ;; Registers used:
 29613 ;;		None
 29614 ;; Tracked objects:
 29615 ;;		On entry : 0/0
 29616 ;;		On exit  : 0/0
 29617 ;;		Unchanged: 0/0
 29618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 29619 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29620 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29622 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29623 ;;Total ram usage:        0 bytes
 29624 ;; Hardware stack levels used: 1
 29625 ;; This function calls:
 29626 ;;		Nothing
 29627 ;; This function is called by:
 29628 ;;		_EUSART2_Initialize
 29629 ;;		_EUSART2_Receive_ISR
 29630 ;; This function uses a non-reentrant model
 29631 ;;
 29632                           
 29633     1E5F                     _EUSART2_DefaultFramingErrorHandler:	
 29634                           ;psect for function _EUSART2_DefaultFramingErrorHandler
 29635                           
 29636     1E5F                     i1l1753:	
 29637                           ;incstack = 0
 29638 ;; hardware stack exceeded
 29639                           ; Regs used in _EUSART2_DefaultFramingErrorHandler: []
 29640                           
 29641     1E5F  0008               	return
 29642     1E60                     __end_of_EUSART2_DefaultFramingErrorHandler:
 29643                           
 29644                           	psect	text171
 29645     1E87                     __ptext171:	
 29646 ;; *************** function _EUSART2_DefaultErrorHandler *****************
 29647 ;; Defined at:
 29648 ;;		line 260 in file "mcc_generated_files/eusart2.c"
 29649 ;; Parameters:    Size  Location     Type
 29650 ;;		None
 29651 ;; Auto vars:     Size  Location     Type
 29652 ;;		None
 29653 ;; Return value:  Size  Location     Type
 29654 ;;                  1    wreg      void 
 29655 ;; Registers used:
 29656 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 29657 ;; Tracked objects:
 29658 ;;		On entry : 0/0
 29659 ;;		On exit  : 0/0
 29660 ;;		Unchanged: 0/0
 29661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 29662 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29663 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29665 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29666 ;;Total ram usage:        0 bytes
 29667 ;; Hardware stack levels used: 1
 29668 ;; Hardware stack levels required when called: 1
 29669 ;; This function calls:
 29670 ;;		_EUSART2_RxDataHandler
 29671 ;; This function is called by:
 29672 ;;		_EUSART2_Initialize
 29673 ;;		_EUSART2_Receive_ISR
 29674 ;; This function uses a non-reentrant model
 29675 ;;
 29676                           
 29677     1E87                     _EUSART2_DefaultErrorHandler:	
 29678                           ;psect for function _EUSART2_DefaultErrorHandler
 29679                           
 29680     1E87                     i1l9746:	
 29681                           ;incstack = 0
 29682 ;; hardware stack exceeded
 29683                           ; Regs used in _EUSART2_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 29684                           
 29685                           
 29686                           ;mcc_generated_files/eusart2.c: 261:     EUSART2_RxDataHandler();
 29687     1E87  3192  226F  319E   	fcall	_EUSART2_RxDataHandler
 29688     1E8A                     i1l1759:
 29689     1E8A  0008               	return
 29690     1E8B                     __end_of_EUSART2_DefaultErrorHandler:
 29691                           
 29692                           	psect	text172
 29693     126F                     __ptext172:	
 29694 ;; *************** function _EUSART2_RxDataHandler *****************
 29695 ;; Defined at:
 29696 ;;		line 240 in file "mcc_generated_files/eusart2.c"
 29697 ;; Parameters:    Size  Location     Type
 29698 ;;		None
 29699 ;; Auto vars:     Size  Location     Type
 29700 ;;		None
 29701 ;; Return value:  Size  Location     Type
 29702 ;;                  1    wreg      void 
 29703 ;; Registers used:
 29704 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 29705 ;; Tracked objects:
 29706 ;;		On entry : 0/0
 29707 ;;		On exit  : 0/0
 29708 ;;		Unchanged: 0/0
 29709 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 29710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29712 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29713 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29714 ;;Total ram usage:        1 bytes
 29715 ;; Hardware stack levels used: 1
 29716 ;; This function calls:
 29717 ;;		Nothing
 29718 ;; This function is called by:
 29719 ;;		_EUSART2_Receive_ISR
 29720 ;;		_EUSART2_DefaultErrorHandler
 29721 ;; This function uses a non-reentrant model
 29722 ;;
 29723                           
 29724     126F                     _EUSART2_RxDataHandler:	
 29725                           ;psect for function _EUSART2_RxDataHandler
 29726                           
 29727     126F                     i1l9056:	
 29728                           ;incstack = 0
 29729 ;; hardware stack exceeded
 29730                           ; Regs used in _EUSART2_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
 29731                           
 29732                           
 29733                           ;mcc_generated_files/eusart2.c: 242:     eusart2RxBuffer[eusart2RxHead++] = RC2REG;
 29734     126F  087C               	movf	_eusart2RxHead,w
 29735     1270  3ECE               	addlw	(low (_eusart2RxBuffer| 0))& (0+255)
 29736     1271  0086               	movwf	6
 29737     1272  0187               	clrf	7
 29738     1273  0154               	movlb	20	; select bank20
 29739     1274  0819               	movf	25,w	;volatile
 29740     1275  0081               	movwf	1
 29741     1276                     i1l9058:
 29742     1276  3001               	movlw	1
 29743     1277  00F0               	movwf	??_EUSART2_RxDataHandler
 29744     1278  0870               	movf	??_EUSART2_RxDataHandler,w
 29745     1279  07FC               	addwf	_eusart2RxHead,f	;volatile
 29746     127A                     i1l9060:
 29747                           
 29748                           ;mcc_generated_files/eusart2.c: 243:     if(sizeof(eusart2RxBuffer) <= eusart2RxHead)
 29749     127A  3008               	movlw	8
 29750     127B  027C               	subwf	_eusart2RxHead,w	;volatile
 29751     127C  1C03               	skipc
 29752     127D  2A7F               	goto	u563_21
 29753     127E  2A80               	goto	u563_20
 29754     127F                     u563_21:
 29755     127F  2A81               	goto	i1l9064
 29756     1280                     u563_20:
 29757     1280                     i1l9062:
 29758                           
 29759                           ;mcc_generated_files/eusart2.c: 244:     {;mcc_generated_files/eusart2.c: 245:         e
      +                          usart2RxHead = 0;
 29760     1280  01FC               	clrf	_eusart2RxHead	;volatile
 29761     1281                     i1l9064:
 29762                           
 29763                           ;mcc_generated_files/eusart2.c: 247:     eusart2RxCount++;
 29764     1281  3001               	movlw	1
 29765     1282  00F0               	movwf	??_EUSART2_RxDataHandler
 29766     1283  0870               	movf	??_EUSART2_RxDataHandler,w
 29767     1284  0140               	movlb	0	; select bank0
 29768     1285  07D8               	addwf	_eusart2RxCount,f	;volatile
 29769     1286                     i1l1750:
 29770     1286  0008               	return
 29771     1287                     __end_of_EUSART2_RxDataHandler:
 29772                           
 29773                           	psect	text173
 29774     1E83                     __ptext173:	
 29775 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
 29776 ;; Defined at:
 29777 ;;		line 261 in file "mcc_generated_files/eusart1.c"
 29778 ;; Parameters:    Size  Location     Type
 29779 ;;		None
 29780 ;; Auto vars:     Size  Location     Type
 29781 ;;		None
 29782 ;; Return value:  Size  Location     Type
 29783 ;;                  1    wreg      void 
 29784 ;; Registers used:
 29785 ;;		None
 29786 ;; Tracked objects:
 29787 ;;		On entry : 0/0
 29788 ;;		On exit  : 0/0
 29789 ;;		Unchanged: 0/0
 29790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 29791 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29792 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29794 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29795 ;;Total ram usage:        0 bytes
 29796 ;; Hardware stack levels used: 1
 29797 ;; This function calls:
 29798 ;;		Nothing
 29799 ;; This function is called by:
 29800 ;;		_EUSART1_Initialize
 29801 ;;		_EUSART1_Receive_ISR
 29802 ;; This function uses a non-reentrant model
 29803 ;;
 29804                           
 29805     1E83                     _EUSART1_DefaultOverrunErrorHandler:	
 29806                           ;psect for function _EUSART1_DefaultOverrunErrorHandler
 29807                           
 29808     1E83                     i1l9780:	
 29809                           ;incstack = 0
 29810 ;; hardware stack exceeded
 29811                           ; Regs used in _EUSART1_DefaultOverrunErrorHandler: []
 29812                           
 29813                           
 29814                           ;mcc_generated_files/eusart1.c: 264:     RC1STAbits.CREN = 0;
 29815     1E83  0142               	movlb	2	; select bank2
 29816     1E84  121D               	bcf	29,4	;volatile
 29817                           
 29818                           ;mcc_generated_files/eusart1.c: 265:     RC1STAbits.CREN = 1;
 29819     1E85  161D               	bsf	29,4	;volatile
 29820     1E86                     i1l1906:
 29821     1E86  0008               	return
 29822     1E87                     __end_of_EUSART1_DefaultOverrunErrorHandler:
 29823                           
 29824                           	psect	text174
 29825     1E5E                     __ptext174:	
 29826 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
 29827 ;; Defined at:
 29828 ;;		line 259 in file "mcc_generated_files/eusart1.c"
 29829 ;; Parameters:    Size  Location     Type
 29830 ;;		None
 29831 ;; Auto vars:     Size  Location     Type
 29832 ;;		None
 29833 ;; Return value:  Size  Location     Type
 29834 ;;                  1    wreg      void 
 29835 ;; Registers used:
 29836 ;;		None
 29837 ;; Tracked objects:
 29838 ;;		On entry : 0/0
 29839 ;;		On exit  : 0/0
 29840 ;;		Unchanged: 0/0
 29841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 29842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29843 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29845 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29846 ;;Total ram usage:        0 bytes
 29847 ;; Hardware stack levels used: 1
 29848 ;; This function calls:
 29849 ;;		Nothing
 29850 ;; This function is called by:
 29851 ;;		_EUSART1_Initialize
 29852 ;;		_EUSART1_Receive_ISR
 29853 ;; This function uses a non-reentrant model
 29854 ;;
 29855                           
 29856     1E5E                     _EUSART1_DefaultFramingErrorHandler:	
 29857                           ;psect for function _EUSART1_DefaultFramingErrorHandler
 29858                           
 29859     1E5E                     i1l1903:	
 29860                           ;incstack = 0
 29861 ;; hardware stack exceeded
 29862                           ; Regs used in _EUSART1_DefaultFramingErrorHandler: []
 29863                           
 29864     1E5E  0008               	return
 29865     1E5F                     __end_of_EUSART1_DefaultFramingErrorHandler:
 29866                           
 29867                           	psect	text175
 29868     1E7F                     __ptext175:	
 29869 ;; *************** function _EUSART1_DefaultErrorHandler *****************
 29870 ;; Defined at:
 29871 ;;		line 269 in file "mcc_generated_files/eusart1.c"
 29872 ;; Parameters:    Size  Location     Type
 29873 ;;		None
 29874 ;; Auto vars:     Size  Location     Type
 29875 ;;		None
 29876 ;; Return value:  Size  Location     Type
 29877 ;;                  1    wreg      void 
 29878 ;; Registers used:
 29879 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 29880 ;; Tracked objects:
 29881 ;;		On entry : 0/0
 29882 ;;		On exit  : 0/0
 29883 ;;		Unchanged: 0/0
 29884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 29885 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29886 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29888 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29889 ;;Total ram usage:        0 bytes
 29890 ;; Hardware stack levels used: 1
 29891 ;; Hardware stack levels required when called: 1
 29892 ;; This function calls:
 29893 ;;		_EUSART1_RxDataHandler
 29894 ;; This function is called by:
 29895 ;;		_EUSART1_Initialize
 29896 ;;		_EUSART1_Receive_ISR
 29897 ;; This function uses a non-reentrant model
 29898 ;;
 29899                           
 29900     1E7F                     _EUSART1_DefaultErrorHandler:	
 29901                           ;psect for function _EUSART1_DefaultErrorHandler
 29902                           
 29903     1E7F                     i1l9782:	
 29904                           ;incstack = 0
 29905 ;; hardware stack exceeded
 29906                           ; Regs used in _EUSART1_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 29907                           
 29908                           
 29909                           ;mcc_generated_files/eusart1.c: 270:     EUSART1_RxDataHandler();
 29910     1E7F  3193  2302  319E   	fcall	_EUSART1_RxDataHandler
 29911     1E82                     i1l1909:
 29912     1E82  0008               	return
 29913     1E83                     __end_of_EUSART1_DefaultErrorHandler:
 29914                           
 29915                           	psect	text176
 29916     1302                     __ptext176:	
 29917 ;; *************** function _EUSART1_RxDataHandler *****************
 29918 ;; Defined at:
 29919 ;;		line 249 in file "mcc_generated_files/eusart1.c"
 29920 ;; Parameters:    Size  Location     Type
 29921 ;;		None
 29922 ;; Auto vars:     Size  Location     Type
 29923 ;;		None
 29924 ;; Return value:  Size  Location     Type
 29925 ;;                  1    wreg      void 
 29926 ;; Registers used:
 29927 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 29928 ;; Tracked objects:
 29929 ;;		On entry : 0/0
 29930 ;;		On exit  : 0/0
 29931 ;;		Unchanged: 0/0
 29932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 29933 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29934 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29935 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29936 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29937 ;;Total ram usage:        1 bytes
 29938 ;; Hardware stack levels used: 1
 29939 ;; This function calls:
 29940 ;;		Nothing
 29941 ;; This function is called by:
 29942 ;;		_EUSART1_Receive_ISR
 29943 ;;		_EUSART1_DefaultErrorHandler
 29944 ;; This function uses a non-reentrant model
 29945 ;;
 29946                           
 29947     1302                     _EUSART1_RxDataHandler:	
 29948                           ;psect for function _EUSART1_RxDataHandler
 29949                           
 29950     1302                     i1l9076:	
 29951                           ;incstack = 0
 29952 ;; hardware stack exceeded
 29953                           ; Regs used in _EUSART1_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
 29954                           
 29955                           
 29956                           ;mcc_generated_files/eusart1.c: 251:     eusart1RxBuffer[eusart1RxHead++] = RC1REG;
 29957     1302  0140               	movlb	0	; select bank0
 29958     1303  0854               	movf	_eusart1RxHead,w
 29959     1304  3E44               	addlw	(low (_eusart1RxBuffer| (0+256)))& (0+255)
 29960     1305  0086               	movwf	6
 29961     1306  3001               	movlw	1	; select bank2/3
 29962     1307  0087               	movwf	7
 29963     1308  0142               	movlb	2	; select bank2
 29964     1309  0819               	movf	25,w	;volatile
 29965     130A  0081               	movwf	1
 29966     130B                     i1l9078:
 29967     130B  3001               	movlw	1
 29968     130C  00F0               	movwf	??_EUSART1_RxDataHandler
 29969     130D  0870               	movf	??_EUSART1_RxDataHandler,w
 29970     130E  0140               	movlb	0	; select bank0
 29971     130F  07D4               	addwf	_eusart1RxHead,f	;volatile
 29972     1310                     i1l9080:
 29973                           
 29974                           ;mcc_generated_files/eusart1.c: 252:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
 29975     1310  3008               	movlw	8
 29976     1311  0254               	subwf	_eusart1RxHead,w	;volatile
 29977     1312  1C03               	skipc
 29978     1313  2B15               	goto	u564_21
 29979     1314  2B16               	goto	u564_20
 29980     1315                     u564_21:
 29981     1315  2B17               	goto	i1l9084
 29982     1316                     u564_20:
 29983     1316                     i1l9082:
 29984                           
 29985                           ;mcc_generated_files/eusart1.c: 253:     {;mcc_generated_files/eusart1.c: 254:         e
      +                          usart1RxHead = 0;
 29986     1316  01D4               	clrf	_eusart1RxHead	;volatile
 29987     1317                     i1l9084:
 29988                           
 29989                           ;mcc_generated_files/eusart1.c: 256:     eusart1RxCount++;
 29990     1317  3001               	movlw	1
 29991     1318  00F0               	movwf	??_EUSART1_RxDataHandler
 29992     1319  0870               	movf	??_EUSART1_RxDataHandler,w
 29993     131A  07D2               	addwf	_eusart1RxCount,f	;volatile
 29994     131B                     i1l1900:
 29995     131B  0008               	return
 29996     131C                     __end_of_EUSART1_RxDataHandler:
 29997     007E                     btemp	set	126	;btemp
 29998     007E                     int$flags	set	126
 29999     007E                     wtemp0	set	126
 30000                           
 30001                           	psect	idloc
 30002                           
 30003                           ;Config register IDLOC0 @ 0x8000
 30004                           ;	unspecified, using default values
 30005     8000                     	org	32768
 30006     8000  3FFF               	dw	16383
 30007                           
 30008                           ;Config register IDLOC1 @ 0x8001
 30009                           ;	unspecified, using default values
 30010     8001                     	org	32769
 30011     8001  3FFF               	dw	16383
 30012                           
 30013                           ;Config register IDLOC2 @ 0x8002
 30014                           ;	unspecified, using default values
 30015     8002                     	org	32770
 30016     8002  3FFF               	dw	16383
 30017                           
 30018                           ;Config register IDLOC3 @ 0x8003
 30019                           ;	unspecified, using default values
 30020     8003                     	org	32771
 30021     8003  3FFF               	dw	16383
 30022                           
 30023                           	psect	config
 30024                           
 30025                           ;Config register CONFIG1 @ 0x8007
 30026                           ;	External Oscillator mode selection bits
 30027                           ;	FEXTOSC = OFF, Oscillator not enabled
 30028                           ;	Power-up default value for COSC bits
 30029                           ;	RSTOSC = HFINT1, HFINTOSC (1MHz)
 30030                           ;	Clock Out Enable bit
 30031                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; i/o or oscillator function on OSC2
 30032                           ;	Clock Switch Enable bit
 30033                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 30034                           ;	Fail-Safe Clock Monitor Enable bit
 30035                           ;	FCMEN = ON, FSCM timer enabled
 30036     8007                     	org	32775
 30037     8007  3FEC               	dw	16364
 30038                           
 30039                           ;Config register CONFIG2 @ 0x8008
 30040                           ;	Master Clear Enable bit
 30041                           ;	MCLRE = ON, MCLR pin is Master Clear function
 30042                           ;	Power-up Timer Enable bit
 30043                           ;	PWRTS = OFF, PWRT disabled
 30044                           ;	Low-Power BOR enable bit
 30045                           ;	LPBOREN = OFF, ULPBOR disabled
 30046                           ;	Brown-out reset enable bits
 30047                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
 30048                           ;	Brown-out Reset Voltage Selection
 30049                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V
 30050                           ;	Zero-cross detect disable
 30051                           ;	ZCDDIS = OFF, Zero-cross detect circuit is disabled at POR.
 30052                           ;	Peripheral Pin Select one-way control
 30053                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once in software
 30054                           ;	Stack Overflow/Underflow Reset Enable bit
 30055                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
 30056     8008                     	org	32776
 30057     8008  3FFF               	dw	16383
 30058                           
 30059                           ;Config register CONFIG3 @ 0x8009
 30060                           ;	WDT Period Select bits
 30061                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 30062                           ;	WDT operating mode
 30063                           ;	WDTE = OFF, WDT Disabled, SWDTEN is ignored
 30064                           ;	WDT Window Select bits
 30065                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 30066                           ;	WDT input clock selector
 30067                           ;	WDTCCS = SC, Software Control
 30068     8009                     	org	32777
 30069     8009  3F9F               	dw	16287
 30070                           
 30071                           ;Config register CONFIG4 @ 0x800A
 30072                           ;	Boot Block Size Selection bits
 30073                           ;	BBSIZE = BB512, 512 words boot block size
 30074                           ;	Boot Block Enable bit
 30075                           ;	BBEN = OFF, Boot Block disabled
 30076                           ;	SAF Enable bit
 30077                           ;	SAFEN = OFF, SAF disabled
 30078                           ;	Application Block Write Protection bit
 30079                           ;	WRTAPP = OFF, Application Block not write protected
 30080                           ;	Boot Block Write Protection bit
 30081                           ;	WRTB = OFF, Boot Block not write protected
 30082                           ;	Configuration Register Write Protection bit
 30083                           ;	WRTC = OFF, Configuration Register not write protected
 30084                           ;	Data EEPROM write protection bit
 30085                           ;	WRTD = OFF, Data EEPROM NOT write protected
 30086                           ;	Storage Area Flash Write Protection bit
 30087                           ;	WRTSAF = OFF, SAF not write protected
 30088                           ;	Low Voltage Programming Enable bit
 30089                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR.
 30090     800A                     	org	32778
 30091     800A  3FFF               	dw	16383
 30092                           
 30093                           ;Config register CONFIG5 @ 0x800B
 30094                           ;	UserNVM Program memory code protection bit
 30095                           ;	CP = OFF, UserNVM code protection disabled
 30096     800B                     	org	32779
 30097     800B  3FFF               	dw	16383

Data Sizes:
    Strings     29
    Constant    147
    Data        19
    BSS         466
    Persistent  54
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            80     45      80
    BANK1            80      0      80
    BANK2            80      1      71
    BANK3            80      0      17
    BANK4            80      0      64
    BANK5            80      0      80
    BANK6            80      0      80
    BANK7            80      0      80
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           80      0       0
    BANK24           80      0       0
    BANK25           32      0       0

Pointer List with Targets:

    asyncBuffer	PTR unsigned char  size(1) Largest target is 80
		 -> statusBuffer(BANK6[80]), statusBuffer@main$F4234(BANK7[80]), NULL(NULL[0]), 

    bitRead8@reg	PTR unsigned char  size(2) Largest target is 8192
		 -> number(BANK0[1]), RAM(DATA[8192]), 

    bitWrite8@reg	PTR unsigned char  size(2) Largest target is 8192
		 -> number(BANK0[1]), RAM(DATA[8192]), 

    BMA253_GetAccelDataXYZ@accelData	PTR struct . size(1) Largest target is 6
		 -> LIGHTBLUE_AccelSensor@accelData(BANK0[6]), 

    BMA253_GetAccelDataY@yAccelData	PTR short  size(1) Largest target is 2
		 -> BMA253_GetAccelDataXYZ@sensorValue(BANK0[2]), 

    BMA253_GetAccelDataZ@zAccelData	PTR short  size(1) Largest target is 2
		 -> BMA253_GetAccelDataXYZ@sensorValue(BANK0[2]), 

    bufferBlock$data	PTR unsigned char  size(2) Largest target is 8192
		 -> RAM(DATA[8192]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    d$data	PTR unsigned char  size(2) Largest target is 8192
		 -> RAM(DATA[8192]), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), NULL(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), NULL(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), NULL(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), EUSART2_Receive_ISR(), NULL(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), EUSART2_Receive_ISR(), 

    EUSART1_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), EUSART2_Transmit_ISR(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), EUSART2_Transmit_ISR(), NULL(), 

    EUSART2_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultErrorHandler(), NULL(), 

    EUSART2_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultFramingErrorHandler(), NULL(), 

    EUSART2_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultOverrunErrorHandler(), NULL(), 

    EUSART2_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), EUSART2_Receive_ISR(), NULL(), 

    EUSART2_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultErrorHandler(), 

    EUSART2_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultFramingErrorHandler(), 

    EUSART2_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultOverrunErrorHandler(), 

    EUSART2_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), EUSART2_Receive_ISR(), 

    EUSART2_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), EUSART2_Transmit_ISR(), 

    EUSART2_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), EUSART2_Transmit_ISR(), NULL(), 

    fsmStateTable	const PTR FTN()enum E12652[16] size(2) Largest target is 1
		 -> do_I2C_DO_ACK(), do_I2C_DO_ADDRESS_NACK(), do_I2C_DO_NACK_RESTART(), do_I2C_DO_NACK_STOP(), 
		 -> do_I2C_IDLE(), do_I2C_RCEN(), do_I2C_RESET(), do_I2C_RX(), 
		 -> do_I2C_SEND_ADR_READ(), do_I2C_SEND_ADR_WRITE(), do_I2C_SEND_RESTART(), do_I2C_SEND_RESTART_READ(), 
		 -> do_I2C_SEND_RESTART_WRITE(), do_I2C_SEND_STOP(), do_I2C_TX(), do_I2C_TX_EMPTY(), 

    I2C1_CallbackReturnReset@funPtr	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    I2C1_CallbackReturnStop@funPtr	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    I2C1_DO_TX$5427	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), rd1RegCompleteHandler(), rd1RegCompleteHandler@i2c1_master_example$F1693(), 
		 -> rd2RegCompleteHandler(), rd2RegCompleteHandler@i2c1_master_example$F1704(), rdBlkRegCompleteHandler(), rdBlkRegCompleteHandler@i2c1_master_example$F1727(), 
		 -> wr1RegCompleteHandler(), wr1RegCompleteHandler@i2c1_master_example$F1710(), wr2RegCompleteHandler(), wr2RegCompleteHandler@i2c1_master_example$F1716(), 
		 -> NULL(), 

    I2C1_DO_TX$5427$0	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    I2C1_DO_TX$5432	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    i2c1_driver_busCollisionISR	PTR FTN()void  size(2) Largest target is 1
		 -> i2c_busCollisionISR(), NULL(), 

    i2c1_driver_i2cISR	PTR FTN()void  size(2) Largest target is 1
		 -> i2c_ISR(), NULL(), 

    i2c1_fsmStateTable	const PTR FTN()enum E12565[16] size(2) Largest target is 1
		 -> I2C1_DO_ADDRESS_NACK(), I2C1_DO_IDLE(), I2C1_DO_RCEN(), I2C1_DO_RESET(), 
		 -> I2C1_DO_RX(), I2C1_DO_RX_ACK(), I2C1_DO_RX_NACK_RESTART(), I2C1_DO_RX_NACK_STOP(), 
		 -> I2C1_DO_SEND_ADR_READ(), I2C1_DO_SEND_ADR_WRITE(), I2C1_DO_SEND_RESTART(), I2C1_DO_SEND_RESTART_READ(), 
		 -> I2C1_DO_SEND_RESTART_WRITE(), I2C1_DO_SEND_STOP(), I2C1_DO_TX(), I2C1_DO_TX_EMPTY(), 

    I2C1_MasterFsm$5426	const PTR FTN()enum E12565 size(2) Largest target is 1
		 -> I2C1_DO_ADDRESS_NACK(), I2C1_DO_IDLE(), I2C1_DO_RCEN(), I2C1_DO_RESET(), 
		 -> I2C1_DO_RX(), I2C1_DO_RX_ACK(), I2C1_DO_RX_NACK_RESTART(), I2C1_DO_RX_NACK_STOP(), 
		 -> I2C1_DO_SEND_ADR_READ(), I2C1_DO_SEND_ADR_WRITE(), I2C1_DO_SEND_RESTART(), I2C1_DO_SEND_RESTART_READ(), 
		 -> I2C1_DO_SEND_RESTART_WRITE(), I2C1_DO_SEND_STOP(), I2C1_DO_TX(), I2C1_DO_TX_EMPTY(), 

    I2C1_Read1ByteRegister@returnValue$data	PTR unsigned char  size(2) Largest target is 8192
		 -> RAM(DATA[8192]), 

    I2C1_Read2ByteRegister@returnValue$data	PTR unsigned char  size(2) Largest target is 8192
		 -> RAM(DATA[8192]), 

    I2C1_SetAddressNackCallback@cb	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> NULL(), 

    I2C1_SetAddressNackCallback@ptr	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    I2C1_SetBuffer@buffer	PTR void  size(2) Largest target is 8192
		 -> I2C1_Read1ByteRegister@reg(COMMON[1]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@reg(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_ReadDataBlock@reg(COMMON[1]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Write1ByteRegister@reg(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write2ByteRegister@reg(COMMON[1]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read1ByteRegister@reg(BANK0[1]), 
		 -> i2c_read2ByteRegister@reg(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), i2c_readDataBlock@reg(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write1ByteRegister@reg(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), i2c_write2ByteRegister@reg(COMMON[1]), 
		 -> RAM(DATA[8192]), NULL(NULL[0]), 

    I2C1_SetCallback@cb	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> rd1RegCompleteHandler(), rd1RegCompleteHandler@i2c1_master_example$F1693(), rd2RegCompleteHandler(), rd2RegCompleteHandler@i2c1_master_example$F1704(), 
		 -> rdBlkRegCompleteHandler(), rdBlkRegCompleteHandler@i2c1_master_example$F1727(), wr1RegCompleteHandler(), wr1RegCompleteHandler@i2c1_master_example$F1710(), 
		 -> wr2RegCompleteHandler(), wr2RegCompleteHandler@i2c1_master_example$F1716(), NULL(), 

    I2C1_SetCallback@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    I2C1_SetDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> rd1RegCompleteHandler(), rd1RegCompleteHandler@i2c1_master_example$F1693(), rd2RegCompleteHandler(), rd2RegCompleteHandler@i2c1_master_example$F1704(), 
		 -> rdBlkRegCompleteHandler(), rdBlkRegCompleteHandler@i2c1_master_example$F1727(), wr1RegCompleteHandler(), wr1RegCompleteHandler@i2c1_master_example$F1710(), 
		 -> wr2RegCompleteHandler(), wr2RegCompleteHandler@i2c1_master_example$F1716(), NULL(), 

    I2C1_SetDataCompleteCallback@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    I2C1_Status$callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    I2C1_Status$callbackTable	PTR FTN(PTR void ,)enum E363[6] size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), rd1RegCompleteHandler(), rd1RegCompleteHandler@i2c1_master_example$F1693(), 
		 -> rd2RegCompleteHandler(), rd2RegCompleteHandler@i2c1_master_example$F1704(), rdBlkRegCompleteHandler(), rdBlkRegCompleteHandler@i2c1_master_example$F1727(), 
		 -> wr1RegCompleteHandler(), wr1RegCompleteHandler@i2c1_master_example$F1710(), wr2RegCompleteHandler(), wr2RegCompleteHandler@i2c1_master_example$F1716(), 
		 -> NULL(), 

    I2C1_Status$data_ptr	PTR unsigned char  size(2) Largest target is 8192
		 -> I2C1_Read1ByteRegister@reg(COMMON[1]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@reg(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_ReadDataBlock@reg(COMMON[1]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Write1ByteRegister@reg(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write2ByteRegister@reg(COMMON[1]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read1ByteRegister@reg(BANK0[1]), 
		 -> i2c_read2ByteRegister@reg(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), i2c_readDataBlock@reg(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write1ByteRegister@reg(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), i2c_write2ByteRegister@reg(COMMON[1]), 
		 -> RAM(DATA[8192]), NULL(NULL[0]), 

    I2C1_Write1ByteRegister@data$data	PTR unsigned char  size(2) Largest target is 8192
		 -> RAM(DATA[8192]), 

    I2C1_Write2ByteRegister@data$data	PTR unsigned char  size(2) Largest target is 8192
		 -> RAM(DATA[8192]), 

    i2c_read1ByteRegister@d2$data	PTR unsigned char  size(2) Largest target is 8192
		 -> RAM(DATA[8192]), 

    i2c_read2ByteRegister@result$data	PTR unsigned char  size(2) Largest target is 8192
		 -> RAM(DATA[8192]), 

    i2c_status$callbackPayload	PTR void [6] size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    i2c_status$callbackTable	PTR FTN(PTR void ,)enum E12498[6] size(2) Largest target is 1
		 -> returnReset(), returnStop(), 

    i2c_status$data_ptr	PTR unsigned char  size(2) Largest target is 0

    i2c_write1ByteRegister@data$data	PTR unsigned char  size(2) Largest target is 8192
		 -> RAM(DATA[8192]), 

    i2c_write2ByteRegister@data$data	PTR unsigned char  size(2) Largest target is 8192
		 -> RAM(DATA[8192]), 

    IOCAF6_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCAF6_DefaultInterruptHandler(), NULL(), 

    IOCAF6_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCAF6_DefaultInterruptHandler(), 

    LIGHTBLUE_SendPacket@payload	PTR unsigned char  size(1) Largest target is 19
		 -> LIGHTBLUE_AccelSensor@payload(BANK0[13]), LIGHTBLUE_LedState@payload(BANK0[3]), LIGHTBLUE_PushButton@payload(BANK0[3]), LIGHTBLUE_SendProtocolVersion@payload(BANK0[19]), 
		 -> LIGHTBLUE_TemperatureSensor@payload(BANK0[5]), 

    LIGHTBLUE_SendSerialData@serialData	PTR unsigned char  size(1) Largest target is 80
		 -> lightBlueSerial(BANK5[80]), 

    LIGHTBLUE_SplitByte@payload	PTR unsigned char  size(1) Largest target is 19
		 -> LIGHTBLUE_AccelSensor@payload(BANK0[13]), LIGHTBLUE_LedState@payload(BANK0[3]), LIGHTBLUE_PushButton@payload(BANK0[3]), LIGHTBLUE_SendProtocolVersion@payload(BANK0[19]), 
		 -> LIGHTBLUE_TemperatureSensor@payload(BANK0[5]), 

    LIGHTBLUE_SplitWord@payload	PTR unsigned char  size(1) Largest target is 13
		 -> LIGHTBLUE_AccelSensor@payload(BANK0[13]), LIGHTBLUE_TemperatureSensor@payload(BANK0[5]), 

    NULL$0	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    pHead	PTR unsigned char  size(1) Largest target is 80
		 -> statusBuffer(BANK6[80]), statusBuffer@main$F4234(BANK7[80]), NULL(NULL[0]), 

    protocol_version_number	const PTR const unsigned char  size(2) Largest target is 6
		 -> STR_1(CODE[6]), 

    rd1RegCompleteHandler@i2c1_master_example$F1693@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    rd1RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    rd2RegCompleteHandler@i2c1_master_example$F1704@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    rd2RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    rdBlkRegCompleteHandler@i2c1_master_example$F1727@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    rdBlkRegCompleteHandler@i2c1_master_example$F1727@ptr$data	PTR unsigned char  size(2) Largest target is 8192
		 -> RAM(DATA[8192]), 

    rdBlkRegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    rdBlkRegCompleteHandler@p$data	PTR unsigned char  size(2) Largest target is 8192
		 -> RAM(DATA[8192]), 

    RN487X$AsyncHandler	PTR FTN(PTR unsigned char ,)void  size(2) Largest target is 1
		 -> RN487X_MessageHandler(), 

    RN487X$DataReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> RN487X_is_rx_ready(), 

    RN487X$DelayMs	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> RN487X_Delay(), 

    RN487X$IndicateRx	PTR FTN(_Bool ,)void  size(2) Largest target is 1
		 -> RN487X_IndicateRx(), 

    RN487X$Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> RN487X_Read@rn487x_interface$F1835(), 

    RN487X$ResetModule	PTR FTN(_Bool ,)void  size(2) Largest target is 1
		 -> RN487X_Reset(), 

    RN487X$SetSystemMode	PTR FTN(enum E271,)void  size(2) Largest target is 1
		 -> RN487X_SetSystemMode(), 

    RN487X$TransmitDone	PTR FTN()_Bool  size(2) Largest target is 1
		 -> RN487X_is_tx_done(), 

    RN487X$Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> RN487X_Write(), 

    rn487x_driver_version	const PTR const unsigned char  size(2) Largest target is 6
		 -> STR_6(CODE[6]), 

    RN487X_MessageHandler@message	PTR unsigned char  size(1) Largest target is 80
		 -> statusBuffer(BANK6[80]), statusBuffer@main$F4234(BANK7[80]), NULL(NULL[0]), 

    rn487x_PrintMessage@passedMessage	PTR unsigned char  size(1) Largest target is 80
		 -> statusBuffer(BANK6[80]), statusBuffer@main$F4234(BANK7[80]), NULL(NULL[0]), 

    RN487X_ReadMsg@expectedMsg	PTR const unsigned char  size(2) Largest target is 11
		 -> RN487X_EnterCmdMode@cmdPrompt(CODE[5]), RN487X_EnterDataMode@cmdPrompt(CODE[5]), RN487X_GetInputsValues@ioValue(COMMON[2]), RN487X_RebootCmd@reboot(CODE[11]), 

    RN487X_SendCmd@cmd	PTR const unsigned char  size(1) Largest target is 64
		 -> cmdBuf(BANK4[64]), 

    RN487X_SetAsyncMessageHandler@pBuffer	PTR unsigned char  size(1) Largest target is 80
		 -> statusBuffer(BANK6[80]), statusBuffer@main$F4234(BANK7[80]), 

    S199$8$0	PTR unsigned char  size(1) Largest target is 80
		 -> statusBuffer(BANK6[80]), statusBuffer@main$F4234(BANK7[80]), NULL(NULL[0]), 

    S199$AsyncHandler	PTR FTN(PTR unsigned char ,)void  size(2) Largest target is 1
		 -> RN487X_MessageHandler(), 

    S199$DataReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> RN487X_is_rx_ready(), 

    S199$DelayMs	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> RN487X_Delay(), 

    S199$IndicateRx	PTR FTN(_Bool ,)void  size(2) Largest target is 1
		 -> RN487X_IndicateRx(), 

    S199$Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> RN487X_Read@rn487x_interface$F1835(), 

    S199$ResetModule	PTR FTN(_Bool ,)void  size(2) Largest target is 1
		 -> RN487X_Reset(), 

    S199$SetSystemMode	PTR FTN(enum E271,)void  size(2) Largest target is 1
		 -> RN487X_SetSystemMode(), 

    S199$TransmitDone	PTR FTN()_Bool  size(2) Largest target is 1
		 -> RN487X_is_tx_done(), 

    S199$Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> RN487X_Write(), 

    S328$4$0	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), EUSART2_Transmit_ISR(), 

    S328$6$0	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), EUSART2_Receive_ISR(), 

    S328$DataReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART1_is_rx_ready(), EUSART2_is_rx_ready(), 

    S328$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Initialize(), EUSART2_Initialize(), 

    S328$Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART1_Read(), EUSART2_Read(), 

    S328$RxDefaultISR	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), EUSART2_Receive_ISR(), 

    S328$SetRxISR	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART1_SetRxInterruptHandler(), EUSART2_SetRxInterruptHandler(), 

    S328$SetTxISR	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART1_SetTxInterruptHandler(), EUSART2_SetTxInterruptHandler(), 

    S328$TransmitDone	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART1_is_tx_done(), EUSART2_is_tx_done(), 

    S328$TransmitReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART1_is_tx_ready(), EUSART2_is_tx_ready(), 

    S328$TxDefaultISR	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), EUSART2_Transmit_ISR(), 

    S328$Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> EUSART1_Write(), EUSART2_Write(), 

    S3602$0$0	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    S3602$callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    S3602$callbackTable	PTR FTN(PTR void ,)enum E363[6] size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), rd1RegCompleteHandler(), rd1RegCompleteHandler@i2c1_master_example$F1693(), 
		 -> rd2RegCompleteHandler(), rd2RegCompleteHandler@i2c1_master_example$F1704(), rdBlkRegCompleteHandler(), rdBlkRegCompleteHandler@i2c1_master_example$F1727(), 
		 -> wr1RegCompleteHandler(), wr1RegCompleteHandler@i2c1_master_example$F1710(), wr2RegCompleteHandler(), wr2RegCompleteHandler@i2c1_master_example$F1716(), 
		 -> NULL(), 

    S3602$data_ptr	PTR unsigned char  size(2) Largest target is 8192
		 -> I2C1_Read1ByteRegister@reg(COMMON[1]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@reg(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_ReadDataBlock@reg(COMMON[1]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Write1ByteRegister@reg(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write2ByteRegister@reg(COMMON[1]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read1ByteRegister@reg(BANK0[1]), 
		 -> i2c_read2ByteRegister@reg(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), i2c_readDataBlock@reg(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write1ByteRegister@reg(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), i2c_write2ByteRegister@reg(COMMON[1]), 
		 -> RAM(DATA[8192]), NULL(NULL[0]), 

    S642$11$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S642$callbackPayload	PTR void [6] size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S642$callbackTable	PTR FTN(PTR void ,)enum E12498[6] size(2) Largest target is 1
		 -> returnReset(), returnStop(), 

    S642$data_ptr	PTR unsigned char  size(2) Largest target is 0

    S988$data	PTR unsigned char  size(2) Largest target is 8192
		 -> RAM(DATA[8192]), 

    sp__strchr	PTR unsigned char  size(1) Largest target is 80
		 -> statusBuffer(BANK6[80]), statusBuffer@main$F4234(BANK7[80]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 32
		 -> rn487x_PrintMessage@printCharacter(BANK0[32]), 

    sp__strstr	PTR unsigned char  size(1) Largest target is 80
		 -> statusBuffer(BANK6[80]), statusBuffer@main$F4234(BANK7[80]), NULL(NULL[0]), 

    strchr@s	PTR const unsigned char  size(1) Largest target is 80
		 -> statusBuffer(BANK6[80]), statusBuffer@main$F4234(BANK7[80]), NULL(NULL[0]), 

    strcpy@d	PTR unsigned char  size(1) Largest target is 32
		 -> rn487x_PrintMessage@printCharacter(BANK0[32]), 

    strcpy@dest	PTR unsigned char  size(1) Largest target is 32
		 -> rn487x_PrintMessage@printCharacter(BANK0[32]), 

    strcpy@src	PTR const unsigned char  size(1) Largest target is 80
		 -> statusBuffer(BANK6[80]), statusBuffer@main$F4234(BANK7[80]), NULL(NULL[0]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> LIGHTBLUE_AccelSensor@payload(BANK0[13]), LIGHTBLUE_LedState@payload(BANK0[3]), LIGHTBLUE_PushButton@payload(BANK0[3]), LIGHTBLUE_SendProtocolVersion@payload(BANK0[19]), 
		 -> LIGHTBLUE_TemperatureSensor@payload(BANK0[5]), lightBlueSerial(BANK5[80]), statusBuffer(BANK6[80]), statusBuffer@main$F4234(BANK7[80]), 
		 -> STR_1(CODE[6]), STR_3(CODE[11]), STR_5(CODE[12]), NULL(NULL[0]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> LIGHTBLUE_AccelSensor@payload(BANK0[13]), LIGHTBLUE_LedState@payload(BANK0[3]), LIGHTBLUE_PushButton@payload(BANK0[3]), LIGHTBLUE_SendProtocolVersion@payload(BANK0[19]), 
		 -> LIGHTBLUE_TemperatureSensor@payload(BANK0[5]), lightBlueSerial(BANK5[80]), statusBuffer(BANK6[80]), statusBuffer@main$F4234(BANK7[80]), 
		 -> STR_1(CODE[6]), STR_3(CODE[11]), STR_5(CODE[12]), NULL(NULL[0]), 

    strncmp@l	PTR const unsigned char  size(1) Largest target is 80
		 -> statusBuffer(BANK6[80]), statusBuffer@main$F4234(BANK7[80]), NULL(NULL[0]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_3(CODE[11]), STR_5(CODE[12]), 

    strstr@h	PTR const unsigned char  size(1) Largest target is 80
		 -> statusBuffer(BANK6[80]), statusBuffer@main$F4234(BANK7[80]), NULL(NULL[0]), 

    strstr@n	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_3(CODE[11]), STR_5(CODE[12]), 

    TMAG5273_GetTemperatureValue@temperature	PTR short  size(1) Largest target is 2
		 -> LIGHTBLUE_TemperatureSensor@temperature(BANK0[2]), 

    TMAG5273_GetXValue@x	PTR short  size(1) Largest target is 2
		 -> BMA253_GetAccelDataXYZ@sensorValue(BANK0[2]), 

    uart$DataReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART1_is_rx_ready(), EUSART2_is_rx_ready(), 

    uart$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Initialize(), EUSART2_Initialize(), 

    uart$Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART1_Read(), EUSART2_Read(), 

    uart$RxDefaultISR	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), EUSART2_Receive_ISR(), 

    uart$SetRxISR	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART1_SetRxInterruptHandler(), EUSART2_SetRxInterruptHandler(), 

    uart$SetTxISR	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART1_SetTxInterruptHandler(), EUSART2_SetTxInterruptHandler(), 

    uart$TransmitDone	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART1_is_tx_done(), EUSART2_is_tx_done(), 

    uart$TransmitReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART1_is_tx_ready(), EUSART2_is_tx_ready(), 

    uart$TxDefaultISR	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), EUSART2_Transmit_ISR(), 

    uart$Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> EUSART1_Write(), EUSART2_Write(), 

    wr1RegCompleteHandler@i2c1_master_example$F1710@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    wr1RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    wr2RegCompleteHandler@i2c1_master_example$F1716@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    wr2RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 


Critical Paths under _main in COMMON

    _writeRegister->_i2c_write1ByteRegister
    _getError->_getDeviceStatus
    _PIN_MANAGER_Initialize->_IOCAF6_SetInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetErrorHandler
    _EUSART2_Initialize->_EUSART2_SetFramingErrorHandler
    _EUSART2_Initialize->_EUSART2_SetOverrunErrorHandler
    _EUSART2_Initialize->_EUSART2_SetRxInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetTxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler
    _RN487X_FilterData->_RN487X_MessageHandler
    _RN487X_MessageHandler->_strstr
    _strstr->_strncmp
    _rn487x_PrintMessageStart->_EUSART1_Write
    _rn487x_PrintMessageStart->_EUSART2_Write
    _rn487x_PrintMessageEnd->_EUSART1_Write
    _rn487x_PrintMessageEnd->_EUSART2_Write
    _rn487x_PrintMessage->_strlen
    _rn487x_PrintIndicatorCharacters->_EUSART1_Write
    _rn487x_PrintIndicatorCharacters->_EUSART2_Write
    _RN487X_Init->_RN487X_Delay
    _LIGHTBLUE_TemperatureSensor->_LIGHTBLUE_SplitWord
    _LIGHTBLUE_TemperatureSensor->_TMAG5273_GetTemperatureValue
    _LIGHTBLUE_SendSerialData->_RN487X_Write
    _LIGHTBLUE_SendProtocolVersion->_LIGHTBLUE_SendPacket
    _LIGHTBLUE_PushButton->_LIGHTBLUE_SendPacket
    _LIGHTBLUE_PerformAction->_LIGHTBLUE_SetErrorLedValue
    _RN487X_SetOutputs->_RN487X_SendCmd
    _RN487X_EnterDataMode->_RN487X_SendCmd
    _RN487X_EnterCmdMode->_RN487X_SendCmd
    _RN487X_SendCmd->_RN487X_Write
    _RN487X_Read@rn487x_interface$F1835->_EUSART1_Read
    _RN487X_Read@rn487x_interface$F1835->_EUSART2_Read
    _RN487X_Delay->_DELAY_milliseconds
    _LIGHTBLUE_LedState->_LIGHTBLUE_SendPacket
    _LIGHTBLUE_AccelSensor->_LIGHTBLUE_SplitWord
    _LIGHTBLUE_SplitWord->_LIGHTBLUE_SplitByte
    _LIGHTBLUE_SplitByte->_strlen
    _LIGHTBLUE_SendPacket->_RN487X_Write
    _RN487X_Write->_strlen
    _BMA253_GetAccelDataXYZ->_BMA253_NewAccelDataRdyY
    _BMA253_GetAccelDataXYZ->_BMA253_NewAccelDataRdyZ
    _BMA253_GetAccelDataXYZ->_TMAG5273_GetXValue
    _BMA253_GetAccelDataZ->_BMA253_NewAccelDataRdyZ
    _BMA253_GetAccelDataY->_BMA253_NewAccelDataRdyY
    _I2C1_SetAddressNackCallback->_I2C1_SetCallback
    _I2C1_MasterFsm->_I2C1_DO_ADDRESS_NACK
    _I2C1_MasterFsm->_I2C1_DO_RX
    _I2C1_MasterFsm->_I2C1_DO_TX
    _I2C1_MasterFsm->_I2C1_DO_TX_EMPTY
    _I2C1_DO_TX_EMPTY->_I2C1_CallbackReturnReset
    _I2C1_DO_TX_EMPTY->_I2C1_CallbackReturnStop
    _I2C1_DO_TX_EMPTY->_rd1RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_rd1RegCompleteHandler@i2c1_master_example$F1693
    _I2C1_DO_TX_EMPTY->_rd2RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_rd2RegCompleteHandler@i2c1_master_example$F1704
    _I2C1_DO_TX_EMPTY->_rdBlkRegCompleteHandler
    _I2C1_DO_TX_EMPTY->_rdBlkRegCompleteHandler@i2c1_master_example$F1727
    _I2C1_DO_TX_EMPTY->_wr1RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_wr1RegCompleteHandler@i2c1_master_example$F1710
    _I2C1_DO_TX_EMPTY->_wr2RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_wr2RegCompleteHandler@i2c1_master_example$F1716
    _I2C1_DO_TX->_I2C1_CallbackReturnReset
    _I2C1_DO_TX->_I2C1_CallbackReturnStop
    _I2C1_DO_TX->_rd1RegCompleteHandler
    _I2C1_DO_TX->_rd1RegCompleteHandler@i2c1_master_example$F1693
    _I2C1_DO_TX->_rd2RegCompleteHandler
    _I2C1_DO_TX->_rd2RegCompleteHandler@i2c1_master_example$F1704
    _I2C1_DO_TX->_rdBlkRegCompleteHandler
    _I2C1_DO_TX->_rdBlkRegCompleteHandler@i2c1_master_example$F1727
    _I2C1_DO_TX->_wr1RegCompleteHandler
    _I2C1_DO_TX->_wr1RegCompleteHandler@i2c1_master_example$F1710
    _I2C1_DO_TX->_wr2RegCompleteHandler
    _I2C1_DO_TX->_wr2RegCompleteHandler@i2c1_master_example$F1716
    _I2C1_DO_SEND_ADR_WRITE->_I2C1_MasterSendTxData
    _I2C1_DO_RX->_I2C1_CallbackReturnReset
    _I2C1_DO_RX->_I2C1_CallbackReturnStop
    _I2C1_DO_RX->_rd1RegCompleteHandler
    _I2C1_DO_RX->_rd1RegCompleteHandler@i2c1_master_example$F1693
    _I2C1_DO_RX->_rd2RegCompleteHandler
    _I2C1_DO_RX->_rd2RegCompleteHandler@i2c1_master_example$F1704
    _I2C1_DO_RX->_rdBlkRegCompleteHandler
    _I2C1_DO_RX->_rdBlkRegCompleteHandler@i2c1_master_example$F1727
    _I2C1_DO_RX->_wr1RegCompleteHandler
    _I2C1_DO_RX->_wr1RegCompleteHandler@i2c1_master_example$F1710
    _I2C1_DO_RX->_wr2RegCompleteHandler
    _I2C1_DO_RX->_wr2RegCompleteHandler@i2c1_master_example$F1716
    _I2C1_DO_ADDRESS_NACK->_I2C1_CallbackReturnReset
    _I2C1_DO_ADDRESS_NACK->_I2C1_CallbackReturnStop
    _I2C1_DO_ADDRESS_NACK->_rd1RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_rd1RegCompleteHandler@i2c1_master_example$F1693
    _I2C1_DO_ADDRESS_NACK->_rd2RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_rd2RegCompleteHandler@i2c1_master_example$F1704
    _I2C1_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler@i2c1_master_example$F1727
    _I2C1_DO_ADDRESS_NACK->_wr1RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_wr1RegCompleteHandler@i2c1_master_example$F1710
    _I2C1_DO_ADDRESS_NACK->_wr2RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_wr2RegCompleteHandler@i2c1_master_example$F1716
    _wr2RegCompleteHandler@i2c1_master_example$F1716->_I2C1_SetDataCompleteCallback
    _wr2RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _wr1RegCompleteHandler@i2c1_master_example$F1710->_I2C1_SetDataCompleteCallback
    _wr1RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _rdBlkRegCompleteHandler@i2c1_master_example$F1727->_I2C1_SetDataCompleteCallback
    _rdBlkRegCompleteHandler->_I2C1_SetDataCompleteCallback
    _rd2RegCompleteHandler@i2c1_master_example$F1704->_I2C1_SetDataCompleteCallback
    _rd2RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _rd1RegCompleteHandler@i2c1_master_example$F1693->_I2C1_SetDataCompleteCallback
    _rd1RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _I2C1_SetDataCompleteCallback->_I2C1_SetCallback

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_EUSART1_Transmit_ISR
    _INTERRUPT_InterruptManager->_EUSART2_Transmit_ISR
    _EUSART2_Receive_ISR->_EUSART2_RxDataHandler
    _EUSART2_DefaultErrorHandler->_EUSART2_RxDataHandler
    _EUSART1_Receive_ISR->_EUSART1_RxDataHandler
    _EUSART1_DefaultErrorHandler->_EUSART1_RxDataHandler

Critical Paths under _main in BANK0

    _main->_LIGHTBLUE_AccelSensor
    _begin->_setMagneticChannel
    _begin->_setOperatingMode
    _begin->_setTemperatureEn
    _begin->_setXYAxisRange
    _begin->_setZAxisRange
    _setZAxisRange->_getError
    _setXYAxisRange->_getError
    _setTemperatureEn->_getError
    _setOperatingMode->_getError
    _setMagneticChannel->_getError
    _writeRegister->_i2c_write1ByteRegister
    _getDeviceStatus->_readRegister
    _isConnected->_TMAG5273_GetManufacture
    _TMAG5273_GetManufacture->_i2c_read2ByteRegister
    _getTemperatureEN->_readRegister
    _getOperatingMode->_readRegister
    _getMagneticChannel->_readRegister
    _getLowPower->_readRegister
    _getAngleEn->_readRegister
    _readRegister->_i2c_read1ByteRegister
    _RN487X_DataReady->_RN487X_FilterData
    _RN487X_FilterData->_RN487X_MessageHandler
    _RN487X_MessageHandler->_rn487x_PrintMessage
    _TMAG5273_GetTemperatureValue->_TMAG5273_CalcMeasurement
    _LIGHTBLUE_ParseIncomingPacket->_LIGHTBLUE_PerformAction
    _LIGHTBLUE_PerformAction->_LIGHTBLUE_SetErrorLedValue
    _LIGHTBLUE_UpdateErrorLed->_RN487X_SetOutputs
    _LIGHTBLUE_AccelSensor->_BMA253_GetAccelDataXYZ
    _TMAG5273_GetXValue->_TMAG5273_CalcMeasurement
    _TMAG5273_CalcMeasurement->_i2c_read2ByteRegister
    _BMA253_GetAccelDataZ->_i2c_read1ByteRegister
    _BMA253_NewAccelDataRdyZ->_i2c_read1ByteRegister
    _BMA253_GetAccelDataY->_i2c_read1ByteRegister
    _BMA253_NewAccelDataRdyY->_i2c_read1ByteRegister
    _I2C1_MasterWrite->_I2C1_MasterOperation
    _I2C1_Poller->_I2C1_MasterFsm

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0 13836894
                                             44 BANK0      1     1      0
                                              0 BANK2      1     1      0
                       _EUSART1_Read *
                      _EUSART1_Write *
                _EUSART1_is_rx_ready *
                       _EUSART2_Read *
                      _EUSART2_Write *
                _EUSART2_is_rx_ready *
              _LIGHTBLUE_AccelSensor
               _LIGHTBLUE_Initialize
                 _LIGHTBLUE_LedState
      _LIGHTBLUE_ParseIncomingPacket
               _LIGHTBLUE_PushButton
      _LIGHTBLUE_SendProtocolVersion
           _LIGHTBLUE_SendSerialData
        _LIGHTBLUE_TemperatureSensor
                   _RN487X_DataReady
                        _RN487X_Init
                 _RN487X_IsConnected
                        _RN487X_Read
      _RN487X_SetAsyncMessageHandler
                       _RN487X_Write *
                  _SYSTEM_Initialize
            _TMR0_HasOverflowOccured
                              _begin
 ---------------------------------------------------------------------------------
 (1) _begin                                                1     1      0 10224422
                           _bitRead8
                          _bitWrite8
                         _getAngleEn
                           _getError
                        _getLowPower
                 _getMagneticChannel
                   _getOperatingMode
                   _getTemperatureEN
                        _isConnected
                 _setMagneticChannel
                   _setOperatingMode
                   _setTemperatureEn
                     _setXYAxisRange
                      _setZAxisRange
 ---------------------------------------------------------------------------------
 (2) _setZAxisRange                                        5     5      0 1399384
                                             19 BANK0      5     5      0
                          _bitWrite8
                           _getError
                       _readRegister
                      _writeRegister
 ---------------------------------------------------------------------------------
 (2) _setXYAxisRange                                       5     5      0 1399384
                                             19 BANK0      5     5      0
                          _bitWrite8
                           _getError
                       _readRegister
                      _writeRegister
 ---------------------------------------------------------------------------------
 (2) _setTemperatureEn                                     5     5      0 1399384
                                             19 BANK0      5     5      0
                          _bitWrite8
                           _getError
                       _readRegister
                      _writeRegister
 ---------------------------------------------------------------------------------
 (2) _setOperatingMode                                     5     5      0 1399694
                                             19 BANK0      5     5      0
                          _bitWrite8
                           _getError
                       _readRegister
                      _writeRegister
 ---------------------------------------------------------------------------------
 (2) _setMagneticChannel                                   5     5      0 1401430
                                             19 BANK0      5     5      0
                          _bitWrite8
                           _getError
                       _readRegister
                      _writeRegister
 ---------------------------------------------------------------------------------
 (3) _writeRegister                                        2     1      1  448722
                                              6 BANK0      2     1      1
             _i2c_write1ByteRegister
 ---------------------------------------------------------------------------------
 (4) _i2c_write1ByteRegister                               3     1      2  439917
                                             11 COMMON     1     1      0
                                              4 BANK0      2     0      2
                         _I2C1_Close
                   _I2C1_MasterWrite
                          _I2C1_Open
        _I2C1_SetAddressNackCallback
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (3) _getError                                             7     7      0  452471
                                             12 BANK0      7     7      0
                           _bitRead8
                    _getDeviceStatus
 ---------------------------------------------------------------------------------
 (4) _getDeviceStatus                                      1     1      0  440464
                                             11 COMMON     1     1      0
                       _readRegister
 ---------------------------------------------------------------------------------
 (3) _bitWrite8                                            6     2      4   57569
                                              1 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) _isConnected                                          0     0      0  440073
            _TMAG5273_GetManufacture
 ---------------------------------------------------------------------------------
 (3) _TMAG5273_GetManufacture                              4     2      2  440073
                                             13 BANK0      4     2      2
              _i2c_read2ByteRegister
                               _swap
 ---------------------------------------------------------------------------------
 (4) _swap                                                 9     7      2     268
                                              1 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (2) _getTemperatureEN                                     4     4      0  452245
                                             12 BANK0      4     4      0
                           _bitRead8
                       _readRegister
 ---------------------------------------------------------------------------------
 (2) _getOperatingMode                                     5     5      0  452496
                                             12 BANK0      5     5      0
                           _bitRead8
                       _readRegister
 ---------------------------------------------------------------------------------
 (2) _getMagneticChannel                                   7     7      0  453804
                                             12 BANK0      7     7      0
                           _bitRead8
                       _readRegister
 ---------------------------------------------------------------------------------
 (2) _getLowPower                                          4     4      0  452245
                                             12 BANK0      4     4      0
                           _bitRead8
                       _readRegister
 ---------------------------------------------------------------------------------
 (2) _getAngleEn                                           5     5      0  452496
                                             12 BANK0      5     5      0
                           _bitRead8
                       _readRegister
 ---------------------------------------------------------------------------------
 (3) _readRegister                                         2     2      0  440430
                                             10 BANK0      2     2      0
              _i2c_read1ByteRegister
 ---------------------------------------------------------------------------------
 (4) _bitRead8                                             5     2      3   11744
                                              1 COMMON     5     2      3
 ---------------------------------------------------------------------------------
 (1) _TMR0_HasOverflowOccured                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1485
                 _EUSART1_Initialize
                 _EUSART2_Initialize
                    _I2C1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     135
         _IOCAF6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCAF6_SetInterruptHandler                           2     0      2     135
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Initialize                                   0     0      0     675
            _EUSART2_SetErrorHandler
     _EUSART2_SetFramingErrorHandler
     _EUSART2_SetOverrunErrorHandler
      _EUSART2_SetRxInterruptHandler
      _EUSART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetTxInterruptHandler                        2     0      2     135
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetRxInterruptHandler                        2     0      2     135
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetOverrunErrorHandler                       2     0      2     135
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetFramingErrorHandler                       2     0      2     135
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetErrorHandler                              2     0      2     135
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     675
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetTxInterruptHandler                        2     0      2     135
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2     135
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2     135
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2     135
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2     135
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _RN487X_SetAsyncMessageHandler                        2     1      1     410
                                              1 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 (1) _RN487X_Read                                          0     0      0   10867
                   _RN487X_DataReady
 ---------------------------------------------------------------------------------
 (2) _RN487X_DataReady                                     0     0      0   10867
                  _RN487X_FilterData
                 _RN487X_is_rx_ready *
 ---------------------------------------------------------------------------------
 (3) _RN487X_FilterData                                    2     2      0   10867
                                             35 BANK0      2     2      0
              _RN487X_MessageHandler *
 _RN487X_Read@rn487x_interface$F1835 *
 ---------------------------------------------------------------------------------
 (4) _RN487X_MessageHandler                                2     1      1   10666
                                             11 COMMON     1     0      1
                                             34 BANK0      1     1      0
    _rn487x_PrintIndicatorCharacters
                _rn487x_PrintMessage
             _rn487x_PrintMessageEnd
           _rn487x_PrintMessageStart
                             _strstr
 ---------------------------------------------------------------------------------
 (5) _strstr                                               7     5      2    2275
                                              7 COMMON     4     2      2
                                              0 BANK0      3     3      0
                             _strchr
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (6) _strncmp                                              6     2      4     515
                                              1 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (6) _strchr                                               3     1      2     278
                                              1 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (5) _rn487x_PrintMessageStart                             0     0      0    1691
                      _EUSART1_Write *
                      _EUSART2_Write *
 ---------------------------------------------------------------------------------
 (5) _rn487x_PrintMessageEnd                               0     0      0    1691
                      _EUSART1_Write *
                      _EUSART2_Write *
 ---------------------------------------------------------------------------------
 (5) _rn487x_PrintMessage                                 36    36      0    3046
                                              6 COMMON     2     2      0
                                              0 BANK0     34    34      0
                      _EUSART1_Write *
                      _EUSART2_Write *
                             _strcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strcpy                                               3     2      1     246
                                              1 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (5) _rn487x_PrintIndicatorCharacters                      1     1      0    1753
                                              3 COMMON     1     1      0
                      _EUSART1_Write *
                      _EUSART2_Write *
 ---------------------------------------------------------------------------------
 (1) _RN487X_IsConnected                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RN487X_Init                                          0     0      0     872
                       _RN487X_Delay *
                  _RN487X_IndicateRx *
 _RN487X_Read@rn487x_interface$F1835 *
                       _RN487X_Reset *
               _RN487X_SetSystemMode *
                 _RN487X_is_rx_ready *
 ---------------------------------------------------------------------------------
 (3) _RN487X_is_rx_ready                                   0     0      0       0
                _EUSART1_is_rx_ready *
                _EUSART2_is_rx_ready *
 ---------------------------------------------------------------------------------
 (4) _EUSART2_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _RN487X_SetSystemMode                                 1     0      1     108
                                              1 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (2) _RN487X_Reset                                         1     0      1     185
                                              1 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (2) _RN487X_IndicateRx                                    1     0      1     108
                                              1 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (1) _LIGHTBLUE_TemperatureSensor                          8     8      0  447600
                                             22 BANK0      7     7      0
               _LIGHTBLUE_SendPacket
                _LIGHTBLUE_SplitWord
       _TMAG5273_GetTemperatureValue
 ---------------------------------------------------------------------------------
 (2) _TMAG5273_GetTemperatureValue                         1     1      0  440008
                                             11 COMMON     1     1      0
           _TMAG5273_CalcMeasurement
 ---------------------------------------------------------------------------------
 (1) _LIGHTBLUE_SendSerialData                             3     3      0    4274
                                              7 COMMON     3     3      0
                       _RN487X_Write *
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _LIGHTBLUE_SendProtocolVersion                       23    23      0    7788
                                              0 BANK0     23    23      0
               _LIGHTBLUE_SendPacket
                _LIGHTBLUE_SplitByte
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _LIGHTBLUE_PushButton                                 4     4      0    6862
                                              0 BANK0      4     4      0
           _LIGHTBLUE_GetButtonValue
               _LIGHTBLUE_SendPacket
                _LIGHTBLUE_SplitByte
 ---------------------------------------------------------------------------------
 (2) _LIGHTBLUE_GetButtonValue                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LIGHTBLUE_ParseIncomingPacket                        9     9      0   18822
                                             11 BANK0      9     9      0
            _LIGHTBLUE_PerformAction
 ---------------------------------------------------------------------------------
 (2) _LIGHTBLUE_PerformAction                              4     3      1   18277
                                              7 BANK0      4     3      1
                      _EUSART1_Write *
                      _EUSART2_Write *
         _LIGHTBLUE_SetErrorLedValue
 ---------------------------------------------------------------------------------
 (3) _LIGHTBLUE_SetErrorLedValue                           2     2      0   16293
                                             11 COMMON     1     1      0
                                              6 BANK0      1     1      0
           _LIGHTBLUE_UpdateErrorLed
 ---------------------------------------------------------------------------------
 (4) _LIGHTBLUE_UpdateErrorLed                             0     0      0   16262
                       _RN487X_Delay *
                _RN487X_EnterCmdMode
               _RN487X_EnterDataMode
                  _RN487X_SetOutputs
 ---------------------------------------------------------------------------------
 (5) _RN487X_SetOutputs                                    6     4      2    5093
                                              0 BANK0      6     4      2
         _RN487X_ReadDefaultResponse
                     _RN487X_SendCmd
 ---------------------------------------------------------------------------------
 (6) _RN487X_ReadDefaultResponse                           4     4      0     389
                                              3 COMMON     4     4      0
 _RN487X_Read@rn487x_interface$F1835 *
 ---------------------------------------------------------------------------------
 (5) _RN487X_EnterDataMode                                 0     0      0    5386
                     _RN487X_ReadMsg
                     _RN487X_SendCmd
 ---------------------------------------------------------------------------------
 (5) _RN487X_EnterCmdMode                                  0     0      0    5386
                     _RN487X_ReadMsg
                     _RN487X_SendCmd
 ---------------------------------------------------------------------------------
 (6) _RN487X_SendCmd                                       4     3      1    4316
                                              7 COMMON     4     3      1
                       _RN487X_Write *
                  _RN487X_is_tx_done *
 ---------------------------------------------------------------------------------
 (7) _RN487X_is_tx_done                                    0     0      0       0
                 _EUSART1_is_tx_done *
                 _EUSART2_is_tx_done *
 ---------------------------------------------------------------------------------
 (8) _EUSART2_is_tx_done                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _EUSART1_is_tx_done                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _RN487X_ReadMsg                                       7     4      3    1070
                                              3 COMMON     7     4      3
 _RN487X_Read@rn487x_interface$F1835 *
 ---------------------------------------------------------------------------------
 (4) _RN487X_Read@rn487x_interface$F1835                   0     0      0      74
                       _EUSART1_Read *
                       _EUSART2_Read *
 ---------------------------------------------------------------------------------
 (5) _EUSART2_Read                                         2     2      0      37
                                              1 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (5) _EUSART1_Read                                         2     2      0      37
                                              1 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _RN487X_Delay                                         2     0      2     397
                                              4 COMMON     2     0      2
                 _DELAY_milliseconds
 ---------------------------------------------------------------------------------
 (3) _DELAY_milliseconds                                   3     1      2     135
                                              1 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (1) _LIGHTBLUE_LedState                                   4     4      0    6961
                                              0 BANK0      4     4      0
          _LIGHTBLUE_GetDataLedValue
         _LIGHTBLUE_GetErrorLedValue
               _LIGHTBLUE_SendPacket
                _LIGHTBLUE_SplitByte
 ---------------------------------------------------------------------------------
 (2) _LIGHTBLUE_GetErrorLedValue                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LIGHTBLUE_GetDataLedValue                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LIGHTBLUE_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LIGHTBLUE_AccelSensor                               19    19      0 3090680
                                             25 BANK0     19    19      0
             _BMA253_GetAccelDataXYZ
               _LIGHTBLUE_SendPacket
                _LIGHTBLUE_SplitWord
 ---------------------------------------------------------------------------------
 (2) _LIGHTBLUE_SplitWord                                  3     1      2    2607
                                              9 COMMON     3     1      2
                _LIGHTBLUE_SplitByte
 ---------------------------------------------------------------------------------
 (3) _LIGHTBLUE_SplitByte                                  3     2      1    1911
                                              6 COMMON     3     2      1
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _LIGHTBLUE_SendPacket                                 4     3      1    4825
                                              7 COMMON     4     3      1
                       _RN487X_Write *
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               5     3      2     858
                                              1 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (1) _RN487X_Write                                         1     0      1    3185
                                              6 COMMON     1     0      1
                       _EUSART1_Read (ARG) *
                      _EUSART1_Write *
                       _EUSART2_Read (ARG) *
                      _EUSART2_Write *
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Write                                        2     1      1    1525
                                              1 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Write                                        2     1      1     166
                                              1 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 (2) _BMA253_GetAccelDataXYZ                               3     3      0 3082946
                                             22 BANK0      3     3      0
               _BMA253_GetAccelDataY
               _BMA253_GetAccelDataZ
            _BMA253_NewAccelDataRdyY
            _BMA253_NewAccelDataRdyZ
                 _TMAG5273_GetXValue
 ---------------------------------------------------------------------------------
 (3) _TMAG5273_GetXValue                                   1     1      0  440008
                                             11 COMMON     1     1      0
           _TMAG5273_CalcMeasurement
 ---------------------------------------------------------------------------------
 (3) _TMAG5273_CalcMeasurement                            10     8      2  439938
                                             13 BANK0      9     7      2
              _i2c_read2ByteRegister
 ---------------------------------------------------------------------------------
 (4) _i2c_read2ByteRegister                                9     7      2  439771
                                              4 BANK0      9     7      2
                         _I2C1_Close
                   _I2C1_MasterWrite
                          _I2C1_Open
        _I2C1_SetAddressNackCallback
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (3) _BMA253_GetAccelDataZ                                 6     6      0  880902
                                             10 BANK0      6     6      0
            _BMA253_NewAccelDataRdyZ
              _i2c_read1ByteRegister
 ---------------------------------------------------------------------------------
 (3) _BMA253_NewAccelDataRdyZ                              1     1      0  440399
                                             11 COMMON     1     1      0
              _i2c_read1ByteRegister
 ---------------------------------------------------------------------------------
 (3) _BMA253_GetAccelDataY                                 6     6      0  880902
                                             10 BANK0      6     6      0
            _BMA253_NewAccelDataRdyY
              _i2c_read1ByteRegister
 ---------------------------------------------------------------------------------
 (3) _BMA253_NewAccelDataRdyY                              1     1      0  440399
                                             11 COMMON     1     1      0
              _i2c_read1ByteRegister
 ---------------------------------------------------------------------------------
 (4) _i2c_read1ByteRegister                                6     5      1  440365
                                              4 BANK0      6     5      1
                         _I2C1_Close
                   _I2C1_MasterWrite
                          _I2C1_Open
        _I2C1_SetAddressNackCallback
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (5) _I2C1_SetAddressNackCallback                          4     0      4    3815
                                              5 COMMON     4     0      4
                   _I2C1_SetCallback
 ---------------------------------------------------------------------------------
 (5) _I2C1_Open                                            2     2      0      68
                                              1 COMMON     2     2      0
                _I2C1_MasterClearIrq
                    _I2C1_MasterOpen
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterOpen                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C1_MasterWrite                                     0     0      0  424509
               _I2C1_MasterOperation
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterOperation                                 2     2      0  424509
                                              2 BANK0      2     2      0
                   _I2C1_MasterStart
                        _I2C1_Poller
 ---------------------------------------------------------------------------------
 (7) _I2C1_Poller                                          0     0      0  424441
                     _I2C1_MasterFsm
            _I2C1_MasterWaitForEvent
 ---------------------------------------------------------------------------------
 (8) _I2C1_MasterWaitForEvent                              0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C1_MasterFsm                                       2     2      0  424441
                                              0 BANK0      2     2      0
               _I2C1_DO_ADDRESS_NACK *
                       _I2C1_DO_IDLE *
                       _I2C1_DO_RCEN *
                      _I2C1_DO_RESET *
                         _I2C1_DO_RX *
                     _I2C1_DO_RX_ACK *
            _I2C1_DO_RX_NACK_RESTART *
               _I2C1_DO_RX_NACK_STOP *
              _I2C1_DO_SEND_ADR_READ *
             _I2C1_DO_SEND_ADR_WRITE *
               _I2C1_DO_SEND_RESTART *
          _I2C1_DO_SEND_RESTART_READ *
         _I2C1_DO_SEND_RESTART_WRITE *
                  _I2C1_DO_SEND_STOP *
                         _I2C1_DO_TX *
                   _I2C1_DO_TX_EMPTY *
                _I2C1_MasterClearIrq
                  _I2C1_MasterIsNack
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_TX_EMPTY                                     2     2      0  106087
                                              9 COMMON     2     2      0
                                NULL *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
               _I2C1_DO_SEND_RESTART
                  _I2C1_DO_SEND_STOP
                  _I2C1_MasterSetIrq
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterSetIrq                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_TX                                           2     2      0  106118
                                              9 COMMON     2     2      0
                                NULL *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
          _I2C1_DO_SEND_RESTART_READ
         _I2C1_DO_SEND_RESTART_WRITE
                  _I2C1_DO_SEND_STOP
                  _I2C1_MasterIsNack
              _I2C1_MasterSendTxData
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (9) _I2C1_MasterIsNack                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_SEND_RESTART_WRITE                          0     0      0       0
           _I2C1_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_SEND_RESTART_READ                           0     0      0       0
           _I2C1_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_SEND_ADR_WRITE                               0     0      0      31
              _I2C1_MasterSendTxData
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_SEND_ADR_READ                                0     0      0      31
              _I2C1_MasterSendTxData
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterSendTxData                               1     1      0      31
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_RX_ACK                                       0     0      0       0
                 _I2C1_MasterSendAck
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_RX                                           2     2      0  106087
                                              9 COMMON     2     2      0
                                NULL *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
            _I2C1_DO_RX_NACK_RESTART
               _I2C1_DO_RX_NACK_STOP
               _I2C1_MasterGetRxData
                 _I2C1_MasterSendAck
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterSendAck                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterGetRxData                                0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_RX_NACK_STOP                                 0     0      0       0
                _I2C1_MasterSendNack
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_RX_NACK_RESTART                              0     0      0       0
                _I2C1_MasterSendNack
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterSendNack                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_RESET                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_RCEN                                         0     0      0       0
                 _I2C1_MasterStartRx
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterStartRx                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_IDLE                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_ADDRESS_NACK                                 2     2      0  106087
                                              9 COMMON     2     2      0
                                NULL *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
               _I2C1_DO_SEND_RESTART
                  _I2C1_DO_SEND_STOP
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (10) _wr2RegCompleteHandler@i2c1_master_example$F1716     1     0      1   10564
                                              8 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _wr2RegCompleteHandler                               1     0      1   10564
                                              8 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _wr1RegCompleteHandler@i2c1_master_example$F1710     1     0      1   10564
                                              8 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _wr1RegCompleteHandler                               1     0      1   10564
                                              8 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _rdBlkRegCompleteHandler@i2c1_master_example$F1727   1     0      1   10595
                                              8 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _rdBlkRegCompleteHandler                             1     0      1   10595
                                              8 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _rd2RegCompleteHandler@i2c1_master_example$F1704     1     0      1   10564
                                              8 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _rd2RegCompleteHandler                               1     0      1   10564
                                              8 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _rd1RegCompleteHandler@i2c1_master_example$F1693     1     0      1   10564
                                              8 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _rd1RegCompleteHandler                               1     0      1   10564
                                              8 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (5) _I2C1_SetDataCompleteCallback                         3     0      3    5479
                                              5 COMMON     3     0      3
                   _I2C1_SetCallback
 ---------------------------------------------------------------------------------
 (6) _I2C1_SetCallback                                     4     1      3    1257
                                              1 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (5) _I2C1_SetBuffer                                       4     0      4    5054
                                              1 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_SEND_STOP                                   0     0      0       0
                    _I2C1_MasterStop
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterStop                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_SEND_RESTART                                0     0      0       0
           _I2C1_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterEnableRestart                            0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_CallbackReturnStop                             1     0      1       0
                                              8 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (10) _I2C1_CallbackReturnReset                            1     0      1     385
                                              8 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (18) NULL(Fake)                                           1     0      1       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_MasterStart                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C1_Close                                           1     1      0      37
                                              1 COMMON     1     1      0
                _I2C1_MasterClearIrq
                   _I2C1_MasterClose
              _I2C1_MasterDisableIrq
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterDisableIrq                                0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterClose                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterClearIrq                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _INTERRUPT_InterruptManager                          0     0      0       0
                                NULL *
                _EUSART1_Receive_ISR *
               _EUSART1_Transmit_ISR *
                _EUSART2_Receive_ISR *
               _EUSART2_Transmit_ISR *
                    _PIN_MANAGER_IOC
 ---------------------------------------------------------------------------------
 (16) _PIN_MANAGER_IOC                                     0     0      0       0
                         _IOCAF6_ISR
 ---------------------------------------------------------------------------------
 (17) _IOCAF6_ISR                                          0     0      0       0
                                NULL *
     _IOCAF6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (18) _IOCAF6_DefaultInterruptHandler                      0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _EUSART2_Transmit_ISR                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (16) _EUSART2_Receive_ISR                                 0     0      0       0
                                NULL *
        _EUSART2_DefaultErrorHandler *
 _EUSART2_DefaultFramingErrorHandler *
 _EUSART2_DefaultOverrunErrorHandler *
              _EUSART2_RxDataHandler
 ---------------------------------------------------------------------------------
 (17) _EUSART2_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _EUSART2_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _EUSART2_DefaultErrorHandler                         0     0      0       0
              _EUSART2_RxDataHandler
 ---------------------------------------------------------------------------------
 (17) _EUSART2_RxDataHandler                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (16) _EUSART1_Transmit_ISR                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (16) _EUSART1_Receive_ISR                                 0     0      0       0
                                NULL *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (17) _EUSART1_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _EUSART1_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _EUSART1_DefaultErrorHandler                         0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (17) _EUSART1_RxDataHandler                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (18) NULL(Fake)                                           1     0      1       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART1_Read *
   _EUSART1_Write *
   _EUSART1_is_rx_ready *
   _EUSART2_Read *
   _EUSART2_Write *
   _EUSART2_is_rx_ready *
   _LIGHTBLUE_AccelSensor *
     _BMA253_GetAccelDataXYZ
       _BMA253_GetAccelDataY
         _BMA253_NewAccelDataRdyY
           _i2c_read1ByteRegister
             _I2C1_Close
               _I2C1_MasterClearIrq
               _I2C1_MasterClose
               _I2C1_MasterDisableIrq
             _I2C1_MasterWrite
               _I2C1_MasterOperation
                 _I2C1_MasterStart
                 _I2C1_Poller
                   _I2C1_MasterFsm
                     _I2C1_DO_ADDRESS_NACK *
                       NULL(Fake) *
                       _I2C1_CallbackReturnReset *
                       _I2C1_CallbackReturnStop *
                       _I2C1_DO_SEND_RESTART *
                         _I2C1_MasterEnableRestart
                       _I2C1_DO_SEND_STOP *
                         _I2C1_MasterStop
                       _rd1RegCompleteHandler *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                           _I2C1_SetCallback
                       _rd1RegCompleteHandler@i2c1_master_example$F1693 *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                       _rd2RegCompleteHandler *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                       _rd2RegCompleteHandler@i2c1_master_example$F1704 *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                       _rdBlkRegCompleteHandler *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                       _rdBlkRegCompleteHandler@i2c1_master_example$F1727 *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                       _wr1RegCompleteHandler *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                       _wr1RegCompleteHandler@i2c1_master_example$F1710 *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                       _wr2RegCompleteHandler *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                       _wr2RegCompleteHandler@i2c1_master_example$F1716 *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                     _I2C1_DO_IDLE *
                     _I2C1_DO_RCEN *
                       _I2C1_MasterStartRx
                     _I2C1_DO_RESET *
                     _I2C1_DO_RX *
                       NULL(Fake) *
                       _I2C1_CallbackReturnReset *
                       _I2C1_CallbackReturnStop *
                       _I2C1_DO_RX_NACK_RESTART *
                         _I2C1_MasterSendNack
                       _I2C1_DO_RX_NACK_STOP *
                         _I2C1_MasterSendNack
                       _I2C1_MasterGetRxData *
                       _I2C1_MasterSendAck *
                       _rd1RegCompleteHandler *
                       _rd1RegCompleteHandler@i2c1_master_example$F1693 *
                       _rd2RegCompleteHandler *
                       _rd2RegCompleteHandler@i2c1_master_example$F1704 *
                       _rdBlkRegCompleteHandler *
                       _rdBlkRegCompleteHandler@i2c1_master_example$F1727 *
                       _wr1RegCompleteHandler *
                       _wr1RegCompleteHandler@i2c1_master_example$F1710 *
                       _wr2RegCompleteHandler *
                       _wr2RegCompleteHandler@i2c1_master_example$F1716 *
                     _I2C1_DO_RX_ACK *
                       _I2C1_MasterSendAck
                     _I2C1_DO_RX_NACK_RESTART *
                     _I2C1_DO_RX_NACK_STOP *
                     _I2C1_DO_SEND_ADR_READ *
                       _I2C1_MasterSendTxData
                     _I2C1_DO_SEND_ADR_WRITE *
                       _I2C1_MasterSendTxData
                     _I2C1_DO_SEND_RESTART *
                     _I2C1_DO_SEND_RESTART_READ *
                       _I2C1_MasterEnableRestart
                     _I2C1_DO_SEND_RESTART_WRITE *
                       _I2C1_MasterEnableRestart
                     _I2C1_DO_SEND_STOP *
                     _I2C1_DO_TX *
                       NULL(Fake) *
                       _I2C1_CallbackReturnReset *
                       _I2C1_CallbackReturnStop *
                       _I2C1_DO_SEND_RESTART_READ *
                       _I2C1_DO_SEND_RESTART_WRITE *
                       _I2C1_DO_SEND_STOP *
                       _I2C1_MasterIsNack *
                       _I2C1_MasterSendTxData *
                       _rd1RegCompleteHandler *
                       _rd1RegCompleteHandler@i2c1_master_example$F1693 *
                       _rd2RegCompleteHandler *
                       _rd2RegCompleteHandler@i2c1_master_example$F1704 *
                       _rdBlkRegCompleteHandler *
                       _rdBlkRegCompleteHandler@i2c1_master_example$F1727 *
                       _wr1RegCompleteHandler *
                       _wr1RegCompleteHandler@i2c1_master_example$F1710 *
                       _wr2RegCompleteHandler *
                       _wr2RegCompleteHandler@i2c1_master_example$F1716 *
                     _I2C1_DO_TX_EMPTY *
                       NULL(Fake) *
                       _I2C1_CallbackReturnReset *
                       _I2C1_CallbackReturnStop *
                       _I2C1_DO_SEND_RESTART *
                       _I2C1_DO_SEND_STOP *
                       _I2C1_MasterSetIrq *
                       _rd1RegCompleteHandler *
                       _rd1RegCompleteHandler@i2c1_master_example$F1693 *
                       _rd2RegCompleteHandler *
                       _rd2RegCompleteHandler@i2c1_master_example$F1704 *
                       _rdBlkRegCompleteHandler *
                       _rdBlkRegCompleteHandler@i2c1_master_example$F1727 *
                       _wr1RegCompleteHandler *
                       _wr1RegCompleteHandler@i2c1_master_example$F1710 *
                       _wr2RegCompleteHandler *
                       _wr2RegCompleteHandler@i2c1_master_example$F1716 *
                     _I2C1_MasterClearIrq *
                     _I2C1_MasterIsNack *
                   _I2C1_MasterWaitForEvent
             _I2C1_Open
               _I2C1_MasterClearIrq
               _I2C1_MasterOpen
             _I2C1_SetAddressNackCallback
               _I2C1_SetCallback
             _I2C1_SetBuffer
             _I2C1_SetDataCompleteCallback
         _i2c_read1ByteRegister
       _BMA253_GetAccelDataZ
         _BMA253_NewAccelDataRdyZ
           _i2c_read1ByteRegister
         _i2c_read1ByteRegister
       _BMA253_NewAccelDataRdyY
       _BMA253_NewAccelDataRdyZ
       _TMAG5273_GetXValue
         _TMAG5273_CalcMeasurement
           _i2c_read2ByteRegister
             _I2C1_Close
             _I2C1_MasterWrite
             _I2C1_Open
             _I2C1_SetAddressNackCallback
             _I2C1_SetBuffer
             _I2C1_SetDataCompleteCallback
     _LIGHTBLUE_SendPacket
       _RN487X_Write *
         _EUSART1_Read (ARG) *
         _EUSART1_Write (ARG) *
         _EUSART2_Read (ARG) *
         _EUSART2_Write (ARG) *
         _strlen (ARG) *
       _strlen *
     _LIGHTBLUE_SplitWord
       _LIGHTBLUE_SplitByte
         _strlen
   _LIGHTBLUE_Initialize *
   _LIGHTBLUE_LedState *
     _LIGHTBLUE_GetDataLedValue
     _LIGHTBLUE_GetErrorLedValue
     _LIGHTBLUE_SendPacket
     _LIGHTBLUE_SplitByte
   _LIGHTBLUE_ParseIncomingPacket *
     _LIGHTBLUE_PerformAction
       _EUSART1_Write *
       _EUSART2_Write *
       _LIGHTBLUE_SetErrorLedValue *
         _LIGHTBLUE_UpdateErrorLed
           _RN487X_Delay *
             _DELAY_milliseconds
           _RN487X_EnterCmdMode *
             _RN487X_ReadMsg
               _RN487X_Read@rn487x_interface$F1835 *
                 _EUSART1_Read *
                 _EUSART2_Read *
             _RN487X_SendCmd
               _RN487X_Write *
               _RN487X_is_tx_done *
                 _EUSART1_is_tx_done *
                 _EUSART2_is_tx_done *
           _RN487X_EnterDataMode *
             _RN487X_ReadMsg
             _RN487X_SendCmd
           _RN487X_SetOutputs *
             _RN487X_ReadDefaultResponse
               _RN487X_Read@rn487x_interface$F1835 *
             _RN487X_SendCmd
   _LIGHTBLUE_PushButton *
     _LIGHTBLUE_GetButtonValue
     _LIGHTBLUE_SendPacket
     _LIGHTBLUE_SplitByte
   _LIGHTBLUE_SendProtocolVersion *
     _LIGHTBLUE_SendPacket
     _LIGHTBLUE_SplitByte
     _strlen
   _LIGHTBLUE_SendSerialData *
     _RN487X_Write *
     _strlen *
   _LIGHTBLUE_TemperatureSensor *
     _LIGHTBLUE_SendPacket
     _LIGHTBLUE_SplitWord
     _TMAG5273_GetTemperatureValue
       _TMAG5273_CalcMeasurement
   _RN487X_DataReady *
     _RN487X_FilterData
       _RN487X_MessageHandler *
         _rn487x_PrintIndicatorCharacters
           _EUSART1_Write *
           _EUSART2_Write *
         _rn487x_PrintMessage
           _EUSART1_Write *
           _EUSART2_Write *
           _strcpy *
           _strlen *
         _rn487x_PrintMessageEnd
           _EUSART1_Write *
           _EUSART2_Write *
         _rn487x_PrintMessageStart
           _EUSART1_Write *
           _EUSART2_Write *
         _strstr
           _strchr
           _strlen
           _strncmp
       _RN487X_Read@rn487x_interface$F1835 *
     _RN487X_is_rx_ready *
       _EUSART1_is_rx_ready *
       _EUSART2_is_rx_ready *
   _RN487X_Init *
     _RN487X_Delay *
     _RN487X_IndicateRx *
     _RN487X_Read@rn487x_interface$F1835 *
     _RN487X_Reset *
     _RN487X_SetSystemMode *
     _RN487X_is_rx_ready *
   _RN487X_IsConnected *
   _RN487X_Read *
     _RN487X_DataReady
   _RN487X_SetAsyncMessageHandler *
   _RN487X_Write *
   _SYSTEM_Initialize *
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
       _EUSART1_SetTxInterruptHandler
     _EUSART2_Initialize
       _EUSART2_SetErrorHandler
       _EUSART2_SetFramingErrorHandler
       _EUSART2_SetOverrunErrorHandler
       _EUSART2_SetRxInterruptHandler
       _EUSART2_SetTxInterruptHandler
     _I2C1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCAF6_SetInterruptHandler
     _PMD_Initialize
     _TMR0_Initialize
   _TMR0_HasOverflowOccured *
   _begin *
     _bitRead8
     _bitWrite8
     _getAngleEn
       _bitRead8
       _readRegister
         _i2c_read1ByteRegister
     _getError
       _bitRead8
       _getDeviceStatus
         _readRegister
     _getLowPower
       _bitRead8
       _readRegister
     _getMagneticChannel
       _bitRead8
       _readRegister
     _getOperatingMode
       _bitRead8
       _readRegister
     _getTemperatureEN
       _bitRead8
       _readRegister
     _isConnected
       _TMAG5273_GetManufacture
         _i2c_read2ByteRegister
         _swap
     _setMagneticChannel
       _bitWrite8
       _getError
       _readRegister
       _writeRegister
         _i2c_write1ByteRegister
           _I2C1_Close
           _I2C1_MasterWrite
           _I2C1_Open
           _I2C1_SetAddressNackCallback
           _I2C1_SetBuffer
           _I2C1_SetDataCompleteCallback
     _setOperatingMode
       _bitWrite8
       _getError
       _readRegister
       _writeRegister
     _setTemperatureEn
       _bitWrite8
       _getError
       _readRegister
       _writeRegister
     _setXYAxisRange
       _bitWrite8
       _getError
       _readRegister
       _writeRegister
     _setZAxisRange
       _bitWrite8
       _getError
       _readRegister
       _writeRegister

 _INTERRUPT_InterruptManager (ROOT)
   NULL(Fake) *
   _EUSART1_Receive_ISR *
     NULL(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _EUSART1_Transmit_ISR *
   _EUSART2_Receive_ISR *
     NULL(Fake) *
     _EUSART2_DefaultErrorHandler *
       _EUSART2_RxDataHandler
     _EUSART2_DefaultFramingErrorHandler *
     _EUSART2_DefaultOverrunErrorHandler *
     _EUSART2_RxDataHandler *
   _EUSART2_Transmit_ISR *
   _PIN_MANAGER_IOC *
     _IOCAF6_ISR
       NULL(Fake) *
       _IOCAF6_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     2D      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
ABS                  0      0     235       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      50       8      100.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      1      47      10       88.8%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0      11      12       21.2%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0      40      14       80.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0      50      16      100.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0      50      18      100.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0      50      20      100.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITBANK13           50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BANK13              50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITBANK14           50      0       0      33        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BANK14              50      0       0      34        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITBANK15           50      0       0      35        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BANK15              50      0       0      36        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITBANK16           50      0       0      37        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BANK16              50      0       0      38        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITBANK17           50      0       0      39        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BANK17              50      0       0      40        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITBANK18           50      0       0      41        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BANK18              50      0       0      42        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITBANK19           50      0       0      43        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BANK19              50      0       0      44        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITBANK20           50      0       0      45        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BANK20              50      0       0      46        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITBANK21           50      0       0      47        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BANK21              50      0       0      48        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITBANK22           50      0       0      49        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BANK22              50      0       0      50        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITBANK23           50      0       0      51        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BANK23              50      0       0      52        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITBANK24           50      0       0      53        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BANK24              50      0       0      54        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITBANK25           20      0       0      55        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BANK25              20      0       0      56        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
DATA                 0      0     235      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Mon Dec 23 21:46:30 2024

                                 _eusart1TxBufferRemaining 0055  
                                   ?_EUSART2_RxDataHandler 0070  
                          __end_of_TMR0_HasOverflowOccured 1EE0  
                                                       l35 1667  
                                                       l44 07FC  
                                                       l53 10B2  
                                                       l29 1639  
                                                       l56 10C3  
                                      _do_I2C_SEND_RESTART 0000  
                                         ?_getDeviceStatus 0070  
                                  getLowPower@lowPowerMode 002F  
                                                      l121 1EF1  
                                                      l202 1EFD  
                                                      l130 117F  
                                                      l211 10A1  
                                                      l124 11E7  
                                                      l205 1EF7  
                                                      l133 1495  
                                                      l221 082A  
                                                      l214 1388  
                                                      l230 084C  
                                                      l127 1695  
                                                      l208 1EDA  
                                                      l224 082C  
                                                      l145 07C3  
                                                      l139 175B  
                                                      l164 04DF  
                                                      l501 10FA  
                                                      l510 1727  
                                                      l193 0F64  
                                                      l522 110D  
                                                      l187 0594  
                                                      l196 1066  
                                                      l534 0C00  
                                                      l199 16F4  
                                                      l537 1120  
                                                      l561 1336  
                                                      l546 0A3F  
                                                      l549 1133  
                                                      l663 0719  
                                                      l673 12B6  
                                                      l682 1FFF  
                                                      l763 0FFF  
                                                      l679 1030  
                                                      l783 0374  
                                                      l759 0FFC  
                                                      l875 093C  
                                                      l789 0377  
                                                      l893 08FF  
                                                      l869 09F9  
                                                      l985 1229  
                                                      l995 0CF4  
                                                      l998 0CF3  
                                             ?_RN487X_Init 0070  
                                             ?_RN487X_Read 0070  
                               __end_of_DELAY_milliseconds 11D2  
                             LIGHTBLUE_SendPacket@packetID 007A  
                                    ?_I2C1_MasterOperation 0070  
                   __end_of_EUSART2_SetFramingErrorHandler 1F28  
                           _EUSART2_SetFramingErrorHandler 1F22  
                                                      _dos 0067  
                                                      _uno 0068  
                               __end_of_getMagneticChannel 04BE  
                               __end_of_setMagneticChannel 0378  
                                                      wreg 0009  
                                   ?_I2C1_MasterSendTxData 0070  
                                     _I2C1_DO_RX_NACK_STOP 1EC2  
                                ?_I2C1_MasterEnableRestart 0070  
                          BMA253_NewAccelDataRdyY@yNewData 007B  
                                     I2C1_SetBuffer@buffer 0071  
                                                     l1005 04BD  
                                                     l1123 0814  
                                                     l2012 1FC8  
                                  ??_rd2RegCompleteHandler 0079  
                                                     l2006 1213  
                                                     l1230 1301  
                                                     l1223 1257  
                                                     l2009 1FBE  
                                                     l1233 11BB  
                                                     l1242 1058  
                                                     l1090 0D48  
                                                     l1227 126E  
                                                     l2108 1F3F  
                                                     l1245 13C2  
                                                     l1093 0D47  
                                                     l1502 17C8  
                                                     l1239 1074  
                                                     l1183 0D9C  
                                            ?_RN487X_Delay 0074  
                                                     l2400 1791  
                                                     l1440 100C  
                                                     l2128 11A7  
                                                     l2410 13E3  
                                                     l2146 1EDF  
                                                     l1443 1FA0  
                                                     l1611 13A4  
                                                     l1179 1F59  
                                                     l2404 129E  
                                                     l1452 1F69  
                                                     l1540 16C3  
                                                     l1461 1FF4  
                                                     l1533 0E50  
                                                     l1437 07FF  
                                                     l1509 17FF  
                                                     l1390 116C  
                                                     l1446 1FAA  
                                                     l1470 1FE9  
                                                     l1630 0B65  
                                                     l1606 11FD  
                                                     l2423 1092  
                                                     l1551 15B1  
                                                     l1711 1F84  
                                                     l1384 1146  
                                                     l2520 1EB2  
                                                     l2416 1ED5  
                                                     l2432 1FDE  
                                                     l1456 1FEF  
                                                     l1393 10E7  
                                                     l1465 1FE4  
                                                     l1481 1017  
                                                     l1473 100D  
                                                     l1449 1FB4  
                                                     l1705 09BA  
                                                     l2097 0B19  
                                                     l2426 1FD3  
                                                     l1730 14A5  
                                                     l1714 1E9A  
                                                     l1562 0ED8  
                                                     l1618 1024  
                                                     l2443 146F  
                                                     l1387 1159  
                                                     l2523 1EB7  
                                                     l1459 1FF2  
                                                     l1483 1018  
                                                     l1627 0B63  
                                                     l1396 1351  
                                                     l2532 1EC6  
                                                     l1724 1534  
                                                     l1580 136C  
                                                     l1468 1FE7  
                                                     l1476 1014  
                                                     l1628 0B5F  
                                                     l2700 05D1  
                                                     l2613 1E6C  
                                                     l2517 1EAD  
                                                     l2453 155D  
                                                     l1733 14BC  
                                                     l3333 1193  
                                                     l2462 1F61  
                                                     l2526 1EBC  
                                                     l2622 1EE6  
                                                     l1486 160B  
                                                     l2535 1ECB  
                                                     l1575 1240  
                                                     l1479 1016  
                                                     l2711 0638  
                                                     l2616 1E66  
                                                     l2552 1E61  
                                                     l2456 1EA8  
                                                     l2544 14E4  
                                                     l1496 144B  
                                                     l3360 12E8  
                                                     l3352 0BB2  
                                                     l1912 1F09  
                                                     l2465 0DD3  
                                                     l2481 0AAA  
                                                     l2529 1EC1  
                                                     l2449 103D  
                                                     l1729 149C  
                                                     l1489 0C4E  
                                                     l1921 1F1B  
                                                     l2482 0AD0  
                                                     l2538 1ED0  
                                                     l2626 1EEB  
                                                     l2634 11D1  
                                                     l1762 1F27  
                                                     l2555 1E63  
                                                     l2571 1E7B  
                                                     l2619 1E7E  
                                                     l2459 1F7B  
                                                     l3339 12CF  
                                                     l1587 0A87  
                                                     l1915 1F0F  
                                                     l1771 1F39  
                                                     l2468 0DF2  
                                                     l1924 1F15  
                                                     l2396 1F96  
                                                     l2493 1F52  
                                                     l2565 104A  
                                                     l3365 0CA1  
                                                     l1765 1F2D  
                                                     l2574 1EA3  
                                                     l3358 12D1  
                                                     l1918 1F03  
                                                     l1774 1F33  
                                                     l2583 1E78  
                                                     l2399 1790  
                                                     l1855 1F8D  
                                                     l2568 1E69  
                                                     l2592 1EE5  
                                                     l1768 1F21  
                                                     l2577 1E72  
                                                     l1873 14EB  
                                                     l1849 097B  
                                                     l2586 1E6F  
                                                     l1874 14F4  
                                                     l1858 1E9E  
                                                     l2595 1E96  
                                                     l2499 15DE  
                                                     l1868 1586  
                                                     l2589 1E75  
                                                     l1877 150C  
                                                     l2598 1E92  
                          BMA253_NewAccelDataRdyZ@zNewData 007B  
                                                     STR_1 2000  
                                                     STR_2 1891  
                                                     STR_3 1891  
                                                     STR_4 187A  
                                                     STR_5 187A  
                                                     STR_6 2000  
                                                     _LATA 0018  
                                                     _LATB 0019  
                                                     _LATC 001A  
                                                     _LATE 001C  
                               LIGHTBLUE_PushButton@button 0020  
                                                     _PMD0 0796  
                                                     _PMD1 0797  
                                                     _PMD2 0798  
                                                     _PMD3 0799  
                                                     _PMD4 079A  
                                                     _PMD5 079B  
                                                     _PMD6 079C  
                                                     _PMD7 079D  
                                                     u9600 1545  
                                                     u9601 1544  
                                                     u9530 1453  
                                                     u9610 103D  
                                                     u9531 1452  
                                                     u9611 103C  
                                                     u9540 1089  
                                                     u9700 14F0  
                                                     u9620 1513  
                                                     u9541 1088  
                                                     u9701 14EF  
                                                     u9621 1512  
                                                     u9550 0DA5  
                                                     u9710 1507  
                                                     u9630 152B  
                                                     u9551 0DA4  
                                                     u9711 1506  
                                                     u9631 152A  
                                                     u9560 0DEF  
                                                     u9720 1043  
                                                     u9800 0BFF  
                                                     u9640 149C  
                                                     u9561 0DEE  
                                                     u9721 1042  
                                                     u9801 0BFE  
                                                     u9641 149B  
                                                     u9570 0AA5  
                                                     u9730 13CC  
                                                     u9650 14A1  
                                                     u9810 12C9  
                                                     u9571 0AA4  
                                                     u9731 13CB  
                                                     u9651 14A0  
                                                     u9811 12C8  
                                                     u9580 1EEB  
                                                     u9740 13D4  
                                                     u9660 14B7  
                                                     u9820 11D1  
                                                     u9900 0E86  
                                                     u9581 1EEA  
                                                     u9741 13D3  
                                                     u9661 14B6  
                                                     u9821 11D0  
                                                     u9901 0E85  
                                                     u9590 153D  
                                                     u9750 1764  
                                                     u9670 1564  
                                                     u9910 0E8C  
                                                     u9830 1193  
                                                     u9591 153C  
                                                     u9751 1763  
                                                     u9671 1563  
                                                     u9911 0E8B  
                                                     u9831 1192  
                                                     u9760 128E  
                                                     u9680 157D  
                                                     u9840 16A7  
                                                     u9920 0C5C  
                                                     u9761 128D  
                                                     u9681 157C  
                                                     u9841 16A6  
                                                     u9921 0C5B  
                                                     u9770 0BC5  
                                                     u9690 14EB  
                                                     u9850 16C3  
                                                     u9930 0C74  
                                                     u9771 0BC4  
                                                     u9691 14EA  
                                                     u9851 16C2  
                                                     u9931 0C73  
                                                     u9780 0BEF  
                                                     u9860 15A4  
                                                     u9940 0C7D  
                                                     u9781 0BEE  
                                                     u9861 15A3  
                                                     u9941 0C7C  
                                                     u9790 0BF4  
                                                     u9870 15B0  
                                                     u9950 0C83  
                                                     u9791 0BF3  
                                                     u9871 15AF  
                                                     u9951 0C82  
                                                     u9880 0E77  
                                                     u9960 0C93  
                                                     u9881 0E76  
                                                     u9961 0C92  
                                                     u9890 0E7D  
                                                     u9970 12DB  
                                                     u9891 0E7C  
                                                     u9971 12DA  
                                                     u9980 12E7  
                                                     u9981 12E6  
                                                     u9990 0A06  
                                                     u9991 0A05  
                                            ?_RN487X_Reset 0071  
                          BMA253_GetAccelDataXYZ@accelData 0036  
                                                     _WPUA 1F39  
                                                     _WPUB 1F44  
                                                     _WPUC 1F4F  
                                                     _WPUE 1F65  
                                    ??_EUSART2_Receive_ISR 0071  
                                  ??_wr2RegCompleteHandler 0079  
                                         ??_I2C1_MasterFsm 0020  
                                            _EUSART1_Write 14E5  
                                            ?_RN487X_Write 0076  
                                            _EUSART2_Write 1496  
                                ??_I2C1_CallbackReturnStop 0079  
                                                     __hex 01A0  
                                                     _main 0595  
                                                     _peek 005F  
                                            ?_EUSART1_Read 0070  
                                                     _seis 00E9  
                                                     _uart 1800  
                                            ?_EUSART2_Read 0070  
                                           _RN487X_ReadMsg 1587  
                                                     fsr0h 0005  
                                                     fsr1h 0007  
                                                     indf0 0000  
                                                     fsr0l 0004  
                                                     indf1 0001  
                                                     fsr1l 0006  
                                                     _tres 0066  
                                                     _swap 11A8  
                                                     btemp 007E  
                                                     _zero 0069  
                            ??_LIGHTBLUE_TemperatureSensor 007C  
                                           _RN487X_SendCmd 1696  
                         RN487X_SetOutputs@stateHighNibble 0025  
                                                     start 0055  
                                           _setXYAxisRange 09BB  
                                         ??_I2C1_SetBuffer 0075  
                             __end_of_EUSART2_Transmit_ISR 1406  
                              __end_of_RN487X_EnterCmdMode 1241  
                                             _statusBuffer 0320  
                                         _setTemperatureEn 08C3  
                                        ?_getTemperatureEN 0070  
                                  ??_LIGHTBLUE_AccelSensor 007C  
                            I2C1_CallbackReturnStop@funPtr 0078  
                               __end_of_TMAG5273_GetXValue 1059  
                                    __end_of_setZAxisRange 093D  
                    __end_of_LIGHTBLUE_ParseIncomingPacket 0595  
                            _LIGHTBLUE_ParseIncomingPacket 04BE  
                                  __end_of_TMR0_Initialize 11A8  
                                             _do_I2C_RESET 0000  
                                       ??_getTemperatureEN 002C  
                                   _i2c_write1ByteRegister 16F5  
                            __end_of_OSCILLATOR_Initialize 1FBF  
                                                    l13000 14E5  
                                                    l13010 1501  
                                                    l13002 14E5  
                                                    l13100 1294  
                                                    l13020 1043  
                                                    l13012 1507  
                                                    l13004 14F0  
                                                    l13030 1E6A  
                                                    l13102 1297  
                                                    l13022 1044  
                                                    l13014 1508  
                                                    l13006 14F5  
                                                    l13110 1001  
                                                    l13032 1E67  
                                                    l13104 129A  
                                                    l13040 13CF  
                                                    l13024 1046  
                                                    l13120 0BB5  
                                                    l13008 14FD  
                                                    l13016 150A  
                                                    l13112 1F97  
                                                    l13200 0E52  
                                                    l14000 03F6  
                                                    l13106 129D  
                                                    l13042 13D4  
                                                    l13050 13E1  
                                                    l13034 13C5  
                                                    l13026 1049  
                                                    l13018 103E  
                                                    l13130 0BCE  
                                                    l13210 0E7D  
                                                    l13202 0E5C  
                                                    l14010 0402  
                                                    l13044 13D8  
                                                    l13036 13CC  
                                                    l13060 1767  
                                                    l13132 0BD9  
                                                    l13116 1FA1  
                                                    l13212 0E80  
                                                    l13204 0E66  
                                                    l13300 0A4E  
                                                    l14012 0407  
                                                    l14020 040E  
                                                    l13046 13DB  
                                                    l13038 13CD  
                                                    l13070 177A  
                                                    l13062 1768  
                                                    l13054 175D  
                                                    l13142 0BF5  
                                                    l13134 0BE2  
                                                    l13126 0BBB  
                                                    l13150 12B7  
                                                    l13214 0E86  
                                                    l13206 0E71  
                                                    l13310 0A5D  
                                                    l13302 0A50  
                                                    l14110 04A1  
                                                    l14022 0413  
                                                    l14014 040C  
                                                    l14006 03F8  
                                                    l12600 1091  
                                                    l13048 13DE  
                                                    l13080 178C  
                                                    l13072 177E  
                                                    l13064 176F  
                                                    l13056 1764  
                                                    l13144 0BF9  
                                                    l13136 0BE5  
                                                    l13128 0BC5  
                                                    l13152 12BC  
                                                    l13160 11BC  
                                                    l13216 0E8C  
                                                    l13208 0E77  
                                                    l13224 0E90  
                                                    l13320 0A6C  
                                                    l13312 0A61  
                                                    l13304 0A54  
                                                    l13240 0C63  
                                                    l13232 0C50  
                                                    l14120 04AD  
                                                    l14112 04A6  
                                                    l14104 0492  
                                                    l14040 0433  
                                                    l14024 0418  
                                                    l14008 03FD  
                                                    l13400 16F6  
                                                    l12602 1FC9  
                                                    l12610 10E8  
                                                    l13082 178F  
                                                    l13074 1783  
                                                    l13066 1774  
                                                    l13058 1766  
                                                    l13146 0BFF  
                                                    l13138 0BEF  
                                                    l13154 12C0  
                                                    l13162 11BD  
                                                    l13170 1697  
                                                    l13218 0E8E  
                                                    l13226 0E98  
                                                    l13330 0A7C  
                                                    l13322 0A70  
                                                    l13314 0A64  
                                                    l13306 0A58  
                                                    l13250 0C83  
                                                    l13242 0C67  
                                                    l13234 0C5C  
                                                    l14202 1391  
                                                    l14122 04B2  
                                                    l14106 0497  
                                                    l14050 043F  
                                                    l14042 0438  
                                                    l14026 041D  
                                                    l14034 0424  
                                                    l13410 171F  
                                                    l13402 16FF  
                                                    l13092 1287  
                                                    l12604 1E70  
                                                    l12612 10F2  
                                                    l12620 1105  
                                                    l12700 1EB1  
                                                    l13076 1784  
                                                    l13068 1775  
                                                    l13412 10A2  
                                                    l13500 160E  
                                                    l13420 10C2  
                                                    l13156 12C9  
                                                    l13164 11C5  
                                                    l13180 1587  
                                                    l13172 1699  
                                                    l13340 135D  
                                                    l13228 0ED7  
                                                    l13332 0A7E  
                                                    l13324 0A72  
                                                    l13316 0A66  
                                                    l13308 0A5B  
                                                    l14212 1FEA  
                                                    l13252 0C93  
                                                    l13244 0C6B  
                                                    l14204 139F  
                                                    l14220 097E  
                                                    l14300 0AE2  
                                                    l14124 04B7  
                                                    l14108 049C  
                                                    l14052 0444  
                                                    l14036 0429  
                                                    l14028 0422  
                                                    l14140 0806  
                                                    l13404 1708  
                                                    l13094 128E  
                                                    l12606 1E73  
                                                    l12614 10F9  
                                                    l12622 110C  
                                                    l12630 111F  
                                                    l12710 1E79  
                                                    l13078 1789  
                                                    l13086 1FD4  
                                                    l13414 10B1  
                                                    l13502 1616  
                                                    l13510 1644  
                                                    l13270 09FC  
                                                    l13190 15A6  
                                                    l13182 1589  
                                                    l13174 16A7  
                                                    l13342 1363  
                                                    l13334 0A84  
                                                    l13326 0A76  
                                                    l13318 0A68  
                                                    l13430 1385  
                                                    l14214 1FDF  
                                                    l13166 1181  
                                                    l13262 12DD  
                                                    l13246 0C74  
                                                    l13238 0C5F  
                                                    l14230 0995  
                                                    l14222 0985  
                                                    l14310 0AE9  
                                                    l14302 0AE4  
                                                    l14150 0CFB  
                                                    l14126 04BC  
                                                    l14118 04A8  
                                                    l14070 0464  
                                                    l14054 0449  
                                                    l14062 0450  
                                                    l14038 042E  
                                                    l14142 0813  
                                                    l13406 1713  
                                                    l13096 128F  
                                                    l12608 1E8F  
                                                    l12704 1EB8  
                                                    l13088 1ED1  
                                                    l13504 1627  
                                                    l13512 1655  
                                                    l13280 0A26  
                                                    l13272 0A06  
                                                    l13520 16DD  
                                                    l13352 1F62  
                                                    l13184 1593  
                                                    l13192 15AA  
                                                    l13176 16B9  
                                                    l13328 0A7A  
                                                    l13424 136D  
                                                    l14400 1179  
                                                    l14216 100F  
                                                    l13360 142A  
                                                    l13168 1183  
                                                    l13264 12E7  
                                                    l13256 12D1  
                                                    l13248 0C7D  
                                                    l13600 0B5A  
                                                    l14208 13A3  
                                                    l14240 09AE  
                                                    l14232 0997  
                                                    l14224 098E  
                                                    l14320 0AEE  
                                                    l14312 0AEA  
                                                    l14304 0AE6  
                                                    l13432 1241  
                                                    l14152 0D09  
                                                    l14080 0470  
                                                    l14064 0455  
                                                    l14056 044E  
                                                    l14048 043A  
                                                    l14136 0800  
                                                    l13408 171C  
                                                    l13098 1291  
                                                    l12618 10FB  
                                                    l12626 110E  
                                                    l12634 1121  
                                                    l12642 131C  
                                                    l12650 113E  
                                                    l12714 1E93  
                                                    l12810 0A9B  
                                                    l12730 1EB3  
                                                    l12706 1EBB  
                                                    l12722 1EC2  
                                                    l13418 10B3  
                                                    l13506 163C  
                                                    l13282 0A2E  
                                                    l13274 0A0F  
                                                    l13514 104C  
                                                    l13522 16E1  
                                                    l14410 1482  
                                                    l14402 1470  
                                                    l13194 15B0  
                                                    l13186 15A4  
                                                    l13178 16BD  
                                                    l13290 1237  
                                                    l13338 1352  
                                                    l13426 1370  
                                                    l13530 109E  
                                                    l13362 142F  
                                                    l13370 179A  
                                                    l13258 12DB  
                                                    l13602 0B5C  
                                                    l14250 093D  
                                                    l13610 1F34  
                                                    l14242 09B0  
                                                    l14234 0999  
                                                    l14226 0991  
                                                    l14218 097C  
                                                    l14330 0AF8  
                                                    l14322 0AF0  
                                                    l14314 0AEB  
                                                    l14306 0AE7  
                                                    l13442 1256  
                                                    l13434 124F  
                                                    l13346 1027  
                                                    l14154 0D17  
                                                    l14146 0CF5  
                                                    l14082 0475  
                                                    l14090 047C  
                                                    l14066 045A  
                                                    l14138 0800  
                                                    l12628 1118  
                                                    l12636 112B  
                                                    l12644 1335  
                                                    l12652 1145  
                                                    l12660 1158  
                                                    l12820 0AAC  
                                                    l12812 0AA5  
                                                    l12732 1EB6  
                                                    l12724 1EC5  
                                                    l12716 1EC7  
                                                    l12900 14CA  
                                                    l13508 163C  
                                                    l13276 0A1A  
                                                    l13268 09FC  
                                                    l13524 16EC  
                                                    l13516 16C5  
                                                    l14412 1489  
                                                    l14404 1475  
                                                    l13428 137D  
                                                    l14420 1735  
                                                    l13364 143B  
                                                    l13372 179D  
                                                    l13356 15DF  
                                                    l13380 0B6E  
                                                    l13604 0B61  
                                                    l13620 1F16  
                                                    l14260 0954  
                                                    l14252 093F  
                                                    l13612 1F22  
                                                    l14244 09B2  
                                                    l14236 09A0  
                                                    l14228 0993  
                                                    l14340 0B04  
                                                    l14332 0AFA  
                                                    l14324 0AF2  
                                                    l14316 0AEC  
                                                    l14308 0AE8  
                                                    l13436 1254  
                                                    l13348 102F  
                                                    l14156 0D1C  
                                                    l14164 0D23  
                                                    l14148 0CF5  
                                                    l14092 0481  
                                                    l14084 047A  
                                                    l14068 045F  
                                                    l14076 0466  
                                                    l13452 11A8  
                                                    l13532 1258  
                                                    l13540 0D4E  
                                                    l12590 144D  
                                                    l12638 1132  
                                                    l12742 1E62  
                                                    l12750 1EA6  
                                                    l12830 0AB4  
                                                    l12814 0AA8  
                                                    l12806 0A88  
                                                    l12718 1ECA  
                                                    l12910 1535  
                                                    l13278 0A23  
                                                    l13470 13BE  
                                                    l13462 13A7  
                                                    l13630 07C6  
                                                    l13526 16F0  
                                                    l13518 16CF  
                                                    l14414 148F  
                                                    l14406 1476  
                                                    l13286 122A  
                                                    l13198 0E51  
                                                    l13294 0A40  
                                                    l14510 0575  
                                                    l14422 173B  
                                                    l14430 0725  
                                                    l13366 1440  
                                                    l13374 17AC  
                                                    l13358 0C01  
                                                    l13382 0B7B  
                                                    l13390 0BA3  
                                                    l13622 1F04  
                                                    l14270 0968  
                                                    l14262 0956  
                                                    l14254 0946  
                                                    l13614 1F28  
                                                    l14246 09B3  
                                                    l14238 09A7  
                                                    l14350 0B10  
                                                    l14342 0B06  
                                                    l14334 0AFB  
                                                    l14326 0AF4  
                                                    l14318 0AED  
                                                    l14166 0D28  
                                                    l14174 0D2F  
                                                    l14158 0D21  
                                                    l14094 0486  
                                                    l14078 046B  
                                                    l13454 11AA  
                                                    l13710 12AA  
                                                    l13534 1258  
                                                    l13446 1F53  
                                                    l13550 0D8A  
                                                    l13542 0D5B  
                                                    l12920 1E6D  
                                                    l12592 1453  
                                                    l12672 10D5  
                                                    l12648 1134  
                                                    l12656 1147  
                                                    l12664 115A  
                                                    l12680 1337  
                                                    l12728 1E76  
                                                    l12736 1E7C  
                                                    l12752 1EA7  
                                                    l12760 1F7A  
                                                    l12824 0AB0  
                                                    l12808 0A96  
                                                    l12840 1F4E  
                                                    l12912 1538  
                                                    l13464 13B2  
                                                    l13640 07E7  
                                                    l13632 07CA  
                                                    l14408 147C  
                                                    l13288 1231  
                                                    l13296 0A47  
                                                    l13528 1095  
                                                    l14504 056C  
                                                    l14424 1740  
                                                    l14416 1728  
                                                    l14440 0769  
                                                    l14432 0730  
                                                    l13376 17B1  
                                                    l13368 1794  
                                                    l13392 0BA8  
                                                    l13384 0B8D  
                                                    l13480 17EA  
                                                    l13624 1F0A  
                                                    l14280 0979  
                                                    l14272 096F  
                                                    l14264 0958  
                                                    l14256 094F  
                                                    l13616 1F1C  
                                                    l13608 1F2E  
                                                    l14248 09B8  
                                                    l14360 1FB8  
                                                    l14352 0B12  
                                                    l14344 0B09  
                                                    l14336 0AFC  
                                                    l14328 0AF6  
                                                    l14176 0D34  
                                                    l14184 0D3B  
                                                    l14168 0D2D  
                                                    l14096 048B  
                                                    l13456 11AC  
                                                    l13712 12B3  
                                                    l13536 1261  
                                                    l13448 1F58  
                                                    l13552 0D8F  
                                                    l13544 0D69  
                                                    l13720 00AB  
                                                    l13800 08C5  
                                                    l14520 0668  
                                                    l12746 1E64  
                                                    l12594 1462  
                                                    l12674 10DF  
                                                    l12658 1151  
                                                    l12666 1164  
                                                    l12682 1350  
                                                    l12738 1E60  
                                                    l12690 1EA0  
                                                    l12842 1F51  
                                                    l12914 153D  
                                                    l12922 1031  
                                                    l13466 13B2  
                                                    l13642 07EF  
                                                    l13634 07D2  
                                                    l13650 0EDA  
                                                    l12930 1E97  
                                                    l13298 0A4B  
                                                    l14506 0572  
                                                    l14450 04C0  
                                                    l14426 1755  
                                                    l14418 172C  
                                                    l14442 077B  
                                                    l14434 0742  
                                                    l13490 1F7C  
                                                    l13394 0BB1  
                                                    l13378 0B68  
                                                    l13482 17F0  
                                                    l13474 17C9  
                                                    l13626 1EFE  
                                                    l13618 1F10  
                                                    l14274 0971  
                                                    l14266 095A  
                                                    l14258 0952  
                                                    l14290 1F95  
                                                    l14362 1FB9  
                                                    l14354 0B15  
                                                    l14346 0B0C  
                                                    l14338 0AFD  
                                                    l14282 1FBF  
                                                    l14370 11A2  
                                                    l14186 0D40  
                                                    l14178 0D39  
                                                    l14098 0490  
                                                    l13458 11BB  
                                                    l13554 0D94  
                                                    l13562 0D9B  
                                                    l13546 0D77  
                                                    l13538 0D49  
                                                    l13730 00EE  
                                                    l13722 00AB  
                                                    l13810 08E6  
                                                    l13802 08C5  
                                                    l14530 069E  
                                                    l14522 0672  
                                                    l12596 1084  
                                                    l12676 10E6  
                                                    l12668 116B  
                                                    l12852 15B9  
                                                    l12748 1EA4  
                                                    l12756 1F73  
                                                    l12764 1F5A  
                                                    l12780 0DAA  
                                                    l12772 0D9D  
                                                    l12692 1EA9  
                                                    l12916 1545  
                                                    l12924 1032  
                                                    l13468 13B4  
                                                    l13644 07F3  
                                                    l13636 07DA  
                                                    l13660 0F3F  
                                                    l13652 0EF7  
                                                    l14372 1EEC  
                                                    l12940 1521  
                                                    l14460 04D8  
                                                    l14452 04C1  
                                                    l14444 07AB  
                                                    l14436 0747  
                                                    l14428 071B  
                                                    l14380 11E1  
                                                    l13388 0B90  
                                                    l13484 17F3  
                                                    l13476 17D9  
                                                    l13580 0B1A  
                                                    l14196 1389  
                                                    l14276 0973  
                                                    l14268 0961  
                                                    l14284 1F8E  
                                                    l14364 1FBC  
                                                    l13628 1F3A  
                                                    l14356 0B17  
                                                    l14348 0B0E  
                                                    l14292 0AD1  
                                                    l14188 0D45  
                                                    l13716 12B5  
                                                    l13708 129F  
                                                    l13556 0D99  
                                                    l13548 0D85  
                                                    l13572 1FF7  
                                                    l13740 0159  
                                                    l13732 00F3  
                                                    l13724 00B6  
                                                    l13820 0F67  
                                                    l13812 08EB  
                                                    l13804 08D0  
                                                    l14540 06CC  
                                                    l14532 06A9  
                                                    l14524 067D  
                     __end_of_TMAG5273_GetTemperatureValue 1075  
                             _TMAG5273_GetTemperatureValue 1067  
                                                    l12598 1089  
                                                    l12686 1EE0  
                                                    l12854 15BC  
                                                    l12846 15B2  
                                                    l12758 1F75  
                                                    l12766 1F5C  
                                                    l12790 0DB2  
                                                    l12838 1F4C  
                                                    l12694 1EAC  
                                                    l12918 1548  
                                                    l12926 1035  
                                                    l13638 07DE  
                                                    l13662 0F4D  
                                                    l13654 0EFC  
                                                    l14390 1684  
                                                    l14382 1668  
                                                    l12950 1531  
                                                    l12942 1525  
                                                    l12934 150D  
                                                    l14470 0504  
                                                    l14462 04E4  
                                                    l14454 04C4  
                                                    l14446 07AF  
                                                    l14438 0752  
                                                    l13646 1068  
                                                    l14374 11D2  
                                                    l13494 1F85  
                                                    l13486 17F7  
                                                    l13478 17DD  
                                                    l13590 0B36  
                                                    l13582 0B25  
                                                    l14198 138F  
                                                    l14630 11FA  
                                                    l14622 11E9  
                                                    l14278 0974  
                                                    l14286 1F90  
                                                    l14366 1FBD  
                                                    l14358 1FB5  
                                                    l14294 0AD3  
                                                    l13910 0CC3  
                                                    l13902 0CA2  
                                                    l13566 12E9  
                                                    l13398 16F6  
                                                    l13750 01A2  
                                                    l13742 0161  
                                                    l13734 011F  
                                                    l13726 00BB  
                                                    l13830 0F93  
                                                    l13822 0F67  
                                                    l13814 08F5  
                                                    l13806 08D5  
                                                    l14550 06F2  
                                                    l14542 06CC  
                                                    l14534 06B4  
                                                    l14526 0688  
                                                    l14518 0665  
                                                    l12848 15B5  
                                                    l12864 15C2  
                                                    l12768 1F60  
                                                    l12792 0DD5  
                                                    l12784 0DAE  
                                                    l12776 0DA6  
                                                    l12872 1EBD  
                                                    l12880 1ECE  
                                                    l12928 1038  
                                                    l12960 14A1  
                                                    l13664 0F51  
                                                    l13656 0F07  
                                                    l13648 105A  
                                                    l14392 168F  
                                                    l14384 166A  
                                                    l13672 1EF2  
                                                    l12952 1533  
                                                    l12944 152B  
                                                    l12936 150D  
                                                    l13680 0817  
                                                    l14480 0522  
                                                    l14472 0507  
                                                    l14464 04EA  
                                                    l14456 04C9  
                                                    l14448 07B8  
                                                    l14376 11D4  
                                                    l13576 1FAB  
                                                    l14640 07FD  
                                                    l13488 17FA  
                                                    l13592 0B42  
                                                    l13584 0B2A  
                                                    l14624 11EE  
                                                    l14288 1F92  
                                                    l14296 0AD5  
                                                    l14368 1194  
                                                    l13912 0CC8  
                                                    l13920 0CCF  
                                                    l13904 0CA2  
                                                    l13568 12F5  
                                                    l13760 0211  
                                                    l13752 01CE  
                                                    l13744 0167  
                                                    l13736 0127  
                                                    l13728 00E6  
                                                    l13840 0FD0  
                                                    l13832 0F98  
                                                    l13824 0F72  
                                                    l13816 08FC  
                                                    l13808 08DE  
                                                    l14536 06BF  
                                                    l14528 0693  
                                                    l12858 15BE  
                                                    l12794 0DE4  
                                                    l12698 1EAE  
                                                    l12874 1EC0  
                                                    l12882 1ECF  
                                                    l12890 14C2  
                                                    l13498 160E  
                                                    l12970 14B8  
                                                    l12962 14A6  
                                                    l13666 0F59  
                                                    l13658 0F27  
                                                    l14386 166E  
                                                    l12946 152C  
                                                    l12938 1513  
                                                    l13682 0818  
                                                    l14490 053B  
                                                    l14482 0527  
                                                    l14474 050D  
                                                    l14466 04F3  
                                                    l14458 04CF  
                                                    l14394 116D  
                                                    l14378 11D8  
                                                    l13594 0B49  
                                                    l13586 0B30  
                                                    l14650 1023  
                                                    l14626 11F4  
                                                    l14298 0AE0  
                                                    l13922 0CD4  
                                                    l13930 0CDB  
                                                    l13914 0CCD  
                                                    l13906 0CA8  
                                                    l13770 0280  
                                                    l13762 0217  
                                                    l13754 01D6  
                                                    l13746 0194  
                                                    l13738 012D  
                                                    l13842 0FD8  
                                                    l13834 0FAD  
                                                    l13826 0F77  
                                                    l14562 070D  
                                                    l14554 06FB  
                                                    l14546 06D5  
                                                    l14538 06C1  
                                                    l12796 0DEF  
                                                    l12964 14AD  
                                                    l12972 14BA  
                                                    l12956 1496  
                                                    l14388 1679  
                                                    l13676 1ED6  
                                                    l12948 152E  
                                                    l12980 155E  
                                                    l13684 0826  
                                                    l13692 0844  
                                                    l14492 0542  
                                                    l14484 0529  
                                                    l14476 0517  
                                                    l14468 04FA  
                                                    l13668 1EF8  
                                                    l14396 1172  
                                                    l13596 0B4F  
                                                    l13588 0B31  
                                                    l14644 1019  
                                                    l14628 11F7  
                                                    l14636 11FC  
                                                    l14660 11FE  
                                                    l13932 0CE0  
                                                    l13940 0CE7  
                                                    l13924 0CD9  
                                                    l13908 0CB5  
                                                    l13780 02C8  
                                                    l13772 0288  
                                                    l13764 0244  
                                                    l13756 01DC  
                                                    l13748 019C  
                                                    l13844 0FDE  
                                                    l13836 0FB5  
                                                    l13828 0F8B  
                                                    l13860 09D7  
                                                    l13852 09BD  
                                                    l12798 0DF1  
                                                    l12878 1ECC  
                                                    l12894 14C6  
                                                    l12886 14BD  
                                                    l12966 14B1  
                                                    l12958 1496  
                                                    l12990 157E  
                                                    l12982 1564  
                                                    l12974 1E9B  
                                                    l13686 082E  
                                                    l14494 055C  
                                                    l14486 052C  
                                                    l14478 051F  
                                                    l14398 1173  
                                                    l14654 0DF3  
                                                    l13598 0B54  
                                                    l14646 1019  
                                                    l14670 120D  
                                                    l14662 1201  
                                                    l13942 0CEC  
                                                    l13934 0CE5  
                                                    l13790 0338  
                                                    l13782 02F5  
                                                    l13774 028E  
                                                    l13766 024C  
                                                    l13758 0209  
                                                    l13846 0FF4  
                                                    l13838 0FBB  
                                                    l13862 09DF  
                                                    l13854 09BD  
                                                    l14566 0716  
                                                    l14558 0704  
                                                    l12888 14BF  
                                                    l12968 14B7  
                                                    l12992 1580  
                                                    l12984 1573  
                                                    l13688 0838  
                                                    l14496 0563  
                                                    l14488 0532  
                                                    l14656 0E39  
                                                    l14648 1021  
                                                    l14672 1210  
                                                    l14664 1204  
                                                    l13960 039A  
                                                    l13952 0378  
                                                    l13944 0CF1  
                                                    l13792 033E  
                                                    l13784 02FD  
                                                    l13776 02BA  
                                                    l13768 0252  
                                                    l13848 0FFC  
                                                    l13864 09E4  
                                                    l13856 09C8  
                                                    l13880 091B  
                                                    l13872 0902  
                                                    l12994 1583  
                                                    l12986 1577  
                                                    l12978 155E  
                                                    l14498 0566  
                                                    l14658 0E42  
                                                    l14666 1207  
                                                    l14674 1EDB  
                                                    l13970 03C5  
                                                    l13962 03A8  
                                                    l13954 0378  
                                                    l13794 036C  
                                                    l13786 0303  
                                                    l13778 02C2  
                                                    l13866 09EF  
                                                    l13858 09CD  
                                                    l13882 0923  
                                                    l13874 0902  
                                                    l16450 05A3  
                                                    l16442 0595  
                                                    l12996 1585  
                                                    l12988 157D  
                                                    l14668 120A  
                                                    l13892 1214  
                                                    l13980 03D1  
                                                    l13972 03CA  
                                                    l13964 03B6  
                                                    l13956 037E  
                                                    l13788 0330  
                                                    l13796 0374  
                                                    l13868 09F6  
                                                    l13884 0928  
                                                    l13876 090D  
                                                    l16460 05CB  
                                                    l16452 05A9  
                                                    l16444 059E  
                                                    l16630 0AC2  
                                                    l13894 1214  
                                                    l13982 03D6  
                                                    l13966 03BB  
                                                    l13958 038C  
                                                    l13886 0932  
                                                    l13878 0912  
                                                    l16470 0608  
                                                    l16462 05DA  
                                                    l16454 05B1  
                                                    l16446 059F  
                                                    l16632 0DC5  
                                                    l13896 121A  
                                                    l13984 03DB  
                                                    l13992 03E2  
                                                    l13968 03C0  
                                                    l13888 0939  
                                                    l16480 0628  
                                                    l16472 060E  
                                                    l16464 05EC  
                                                    l16456 05B9  
                                                    l16448 05A0  
                                                    l16634 15D0  
                                                    l16626 057D  
                                                    l13898 1228  
                                                    l13994 03E7  
                                                    l13986 03E0  
                                                    l13978 03CC  
                                                    l16482 0641  
                                                    l16474 0612  
                                                    l16466 05F7  
                                                    l16458 05BB  
                                                    l16628 14DC  
                                                    l13996 03EC  
                                                    l16484 0654  
                                                    l16476 0615  
                                                    l16468 0602  
                                                    l13998 03F1  
                                                    l16478 0619  
                                    _eusart1RxStatusBuffer 00BE  
                                        __end_of_I2C1_Open 1792  
                                                    ?_main 0070  
                           ?_RN487X_SetAsyncMessageHandler 0071  
                                                    ?_swap 0071  
                                                    u10000 0A2E  
                                                    u10001 0A2D  
                                                    u10010 0A4B  
                                                    u10011 0A4A  
                                                    u10020 0A58  
                                                    u10100 16FF  
                                                    u10021 0A57  
                                                    u10101 16FE  
                                                    u10030 142F  
                                                    u10110 1727  
                                                    u10031 142E  
                                                    u10111 1726  
                                                    u10120 10AF  
                                                    u10200 1F83  
                                                    u10040 1440  
                                                    u11000 042E  
                                                    u10121 10AD  
                                                    u10201 1F81  
                                                    u10041 143F  
                                                    u11001 042D  
                                                    u10130 10B0  
                                                    u10210 1F84  
                                                    u10050 17C8  
                                                    u11010 0433  
                                                    u10051 17C7  
                                                    u11011 0432  
                                                    u10140 10C0  
                                                    u10220 1F8C  
                                                    u10060 0B6E  
                                                    u11100 0464  
                                                    u11020 0438  
                                                    u10300 0D8F  
                                                    u10141 10BE  
                                                    u10221 1F8A  
                                                    u10061 0B6D  
                                                    u11101 0463  
                                                    u11021 0437  
                                                    u10301 0D8E  
                                                    u10150 10C1  
                                                    u10230 1F8D  
                                                    u10070 0B8D  
                                                    u11110 046B  
                                                    u11030 043F  
                                                    u10310 0D94  
                                                    u10055 17C4  
                                                    u10071 0B8C  
                                                    u11111 046A  
                                                    u11031 043E  
                                                    u10311 0D93  
                                                    u10240 1616  
                                                    u10400 0F59  
                                                    u10080 0BA8  
                                                    u11200 049C  
                                                    u11120 0470  
                                                    u11040 0444  
                                                    u10320 0D99  
                                                    u10241 1615  
                                                    u10401 0F58  
                                                    u10081 0BA7  
                                                    u11201 049B  
                                                    u11121 046F  
                                                    u11041 0443  
                                                    u10321 0D98  
                                                    u10090 0BB1  
                                                    u10330 0B2A  
                                                    u10170 1254  
                                                    u11210 04A1  
                                                    u11130 0475  
                                                    u11050 0449  
                                                    u10091 0BB0  
                                                    u10331 0B29  
                                                    u10171 1253  
                                                    u11211 04A0  
                                                    u11131 0474  
                                                    u11051 0448  
                                                    u10260 1644  
                                                    u10420 0826  
                                                    u10180 17D9  
                                                    u10340 0B30  
                                                    u10164 124A  
                                                    u11300 0D2D  
                                                    u11220 04A6  
                                                    u11140 047A  
                                                    u11060 044E  
                                                    u10500 00F3  
                                                    u10261 1643  
                                                    u10421 0825  
                                                    u10181 17D8  
                                                    u10341 0B2F  
                                                    u10165 1249  
                                                    u11301 0D2C  
                                                    u11221 04A5  
                                                    u11141 0479  
                                                    u11061 044D  
                                                    u10501 00F2  
                                                    u10430 082A  
                                                    u10190 17EA  
                                                    u10350 0B49  
                                                    u11310 0D34  
                                                    u11230 04AD  
                                                    u11150 0481  
                                                    u11070 0455  
                                                    u10510 012D  
                                                    u10255 162D  
                                                    u10431 0829  
                                                    u10415 081B  
                                                    u10191 17E9  
                                                    u10351 0B48  
                                                    u11311 0D33  
                                                    u11231 04AC  
                                                    u11151 0480  
                                                    u11071 0454  
                                                    u10511 012C  
                                                    u10440 0833  
                                                    u11400 1755  
                                                    u10360 0B5A  
                                                    u11320 0D39  
                                                    u11240 04B2  
                                                    u11160 0486  
                                                    u11080 045A  
                                                    u10600 033E  
                                                    u10520 0167  
                                                    u10441 0831  
                                                    u11401 1754  
                                                    u10361 0B59  
                                                    u11321 0D38  
                                                    u11241 04B1  
                                                    u11161 0485  
                                                    u11081 0459  
                                                    u10601 033D  
                                                    u10521 0166  
                                                    u10370 07DA  
                                                    u10450 0834  
                                                    u11330 0D40  
                                                    u11250 04B7  
                                                    u11170 048B  
                                                    u11090 045F  
                                                    u10290 0D8A  
                                                    u10530 01A2  
                                                    u10610 08D5  
                                                    u10275 165B  
                                                    u10371 07D9  
                                                    u11331 0D3F  
                                                    u11251 04B6  
                                                    u11171 048A  
                                                    u11091 045E  
                                                    u10291 0D89  
                                                    u10531 01A1  
                                                    u10611 08D4  
                                                    u10380 07EF  
                                                    u11500 056B  
                                                    u11340 0D45  
                                                    u11260 04BC  
                                                    u11180 0490  
                                                    u10284 125D  
                                                    u10540 01DC  
                                                    u10620 08EB  
                                                    u10700 0928  
                                                    u10381 07EE  
                                                    u11501 056A  
                                                    u11405 1751  
                                                    u11341 0D44  
                                                    u11261 04BB  
                                                    u11181 048F  
                                                    u10285 125C  
                                                    u10541 01DB  
                                                    u10621 08EA  
                                                    u10701 0927  
                                                    u11510 0572  
                                                    u11430 07B8  
                                                    u11350 138F  
                                                    u11270 0D1C  
                                                    u11190 0497  
                                                    u10710 0CC8  
                                                    u10550 0217  
                                                    u10630 0F77  
                                                    u11511 0571  
                                                    u11431 07B7  
                                                    u11415 0755  
                                                    u11351 138E  
                                                    u11271 0D1B  
                                                    u11191 0496  
                                                    u10711 0CC7  
                                                    u10551 0216  
                                                    u10631 0F76  
                                                    u11440 04CF  
                                                    u11360 139F  
                                                    u11280 0D21  
                                                    u10800 03C0  
                                                    u10720 0CCD  
                                                    u10480 12B3  
                                                    u10560 0252  
                                                    u10640 0F98  
                                                    u11520 06D4  
                                                    u11441 04CE  
                                                    u11425 0782  
                                                    u11361 139E  
                                                    u11281 0D20  
                                                    u10801 03BF  
                                                    u10721 0CCC  
                                                    u10481 12B2  
                                                    u10561 0251  
                                                    u10641 0F97  
                                                    u11521 06D3  
                                                    u11450 04EA  
                                                    u11370 1FEF  
                                                    u11290 0D28  
                                                    u10810 03C5  
                                                    u10730 0CD4  
                                                    u10570 028E  
                                                    u10490 00BB  
                                                    u10650 0FBB  
                                                    u11530 06F1  
                                                    u10395 0F12  
                                                    u11451 04E9  
                                                    u11371 1FEE  
                                                    u11291 0D27  
                                                    u10811 03C4  
                                                    u10731 0CD3  
                                                    u10571 028D  
                                                    u10491 00BA  
                                                    u10651 0FBA  
                                                    u11531 06F0  
                                                    u11380 1FE4  
                                                    u11620 11EE  
                                                    u10900 03F6  
                                                    u10820 03CA  
                                                    u10740 0CD9  
                                                    u10580 02C8  
                                                    u10660 0FDE  
                                                    u11540 06FA  
                                                    u11381 1FE3  
                                                    u11621 11ED  
                                                    u10901 03F5  
                                                    u10821 03C9  
                                                    u10741 0CD8  
                                                    u10581 02C7  
                                                    u10661 0FDD  
                                                    u11541 06F9  
                                                    u11470 050D  
                                                    u11390 1014  
                                                    u11630 11F4  
                                                    u10910 03FD  
                                                    u10830 03D1  
                                                    u10750 0CE0  
                                                    u10590 0303  
                                                    u10670 09CD  
                                                    u11550 0703  
                                                    u11471 050C  
                                                    u11391 1013  
                                                    u11631 11F3  
                                                    u10911 03FC  
                                                    u10831 03D0  
                                                    u10751 0CDF  
                                                    u10591 0302  
                                                    u10671 09CC  
                                                    u11551 0702  
                                                    u11480 0527  
                                                    u11640 1021  
                                                    u10920 0402  
                                                    u10840 03D6  
                                                    u10760 0CE5  
                                                    u10680 09E4  
                                                    u11560 070C  
                                                    u11481 0526  
                                                    u11465 04FD  
                                                    u11641 1020  
                                                    u10921 0401  
                                                    u10841 03D5  
                                                    u10761 0CE4  
                                                    u10681 09E3  
                                                    u11561 070B  
                                                    u11490 0532  
                                                    u11650 0E50  
                                                    u10930 0407  
                                                    u10850 03DB  
                                                    u10770 0CEC  
                                                    u10690 0912  
                                                    u11570 0715  
                                                    u11491 0531  
                                                    u11651 0E4F  
                                                    u10931 0406  
                                                    u10851 03DA  
                                                    u10771 0CEB  
                                                    u10691 0911  
                                                    u11571 0714  
                                                    u10940 040C  
                                                    u10860 03E0  
                                                    u10780 0CF1  
                                                    u10941 040B  
                                                    u10861 03DF  
                                                    u10781 0CF0  
                                                    u10950 0413  
                                                    u10870 03E7  
                                                    u10790 03BB  
                                                    u10951 0412  
                                                    u10871 03E6  
                                                    u10791 03BA  
                                                    u10960 0418  
                                                    u10880 03EC  
                                                    u10961 0417  
                                                    u10881 03EB  
                                                    u10970 041D  
                                                    u10890 03F1  
                                                    u10971 041C  
                                                    u10891 03F0  
                                                    u10980 0422  
                                                    u10981 0421  
                                                    u10990 0429  
                                                    u10991 0428  
                                                    u13800 05F7  
                                                    u13801 05F6  
                                                    u13810 0602  
                                                    u13811 0601  
                                                    u13820 0608  
                                                    u13821 0607  
                                                    u13830 0627  
                            __end_of_rn487x_driver_version 2012  
                                                    u13831 0626  
                                                    u13840 0640  
                                                    u13841 063F  
                                                    u13850 0662  
                                                    u13770 05B1  
                                                    u13851 0661  
                                                    u13771 05B0  
                                                    u13780 05B9  
                                                    u13781 05B8  
                                                    u13790 05D9  
                                                    u13791 05D8  
                                                    u13867 11C0  
                               __end_of_i2c1_fsmStateTable 1848  
                                                    _OSCEN 0891  
                                                    _TMR0H 059D  
                                                    _TMR0L 059C  
                                                    _TRISA 0012  
                                                    _TRISB 0013  
                                                    _TRISC 0014  
                                                    _TRISE 0016  
                                   ??_I2C1_MasterGetRxData 0071  
                              LIGHTBLUE_PushButton@payload 0021  
                                    ?_I2C1_DO_RX_NACK_STOP 0070  
                               ??_I2C1_CallbackReturnReset 0079  
                                        ??_I2C1_MasterOpen 0071  
                                     _EUSART1_Transmit_ISR 1406  
                                        ??_I2C1_MasterStop 0071  
                                        ??_I2C1_Initialize 0071  
                                                    _pHead 0060  
                                                    _begin 0665  
                                                    _cinco 0064  
                                  __end_of_PIN_MANAGER_IOC 1F73  
                                           ??_RN487X_Delay 0076  
                                                    _siete 00E8  
                           BMA253_GetAccelDataY@yAccelData 002D  
                                           ??_RN487X_Reset 0072  
                                    _i2c_read1ByteRegister 0BB3  
                                           ?_EUSART1_Write 0071  
                                           ??_RN487X_Write 0077  
                                           ?_EUSART2_Write 0071  
                                   __end_of_RN487X_ReadMsg 15B2  
                                                    pclath 000A  
                                i2c_write1ByteRegister@reg 0024  
                                   __end_of_RN487X_SendCmd 16C4  
                                           ??_EUSART1_Read 0071  
                                LIGHTBLUE_PerformAction@id 0029  
                                           ??_EUSART2_Read 0071  
                                                    status 0003  
                                   __end_of_setXYAxisRange 09FA  
                                                    wtemp0 007E  
                                             ??_I2C1_DO_RX 0079  
                                             ??_I2C1_DO_TX 0079  
                                          __end_of_strncmp 0CA2  
                                   ??_RN487X_SetSystemMode 0072  
               __end_of_EUSART1_DefaultFramingErrorHandler 1E5F  
                     ??_EUSART1_DefaultFramingErrorHandler 0070  
                      ?_EUSART1_DefaultFramingErrorHandler 0070  
                       _EUSART1_DefaultFramingErrorHandler 1E5E  
                                   ??_I2C1_DO_ADDRESS_NACK 0079  
                             __end_of_RN487X_EnterDataMode 136D  
                                             ??_I2C1_Close 0071  
                    __end_of_EUSART2_SetTxInterruptHandler 1F3A  
                            _EUSART2_SetTxInterruptHandler 1F34  
                                            _fsmStateTable 1848  
                                          __initialization 0057  
                                   _rn487x_PrintMessageEnd 0C01  
                                               _i2c_status 0120  
                               __end_of_EUSART1_Initialize 097C  
                                             __end_of_main 0665  
                                             __end_of_uart 1828  
                              ?_LIGHTBLUE_GetErrorLedValue 0070  
                                             __end_of_swap 11BC  
                                 _LIGHTBLUE_UpdateErrorLed 136D  
                               __end_of_RN487X_is_rx_ready 1FB5  
                              ?_INTERRUPT_InterruptManager 0070  
                               ?_LIGHTBLUE_GetDataLedValue 0070  
                           BMA253_GetAccelDataZ@zAccelData 002D  
                                            _do_I2C_DO_ACK 0000  
                                   ??_I2C1_MasterOperation 007B  
                                                   ??_main 004C  
                                                   ??_swap 0073  
                                ?_rn487x_PrintMessageStart 0070  
                            ?_TMAG5273_GetTemperatureValue 0070  
                      __end_of_EUSART2_DefaultErrorHandler 1E8B  
                              _EUSART2_DefaultErrorHandler 1E87  
                                  _LIGHTBLUE_PerformAction 0815  
                         RN487X_MessageHandler@messageType 0042  
                         __end_of_LIGHTBLUE_SendSerialData 07C4  
                                    ?_EUSART1_Transmit_ISR 0070  
                                       __end_of_I2C1_DO_RX 0AD1  
                                       __end_of_I2C1_DO_TX 0DF3  
                                         _RN487X_DataReady 1389  
                                       __end_of_I2C1_Close 129F  
                                            ?_readRegister 0070  
                                                   ?_begin 0070  
                               __end_of_EUSART2_Initialize 09BB  
                             ??_IOCAF6_SetInterruptHandler 0073  
                                 _eusart2TxBufferRemaining 005A  
                                                   _ANSELA 1F38  
                                                   _ANSELB 1F43  
                                                   _ANSELC 1F4E  
                             ??_LIGHTBLUE_SetErrorLedValue 007B  
                                                   _T0CON0 059E  
                                                   _T0CON1 059F  
                                    _i2c_read2ByteRegister 09FA  
                                                   _RC1REG 0119  
                                                   _RC2REG 0A19  
                                                   _RB1PPS 1F19  
                                                   _RB2PPS 1F1A  
                                                   _RC1STA 011D  
                                                   _RB4PPS 1F1C  
                                                   _RC2STA 0A1D  
                                                   _RC4PPS 1F24  
                                                   i1l2101 1F72  
                                                   i1l2111 1000  
                                                   i1l2105 1083  
                                                   _ODCONA 1F3A  
                                                   _ODCONB 1F45  
                                                   _ODCONC 1F50  
                                                   _ODCONE 1F66  
                                                   i1l1900 131B  
                                                   i1l1750 1286  
                                                   i1l1903 1E5E  
                                                   i1l1736 1403  
                                                   i1l1753 1E5F  
                                                   i1l1906 1E86  
                                                   i1l1746 0885  
                                                   i1l1739 1405  
                                                   i1l1756 1E8E  
                                                   i1l1909 1E82  
                                                   _RN487X 1868  
                                                   i1l1759 1E8A  
                                                   i1l1952 0026  
                                                   i1l1961 0053  
                                                   i1l1954 0035  
                                                   i1l1955 0053  
                                                   i1l1956 0044  
                                                   i1l1949 0013  
                                                   i1l1886 1426  
                                                   i1l1896 08C2  
                                                   i1l1889 1428  
                                          ?_RN487X_ReadMsg 0073  
                                                   i1l9060 127A  
                                                   i1l9062 1280  
                                                   i1l9080 1310  
                                                   i1l9064 1281  
                                                   i1l9056 126F  
                                                   i1l9082 1316  
                                                   i1l9058 1276  
                                                   i1l9084 1317  
                                                   i1l9076 1302  
                                                   i1l9078 130B  
                                                   _INLVLA 1F3C  
                                                   _INLVLB 1F47  
                                                   _INLVLC 1F52  
                                                   i1l9744 1E8B  
                                                   i1l9746 1E87  
                                                   i1l9780 1E83  
                                                   i1l9782 1E7F  
                                                   i1l9874 1075  
                                                   i1l9876 107C  
                                                   i1l9878 1081  
                                                   u701_20 13EB  
                                                   u701_21 13EA  
                                                   u710_20 08B8  
                                                   u702_20 13FD  
                                                   u710_21 08B7  
                                                   u702_21 13FC  
                                                   u703_20 0857  
                                                   u711_20 1F6F  
                                                   u703_21 0856  
                                                   u711_21 1F6E  
                                                   u704_20 0867  
                                                   u704_21 0866  
                                                   u705_20 087B  
                                                   u705_21 087A  
                       __end_of_RN487X_ReadDefaultResponse 0ED9  
                               _RN487X_ReadDefaultResponse 0E51  
                                                   u706_20 140D  
                                                   u706_21 140C  
                                                   u563_20 1280  
                                                   u707_20 1420  
                                                   u563_21 127F  
                                                   u707_21 141F  
                                                   u564_20 1316  
                                                   u708_20 0891  
                                                   u564_21 1315  
                                                   u708_21 0890  
                                                   _OSCFRQ 0893  
                                                   u709_20 08A2  
                                                   u709_21 08A1  
                                          ?_RN487X_SendCmd 0077  
                                                   u668_20 107C  
                                                   u940_20 003D  
                                                   u932_20 000B  
                                                   u668_21 107B  
                                                   u940_21 003C  
                                                   u932_21 000A  
                                                   u941_20 0048  
                                                   u933_20 000F  
                                                   u941_21 0047  
                                                   u933_21 000E  
                                                   u942_20 004C  
                                                   u934_20 0017  
                                                   u942_21 004B  
                                                   u934_21 0016  
                                                   u935_20 001B  
                                                   u935_21 001A  
                                                   u936_20 001F  
                                                   u936_21 001E  
                                                   u937_20 002A  
                                                   u937_21 0029  
                                                   u938_20 002E  
                                                   u938_21 002D  
                                                   _TX1REG 011A  
                                                   u939_20 0039  
                                                   u939_21 0038  
                                                   _TX2REG 0A1A  
                                                   _TX1STA 011E  
                                                   _TX2STA 0A1E  
                                        ?_I2C1_MasterClose 0070  
                                 rdBlkRegCompleteHandler@p 0078  
                                          ?_setXYAxisRange 0070  
                                         __end_of_bitRead8 1258  
                                  ??_I2C1_MasterDisableIrq 0071  
                                        ?_I2C1_MasterStart 0070  
                                        ?_I2C1_MasterWrite 0070  
                                 ?_I2C1_MasterWaitForEvent 0070  
                                       ??_I2C1_MasterClose 0071  
                                         _I2C1_DO_TX_EMPTY 15B2  
                                setXYAxisRange@xyAxisRange 0035  
                                         __end_of_getError 0D9D  
                    __end_ofRN487X_EnterDataMode@cmdPrompt 200B  
                            RN487X_EnterDataMode@cmdPrompt 2006  
                                       ??_I2C1_MasterStart 0071  
                              BMA253_GetAccelDataY@lsbData 002E  
                        BMA253_GetAccelDataXYZ@sensorValue 0037  
                                       ??_I2C1_MasterWrite 007B  
                              BMA253_GetAccelDataY@msbData 002F  
                   LIGHTBLUE_TemperatureSensor@temperature 003B  
                              BMA253_GetAccelDataZ@lsbData 002E  
                                 __end_of_setOperatingMode 1000  
                              BMA253_GetAccelDataZ@msbData 002F  
                                                   _cmdBuf 0220  
                                                   _bitMap 004F  
                             __end_of_BMA253_GetAccelDataY 163A  
                             __end_of_BMA253_GetAccelDataZ 1668  
                                RN487X_FilterData@readChar 0044  
                                                   _cuatro 0065  
                                 ?_EUSART1_SetErrorHandler 0071  
                                         ?_TMR0_Initialize 0070  
                                ?_TMAG5273_CalcMeasurement 002D  
                                                   _number 006F  
                              _EUSART2_FramingErrorHandler 0162  
                         ??_EUSART1_SetOverrunErrorHandler 0073  
                          ?_EUSART1_SetOverrunErrorHandler 0071  
                        __end_of_LIGHTBLUE_GetDataLedValue 1EF8  
                                                   _strchr 12D0  
                                 ??_I2C1_DO_SEND_ADR_WRITE 0072  
                                                   _strcpy 1180  
                                                   _strlen 12B7  
                                                   _strstr 0B66  
                                        ?_I2C1_SetCallback 0071  
                                   ??_I2C1_DO_RX_NACK_STOP 0071  
                              LIGHTBLUE_SendPacket@payload 0077  
                                    _I2C1_DO_SEND_ADR_READ 1F73  
                                           _PMD_Initialize 1FBF  
                                  _BMA253_NewAccelDataRdyY 10A2  
                                  _BMA253_NewAccelDataRdyZ 10B3  
                            ?_I2C1_SetDataCompleteCallback 0075  
                               i2c_write1ByteRegister@data 0025  
                                       ??_I2C1_SetCallback 0074  
                                           ??_readRegister 007B  
                                     _EUSART2_Transmit_ISR 13E4  
                               LIGHTBLUE_PerformAction@led 002A  
                                           bitWrite8@value 0074  
                           __end_ofRN487X_RebootCmd@reboot 1891  
                                   ?_i2c_read1ByteRegister 0024  
                                          ??_EUSART1_Write 0072  
                                          ??_EUSART2_Write 0072  
               IOCAF6_SetInterruptHandler@InterruptHandler 0071  
                                         ?_PIN_MANAGER_IOC 0070  
                                          _eusart1RxBuffer 0144  
                                                ??_strncmp 0075  
                                            _manufactureId 00DE  
                                  _I2C1_DO_RX_NACK_RESTART 1EC7  
                                             ??_IOCAF6_ISR 0070  
                                    _RN487X_MessageHandler 17C9  
                                        RN487X_SendCmd@cmd 007A  
                                          _eusart1TxBuffer 014C  
                                          _eusart2RxBuffer 00CE  
                                 ?_TMAG5273_GetManufacture 002D  
                                        _SYSTEM_Initialize 11FE  
                           I2C1_SetDataCompleteCallback@cb 0075  
                                          _eusart2TxBuffer 00D6  
                                  __end_of__initialization 00A5  
                                  _protocol_version_number 2012  
                                         _do_I2C_SEND_STOP 0000  
                                   getOperatingMode@opMode 002E  
                          I2C1_MasterOperation@returnValue 0023  
                                       ?_SYSTEM_Initialize 0070  
                                            ??_I2C1_Poller 007B  
                                  ??_EUSART2_RxDataHandler 0070  
                     __end_ofRN487X_EnterCmdMode@cmdPrompt 2010  
                             RN487X_EnterCmdMode@cmdPrompt 200B  
                            __end_of_EUSART1_RxDataHandler 131C  
                                  _rdBlkRegCompleteHandler 131C  
                                           __pcstackCOMMON 0070  
                                             __pidataBANK1 0002  
                                             __pidataBANK3 10C4  
                                      ??_SYSTEM_Initialize 0073  
                         __end_of_I2C1_MasterEnableRestart 1E73  
                                            __end_of_begin 071A  
                                     __end_of_RN487X_Delay 1F6A  
                                            swap@lowerByte 0079  
                           ?_EUSART2_SetTxInterruptHandler 0071  
                                 ??_BMA253_GetAccelDataXYZ 007C  
                                     __end_of_RN487X_Reset 1FF5  
                                   setOperatingMode@opMode 0035  
                                     __end_of_RN487X_Write 100D  
                                ??_LIGHTBLUE_PerformAction 0028  
                                   __end_of_PMD_Initialize 1FC9  
                             ??_I2C1_DO_SEND_RESTART_WRITE 0071  
                           ?_LIGHTBLUE_SendProtocolVersion 0070  
                                  ??_I2C1_MasterSendTxData 0071  
                                       __end_of_IOCAF6_ISR 1084  
                                     __end_of_EUSART1_Read 1587  
                                     __end_of_EUSART2_Read 1535  
                                      _LIGHTBLUE_SplitByte 16C4  
                                        RN487X_Reset@value 0071  
                                   ??_EUSART1_Transmit_ISR 0070  
                                      _LIGHTBLUE_SplitWord 1059  
                                ?_LIGHTBLUE_GetButtonValue 0070  
                                 ?_EUSART2_SetErrorHandler 0071  
                                     _RN487X_EnterDataMode 1352  
                                    ?_EUSART2_Transmit_ISR 0070  
                              __end_of_EUSART1_Receive_ISR 08C3  
                                    __end_of_I2C1_DO_RESET 1ED1  
                                       readRegister@regVal 002B  
                                 __end_of_setTemperatureEn 0900  
                                                  ??_begin 007C  
                                   ?_i2c_read2ByteRegister 0024  
                           ??_TMAG5273_GetTemperatureValue 007B  
                                   _do_I2C_DO_NACK_RESTART 0000  
                                __end_of_SYSTEM_Initialize 1214  
                                 _LIGHTBLUE_SendSerialData 071A  
                                  writeRegister@regAddress 0027  
                                            _eusart1RxHead 0054  
                                            swap@upperByte 0078  
                                            _eusart1TxHead 0057  
                                            _eusart2RxHead 007C  
                                            _eusart1RxTail 0053  
                                            _eusart2TxHead 005C  
                                               __pbssBANK0 004D  
                                               __pbssBANK1 00A0  
                                               __pbssBANK2 0120  
                                               __pbssBANK4 0220  
                                               __pbssBANK5 02A0  
                                               __pbssBANK6 0320  
                                               __pbssBANK7 03A0  
                                            _eusart2RxTail 0059  
                                            _eusart1TxTail 0056  
                          __end_of_I2C1_MasterWaitForEvent 1EEC  
                        _EUSART1_TxDefaultInterruptHandler 015C  
                                            _eusart2TxTail 005B  
                          ??_EUSART1_SetRxInterruptHandler 0073  
                               __end_of_LIGHTBLUE_LedState 1496  
                            __end_of_rd2RegCompleteHandler 1121  
                                       _DELAY_milliseconds 11BC  
                             __end_of_LIGHTBLUE_Initialize 1EF2  
                                     I2C1_Open@returnValue 0072  
                         ??_EUSART2_SetFramingErrorHandler 0073  
                          ?_EUSART2_SetFramingErrorHandler 0071  
                                     ?_LIGHTBLUE_SplitByte 0076  
                                       _getMagneticChannel 0378  
                                       _setMagneticChannel 00A9  
                                     ?_LIGHTBLUE_SplitWord 0079  
                            __end_of_wr2RegCompleteHandler 1134  
                                    _rd1RegCompleteHandler 10FB  
                                    EUSART2_Read@readValue 0072  
                                        _I2C1_DO_SEND_STOP 1EB8  
                                    _wr1RegCompleteHandler 10E8  
                          __end_of_EUSART1_SetErrorHandler 1F04  
                                      ?_DELAY_milliseconds 0071  
                                               __pmaintext 0595  
                                               _getAngleEn 0CF5  
                                  ?_i2c_write1ByteRegister 0024  
                           LIGHTBLUE_SendSerialData@length 0078  
                                      ?_getMagneticChannel 0070  
                                      ?_setMagneticChannel 0070  
                                       ?_I2C1_DO_SEND_STOP 0070  
                                       getAngleEn@angleReg 002E  
                         rn487x_PrintMessage@passedMessage 0040  
                          rn487x_PrintMessage@messageIndex 0041  
                                          _I2C1_MasterOpen 103E  
                                               __pintentry 0004  
                                          _I2C1_MasterStop 1E73  
                                          _I2C1_Initialize 1F8E  
                             __end_of_LIGHTBLUE_SendPacket 0F65  
                                      __end_of_I2C1_Poller 103E  
                            __end_of_LIGHTBLUE_AccelSensor 1696  
                                ??_BMA253_NewAccelDataRdyY 007B  
                                ??_BMA253_NewAccelDataRdyZ 007B  
                                          ?_PMD_Initialize 0070  
                                   ?_I2C1_DO_SEND_ADR_READ 0070  
                                                  ?_strchr 0071  
                                      ??_I2C1_DO_SEND_STOP 0071  
                                                  ?_strcpy 0071  
                                                  ?_strlen 0071  
                   __end_of_EUSART1_SetFramingErrorHandler 1F0A  
                           _EUSART1_SetFramingErrorHandler 1F04  
                                                  ?_strstr 0077  
                                    _eusart2RxStatusBuffer 00C6  
                                                  i1l10400 0897  
                                                  i1l10410 08B8  
                                                  i1l10402 089D  
                                                  i1l10412 08BF  
                                                  i1l10404 08A2  
                                                  i1l10406 08A8  
                                                  i1l10350 13E4  
                                                  i1l10414 1F6A  
                                                  i1l10408 08AE  
                                                  i1l10360 13FE  
                                                  i1l10352 13EB  
                                                  i1l10416 1F6F  
                                                  i1l10370 0862  
                                                  i1l10362 084D  
                                                  i1l10354 13F2  
                                                  i1l10380 0882  
                                                  i1l10372 0867  
                                                  i1l10364 0852  
                                                  i1l10356 13F7  
                                                  i1l10374 086C  
                                                  i1l10366 0857  
                                                  i1l10358 13FD  
                                                  i1l10390 1420  
                                                  i1l10382 1406  
                                                  i1l10376 0872  
                                                  i1l10368 085C  
                                                  i1l10392 1421  
                                                  i1l10384 140D  
                                                  i1l10378 087B  
                                                  i1l10394 0886  
                                                  i1l10386 1415  
                                                  i1l12330 0006  
                                                  i1l10396 088C  
                                                  i1l10388 141A  
                                                  i1l12340 001F  
                                                  i1l12332 000B  
                                                  i1l10398 0891  
                                                  i1l12350 0048  
                                                  i1l12342 002A  
                                                  i1l12334 000F  
                                                  i1l12352 004C  
                                                  i1l12344 002E  
                                                  i1l12336 0017  
                                                  i1l12346 0039  
                                                  i1l12338 001B  
                                                  i1l12348 003D  
                             getMagneticChannel@magChannel 002E  
                                    ?_RN487X_EnterDataMode 0070  
                                            _writeRegister 1FF5  
                             ?_EUSART1_DefaultErrorHandler 0070  
                                                ?_bitRead8 0071  
                                        _I2C1_MasterIsNack 1EE0  
                                                  _SP1BRGH 011C  
                                                  _SP1BRGL 011B  
                                                  _SP2BRGH 0A1C  
                                                  _SP2BRGL 0A1B  
                                     ??_DELAY_milliseconds 0073  
                                                  _OSCCON1 088D  
                                                  _OSCCON3 088F  
                                                _I2C1_Open 175C  
  __end_of_wr1RegCompleteHandler@i2c1_master_example$F1710 116D  
          _wr1RegCompleteHandler@i2c1_master_example$F1710 115A  
  __end_of_rd2RegCompleteHandler@i2c1_master_example$F1704 115A  
          _rd2RegCompleteHandler@i2c1_master_example$F1704 1147  
  __end_of_wr2RegCompleteHandler@i2c1_master_example$F1716 10E8  
          _wr2RegCompleteHandler@i2c1_master_example$F1716 10D5  
__end_of_rdBlkRegCompleteHandler@i2c1_master_example$F1727 1352  
        _rdBlkRegCompleteHandler@i2c1_master_example$F1727 1337  
                              __end_of_EUSART2_Receive_ISR 0886  
  __end_of_rd1RegCompleteHandler@i2c1_master_example$F1693 1147  
          _rd1RegCompleteHandler@i2c1_master_example$F1693 1134  
                       __end_of_IOCAF6_SetInterruptHandler 1F40  
                               _IOCAF6_SetInterruptHandler 1F3A  
                                ??_I2C1_DO_RX_NACK_RESTART 0071  
                          __end_of_TMAG5273_GetManufacture 1302  
                                       _TMAG5273_GetXValue 104B  
                                                  _OSCSTAT 0890  
                                                  _OSCTUNE 0892  
                                        _I2C1_MasterSetIrq 1E7C  
                                     ??_getMagneticChannel 002C  
                                                ?_getError 0070  
                                                  _SSP1ADD 018D  
                                     ??_setMagneticChannel 0033  
                                                  _SLRCONA 1F3B  
                                                  _SLRCONB 1F46  
                                                  _SLRCONC 1F51  
                                                  _SSP1BUF 018C  
                                                  _SSP1MSK 018E  
                       __end_of_LIGHTBLUE_SetErrorLedValue 10A2  
                               _LIGHTBLUE_SetErrorLedValue 1093  
                                       ?_I2C1_MasterIsNack 0070  
                               ?_I2C1_DO_SEND_RESTART_READ 0070  
                                   ?_RN487X_MessageHandler 007B  
                            i2c_write1ByteRegister@address 007B  
                           ??_I2C1_SetDataCompleteCallback 0078  
                                       ?_I2C1_MasterSetIrq 0070  
                                     _BMA253_GetAccelDataY 160C  
                                     _BMA253_GetAccelDataZ 163A  
                                       RN487X_ReadMsg@resp 0078  
                                  _TMR0_HasOverflowOccured 1EDB  
                                      ?_TMAG5273_GetXValue 0070  
                                          _asyncBufferSize 0061  
                                    ??_LIGHTBLUE_SplitByte 0077  
                                       _i2c1_fsmStateTable 1828  
                                       _i2c1_driver_i2cISR 00E0  
                                    ??_LIGHTBLUE_SplitWord 007B  
                                      ??_I2C1_MasterIsNack 0071  
                                                  _i2c_ISR 0000  
                                        __end_of_bitWrite8 126F  
                                __end_of_I2C1_DO_SEND_STOP 1EBD  
                                ??_rdBlkRegCompleteHandler 0079  
                               ??_LIGHTBLUE_UpdateErrorLed 007B  
                                       I2C1_SetCallback@cb 0071  
                                  ?_rn487x_PrintMessageEnd 0070  
                                      _rn487x_PrintMessage 1792  
                                      ??_I2C1_MasterSetIrq 0071  
                         RN487X_SetAsyncMessageHandler@len 0071  
                           __end_of_i2c_write1ByteRegister 1728  
                                        _RN487X_FilterData 0B1A  
                                 __end_of_RN487X_DataReady 13A5  
                             __end_of_LIGHTBLUE_PushButton 1180  
                                     __end_of_readRegister 1031  
                                       ?_RN487X_FilterData 0070  
                                      _EUSART1_is_rx_ready 1F85  
                               __end_of_EUSART1_is_tx_done 1E9F  
                          __end_of_EUSART2_SetErrorHandler 1F22  
                                            ?_I2C1_DO_IDLE 0070  
                                     ??_TMAG5273_GetXValue 007B  
                                            ?_I2C1_DO_RCEN 0070  
                LIGHTBLUE_ParseIncomingPacket@receivedByte 0033  
                                      _EUSART1_is_tx_ready 0000  
                                        _RN487X_IndicateRx 1FDF  
                              ??_LIGHTBLUE_GetDataLedValue 0071  
                                                  __ptext1 0665  
                                                  __ptext2 0900  
                                                  __ptext3 09BB  
                                                  __ptext4 08C3  
                                                  __ptext5 0F65  
                                                  __ptext6 00A9  
                                                  __ptext7 1FF5  
                                                  __ptext8 16F5  
                                                  __ptext9 0D49  
                                 _I2C1_MasterEnableRestart 1E70  
                                __end_of_I2C1_MasterIsNack 1EE6  
                             ?_I2C1_SetAddressNackCallback 0075  
                                      ??_RN487X_FilterData 0043  
                                           ?_writeRegister 0026  
                                     ?_rn487x_PrintMessage 0070  
               __end_of_EUSART2_DefaultOverrunErrorHandler 1E8F  
                     ??_EUSART2_DefaultOverrunErrorHandler 0070  
                      ?_EUSART2_DefaultOverrunErrorHandler 0070  
                       _EUSART2_DefaultOverrunErrorHandler 1E8B  
                                    _OSCILLATOR_Initialize 1FB5  
                                   ??_EUSART2_Transmit_ISR 0070  
                                       ?_RN487X_IndicateRx 0071  
                                __end_of_I2C1_MasterSetIrq 1E7F  
                                 __end_of_I2C1_DO_TX_EMPTY 15DF  
                                               ??_bitRead8 0074  
                                       _EUSART1_Initialize 093D  
                                 ??_PIN_MANAGER_Initialize 0073  
                                                _IOCAFbits 1F3F  
                                    _rn487x_driver_version 2010  
                                               ?_I2C1_Open 0070  
                                         ??_RN487X_ReadMsg 0076  
                                                _IOCANbits 1F3E  
                                                _IOCAPbits 1F3D  
                                               ??_getError 002C  
                                         ??_RN487X_SendCmd 0078  
                            ??_EUSART1_DefaultErrorHandler 0071  
                                 ?_I2C1_CallbackReturnStop 0078  
                                       _RN487X_is_rx_ready 1FAB  
                                         ??_setXYAxisRange 0033  
                  TMAG5273_GetTemperatureValue@temperature 007B  
                                 _do_I2C_SEND_RESTART_READ 0000  
                                  i2c_read1ByteRegister@d2 0029  
                                                  clrloop0 1F41  
                                      ??_RN487X_IndicateRx 0072  
                                    ?_BMA253_GetAccelDataY 0070  
                                    ?_BMA253_GetAccelDataZ 0070  
                                                  _strncmp 0C4F  
                        rn487x_PrintMessage@printCharacter 0020  
                        __end_of_I2C1_DO_SEND_RESTART_READ 1EAE  
                                     end_of_initialization 00A5  
                               __end_of_I2C1_MasterSendAck 1E97  
               __end_of_RN487X_Read@rn487x_interface$F1835 1FA1  
                       _RN487X_Read@rn487x_interface$F1835 1F97  
                      ?_RN487X_Read@rn487x_interface$F1836 0070  
                     ??_RN487X_Read@rn487x_interface$F1838 0073  
                                     ?_EUSART1_is_rx_ready 0070  
                      __end_of_LIGHTBLUE_TemperatureSensor 11E8  
                              _LIGHTBLUE_TemperatureSensor 11D2  
                                      _I2C1_MasterClearIrq 1E64  
                                      ?_EUSART1_Initialize 0070  
                               __end_of_EUSART2_is_tx_done 1E9B  
                           __end_of_rn487x_PrintMessageEnd 0C4F  
                              ?_RN487X_ReadDefaultResponse 0070  
                                                  init_ram 1F46  
                               __end_of_I2C1_MasterStartRx 1E79  
                              _EUSART1_OverrunErrorHandler 0156  
                                   ?_rd1RegCompleteHandler 0078  
                                                  initloop 1F47  
                         __end_of_TMAG5273_CalcMeasurement 13C3  
                                   _I2C1_DO_SEND_ADR_WRITE 1F5A  
                                      ?_RN487X_is_rx_ready 0070  
                                        getError@statusReg 0032  
                                __end_of_RN487X_FilterData 0B66  
                             __end_of_I2C1_DO_SEND_RESTART 1EB8  
                                  __end_of_I2C1_MasterOpen 104B  
                                   ?_wr1RegCompleteHandler 0078  
                                  __end_of_I2C1_MasterStop 1E76  
                                  __end_of_I2C1_Initialize 1F97  
                    __end_of_EUSART1_SetRxInterruptHandler 1F16  
                            _EUSART1_SetRxInterruptHandler 1F10  
                                              _I2C1_Poller 1031  
                                ?_I2C1_CallbackReturnReset 0078  
                                       _EUSART2_Initialize 097C  
                            __end_of_I2C1_MasterDisableIrq 1E6D  
                                              _I2C1_Status 00A0  
                                              ?_getAngleEn 0070  
                              LIGHTBLUE_PerformAction@data 0027  
                                         _getOperatingMode 0CA2  
                                                  swap@reg 0071  
                                        ?_setOperatingMode 0070  
                          __end_of_protocol_version_number 2014  
                               __end_of_RN487X_IsConnected 0800  
                                _do_I2C_SEND_RESTART_WRITE 0000  
                                      _I2C1_MasterSendNack 1E8F  
                      __end_of_I2C1_SetAddressNackCallback 1FDF  
                              _I2C1_SetAddressNackCallback 1FD4  
                                __end_of_RN487X_IndicateRx 1FEA  
                                     ?_I2C1_MasterClearIrq 0070  
                                           ??_I2C1_DO_IDLE 0071  
                                     ??_EUSART1_Initialize 0073  
                                                  strchr@c 0071  
                                                  strchr@s 0073  
                                           ??_I2C1_DO_RCEN 0071  
                               LIGHTBLUE_SplitByte@payload 0078  
                       __end_of_I2C1_DO_SEND_RESTART_WRITE 1EB3  
                               _I2C1_DO_SEND_RESTART_WRITE 1EAE  
                                      ?_EUSART2_Initialize 0070  
                                                  strcpy@d 0072  
                                                  strlen@a 0074  
                                       ??_setOperatingMode 0033  
                                      _EUSART2_is_rx_ready 1F7C  
                                                  strlen@s 0071  
                                           __deviceAddress 006E  
                                               _returnStop 0000  
                                                  strstr@h 0022  
                                                  strstr@n 0077  
                                      _EUSART2_is_tx_ready 0000  
                                                _PORTAbits 000C  
                                     ??_RN487X_is_rx_ready 0071  
                                        _RN487X_SetOutputs 0A40  
                          __end_of_rdBlkRegCompleteHandler 1337  
                                    ??_rn487x_PrintMessage 0076  
                                   ??_RN487X_EnterDataMode 007B  
                                     _LIGHTBLUE_Initialize 1EEC  
                                  _statusBuffer@main$F4234 03A0  
                                  ??_i2c_read1ByteRegister 007B  
                                            ??_getLowPower 002C  
                                       ?_RN487X_SetOutputs 0020  
                                  _IOCAF6_InterruptHandler 00EA  
                            ??_I2C1_SetAddressNackCallback 0079  
                                   RN487X_Delay@delayCount 0074  
                                                _TRISAbits 0012  
                          I2C1_SetDataCompleteCallback@ptr 0077  
                           getDeviceStatus@deviceStatusReg 007B  
                                ??_TMR0_HasOverflowOccured 0071  
                           I2C1_CallbackReturnReset@funPtr 0078  
                                     ?_I2C1_MasterSendNack 0070  
                                      EUSART1_Write@txData 0071  
                       TMAG5273_CalcMeasurement@regAddress 0032  
                                    ??_EUSART1_is_rx_ready 0071  
                                      ??_RN487X_SetOutputs 007B  
                                             _RN487X_Delay 1F62  
                                            ??_isConnected 007B  
                                  getOperatingMode@opMode0 002F  
                                  getOperatingMode@opMode1 0030  
                                     RN487X_ReadMsg@msgLen 0075  
                                     ??_EUSART2_Initialize 0073  
                                     ?_EUSART2_is_rx_ready 0070  
                                   _BMA253_GetAccelDataXYZ 07C4  
                                     _LIGHTBLUE_SendPacket 0ED9  
                                             _RN487X_Reset 1FEA  
                                _LIGHTBLUE_GetDataLedValue 1EF2  
                                             _RN487X_Write 1001  
                                        ??_getDeviceStatus 007B  
                                           __end_of_RN487X 187A  
                                             _EUSART1_Read 155E  
                                             _EUSART2_Read 150D  
                         __end_of_LIGHTBLUE_GetButtonValue 1EFE  
                            RN487X_SetOutputs@ioHighNibble 0024  
                                     _timer0ReloadVal16bit 004D  
                            __end_of_EUSART2_RxDataHandler 1287  
                                              _do_I2C_IDLE 0000  
                                              _do_I2C_RCEN 0000  
                                    ??_I2C1_MasterClearIrq 0071  
                                 _rn487x_PrintMessageStart 15DF  
                                __end_of_RN487X_SetOutputs 0A88  
                                            _setZAxisRange 0900  
                                           _I2C1_DO_RX_ACK 1EBD  
                                          ??_writeRegister 007C  
                                   ?_OSCILLATOR_Initialize 0070  
                                    ?_LIGHTBLUE_Initialize 0070  
                                            ??_RN487X_Init 0076  
                                            ??_RN487X_Read 007C  
                               ??_LIGHTBLUE_SendSerialData 0077  
                          RN487X_FilterData@asyncBuffering 005D  
                          __end_of_I2C1_CallbackReturnStop 1E62  
                            __end_of_I2C1_MasterSendTxData 1EA4  
                                           __end_of_strchr 12E9  
                                  ??_i2c_read2ByteRegister 0026  
                                           __end_of_strcpy 1194  
                                           __end_of_strlen 12D0  
                                           __end_of_strstr 0BB3  
                                      start_initialization 0057  
                             LIGHTBLUE_AccelSensor@payload 0039  
                                              ??_I2C1_Open 0071  
                            setMagneticChannel@channelMode 0035  
                                      _i2c_busCollisionISR 0000  
                             TMAG5273_CalcMeasurement@data 0034  
                                         _getTemperatureEN 0800  
                          RN487X_SetOutputs@stateLowNibble 0023  
                   LIGHTBLUE_SendProtocolVersion@dataIndex 0036  
                                   ??_BMA253_GetAccelDataY 002A  
                                   ??_BMA253_GetAccelDataZ 002A  
                                    ??_I2C1_MasterSendNack 0071  
                                     setOperatingMode@mode 0036  
                                        ?_setTemperatureEn 0070  
            EUSART1_SetRxInterruptHandler@interruptHandler 0071  
            EUSART1_SetTxInterruptHandler@interruptHandler 0071  
            EUSART2_SetRxInterruptHandler@interruptHandler 0071  
            EUSART2_SetTxInterruptHandler@interruptHandler 0071  
                                     _LIGHTBLUE_PushButton 116D  
                                 LIGHTBLUE_SplitByte@value 0076  
                                    ??_EUSART2_is_rx_ready 0071  
                                   setMagneticChannel@mode 0036  
                                    __end_of_EUSART1_Write 150D  
                                    __end_of_EUSART2_Write 14BD  
                                    ?_LIGHTBLUE_SendPacket 0077  
                                      __end_of_getLowPower 122A  
                                       ??_setTemperatureEn 0033  
                          ??_LIGHTBLUE_SendProtocolVersion 0020  
                                   rd1RegCompleteHandler@p 0078  
                               getMagneticChannel@magMode4 002F  
                               getMagneticChannel@magMode5 0030  
                               getMagneticChannel@magMode6 0031  
                               getMagneticChannel@magMode7 0032  
                                 I2C1_SetBuffer@bufferSize 0073  
                                         ?_I2C1_MasterOpen 0070  
                   __end_of_EUSART2_SetOverrunErrorHandler 1F2E  
                           _EUSART2_SetOverrunErrorHandler 1F28  
                                         ?_I2C1_MasterStop 0070  
                                         ?_I2C1_Initialize 0070  
                                      getError@intPinError 0030  
                                      __end_of_isConnected 12B7  
                                getTemperatureEN@tempENreg 002F  
                                         bitRead8@position 0073  
                                 _TMAG5273_CalcMeasurement 13A5  
                                         ??_PMD_Initialize 0071  
                             i2c_read1ByteRegister@address 0025  
                                       setXYAxisRange@mode 0036  
                                   __end_of_I2C1_DO_RX_ACK 1EC2  
                                   wr1RegCompleteHandler@p 0078  
                                    _EUSART1_RxDataHandler 1302  
                                  ??_I2C1_DO_SEND_ADR_READ 0071  
                                           ?_setZAxisRange 0070  
                           ?_EUSART1_SetRxInterruptHandler 0071  
                                       _LIGHTBLUE_LedState 1470  
                                              __pdataBANK1 00EE  
                                              __pdataBANK3 01A0  
                                            bitWrite8@mask 0076  
                                                 ??_strchr 0073  
                                                 ??_strcpy 0072  
                                                 ??_strlen 0073  
                                         I2C1_Open@address 0071  
                                           _eusart1RxCount 0052  
                                                 ??_strstr 0079  
                                           _eusart2RxCount 0058  
                                      ?_LIGHTBLUE_LedState 0070  
                                  ??_RN487X_MessageHandler 007C  
                                              __pbssCOMMON 007C  
                                     _I2C1_DO_SEND_RESTART 1EB3  
                        _EUSART1_RxDefaultInterruptHandler 015A  
                                                ___latbits 0003  
                                            __pcstackBANK0 0020  
                                            __pcstackBANK2 0166  
                           ?_LIGHTBLUE_ParseIncomingPacket 0070  
                              ?_IOCAF6_SetInterruptHandler 0071  
                                                _do_I2C_RX 0000  
                                                _do_I2C_TX 0000  
                                    ?_LIGHTBLUE_PushButton 0070  
                                             _readRegister 1025  
                                      __end_of_RN487X_Init 0E51  
                                      __end_of_RN487X_Read 1025  
                              ?_LIGHTBLUE_SetErrorLedValue 0070  
                              ??_I2C1_DO_SEND_RESTART_READ 0071  
                                      EUSART2_Write@txData 0071  
                          ??_EUSART1_SetTxInterruptHandler 0073  
                                      _RN487X_EnterCmdMode 122A  
                                     __end_of_I2C1_DO_IDLE 1EA9  
                         ??_EUSART1_SetFramingErrorHandler 0073  
                          ?_EUSART1_SetFramingErrorHandler 0071  
                          ??_EUSART2_SetRxInterruptHandler 0073  
                                     __end_of_I2C1_DO_RCEN 1F53  
                            I2C1_SetAddressNackCallback@cb 0075  
                                                _dataReady 005E  
                                          _do_I2C_TX_EMPTY 0000  
                                     ??_LIGHTBLUE_LedState 007B  
                                                __pnvBANK1 00EA  
                                                __pnvBANK2 0154  
                                    _rd2RegCompleteHandler 110E  
                                             bitRead8@mask 0075  
                                    __end_of_fsmStateTable 1868  
                                                _main$5433 0166  
                                   _PIN_MANAGER_Initialize 0AD1  
                                    _wr2RegCompleteHandler 1121  
                         ??_IOCAF6_DefaultInterruptHandler 0070  
                          ?_IOCAF6_DefaultInterruptHandler 0070  
                               ??_I2C1_MasterEnableRestart 0071  
                                                _bitWrite8 1258  
                                 ?_LIGHTBLUE_PerformAction 0027  
                                           _I2C1_MasterFsm 1535  
                                        ?_RN487X_DataReady 0070  
                                          ?_I2C1_DO_RX_ACK 0070  
                                                __ptext100 104B  
                                                __ptext101 13A5  
                                                __ptext110 103E  
                                                __ptext102 09FA  
                                                __ptext111 1ED1  
                                                __ptext103 163A  
                                                __ptext120 1EBD  
                                                __ptext112 13C3  
                                                __ptext104 10B3  
                                                __ptext121 1EB8  
                                                __ptext113 1031  
                                                __ptext105 160C  
                                                __ptext130 1EA4  
                                                __ptext122 1EB3  
                                                __ptext114 1EE6  
                                                __ptext106 10A2  
                                                __ptext131 15B2  
                                                __ptext123 1EAE  
                                                __ptext115 1535  
                                                __ptext107 0BB3  
                                                __ptext140 1E60  
                                                __ptext132 1E7C  
                                                __ptext124 1EA9  
                                                __ptext116 14BD  
                                                __ptext108 1FD4  
                                                __ptext141 1337  
                                                __ptext133 1EE0  
                                                __ptext125 1F4C  
                                                __ptext117 1ECC  
                                                __ptext109 175C  
                                                __ptext150 10D5  
                                                __ptext142 115A  
                                                __ptext134 1E9F  
                                                __ptext126 0A88  
                                                __ptext118 1EC7  
                                                __ptext151 1FC9  
                                                __ptext143 1147  
                                                __ptext135 1E93  
                                                __ptext127 0D9D  
                                                __ptext119 1EC2  
                                                __ptext160 1E64  
                                                __ptext152 144C  
                                                __ptext144 1134  
                                                __ptext136 1E79  
                                                __ptext128 1F5A  
                                                __ptext153 1084  
                                                __ptext145 131C  
                                                __ptext137 1E8F  
                                                __ptext129 1F73  
                                                __ptext170 1E5F  
                                                __ptext162 1F6A  
                                                __ptext154 1E73  
                                                __ptext146 1121  
                                                __ptext138 1E76  
                                                __ptext171 1E87  
                                                __ptext163 1075  
                                                __ptext155 1E70  
                                                __ptext147 110E  
                                                __ptext139 1E62  
                                                __ptext172 126F  
                                                __ptext164 1000  
                                                __ptext156 1E6D  
                                                __ptext148 10FB  
                                                __ptext173 1E83  
                                                __ptext165 1406  
                                                __ptext157 1287  
                                                __ptext149 10E8  
                                                __ptext174 1E5E  
                                                __ptext166 13E4  
                                                __ptext158 1E6A  
                                                __ptext175 1E7F  
                                                __ptext167 0886  
                                                __ptext159 1E67  
                                                __ptext176 1302  
                                                __ptext168 084D  
                                                __ptext169 1E8B  
                                      getAngleEn@angleDir2 002F  
                                      getAngleEn@angleDir3 0030  
                             ??_LIGHTBLUE_GetErrorLedValue 0071  
                              _i2c1_driver_busCollisionISR 00E2  
                                 _LIGHTBLUE_GetButtonValue 1EF8  
                        _EUSART2_TxDefaultInterruptHandler 00EC  
                                       ??_RN487X_DataReady 007C  
                       LIGHTBLUE_SendProtocolVersion@value 0035  
                                     ?_RN487X_EnterCmdMode 0070  
                                   ??_LIGHTBLUE_Initialize 0071  
                                  _I2C1_MasterWaitForEvent 1EE6  
                                         _I2C1_MasterClose 1E67  
                                  getError@oscillatorError 0031  
                                           _I2C1_SetBuffer 1084  
                             ??_INTERRUPT_InterruptManager 0071  
                                           _sequenceNumber 006D  
                              i2c_read2ByteRegister@result 002B  
                                         _I2C1_MasterStart 1E6D  
                                                _connected 0063  
                                         _I2C1_MasterWrite 1ED1  
                                    _LIGHTBLUE_AccelSensor 1668  
                                                 _BAUD1CON 011F  
                                                 _BAUD2CON 0A1F  
                    ??_rd1RegCompleteHandler@strncmp$F4850 0079  
                     ?_wr1RegCompleteHandler@strncmp$F4842 0078  
                     ?_rd2RegCompleteHandler@strncmp$F4851 0078  
                    ??_wr1RegCompleteHandler@strncmp$F4844 0079  
                   ?_rdBlkRegCompleteHandler@strncmp$F4860 0078  
                    ??_rd2RegCompleteHandler@strncmp$F4853 0079  
                  ??_rdBlkRegCompleteHandler@strncmp$F4862 0079  
                     ?_wr2RegCompleteHandler@strncmp$F4854 0078  
                    ??_wr2RegCompleteHandler@strncmp$F4856 0079  
                     ?_rd1RegCompleteHandler@strncmp$F4848 0078  
               __end_of_EUSART1_DefaultOverrunErrorHandler 1E87  
                     ??_EUSART1_DefaultOverrunErrorHandler 0070  
                      ?_EUSART1_DefaultOverrunErrorHandler 0070  
                       _EUSART1_DefaultOverrunErrorHandler 1E83  
                                    ?_I2C1_DO_SEND_RESTART 0070  
                                     _EUSART1_ErrorHandler 0154  
                             ?_EUSART2_DefaultErrorHandler 0070  
                                              _getLowPower 1214  
                                        ?_I2C1_DO_TX_EMPTY 0070  
                                  _EUSART1_SetErrorHandler 1EFE  
                              __end_of_LIGHTBLUE_SplitByte 16F5  
                                 __end_of_getOperatingMode 0CF5  
                         __end_of_I2C1_CallbackReturnReset 1E64  
                              __end_of_LIGHTBLUE_SplitWord 1067  
                                 LIGHTBLUE_SplitWord@value 0079  
                                       ??_I2C1_DO_TX_EMPTY 0079  
                                   ??_LIGHTBLUE_SendPacket 0078  
                                      getError@otpCrcError 002F  
                                       _EUSART1_is_tx_done 1E9B  
                                  ??_rd1RegCompleteHandler 0079  
                                                 ?_strncmp 0071  
                                  ?_I2C1_DO_SEND_ADR_WRITE 0070  
                                I2C1_MasterSendTxData@data 0071  
                                              _isConnected 129F  
                                  ??_wr1RegCompleteHandler 0079  
                     LIGHTBLUE_SendProtocolVersion@payload 0022  
                                        ??_TMR0_Initialize 0071  
                                         _I2C1_SetCallback 144C  
                                        _RN487X_is_tx_done 1FA1  
                                   i2c_read1ByteRegister@e 0026  
                                                 _LATAbits 0018  
                  EUSART1_SetErrorHandler@interruptHandler 0071  
                  EUSART2_SetErrorHandler@interruptHandler 0071  
                                   i2c_read1ByteRegister@x 0027  
                                                 _LATCbits 001A  
                                               _I2C1_DO_RX 0A88  
                                               _I2C1_DO_TX 0D9D  
                                      ?_EUSART1_is_tx_done 0070  
                                                clear_ram0 1F40  
                                                 _PIE0bits 0716  
                                                 _PIE3bits 0719  
                 LIGHTBLUE_ParseIncomingPacket@parserState 006C  
                                               _I2C1_Close 1287  
                    __end_of_LIGHTBLUE_SendProtocolVersion 175C  
                            _LIGHTBLUE_SendProtocolVersion 1728  
                                       ?_RN487X_is_tx_done 0070  
                                             ?_I2C1_Poller 0070  
                                   __end_of_I2C1_MasterFsm 155E  
                             __end_of_I2C1_MasterGetRxData 1E7C  
                                                 _PIR0bits 070C  
                                             ??_getAngleEn 002C  
                                                 _PIR3bits 070F  
                                               ?_bitWrite8 0071  
                                                 _RX1DTPPS 1ECB  
                                          ??_setZAxisRange 0033  
                                                 _RX2DTPPS 1ECD  
                                   ?_EUSART1_RxDataHandler 0070  
                                  _TMAG5273_GetManufacture 12E9  
                                       _I2C1_MasterSendAck 1E93  
                           DELAY_milliseconds@milliseconds 0071  
                                 ?_BMA253_NewAccelDataRdyY 0070  
                                 ?_BMA253_NewAccelDataRdyZ 0070  
                  __end_of_rn487x_PrintIndicatorCharacters 144C  
                        ??_rn487x_PrintIndicatorCharacters 0073  
                         ?_rn487x_PrintIndicatorCharacters 0070  
                          _rn487x_PrintIndicatorCharacters 1429  
                                _I2C1_DO_SEND_RESTART_READ 1EA9  
                                                 _SSP1CON1 0190  
                                                 _SSP1CON2 0191  
                                     setTemperatureEn@mode 0036  
                                       _EUSART2_is_tx_done 1E97  
                                   __end_of_I2C1_SetBuffer 1093  
                                                 _SSP1STAT 018F  
                                        ??_PIN_MANAGER_IOC 0070  
                                      ??_RN487X_is_tx_done 0071  
                                    ??_RN487X_EnterCmdMode 007B  
                     __end_of_I2C1_SetDataCompleteCallback 1FD4  
                             _I2C1_SetDataCompleteCallback 1FC9  
                                       _I2C1_MasterStartRx 1E76  
                              ?_I2C1_DO_SEND_RESTART_WRITE 0070  
                                      ?_I2C1_MasterSendAck 0070  
                           LIGHTBLUE_AccelSensor@accelData 0046  
                                 ?_I2C1_DO_RX_NACK_RESTART 0070  
                                ?_LIGHTBLUE_UpdateErrorLed 0070  
                                      RN487X_ReadMsg@index 0079  
               rn487x_PrintIndicatorCharacters@messageType 0073  
                                      TMAG5273_GetXValue@x 007B  
                                     ??_EUSART1_is_tx_done 0071  
                                              _RN487X_Init 0DF3  
                                              _RN487X_Read 1019  
                                      ?_EUSART2_is_tx_done 0070  
                                getError@undervoltageError 002E  
                             __end_of_RN487X_SetSystemMode 1019  
                                      ?_I2C1_MasterStartRx 0070  
                                          _getDeviceStatus 1F53  
                             __end_of_I2C1_DO_ADDRESS_NACK 14E5  
                                   ??_LIGHTBLUE_PushButton 007B  
                                       _RN487X_IsConnected 07FD  
                            __end_of_i2c_read1ByteRegister 0C01  
                                  ?_BMA253_GetAccelDataXYZ 0070  
                           __end_of_I2C1_DO_SEND_ADR_WRITE 1F62  
                            ??_EUSART2_DefaultErrorHandler 0071  
                                            _I2C1_DO_RESET 1ECC  
                                              _asyncBuffer 0062  
                                       __end_of_getAngleEn 0D49  
                                    I2C1_Close@returnValue 0071  
                                 ?_rdBlkRegCompleteHandler 0078  
                                        setZAxisRange@mode 0036  
                                __end_of_RN487X_is_tx_done 1FAB  
                                      I2C1_SetCallback@idx 0074  
                                      I2C1_SetCallback@ptr 0073  
                                      ?_RN487X_IsConnected 0070  
                                LIGHTBLUE_LedState@payload 0020  
                                  _EUSART2_SetErrorHandler 1F1C  
                                     ??_I2C1_MasterSendAck 0071  
                    LIGHTBLUE_ParseIncomingPacket@packetID 006A  
                                    EUSART1_Read@readValue 0072  
                                   ?_rd2RegCompleteHandler 0078  
                              _EUSART2_OverrunErrorHandler 0160  
                                      _do_I2C_DO_NACK_STOP 0000  
                                     ??_EUSART2_is_tx_done 0071  
                        setTemperatureEn@temperatureEnable 0035  
                             __end_of_I2C1_MasterOperation 13E4  
                               ??_rn487x_PrintMessageStart 0073  
                          __end_of_LIGHTBLUE_PerformAction 084D  
                          ??_RN487X_SetAsyncMessageHandler 0072  
                                   ?_wr2RegCompleteHandler 0078  
                                     ??_I2C1_MasterStartRx 0071  
                       LIGHTBLUE_SendSerialData@serialData 0079  
                    __end_of_EUSART1_SetTxInterruptHandler 1F1C  
                            _EUSART1_SetTxInterruptHandler 1F16  
                                          ?_I2C1_MasterFsm 0070  
                    __end_of_EUSART2_SetRxInterruptHandler 1F34  
                            _EUSART2_SetRxInterruptHandler 1F2E  
                      LIGHTBLUE_ParseIncomingPacket@length 006B  
                                 __end_of_getTemperatureEN 0815  
                                  setZAxisRange@zAxisRange 0035  
                                ??_I2C1_MasterWaitForEvent 0071  
                             RN487X_SetOutputs@ioLowNibble 0022  
       wr1RegCompleteHandler@i2c1_master_example$F1710@ptr 0078  
                              __end_of_rn487x_PrintMessage 17C9  
       rd2RegCompleteHandler@i2c1_master_example$F1704@ptr 0078  
                                    _I2C1_MasterDisableIrq 1E6A  
       wr2RegCompleteHandler@i2c1_master_example$F1716@ptr 0078  
     rdBlkRegCompleteHandler@i2c1_master_example$F1727@ptr 0078  
                                             bitWrite8@reg 0071  
                                  ??_OSCILLATOR_Initialize 0071  
                                          ?_I2C1_SetBuffer 0071  
       rd1RegCompleteHandler@i2c1_master_example$F1693@ptr 0078  
                                   readRegister@regAddress 002A  
                                     ??_RN487X_IsConnected 0071  
                                   ?_LIGHTBLUE_AccelSensor 0070  
                                   ??_I2C1_DO_SEND_RESTART 0071  
                                ??_EUSART1_SetErrorHandler 0073  
                      __end_of_EUSART1_DefaultErrorHandler 1E83  
                              _EUSART1_DefaultErrorHandler 1E7F  
                                  RN487X_SetOutputs@bitMap 0020  
                              __end_of_EUSART1_is_rx_ready 1F8E  
                                               _T0CON0bits 059E  
                           __end_of_BMA253_GetAccelDataXYZ 07FD  
                                                 _bitRead8 1241  
                                              bitRead8@reg 0071  
                                     _EUSART2_ErrorHandler 015E  
                                           ?_I2C1_DO_RESET 0070  
                       LIGHTBLUE_TemperatureSensor@payload 0036  
                            __end_of_i2c_read2ByteRegister 0A40  
                                                 _getError 0D49  
                                                 __ptext10 1F53  
                                                 __ptext11 1258  
                                                 __ptext20 1025  
                                                 __ptext12 129F  
                                                 __ptext21 1241  
                                                 __ptext13 12E9  
                                                 __ptext30 097C  
                                                 __ptext22 1EDB  
                                                 __ptext14 11A8  
                                                 __ptext31 1F34  
                                                 __ptext23 11FE  
                                                 __ptext15 0800  
                                                 __ptext40 1F04  
                                                 __ptext32 1F2E  
                                                 __ptext24 1194  
                                                 __ptext16 0CA2  
                                                 __ptext41 1EFE  
                                                 __ptext33 1F28  
                                                 __ptext25 1FBF  
                                                 __ptext17 0378  
                                                 __ptext50 15DF  
                                                 __ptext42 11E8  
                                                 __ptext34 1F22  
                                                 __ptext26 0AD1  
                                                 __ptext18 1214  
                                                 __ptext51 0C01  
                                                 __ptext43 1019  
                                                 __ptext35 1F1C  
                                                 __ptext27 1F3A  
                                                 __ptext19 0CF5  
                                                 __ptext60 100D  
                                                 __ptext52 1792  
                                                 __ptext44 1389  
                                                 __ptext36 093D  
                                                 __ptext28 1FB5  
                                                 __ptext61 1FEA  
                                                 __ptext53 1180  
                                                 __ptext45 0B1A  
                                                 __ptext37 1F16  
                                                 __ptext29 1F8E  
                                                 __ptext70 0815  
                                                 __ptext62 1FDF  
                                                 __ptext54 1429  
                                                 __ptext46 17C9  
                                                 __ptext38 1F10  
                                                 __ptext71 1093  
                                                 __ptext63 11D2  
                                                 __ptext55 07FD  
                                                 __ptext47 0B66  
                                                 __ptext39 1F0A  
                                                 __ptext80 1E97  
                                                 __ptext72 136D  
                                                 __ptext64 1067  
                                                 __ptext56 0DF3  
                                                 __ptext48 0C4F  
                                                 __ptext81 1587  
                                                 __ptext73 0A40  
                                                 __ptext65 071A  
                                                 __ptext57 1FAB  
                                                 __ptext49 12D0  
                                                 __ptext90 1EEC  
                                                 __ptext82 1F97  
                                                 __ptext74 0E51  
                                                 __ptext66 1728  
                                                 __ptext58 1F85  
                                                 __ptext91 1668  
                                                 __ptext83 155E  
                                                 __ptext75 1352  
                                                 __ptext67 116D  
                                                 __ptext59 1F7C  
                                                 __ptext92 1059  
                                                 __ptext84 150D  
                                                 __ptext76 122A  
                                                 __ptext68 1EF8  
                                                 __ptext93 16C4  
                                                 __ptext85 1F62  
                                                 __ptext77 1696  
                                                 __ptext69 04BE  
                                                 __ptext94 0ED9  
                                                 __ptext86 11BC  
                                                 __ptext78 1FA1  
                                                 __ptext95 12B7  
                                                 __ptext87 1470  
                                                 __ptext79 1E9B  
                                                 __ptext96 1001  
                                                 __ptext88 1ED6  
                                                 __ptext97 14E5  
                                                 __ptext89 1EF2  
                                                 __ptext98 1496  
                                                 __ptext99 07C4  
                                             _SSP1CON1bits 0190  
                                             _SSP1CON2bits 0191  
                                               _IOCAF6_ISR 1075  
                                 ??_i2c_write1ByteRegister 007B  
                                               strcpy@dest 0073  
                               ??_TMAG5273_CalcMeasurement 002F  
                                 _I2C1_CallbackReturnReset 1E62  
                                              ?_I2C1_DO_RX 0070  
                                              ?_I2C1_DO_TX 0070  
               __end_of_EUSART2_DefaultFramingErrorHandler 1E60  
                     ??_EUSART2_DefaultFramingErrorHandler 0070  
                      ?_EUSART2_DefaultFramingErrorHandler 0070  
                       _EUSART2_DefaultFramingErrorHandler 1E5F  
                          __end_of_BMA253_NewAccelDataRdyY 10B3  
                          __end_of_BMA253_NewAccelDataRdyZ 10C4  
                                          _lightBlueSerial 02A0  
                                ??_TMAG5273_GetManufacture 007B  
                              __end_of_I2C1_MasterClearIrq 1E67  
                             __end_of_I2C1_DO_RX_NACK_STOP 1EC7  
                                              ?_I2C1_Close 0070  
                                        writeRegister@data 0026  
                                               _RC1STAbits 011D  
                                              ??_bitWrite8 0075  
                                               _RC2STAbits 0A1D  
           EUSART1_SetOverrunErrorHandler@interruptHandler 0071  
           EUSART2_SetOverrunErrorHandler@interruptHandler 0071  
                     RN487X_SetAsyncMessageHandler@pBuffer 0072  
                       __end_of_LIGHTBLUE_GetErrorLedValue 1EDB  
                               _LIGHTBLUE_GetErrorLedValue 1ED6  
                                                 int$flags 007E  
                          __end_of_I2C1_DO_RX_NACK_RESTART 1ECC  
                             RN487X_GetInputsValues@F12901 00EE  
                                   getTemperatureEN@tempEN 002E  
                                 I2C1_MasterOperation@read 0022  
                       __end_of_INTERRUPT_InterruptManager 0055  
                               _INTERRUPT_InterruptManager 0004  
                                    _EUSART2_RxDataHandler 126F  
                                  __end_of_getDeviceStatus 1F5A  
                                             _SSP1STATbits 018F  
                                 i2c_read1ByteRegister@reg 0024  
                            __end_of_I2C1_DO_SEND_ADR_READ 1F7C  
                              _EUSART1_FramingErrorHandler 0158  
                                             _I2C1_DO_IDLE 1EA4  
                                      _EUSART1_Receive_ISR 0886  
                                             _I2C1_DO_RCEN 1F4C  
                                    LIGHTBLUE_LedState@led 0023  
                              __end_of_I2C1_MasterSendNack 1E93  
                         ??_EUSART2_SetOverrunErrorHandler 0073  
                          ?_EUSART2_SetOverrunErrorHandler 0071  
                                 ?_TMR0_HasOverflowOccured 0070  
                                    __end_of_writeRegister 2000  
                                        bitWrite8@position 0073  
                                               _INTCONbits 000B  
                              __end_of_EUSART2_is_rx_ready 1F85  
                           I2C1_SetAddressNackCallback@ptr 0077  
                                 ??_rn487x_PrintMessageEnd 0073  
                               getLowPower@lowPowerModeBit 002E  
                                           __pstringtext10 187A  
                                           __pstringtext11 1891  
                                           __pstringtext12 2000  
                                           __pstringtext13 0000  
                                     _I2C1_MasterGetRxData 1E79  
                                    _I2C1_MasterSendTxData 1E9F  
                            __end_of_RN487X_MessageHandler 1800  
                              TMAG5273_GetManufacture@read 002F  
                                ??_EUSART2_SetErrorHandler 0073  
                                   _do_I2C_DO_ADDRESS_NACK 0000  
                                                 intlevel1 0000  
                             RN487X_MessageHandler@message 007B  
                                       RN487X_Write@txData 0076  
                                 __end_of_I2C1_MasterClose 1E6A  
                                     ?_EUSART1_Receive_ISR 0070  
                                   rd2RegCompleteHandler@p 0078  
                                  ?_PIN_MANAGER_Initialize 0070  
                                 __end_of_I2C1_MasterStart 1E70  
                                ?_LIGHTBLUE_SendSerialData 0070  
                                 __end_of_I2C1_MasterWrite 1ED6  
                                   RN487X_RebootCmd@reboot 1886  
                   __end_of_EUSART1_SetOverrunErrorHandler 1F10  
                           _EUSART1_SetOverrunErrorHandler 1F0A  
                                                strcpy@src 0071  
                                         ??_I2C1_DO_RX_ACK 0071  
                               ??_LIGHTBLUE_GetButtonValue 0071  
                                  _I2C1_CallbackReturnStop 1E60  
                             __end_of_EUSART1_Transmit_ISR 1429  
                          ??_LIGHTBLUE_ParseIncomingPacket 002B  
                                              _serialIndex 0051  
                                     _RN487X_SetSystemMode 100D  
                                     _I2C1_DO_ADDRESS_NACK 14BD  
                                   ?_I2C1_MasterDisableIrq 0070  
                             i2c_read2ByteRegister@address 002A  
                    __end_of_RN487X_SetAsyncMessageHandler 11FE  
                            _RN487X_SetAsyncMessageHandler 11E8  
                                   wr2RegCompleteHandler@p 0078  
           EUSART1_SetFramingErrorHandler@interruptHandler 0071  
           EUSART2_SetFramingErrorHandler@interruptHandler 0071  
                           ?_EUSART1_SetTxInterruptHandler 0071  
                                 RN487X_SetSystemMode@mode 0071  
                           ?_EUSART2_SetRxInterruptHandler 0071  
                        LIGHTBLUE_ParseIncomingPacket@data 00E4  
                                       _eusart1RxLastError 00E6  
                           RN487X_ReadDefaultResponse@resp 0073  
                                            __pstringtext1 1800  
                                            __pstringtext2 1828  
                                            __pstringtext3 1848  
                                            __pstringtext4 1868  
                                            __pstringtext5 2010  
                                            __pstringtext6 2012  
                                            __pstringtext7 1886  
                                            __pstringtext8 2006  
                                            __pstringtext9 200B  
                                      _EUSART2_Receive_ISR 084D  
                          LIGHTBLUE_SetErrorLedValue@value 0026  
                                 __end_of_I2C1_SetCallback 1470  
                                               _SSP1DATPPS 1EC6  
                                               _SSP1CLKPPS 1EC5  
                                          ??_I2C1_DO_RESET 0071  
                   __end_of_IOCAF6_DefaultInterruptHandler 1001  
                           _IOCAF6_DefaultInterruptHandler 1000  
                                     _I2C1_MasterOperation 13C3  
                                          _TMR0_Initialize 1194  
                                             ?_getLowPower 0070  
                                     RN487X_SendCmd@cmdLen 0077  
                                                 strncmp@l 0076  
                                                 strncmp@n 0073  
                                                 strncmp@r 0071  
                        _LIGHTBLUE_ParseIncomingPacket$431 002D  
                        _LIGHTBLUE_ParseIncomingPacket$432 002F  
                        _LIGHTBLUE_ParseIncomingPacket$433 0031  
                                    ?_I2C1_MasterGetRxData 0070  
                                 i2c_read2ByteRegister@reg 0024  
                                              _returnReset 0000  
                                         _setOperatingMode 0F65  
                                                 strstr@nl 0020  
                                               _TX1STAbits 011E  
                                        ?_getOperatingMode 0070  
                                RN487X_ReadMsg@expectedMsg 0073  
                                               _TX2STAbits 0A1E  
                                              ?_IOCAF6_ISR 0070  
                                             ?_isConnected 0070  
                                    ??_EUSART1_Receive_ISR 0071  
                           __end_of_PIN_MANAGER_Initialize 0B1A  
                                       ??_getOperatingMode 002C  
                             ?_LIGHTBLUE_TemperatureSensor 0070  
                          ??_EUSART2_SetTxInterruptHandler 0073  
                            __end_of_rd1RegCompleteHandler 110E  
                                     ?_EUSART2_Receive_ISR 0070  
                                       _eusart2RxLastError 00E7  
                                      RN487X_SendCmd@index 0079  
                         __end_of_rn487x_PrintMessageStart 160C  
                                          _PIN_MANAGER_IOC 1F6A  
                         RN487X_ReadDefaultResponse@status 0076  
                             ??_RN487X_ReadDefaultResponse 0073  
                            __end_of_wr1RegCompleteHandler 10FB  
                        TMAG5273_CalcMeasurement@lowerByte 0033  
                                    _do_I2C_SEND_ADR_WRITE 0000  
                                  ??_EUSART1_RxDataHandler 0070  
                                     _do_I2C_SEND_ADR_READ 0000  
                         __end_of_LIGHTBLUE_UpdateErrorLed 1389  
                                    ?_RN487X_SetSystemMode 0071  
                        _EUSART2_RxDefaultInterruptHandler 0164  
                                    ?_I2C1_DO_ADDRESS_NACK 0070  
                               LIGHTBLUE_SplitWord@payload 007B  
                                   RN487X_IndicateRx@value 0071  
